
lab4demo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000029c  00800100  0000592e  000059c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000592e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000fc  0080039c  0080039c  00005c5e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00005c5e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  00005cba  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000325d  00000000  00000000  00005dba  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003a3  00000000  00000000  00009017  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000753  00000000  00000000  000093ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000095c  00000000  00000000  00009b10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000932  00000000  00000000  0000a46c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00003afc  00000000  00000000  0000ad9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  0000e89a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 03 	jmp	0x662	; 0x662 <__ctors_end>
       4:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       8:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
       c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      10:	0c 94 98 0c 	jmp	0x1930	; 0x1930 <__vector_4>
      14:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__vector_5>
      18:	0c 94 ea 0c 	jmp	0x19d4	; 0x19d4 <__vector_6>
      1c:	0c 94 13 0d 	jmp	0x1a26	; 0x1a26 <__vector_7>
      20:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      24:	0c 94 79 0b 	jmp	0x16f2	; 0x16f2 <__vector_9>
      28:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <__vector_10>
      2c:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__vector_11>
      30:	0c 94 46 0c 	jmp	0x188c	; 0x188c <__vector_12>
      34:	0c 94 f4 0b 	jmp	0x17e8	; 0x17e8 <__vector_13>
      38:	0c 94 1d 0c 	jmp	0x183a	; 0x183a <__vector_14>
      3c:	0c 94 6f 0c 	jmp	0x18de	; 0x18de <__vector_15>
      40:	0c 94 fe 0a 	jmp	0x15fc	; 0x15fc <__vector_16>
      44:	0c 94 27 0b 	jmp	0x164e	; 0x164e <__vector_17>
      48:	0c 94 50 0b 	jmp	0x16a0	; 0x16a0 <__vector_18>
      4c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      50:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      54:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      58:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      5c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      60:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      64:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      68:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      6c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      70:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      74:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      78:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__bad_interrupt>
      7c:	67 09       	sbc	r22, r7
      7e:	6a 09       	sbc	r22, r10
      80:	6d 09       	sbc	r22, r13
      82:	70 09       	sbc	r23, r0
      84:	79 09       	sbc	r23, r9
      86:	73 09       	sbc	r23, r3
      88:	76 09       	sbc	r23, r6
      8a:	7c 09       	sbc	r23, r12
      8c:	7f 09       	sbc	r23, r15
      8e:	82 09       	sbc	r24, r2
      90:	85 09       	sbc	r24, r5
      92:	88 09       	sbc	r24, r8
      94:	8b 09       	sbc	r24, r11
      96:	8e 09       	sbc	r24, r14
      98:	91 09       	sbc	r25, r1
      9a:	94 09       	sbc	r25, r4
      9c:	97 09       	sbc	r25, r7
      9e:	9a 09       	sbc	r25, r10
      a0:	9d 09       	sbc	r25, r13
      a2:	ae 09       	sbc	r26, r14
      a4:	b1 09       	sbc	r27, r1
      a6:	b4 09       	sbc	r27, r4
      a8:	b7 09       	sbc	r27, r7
      aa:	c0 09       	sbc	r28, r0
      ac:	ba 09       	sbc	r27, r10
      ae:	bd 09       	sbc	r27, r13
      b0:	c3 09       	sbc	r28, r3
      b2:	c6 09       	sbc	r28, r6
      b4:	c9 09       	sbc	r28, r9
      b6:	cc 09       	sbc	r28, r12
      b8:	cf 09       	sbc	r28, r15
      ba:	d2 09       	sbc	r29, r2
      bc:	d5 09       	sbc	r29, r5
      be:	d8 09       	sbc	r29, r8
      c0:	db 09       	sbc	r29, r11
      c2:	de 09       	sbc	r29, r14
      c4:	e1 09       	sbc	r30, r1
      c6:	e4 09       	sbc	r30, r4
      c8:	07 63       	ori	r16, 0x37	; 55
      ca:	42 36       	cpi	r20, 0x62	; 98
      cc:	b7 9b       	sbis	0x16, 7	; 22
      ce:	d8 a7       	std	Y+40, r29	; 0x28
      d0:	1a 39       	cpi	r17, 0x9A	; 154
      d2:	68 56       	subi	r22, 0x68	; 104
      d4:	18 ae       	std	Y+56, r1	; 0x38
      d6:	ba ab       	std	Y+50, r27	; 0x32
      d8:	55 8c       	ldd	r5, Z+29	; 0x1d
      da:	1d 3c       	cpi	r17, 0xCD	; 205
      dc:	b7 cc       	rjmp	.-1682   	; 0xfffffa4c <__eeprom_end+0xff7efa4c>
      de:	57 63       	ori	r21, 0x37	; 55
      e0:	bd 6d       	ori	r27, 0xDD	; 221
      e2:	ed fd       	.word	0xfded	; ????
      e4:	75 3e       	cpi	r23, 0xE5	; 229
      e6:	f6 17       	cp	r31, r22
      e8:	72 31       	cpi	r23, 0x12	; 18
      ea:	bf 00       	.word	0x00bf	; ????
      ec:	00 00       	nop
      ee:	80 3f       	cpi	r24, 0xF0	; 240
      f0:	08 00       	.word	0x0008	; ????
      f2:	00 00       	nop
      f4:	be 92       	st	-X, r11
      f6:	24 49       	sbci	r18, 0x94	; 148
      f8:	12 3e       	cpi	r17, 0xE2	; 226
      fa:	ab aa       	std	Y+51, r10	; 0x33
      fc:	aa 2a       	or	r10, r26
      fe:	be cd       	rjmp	.-1156   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     100:	cc cc       	rjmp	.-1640   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     102:	4c 3e       	cpi	r20, 0xEC	; 236
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	be ab       	std	Y+54, r27	; 0x36
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	aa 3e       	cpi	r26, 0xEA	; 234
     10e:	00 00       	nop
     110:	00 00       	nop
     112:	bf 00       	.word	0x00bf	; ????
     114:	00 00       	nop
     116:	80 3f       	cpi	r24, 0xF0	; 240
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	00 08       	sbc	r0, r0
     11e:	41 78       	andi	r20, 0x81	; 129
     120:	d3 bb       	out	0x13, r29	; 19
     122:	43 87       	std	Z+11, r20	; 0x0b
     124:	d1 13       	cpse	r29, r17
     126:	3d 19       	sub	r19, r13
     128:	0e 3c       	cpi	r16, 0xCE	; 206
     12a:	c3 bd       	out	0x23, r28	; 35
     12c:	42 82       	std	Z+2, r4	; 0x02
     12e:	ad 2b       	or	r26, r29
     130:	3e 68       	ori	r19, 0x8E	; 142
     132:	ec 82       	std	Y+4, r14	; 0x04
     134:	76 be       	out	0x36, r7	; 54
     136:	d9 8f       	std	Y+25, r29	; 0x19
     138:	e1 a9       	ldd	r30, Z+49	; 0x31
     13a:	3e 4c       	sbci	r19, 0xCE	; 206
     13c:	80 ef       	ldi	r24, 0xF0	; 240
     13e:	ff be       	out	0x3f, r15	; 63
     140:	01 c4       	rjmp	.+2050   	; 0x944 <LCD_set_PGC_addr+0x2c>
     142:	ff 7f       	andi	r31, 0xFF	; 255
     144:	3f 00       	.word	0x003f	; ????
     146:	00 00       	nop
	...

0000014a <__trampolines_end>:
     14a:	16 05       	cpc	r17, r6
     14c:	01 00       	.word	0x0001	; ????
     14e:	00 00       	nop
     150:	00 00       	nop
     152:	00 00       	nop
     154:	fa 00       	.word	0x00fa	; ????
     156:	00 00       	nop
     158:	e0 00       	.word	0x00e0	; ????
     15a:	e0 00       	.word	0x00e0	; ????
     15c:	28 fe       	.word	0xfe28	; ????
     15e:	28 fe       	.word	0xfe28	; ????
     160:	28 24       	eor	r2, r8
     162:	54 fe       	sbrs	r5, 4
     164:	54 48       	sbci	r21, 0x84	; 132
     166:	c4 c8       	rjmp	.-3704   	; 0xfffff2f0 <__eeprom_end+0xff7ef2f0>
     168:	10 26       	eor	r1, r16
     16a:	46 6c       	ori	r20, 0xC6	; 198
     16c:	92 aa       	std	Z+50, r9	; 0x32
     16e:	44 a0       	ldd	r4, Z+36	; 0x24
     170:	00 a0       	ldd	r0, Z+32	; 0x20
     172:	c0 00       	.word	0x00c0	; ????
     174:	00 00       	nop
     176:	38 44       	sbci	r19, 0x48	; 72
     178:	82 00       	.word	0x0082	; ????
     17a:	00 82       	st	Z, r0
     17c:	44 38       	cpi	r20, 0x84	; 132
     17e:	00 28       	or	r0, r0
     180:	10 7c       	andi	r17, 0xC0	; 192
     182:	10 28       	or	r1, r0
     184:	10 10       	cpse	r1, r0
     186:	7c 10       	cpse	r7, r12
     188:	10 00       	.word	0x0010	; ????
     18a:	0a 0c       	add	r0, r10
     18c:	00 00       	nop
     18e:	10 10       	cpse	r1, r0
     190:	10 10       	cpse	r1, r0
     192:	10 00       	.word	0x0010	; ????
     194:	06 06       	cpc	r0, r22
     196:	00 00       	nop
     198:	04 08       	sbc	r0, r4
     19a:	10 20       	and	r1, r0
     19c:	40 7c       	andi	r20, 0xC0	; 192
     19e:	8a 92       	st	-Y, r8
     1a0:	a2 7c       	andi	r26, 0xC2	; 194
     1a2:	00 42       	sbci	r16, 0x20	; 32
     1a4:	fe 02       	muls	r31, r30
     1a6:	00 42       	sbci	r16, 0x20	; 32
     1a8:	86 8a       	std	Z+22, r8	; 0x16
     1aa:	92 62       	ori	r25, 0x22	; 34
     1ac:	84 82       	std	Z+4, r8	; 0x04
     1ae:	a2 d2       	rcall	.+1348   	; 0x6f4 <ADC_sample+0x38>
     1b0:	8c 18       	sub	r8, r12
     1b2:	28 48       	sbci	r18, 0x88	; 136
     1b4:	fe 08       	sbc	r15, r14
     1b6:	e4 a2       	std	Z+36, r14	; 0x24
     1b8:	a2 a2       	std	Z+34, r10	; 0x22
     1ba:	9c 3c       	cpi	r25, 0xCC	; 204
     1bc:	52 92       	st	-Z, r5
     1be:	92 0c       	add	r9, r2
     1c0:	80 8e       	std	Z+24, r8	; 0x18
     1c2:	90 a0       	ldd	r9, Z+32	; 0x20
     1c4:	c0 6c       	ori	r28, 0xC0	; 192
     1c6:	92 92       	st	-Z, r9
     1c8:	92 6c       	ori	r25, 0xC2	; 194
     1ca:	60 92 92 94 	sts	0x9492, r6
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	6c 6c       	ori	r22, 0xCC	; 204
     1d2:	00 00       	nop
     1d4:	00 6a       	ori	r16, 0xA0	; 160
     1d6:	6c 00       	.word	0x006c	; ????
     1d8:	00 10       	cpse	r0, r0
     1da:	28 44       	sbci	r18, 0x48	; 72
     1dc:	82 00       	.word	0x0082	; ????
     1de:	28 28       	or	r2, r8
     1e0:	28 28       	or	r2, r8
     1e2:	28 00       	.word	0x0028	; ????
     1e4:	82 44       	sbci	r24, 0x42	; 66
     1e6:	28 10       	cpse	r2, r8
     1e8:	40 80       	ld	r4, Z
     1ea:	8a 90       	ld	r8, -Y
     1ec:	60 4c       	sbci	r22, 0xC0	; 192
     1ee:	92 9e       	mul	r9, r18
     1f0:	82 7c       	andi	r24, 0xC2	; 194
     1f2:	7e 88       	ldd	r7, Y+22	; 0x16
     1f4:	88 88       	ldd	r8, Y+16	; 0x10
     1f6:	7e fe       	.word	0xfe7e	; ????
     1f8:	92 92       	st	-Z, r9
     1fa:	92 6c       	ori	r25, 0xC2	; 194
     1fc:	7c 82       	std	Y+4, r7	; 0x04
     1fe:	82 82       	std	Z+2, r8	; 0x02
     200:	44 fe       	sbrs	r4, 4
     202:	82 82       	std	Z+2, r8	; 0x02
     204:	44 38       	cpi	r20, 0x84	; 132
     206:	fe 92       	st	-X, r15
     208:	92 92       	st	-Z, r9
     20a:	82 fe       	sbrs	r8, 2
     20c:	90 90 90 80 	lds	r9, 0x8090
     210:	7c 82       	std	Y+4, r7	; 0x04
     212:	92 92       	st	-Z, r9
     214:	5e fe       	.word	0xfe5e	; ????
     216:	10 10       	cpse	r1, r0
     218:	10 fe       	sbrs	r1, 0
     21a:	00 82       	st	Z, r0
     21c:	fe 82       	std	Y+6, r15	; 0x06
     21e:	00 04       	cpc	r0, r0
     220:	02 82       	std	Z+2, r0	; 0x02
     222:	fc 80       	ldd	r15, Y+4	; 0x04
     224:	fe 10       	cpse	r15, r14
     226:	28 44       	sbci	r18, 0x48	; 72
     228:	82 fe       	sbrs	r8, 2
     22a:	02 02       	muls	r16, r18
     22c:	02 02       	muls	r16, r18
     22e:	fe 40       	sbci	r31, 0x0E	; 14
     230:	30 40       	sbci	r19, 0x00	; 0
     232:	fe fe       	.word	0xfefe	; ????
     234:	20 10       	cpse	r2, r0
     236:	08 fe       	.word	0xfe08	; ????
     238:	7c 82       	std	Y+4, r7	; 0x04
     23a:	82 82       	std	Z+2, r8	; 0x02
     23c:	7c fe       	.word	0xfe7c	; ????
     23e:	90 90 90 60 	lds	r9, 0x6090
     242:	7c 82       	std	Y+4, r7	; 0x04
     244:	8a 84       	ldd	r8, Y+10	; 0x0a
     246:	7a fe       	.word	0xfe7a	; ????
     248:	90 98       	cbi	0x12, 0	; 18
     24a:	94 62       	ori	r25, 0x24	; 36
     24c:	62 92       	st	-Z, r6
     24e:	92 92       	st	-Z, r9
     250:	8c 80       	ldd	r8, Y+4	; 0x04
     252:	80 fe       	sbrs	r8, 0
     254:	80 80       	ld	r8, Z
     256:	fc 02       	muls	r31, r28
     258:	02 02       	muls	r16, r18
     25a:	fc f8       	.word	0xf8fc	; ????
     25c:	04 02       	muls	r16, r20
     25e:	04 f8       	bld	r0, 4
     260:	fc 02       	muls	r31, r28
     262:	1c 02       	muls	r17, r28
     264:	fc c6       	rjmp	.+3576   	; 0x105e <STEPPER_set_mode+0x1a>
     266:	28 10       	cpse	r2, r8
     268:	28 c6       	rjmp	.+3152   	; 0xeba <STEPPER_move+0x10e>
     26a:	e0 10       	cpse	r14, r0
     26c:	0e 10       	cpse	r0, r14
     26e:	e0 86       	std	Z+8, r14	; 0x08
     270:	8a 92       	st	-Y, r8
     272:	a2 c2       	rjmp	.+1348   	; 0x7b8 <LCD_clear+0x2c>
     274:	00 fe       	sbrs	r0, 0
     276:	82 82       	std	Z+2, r8	; 0x02
     278:	00 40       	sbci	r16, 0x00	; 0
     27a:	20 10       	cpse	r2, r0
     27c:	08 04       	cpc	r0, r8
     27e:	00 82       	st	Z, r0
     280:	82 fe       	sbrs	r8, 2
     282:	00 20       	and	r0, r0
     284:	40 80       	ld	r4, Z
     286:	40 20       	and	r4, r0
     288:	02 02       	muls	r16, r18
     28a:	02 02       	muls	r16, r18
     28c:	02 00       	.word	0x0002	; ????
     28e:	80 40       	sbci	r24, 0x00	; 0
     290:	20 00       	.word	0x0020	; ????
     292:	04 2a       	or	r0, r20
     294:	2a 2a       	or	r2, r26
     296:	1e fe       	.word	0xfe1e	; ????
     298:	12 22       	and	r1, r18
     29a:	22 1c       	adc	r2, r2
     29c:	1c 22       	and	r1, r28
     29e:	22 22       	and	r2, r18
     2a0:	04 1c       	adc	r0, r4
     2a2:	22 22       	and	r2, r18
     2a4:	12 fe       	sbrs	r1, 2
     2a6:	1c 2a       	or	r1, r28
     2a8:	2a 2a       	or	r2, r26
     2aa:	18 10       	cpse	r1, r8
     2ac:	7e 90       	ld	r7, -X
     2ae:	80 40       	sbci	r24, 0x00	; 0
     2b0:	30 4a       	sbci	r19, 0xA0	; 160
     2b2:	4a 4a       	sbci	r20, 0xAA	; 170
     2b4:	7c fe       	.word	0xfe7c	; ????
     2b6:	10 20       	and	r1, r0
     2b8:	20 1e       	adc	r2, r16
     2ba:	00 22       	and	r0, r16
     2bc:	be 02       	muls	r27, r30
     2be:	00 04       	cpc	r0, r0
     2c0:	02 22       	and	r0, r18
     2c2:	bc 00       	.word	0x00bc	; ????
     2c4:	fe 08       	sbc	r15, r14
     2c6:	14 22       	and	r1, r20
     2c8:	00 00       	nop
     2ca:	82 fe       	sbrs	r8, 2
     2cc:	02 00       	.word	0x0002	; ????
     2ce:	3e 20       	and	r3, r14
     2d0:	18 20       	and	r1, r8
     2d2:	1e 3e       	cpi	r17, 0xEE	; 238
     2d4:	10 20       	and	r1, r0
     2d6:	20 1e       	adc	r2, r16
     2d8:	1c 22       	and	r1, r28
     2da:	22 22       	and	r2, r18
     2dc:	1c 3e       	cpi	r17, 0xEC	; 236
     2de:	28 28       	or	r2, r8
     2e0:	28 10       	cpse	r2, r8
     2e2:	10 28       	or	r1, r0
     2e4:	28 18       	sub	r2, r8
     2e6:	3e 3e       	cpi	r19, 0xEE	; 238
     2e8:	10 20       	and	r1, r0
     2ea:	20 10       	cpse	r2, r0
     2ec:	12 2a       	or	r1, r18
     2ee:	2a 2a       	or	r2, r26
     2f0:	04 20       	and	r0, r4
     2f2:	fc 22       	and	r15, r28
     2f4:	02 04       	cpc	r0, r2
     2f6:	3c 02       	muls	r19, r28
     2f8:	02 04       	cpc	r0, r2
     2fa:	3e 38       	cpi	r19, 0x8E	; 142
     2fc:	04 02       	muls	r16, r20
     2fe:	04 38       	cpi	r16, 0x84	; 132
     300:	3c 02       	muls	r19, r28
     302:	0c 02       	muls	r16, r28
     304:	3c 22       	and	r3, r28
     306:	14 08       	sbc	r1, r4
     308:	14 22       	and	r1, r20
     30a:	30 0a       	sbc	r3, r16
     30c:	0a 0a       	sbc	r0, r26
     30e:	3c 22       	and	r3, r28
     310:	26 2a       	or	r2, r22
     312:	32 22       	and	r3, r18
     314:	00 10       	cpse	r0, r0
     316:	6c 82       	std	Y+4, r6	; 0x04
     318:	00 00       	nop
     31a:	00 fe       	sbrs	r0, 0
     31c:	00 00       	nop
     31e:	00 82       	st	Z, r0
     320:	6c 10       	cpse	r6, r12
     322:	00 08       	sbc	r0, r0
     324:	10 10       	cpse	r1, r0
     326:	08 10       	cpse	r0, r8
     328:	00 00       	nop
     32a:	00 00       	nop
     32c:	00 7f       	andi	r16, 0xF0	; 240
     32e:	81 81       	ldd	r24, Z+1	; 0x01
     330:	81 7f       	andi	r24, 0xF1	; 241
     332:	7f 83       	std	Y+7, r23	; 0x07
     334:	83 83       	std	Z+3, r24	; 0x03
     336:	7f 7f       	andi	r23, 0xFF	; 255
     338:	87 87       	std	Z+15, r24	; 0x0f
     33a:	87 7f       	andi	r24, 0xF7	; 247
     33c:	7f 8f       	std	Y+31, r23	; 0x1f
     33e:	8f 8f       	std	Y+31, r24	; 0x1f
     340:	7f 7f       	andi	r23, 0xFF	; 255
     342:	9f 9f       	mul	r25, r31
     344:	9f 7f       	andi	r25, 0xFF	; 255
     346:	7f bf       	out	0x3f, r23	; 63
     348:	bf bf       	out	0x3f, r27	; 63
     34a:	7f 7f       	andi	r23, 0xFF	; 255
     34c:	ff ff       	.word	0xffff	; ????
     34e:	ff 7f       	andi	r31, 0xFF	; 255
     350:	20 40       	sbci	r18, 0x00	; 0
     352:	ff 40       	sbci	r31, 0x0F	; 15
     354:	20 62       	ori	r18, 0x20	; 32
     356:	15 17       	cp	r17, r21
     358:	15 65       	ori	r17, 0x55	; 85
     35a:	00 fb       	bst	r16, 0
     35c:	fb 00       	.word	0x00fb	; ????
	...

0000035f <CEENBoT_Inc_logo_bitmap>:
     35f:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     36f:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     37f:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     38f:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     39f:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3af:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3bf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3cf:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     3df:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     3ef:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     3ff:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     40f:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     41f:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     42f:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     43f:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     44f:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     45f:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     477:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     487:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     497:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4a7:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4b7:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4c7:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     4d7:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     4e7:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     4f7:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     507:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     517:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     527:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     537:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     547:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     557:	00 00 00 30 00 00 00 7c                             ...0...|

0000055f <__c.2161>:
     55f:	6e 61 6e 00                                         nan.

00000563 <__c.2159>:
     563:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     573:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     583:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     593:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5a3:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5b3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5c3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     5d3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     5e3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     5f3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     603:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     613:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     623:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     633:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     643:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     653:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000662 <__ctors_end>:
     662:	11 24       	eor	r1, r1
     664:	1f be       	out	0x3f, r1	; 63
     666:	cf ef       	ldi	r28, 0xFF	; 255
     668:	d8 e0       	ldi	r29, 0x08	; 8
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	cd bf       	out	0x3d, r28	; 61

0000066e <__do_copy_data>:
     66e:	13 e0       	ldi	r17, 0x03	; 3
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b1 e0       	ldi	r27, 0x01	; 1
     674:	ee e2       	ldi	r30, 0x2E	; 46
     676:	f9 e5       	ldi	r31, 0x59	; 89
     678:	02 c0       	rjmp	.+4      	; 0x67e <__do_copy_data+0x10>
     67a:	05 90       	lpm	r0, Z+
     67c:	0d 92       	st	X+, r0
     67e:	ac 39       	cpi	r26, 0x9C	; 156
     680:	b1 07       	cpc	r27, r17
     682:	d9 f7       	brne	.-10     	; 0x67a <__do_copy_data+0xc>

00000684 <__do_clear_bss>:
     684:	24 e0       	ldi	r18, 0x04	; 4
     686:	ac e9       	ldi	r26, 0x9C	; 156
     688:	b3 e0       	ldi	r27, 0x03	; 3
     68a:	01 c0       	rjmp	.+2      	; 0x68e <.do_clear_bss_start>

0000068c <.do_clear_bss_loop>:
     68c:	1d 92       	st	X+, r1

0000068e <.do_clear_bss_start>:
     68e:	a8 39       	cpi	r26, 0x98	; 152
     690:	b2 07       	cpc	r27, r18
     692:	e1 f7       	brne	.-8      	; 0x68c <.do_clear_bss_loop>
     694:	0e 94 bd 03 	call	0x77a	; 0x77a <main>
     698:	0c 94 95 2c 	jmp	0x592a	; 0x592a <_exit>

0000069c <__bad_interrupt>:
     69c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a0 <ADC_open>:
     6a0:	8f e0       	ldi	r24, 0x0F	; 15
     6a2:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     6a6:	88 23       	and	r24, r24
     6a8:	31 f4       	brne	.+12     	; 0x6b6 <ADC_open+0x16>
     6aa:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <__ADC_init>
     6ae:	8f e0       	ldi	r24, 0x0F	; 15
     6b0:	61 e0       	ldi	r22, 0x01	; 1
     6b2:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
     6b6:	8f e0       	ldi	r24, 0x0F	; 15
     6b8:	91 e0       	ldi	r25, 0x01	; 1
     6ba:	08 95       	ret

000006bc <ADC_sample>:
     6bc:	8f e0       	ldi	r24, 0x0F	; 15
     6be:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     6c2:	81 30       	cpi	r24, 0x01	; 1
     6c4:	19 f0       	breq	.+6      	; 0x6cc <ADC_sample+0x10>
     6c6:	20 e0       	ldi	r18, 0x00	; 0
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	13 c0       	rjmp	.+38     	; 0x6f2 <ADC_sample+0x36>
     6cc:	80 91 7a 00 	lds	r24, 0x007A
     6d0:	80 64       	ori	r24, 0x40	; 64
     6d2:	80 93 7a 00 	sts	0x007A, r24
     6d6:	80 91 7a 00 	lds	r24, 0x007A
     6da:	86 fd       	sbrc	r24, 6
     6dc:	fc cf       	rjmp	.-8      	; 0x6d6 <ADC_sample+0x1a>
     6de:	30 91 78 00 	lds	r19, 0x0078
     6e2:	20 91 79 00 	lds	r18, 0x0079
     6e6:	92 2f       	mov	r25, r18
     6e8:	80 e0       	ldi	r24, 0x00	; 0
     6ea:	23 2f       	mov	r18, r19
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	28 2b       	or	r18, r24
     6f0:	39 2b       	or	r19, r25
     6f2:	c9 01       	movw	r24, r18
     6f4:	08 95       	ret

000006f6 <ADC_set_channel>:
     6f6:	58 2f       	mov	r21, r24
     6f8:	80 91 00 01 	lds	r24, 0x0100
     6fc:	88 30       	cpi	r24, 0x08	; 8
     6fe:	d8 f4       	brcc	.+54     	; 0x736 <ADC_set_channel+0x40>
     700:	40 91 7e 00 	lds	r20, 0x007E
     704:	21 e0       	ldi	r18, 0x01	; 1
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	b9 01       	movw	r22, r18
     70a:	02 c0       	rjmp	.+4      	; 0x710 <ADC_set_channel+0x1a>
     70c:	66 0f       	add	r22, r22
     70e:	77 1f       	adc	r23, r23
     710:	8a 95       	dec	r24
     712:	e2 f7       	brpl	.-8      	; 0x70c <ADC_set_channel+0x16>
     714:	cb 01       	movw	r24, r22
     716:	80 95       	com	r24
     718:	84 23       	and	r24, r20
     71a:	80 93 7e 00 	sts	0x007E, r24
     71e:	80 91 7e 00 	lds	r24, 0x007E
     722:	05 2e       	mov	r0, r21
     724:	02 c0       	rjmp	.+4      	; 0x72a <ADC_set_channel+0x34>
     726:	22 0f       	add	r18, r18
     728:	33 1f       	adc	r19, r19
     72a:	0a 94       	dec	r0
     72c:	e2 f7       	brpl	.-8      	; 0x726 <ADC_set_channel+0x30>
     72e:	82 2b       	or	r24, r18
     730:	80 93 7e 00 	sts	0x007E, r24
     734:	0d c0       	rjmp	.+26     	; 0x750 <ADC_set_channel+0x5a>
     736:	20 91 7e 00 	lds	r18, 0x007E
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	05 2e       	mov	r0, r21
     740:	02 c0       	rjmp	.+4      	; 0x746 <ADC_set_channel+0x50>
     742:	88 0f       	add	r24, r24
     744:	99 1f       	adc	r25, r25
     746:	0a 94       	dec	r0
     748:	e2 f7       	brpl	.-8      	; 0x742 <ADC_set_channel+0x4c>
     74a:	28 2b       	or	r18, r24
     74c:	20 93 7e 00 	sts	0x007E, r18
     750:	50 93 00 01 	sts	0x0100, r21
     754:	80 91 7c 00 	lds	r24, 0x007C
     758:	5f 71       	andi	r21, 0x1F	; 31
     75a:	80 7e       	andi	r24, 0xE0	; 224
     75c:	85 2b       	or	r24, r21
     75e:	80 93 7c 00 	sts	0x007C, r24
     762:	08 95       	ret

00000764 <ADC_set_VREF>:
     764:	ec e7       	ldi	r30, 0x7C	; 124
     766:	f0 e0       	ldi	r31, 0x00	; 0
     768:	90 81       	ld	r25, Z
     76a:	82 95       	swap	r24
     76c:	88 0f       	add	r24, r24
     76e:	88 0f       	add	r24, r24
     770:	80 7c       	andi	r24, 0xC0	; 192
     772:	9f 73       	andi	r25, 0x3F	; 63
     774:	98 2b       	or	r25, r24
     776:	90 83       	st	Z, r25
     778:	08 95       	ret

0000077a <main>:
     77a:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <CBOT_ISR_init>
     77e:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <CBOT_init>
     782:	0e 94 cb 1e 	call	0x3d96	; 0x3d96 <CBOT_main>
     786:	80 e0       	ldi	r24, 0x00	; 0
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	08 95       	ret

0000078c <LCD_clear>:
     78c:	0f 93       	push	r16
     78e:	1f 93       	push	r17
     790:	80 e4       	ldi	r24, 0x40	; 64
     792:	60 e0       	ldi	r22, 0x00	; 0
     794:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     798:	00 e0       	ldi	r16, 0x00	; 0
     79a:	80 2f       	mov	r24, r16
     79c:	60 e0       	ldi	r22, 0x00	; 0
     79e:	0e 94 8c 04 	call	0x918	; 0x918 <LCD_set_PGC_addr>
     7a2:	10 e0       	ldi	r17, 0x00	; 0
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	61 e0       	ldi	r22, 0x01	; 1
     7a8:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     7ac:	1f 5f       	subi	r17, 0xFF	; 255
     7ae:	10 38       	cpi	r17, 0x80	; 128
     7b0:	c9 f7       	brne	.-14     	; 0x7a4 <LCD_clear+0x18>
     7b2:	0f 5f       	subi	r16, 0xFF	; 255
     7b4:	04 30       	cpi	r16, 0x04	; 4
     7b6:	89 f7       	brne	.-30     	; 0x79a <LCD_clear+0xe>
     7b8:	83 e0       	ldi	r24, 0x03	; 3
     7ba:	60 e0       	ldi	r22, 0x00	; 0
     7bc:	0e 94 85 04 	call	0x90a	; 0x90a <LCD_set_next_PGC>
     7c0:	1f 91       	pop	r17
     7c2:	0f 91       	pop	r16
     7c4:	08 95       	ret

000007c6 <LCD_open>:
     7c6:	0f 93       	push	r16
     7c8:	1f 93       	push	r17
     7ca:	82 e0       	ldi	r24, 0x02	; 2
     7cc:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     7d0:	88 23       	and	r24, r24
     7d2:	11 f4       	brne	.+4      	; 0x7d8 <LCD_open+0x12>
     7d4:	82 e0       	ldi	r24, 0x02	; 2
     7d6:	06 c0       	rjmp	.+12     	; 0x7e4 <LCD_open+0x1e>
     7d8:	81 e0       	ldi	r24, 0x01	; 1
     7da:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     7de:	88 23       	and	r24, r24
     7e0:	19 f4       	brne	.+6      	; 0x7e8 <LCD_open+0x22>
     7e2:	81 e0       	ldi	r24, 0x01	; 1
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	6d c0       	rjmp	.+218    	; 0x8c2 <LCD_open+0xfc>
     7e8:	0e 94 64 0d 	call	0x1ac8	; 0x1ac8 <__LCD_init>
     7ec:	85 e0       	ldi	r24, 0x05	; 5
     7ee:	61 e0       	ldi	r22, 0x01	; 1
     7f0:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
     7f4:	8e ea       	ldi	r24, 0xAE	; 174
     7f6:	60 e0       	ldi	r22, 0x00	; 0
     7f8:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     7fc:	82 ea       	ldi	r24, 0xA2	; 162
     7fe:	60 e0       	ldi	r22, 0x00	; 0
     800:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     804:	80 ea       	ldi	r24, 0xA0	; 160
     806:	60 e0       	ldi	r22, 0x00	; 0
     808:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     80c:	00 e5       	ldi	r16, 0x50	; 80
     80e:	13 ec       	ldi	r17, 0xC3	; 195
     810:	c8 01       	movw	r24, r16
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <LCD_open+0x4c>
     816:	80 ec       	ldi	r24, 0xC0	; 192
     818:	60 e0       	ldi	r22, 0x00	; 0
     81a:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     81e:	8f e2       	ldi	r24, 0x2F	; 47
     820:	60 e0       	ldi	r22, 0x00	; 0
     822:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     826:	81 e8       	ldi	r24, 0x81	; 129
     828:	60 e0       	ldi	r22, 0x00	; 0
     82a:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     82e:	86 e1       	ldi	r24, 0x16	; 22
     830:	60 e0       	ldi	r22, 0x00	; 0
     832:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     836:	82 e2       	ldi	r24, 0x22	; 34
     838:	60 e0       	ldi	r22, 0x00	; 0
     83a:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     83e:	c8 01       	movw	r24, r16
     840:	01 97       	sbiw	r24, 0x01	; 1
     842:	f1 f7       	brne	.-4      	; 0x840 <LCD_open+0x7a>
     844:	8f ea       	ldi	r24, 0xAF	; 175
     846:	60 e0       	ldi	r22, 0x00	; 0
     848:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     84c:	86 ea       	ldi	r24, 0xA6	; 166
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     854:	85 ea       	ldi	r24, 0xA5	; 165
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     85c:	80 e0       	ldi	r24, 0x00	; 0
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	28 e8       	ldi	r18, 0x88	; 136
     862:	33 e1       	ldi	r19, 0x13	; 19
     864:	f9 01       	movw	r30, r18
     866:	31 97       	sbiw	r30, 0x01	; 1
     868:	f1 f7       	brne	.-4      	; 0x866 <LCD_open+0xa0>
     86a:	01 96       	adiw	r24, 0x01	; 1
     86c:	43 e0       	ldi	r20, 0x03	; 3
     86e:	88 3e       	cpi	r24, 0xE8	; 232
     870:	94 07       	cpc	r25, r20
     872:	c1 f7       	brne	.-16     	; 0x864 <LCD_open+0x9e>
     874:	83 eb       	ldi	r24, 0xB3	; 179
     876:	60 e0       	ldi	r22, 0x00	; 0
     878:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     87c:	80 e4       	ldi	r24, 0x40	; 64
     87e:	60 e0       	ldi	r22, 0x00	; 0
     880:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     884:	83 e0       	ldi	r24, 0x03	; 3
     886:	60 e0       	ldi	r22, 0x00	; 0
     888:	0e 94 8c 04 	call	0x918	; 0x918 <LCD_set_PGC_addr>
     88c:	83 e0       	ldi	r24, 0x03	; 3
     88e:	60 e0       	ldi	r22, 0x00	; 0
     890:	0e 94 85 04 	call	0x90a	; 0x90a <LCD_set_next_PGC>
     894:	10 92 69 04 	sts	0x0469, r1
     898:	10 92 6b 04 	sts	0x046B, r1
     89c:	10 92 6a 04 	sts	0x046A, r1
     8a0:	8f e0       	ldi	r24, 0x0F	; 15
     8a2:	91 e0       	ldi	r25, 0x01	; 1
     8a4:	90 93 95 04 	sts	0x0495, r25
     8a8:	80 93 94 04 	sts	0x0494, r24
     8ac:	88 e1       	ldi	r24, 0x18	; 24
     8ae:	0e 94 64 04 	call	0x8c8	; 0x8c8 <LCD_set_backlight>
     8b2:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
     8b6:	84 ea       	ldi	r24, 0xA4	; 164
     8b8:	60 e0       	ldi	r22, 0x00	; 0
     8ba:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     8be:	85 e0       	ldi	r24, 0x05	; 5
     8c0:	91 e0       	ldi	r25, 0x01	; 1
     8c2:	1f 91       	pop	r17
     8c4:	0f 91       	pop	r16
     8c6:	08 95       	ret

000008c8 <LCD_set_backlight>:
     8c8:	1f 93       	push	r17
     8ca:	18 2f       	mov	r17, r24
     8cc:	85 e0       	ldi	r24, 0x05	; 5
     8ce:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     8d2:	81 30       	cpi	r24, 0x01	; 1
     8d4:	c1 f4       	brne	.+48     	; 0x906 <__stack+0x7>
     8d6:	87 e0       	ldi	r24, 0x07	; 7
     8d8:	0e 94 c0 04 	call	0x980	; 0x980 <SPI_set_slave_addr>
     8dc:	82 e0       	ldi	r24, 0x02	; 2
     8de:	6a e0       	ldi	r22, 0x0A	; 10
     8e0:	0e 94 11 05 	call	0xa22	; 0xa22 <SPI_transmit>
     8e4:	82 e0       	ldi	r24, 0x02	; 2
     8e6:	61 eb       	ldi	r22, 0xB1	; 177
     8e8:	0e 94 11 05 	call	0xa22	; 0xa22 <SPI_transmit>
     8ec:	61 2f       	mov	r22, r17
     8ee:	11 32       	cpi	r17, 0x21	; 33
     8f0:	08 f0       	brcs	.+2      	; 0x8f4 <LCD_set_backlight+0x2c>
     8f2:	60 e2       	ldi	r22, 0x20	; 32
     8f4:	82 e0       	ldi	r24, 0x02	; 2
     8f6:	0e 94 11 05 	call	0xa22	; 0xa22 <SPI_transmit>
     8fa:	89 ee       	ldi	r24, 0xE9	; 233
     8fc:	8a 95       	dec	r24
     8fe:	f1 f7       	brne	.-4      	; 0x8fc <LCD_set_backlight+0x34>
     900:	87 e0       	ldi	r24, 0x07	; 7
     902:	0e 94 c0 04 	call	0x980	; 0x980 <SPI_set_slave_addr>
     906:	1f 91       	pop	r17
     908:	08 95       	ret

0000090a <LCD_set_next_PGC>:
     90a:	83 70       	andi	r24, 0x03	; 3
     90c:	6f 77       	andi	r22, 0x7F	; 127
     90e:	60 93 67 04 	sts	0x0467, r22
     912:	80 93 68 04 	sts	0x0468, r24
     916:	08 95       	ret

00000918 <LCD_set_PGC_addr>:
     918:	0f 93       	push	r16
     91a:	1f 93       	push	r17
     91c:	06 2f       	mov	r16, r22
     91e:	16 2f       	mov	r17, r22
     920:	1f 77       	andi	r17, 0x7F	; 127
     922:	83 70       	andi	r24, 0x03	; 3
     924:	80 6b       	ori	r24, 0xB0	; 176
     926:	60 e0       	ldi	r22, 0x00	; 0
     928:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     92c:	12 95       	swap	r17
     92e:	1f 70       	andi	r17, 0x0F	; 15
     930:	81 2f       	mov	r24, r17
     932:	80 61       	ori	r24, 0x10	; 16
     934:	60 e0       	ldi	r22, 0x00	; 0
     936:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     93a:	80 2f       	mov	r24, r16
     93c:	8f 70       	andi	r24, 0x0F	; 15
     93e:	60 e0       	ldi	r22, 0x00	; 0
     940:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
     944:	1f 91       	pop	r17
     946:	0f 91       	pop	r16
     948:	08 95       	ret

0000094a <LCD_write>:
     94a:	0f 93       	push	r16
     94c:	1f 93       	push	r17
     94e:	08 2f       	mov	r16, r24
     950:	16 2f       	mov	r17, r22
     952:	85 e0       	ldi	r24, 0x05	; 5
     954:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     958:	81 30       	cpi	r24, 0x01	; 1
     95a:	79 f4       	brne	.+30     	; 0x97a <LCD_write+0x30>
     95c:	11 23       	and	r17, r17
     95e:	19 f0       	breq	.+6      	; 0x966 <LCD_write+0x1c>
     960:	11 30       	cpi	r17, 0x01	; 1
     962:	21 f4       	brne	.+8      	; 0x96c <LCD_write+0x22>
     964:	02 c0       	rjmp	.+4      	; 0x96a <LCD_write+0x20>
     966:	2b 98       	cbi	0x05, 3	; 5
     968:	01 c0       	rjmp	.+2      	; 0x96c <LCD_write+0x22>
     96a:	2b 9a       	sbi	0x05, 3	; 5
     96c:	86 e0       	ldi	r24, 0x06	; 6
     96e:	8a 95       	dec	r24
     970:	f1 f7       	brne	.-4      	; 0x96e <LCD_write+0x24>
     972:	80 e0       	ldi	r24, 0x00	; 0
     974:	60 2f       	mov	r22, r16
     976:	0e 94 11 05 	call	0xa22	; 0xa22 <SPI_transmit>
     97a:	1f 91       	pop	r17
     97c:	0f 91       	pop	r16
     97e:	08 95       	ret

00000980 <SPI_set_slave_addr>:
     980:	1f 93       	push	r17
     982:	18 2f       	mov	r17, r24
     984:	82 e0       	ldi	r24, 0x02	; 2
     986:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     98a:	81 30       	cpi	r24, 0x01	; 1
     98c:	09 f0       	breq	.+2      	; 0x990 <SPI_set_slave_addr+0x10>
     98e:	47 c0       	rjmp	.+142    	; 0xa1e <SPI_set_slave_addr+0x9e>
     990:	91 2f       	mov	r25, r17
     992:	97 70       	andi	r25, 0x07	; 7
     994:	80 91 6c 04 	lds	r24, 0x046C
     998:	98 17       	cp	r25, r24
     99a:	09 f4       	brne	.+2      	; 0x99e <SPI_set_slave_addr+0x1e>
     99c:	40 c0       	rjmp	.+128    	; 0xa1e <SPI_set_slave_addr+0x9e>
     99e:	90 93 6c 04 	sts	0x046C, r25
     9a2:	85 b1       	in	r24, 0x05	; 5
     9a4:	88 7f       	andi	r24, 0xF8	; 248
     9a6:	89 2b       	or	r24, r25
     9a8:	85 b9       	out	0x05, r24	; 5
     9aa:	93 30       	cpi	r25, 0x03	; 3
     9ac:	11 f1       	breq	.+68     	; 0x9f2 <SPI_set_slave_addr+0x72>
     9ae:	94 30       	cpi	r25, 0x04	; 4
     9b0:	28 f4       	brcc	.+10     	; 0x9bc <SPI_set_slave_addr+0x3c>
     9b2:	91 30       	cpi	r25, 0x01	; 1
     9b4:	51 f0       	breq	.+20     	; 0x9ca <SPI_set_slave_addr+0x4a>
     9b6:	92 30       	cpi	r25, 0x02	; 2
     9b8:	90 f4       	brcc	.+36     	; 0x9de <SPI_set_slave_addr+0x5e>
     9ba:	0c c0       	rjmp	.+24     	; 0x9d4 <SPI_set_slave_addr+0x54>
     9bc:	95 30       	cpi	r25, 0x05	; 5
     9be:	19 f1       	breq	.+70     	; 0xa06 <SPI_set_slave_addr+0x86>
     9c0:	95 30       	cpi	r25, 0x05	; 5
     9c2:	e0 f0       	brcs	.+56     	; 0x9fc <SPI_set_slave_addr+0x7c>
     9c4:	96 30       	cpi	r25, 0x06	; 6
     9c6:	21 f5       	brne	.+72     	; 0xa10 <SPI_set_slave_addr+0x90>
     9c8:	0f c0       	rjmp	.+30     	; 0x9e8 <SPI_set_slave_addr+0x68>
     9ca:	e0 91 ee 03 	lds	r30, 0x03EE
     9ce:	f0 91 ef 03 	lds	r31, 0x03EF
     9d2:	22 c0       	rjmp	.+68     	; 0xa18 <SPI_set_slave_addr+0x98>
     9d4:	e0 91 ec 03 	lds	r30, 0x03EC
     9d8:	f0 91 ed 03 	lds	r31, 0x03ED
     9dc:	1d c0       	rjmp	.+58     	; 0xa18 <SPI_set_slave_addr+0x98>
     9de:	e0 91 f0 03 	lds	r30, 0x03F0
     9e2:	f0 91 f1 03 	lds	r31, 0x03F1
     9e6:	18 c0       	rjmp	.+48     	; 0xa18 <SPI_set_slave_addr+0x98>
     9e8:	e0 91 f8 03 	lds	r30, 0x03F8
     9ec:	f0 91 f9 03 	lds	r31, 0x03F9
     9f0:	13 c0       	rjmp	.+38     	; 0xa18 <SPI_set_slave_addr+0x98>
     9f2:	e0 91 f2 03 	lds	r30, 0x03F2
     9f6:	f0 91 f3 03 	lds	r31, 0x03F3
     9fa:	0e c0       	rjmp	.+28     	; 0xa18 <SPI_set_slave_addr+0x98>
     9fc:	e0 91 f4 03 	lds	r30, 0x03F4
     a00:	f0 91 f5 03 	lds	r31, 0x03F5
     a04:	09 c0       	rjmp	.+18     	; 0xa18 <SPI_set_slave_addr+0x98>
     a06:	e0 91 f6 03 	lds	r30, 0x03F6
     a0a:	f0 91 f7 03 	lds	r31, 0x03F7
     a0e:	04 c0       	rjmp	.+8      	; 0xa18 <SPI_set_slave_addr+0x98>
     a10:	e0 91 fa 03 	lds	r30, 0x03FA
     a14:	f0 91 fb 03 	lds	r31, 0x03FB
     a18:	30 97       	sbiw	r30, 0x00	; 0
     a1a:	09 f0       	breq	.+2      	; 0xa1e <SPI_set_slave_addr+0x9e>
     a1c:	09 95       	icall
     a1e:	1f 91       	pop	r17
     a20:	08 95       	ret

00000a22 <SPI_transmit>:
     a22:	1f 93       	push	r17
     a24:	16 2f       	mov	r17, r22
     a26:	0e 94 c0 04 	call	0x980	; 0x980 <SPI_set_slave_addr>
     a2a:	82 e0       	ldi	r24, 0x02	; 2
     a2c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     a30:	81 30       	cpi	r24, 0x01	; 1
     a32:	21 f4       	brne	.+8      	; 0xa3c <SPI_transmit+0x1a>
     a34:	1e bd       	out	0x2e, r17	; 46
     a36:	0d b4       	in	r0, 0x2d	; 45
     a38:	07 fe       	sbrs	r0, 7
     a3a:	fd cf       	rjmp	.-6      	; 0xa36 <SPI_transmit+0x14>
     a3c:	1f 91       	pop	r17
     a3e:	08 95       	ret

00000a40 <__SPKR_set_up_freq_LUT>:
     a40:	0f 93       	push	r16
     a42:	1f 93       	push	r17
     a44:	cf 93       	push	r28
     a46:	df 93       	push	r29
     a48:	80 e2       	ldi	r24, 0x20	; 32
     a4a:	91 e0       	ldi	r25, 0x01	; 1
     a4c:	0e 94 2a 29 	call	0x5254	; 0x5254 <malloc>
     a50:	9c 01       	movw	r18, r24
     a52:	90 93 0b 04 	sts	0x040B, r25
     a56:	80 93 0a 04 	sts	0x040A, r24
     a5a:	89 2b       	or	r24, r25
     a5c:	11 f4       	brne	.+4      	; 0xa62 <__SPKR_set_up_freq_LUT+0x22>
     a5e:	80 e0       	ldi	r24, 0x00	; 0
     a60:	39 c0       	rjmp	.+114    	; 0xad4 <__SPKR_set_up_freq_LUT+0x94>
     a62:	89 01       	movw	r16, r18
     a64:	c0 e0       	ldi	r28, 0x00	; 0
     a66:	d0 e0       	ldi	r29, 0x00	; 0
     a68:	be 01       	movw	r22, r28
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	0e 94 4c 22 	call	0x4498	; 0x4498 <__floatunsisf>
     a72:	20 e0       	ldi	r18, 0x00	; 0
     a74:	30 e0       	ldi	r19, 0x00	; 0
     a76:	40 ea       	ldi	r20, 0xA0	; 160
     a78:	51 e4       	ldi	r21, 0x41	; 65
     a7a:	0e 94 b3 21 	call	0x4366	; 0x4366 <__divsf3>
     a7e:	27 ef       	ldi	r18, 0xF7	; 247
     a80:	35 e7       	ldi	r19, 0x75	; 117
     a82:	40 e0       	ldi	r20, 0x00	; 0
     a84:	5f e3       	ldi	r21, 0x3F	; 63
     a86:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
     a8a:	9b 01       	movw	r18, r22
     a8c:	ac 01       	movw	r20, r24
     a8e:	60 e0       	ldi	r22, 0x00	; 0
     a90:	70 e0       	ldi	r23, 0x00	; 0
     a92:	80 e2       	ldi	r24, 0x20	; 32
     a94:	91 e4       	ldi	r25, 0x41	; 65
     a96:	0e 94 54 27 	call	0x4ea8	; 0x4ea8 <pow>
     a9a:	9b 01       	movw	r18, r22
     a9c:	ac 01       	movw	r20, r24
     a9e:	ca 01       	movw	r24, r20
     aa0:	b9 01       	movw	r22, r18
     aa2:	2d ec       	ldi	r18, 0xCD	; 205
     aa4:	3c ec       	ldi	r19, 0xCC	; 204
     aa6:	42 e8       	ldi	r20, 0x82	; 130
     aa8:	51 e4       	ldi	r21, 0x41	; 65
     aaa:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
     aae:	0e 94 1a 27 	call	0x4e34	; 0x4e34 <lrint>
     ab2:	2a e0       	ldi	r18, 0x0A	; 10
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	40 e0       	ldi	r20, 0x00	; 0
     ab8:	50 e0       	ldi	r21, 0x00	; 0
     aba:	0e 94 7f 28 	call	0x50fe	; 0x50fe <__mulsi3>
     abe:	f8 01       	movw	r30, r16
     ac0:	61 93       	st	Z+, r22
     ac2:	71 93       	st	Z+, r23
     ac4:	81 93       	st	Z+, r24
     ac6:	91 93       	st	Z+, r25
     ac8:	8f 01       	movw	r16, r30
     aca:	21 96       	adiw	r28, 0x01	; 1
     acc:	c8 34       	cpi	r28, 0x48	; 72
     ace:	d1 05       	cpc	r29, r1
     ad0:	59 f6       	brne	.-106    	; 0xa68 <__SPKR_set_up_freq_LUT+0x28>
     ad2:	81 e0       	ldi	r24, 0x01	; 1
     ad4:	df 91       	pop	r29
     ad6:	cf 91       	pop	r28
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	08 95       	ret

00000ade <__SPKR_open_beep_mode>:
     ade:	8a e0       	ldi	r24, 0x0A	; 10
     ae0:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     ae4:	88 23       	and	r24, r24
     ae6:	71 f4       	brne	.+28     	; 0xb04 <__SPKR_open_beep_mode+0x26>
     ae8:	10 92 07 04 	sts	0x0407, r1
     aec:	10 92 06 04 	sts	0x0406, r1
     af0:	81 e0       	ldi	r24, 0x01	; 1
     af2:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__SPKR_init>
     af6:	81 e0       	ldi	r24, 0x01	; 1
     af8:	80 93 fd 03 	sts	0x03FD, r24
     afc:	8a e0       	ldi	r24, 0x0A	; 10
     afe:	61 e0       	ldi	r22, 0x01	; 1
     b00:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
     b04:	8a e0       	ldi	r24, 0x0A	; 10
     b06:	91 e0       	ldi	r25, 0x01	; 1
     b08:	08 95       	ret

00000b0a <__SPKR_open_tone_mode>:
     b0a:	1f 93       	push	r17
     b0c:	8b e0       	ldi	r24, 0x0B	; 11
     b0e:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     b12:	88 23       	and	r24, r24
     b14:	11 f0       	breq	.+4      	; 0xb1a <__SPKR_open_tone_mode+0x10>
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	21 c0       	rjmp	.+66     	; 0xb5c <__SPKR_open_tone_mode+0x52>
     b1a:	89 e0       	ldi	r24, 0x09	; 9
     b1c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     b20:	88 23       	and	r24, r24
     b22:	d9 f4       	brne	.+54     	; 0xb5a <__SPKR_open_tone_mode+0x50>
     b24:	0e 94 20 05 	call	0xa40	; 0xa40 <__SPKR_set_up_freq_LUT>
     b28:	18 2f       	mov	r17, r24
     b2a:	81 30       	cpi	r24, 0x01	; 1
     b2c:	b1 f4       	brne	.+44     	; 0xb5a <__SPKR_open_tone_mode+0x50>
     b2e:	10 92 fe 03 	sts	0x03FE, r1
     b32:	10 92 ff 03 	sts	0x03FF, r1
     b36:	10 92 00 04 	sts	0x0400, r1
     b3a:	10 92 01 04 	sts	0x0401, r1
     b3e:	8d e0       	ldi	r24, 0x0D	; 13
     b40:	6a eb       	ldi	r22, 0xBA	; 186
     b42:	7e e0       	ldi	r23, 0x0E	; 14
     b44:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <ISR_attach>
     b48:	82 e0       	ldi	r24, 0x02	; 2
     b4a:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__SPKR_init>
     b4e:	10 93 fc 03 	sts	0x03FC, r17
     b52:	89 e0       	ldi	r24, 0x09	; 9
     b54:	61 e0       	ldi	r22, 0x01	; 1
     b56:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
     b5a:	91 e0       	ldi	r25, 0x01	; 1
     b5c:	89 e0       	ldi	r24, 0x09	; 9
     b5e:	1f 91       	pop	r17
     b60:	08 95       	ret

00000b62 <SPKR_open>:
     b62:	81 30       	cpi	r24, 0x01	; 1
     b64:	29 f0       	breq	.+10     	; 0xb70 <SPKR_open+0xe>
     b66:	82 30       	cpi	r24, 0x02	; 2
     b68:	31 f0       	breq	.+12     	; 0xb76 <SPKR_open+0x14>
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	89 e0       	ldi	r24, 0x09	; 9
     b6e:	08 95       	ret
     b70:	0e 94 6f 05 	call	0xade	; 0xade <__SPKR_open_beep_mode>
     b74:	08 95       	ret
     b76:	0e 94 85 05 	call	0xb0a	; 0xb0a <__SPKR_open_tone_mode>
     b7a:	08 95       	ret

00000b7c <SPKR_play_beep>:
     b7c:	8f 92       	push	r8
     b7e:	9f 92       	push	r9
     b80:	af 92       	push	r10
     b82:	bf 92       	push	r11
     b84:	cf 92       	push	r12
     b86:	df 92       	push	r13
     b88:	ef 92       	push	r14
     b8a:	ff 92       	push	r15
     b8c:	0f 93       	push	r16
     b8e:	1f 93       	push	r17
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	4b 01       	movw	r8, r22
     b96:	5c 01       	movw	r10, r24
     b98:	ea 01       	movw	r28, r20
     b9a:	b9 01       	movw	r22, r18
     b9c:	21 15       	cp	r18, r1
     b9e:	31 05       	cpc	r19, r1
     ba0:	39 f1       	breq	.+78     	; 0xbf0 <SPKR_play_beep+0x74>
     ba2:	9e 01       	movw	r18, r28
     ba4:	44 27       	eor	r20, r20
     ba6:	37 fd       	sbrc	r19, 7
     ba8:	40 95       	com	r20
     baa:	54 2f       	mov	r21, r20
     bac:	65 36       	cpi	r22, 0x65	; 101
     bae:	71 05       	cpc	r23, r1
     bb0:	10 f0       	brcs	.+4      	; 0xbb6 <SPKR_play_beep+0x3a>
     bb2:	64 e6       	ldi	r22, 0x64	; 100
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	0e 94 7f 28 	call	0x50fe	; 0x50fe <__mulsi3>
     bbe:	24 e6       	ldi	r18, 0x64	; 100
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	40 e0       	ldi	r20, 0x00	; 0
     bc4:	50 e0       	ldi	r21, 0x00	; 0
     bc6:	0e 94 a3 28 	call	0x5146	; 0x5146 <__udivmodsi4>
     bca:	79 01       	movw	r14, r18
     bcc:	8a 01       	movw	r16, r20
     bce:	c5 01       	movw	r24, r10
     bd0:	b4 01       	movw	r22, r8
     bd2:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <SPKR_beep>
     bd6:	c7 01       	movw	r24, r14
     bd8:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
     bdc:	60 e0       	ldi	r22, 0x00	; 0
     bde:	70 e0       	ldi	r23, 0x00	; 0
     be0:	80 e0       	ldi	r24, 0x00	; 0
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <SPKR_beep>
     be8:	ce 01       	movw	r24, r28
     bea:	8e 19       	sub	r24, r14
     bec:	9f 09       	sbc	r25, r15
     bee:	04 c0       	rjmp	.+8      	; 0xbf8 <SPKR_play_beep+0x7c>
     bf0:	41 15       	cp	r20, r1
     bf2:	51 05       	cpc	r21, r1
     bf4:	19 f0       	breq	.+6      	; 0xbfc <SPKR_play_beep+0x80>
     bf6:	ca 01       	movw	r24, r20
     bf8:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
     bfc:	df 91       	pop	r29
     bfe:	cf 91       	pop	r28
     c00:	1f 91       	pop	r17
     c02:	0f 91       	pop	r16
     c04:	ff 90       	pop	r15
     c06:	ef 90       	pop	r14
     c08:	df 90       	pop	r13
     c0a:	cf 90       	pop	r12
     c0c:	bf 90       	pop	r11
     c0e:	af 90       	pop	r10
     c10:	9f 90       	pop	r9
     c12:	8f 90       	pop	r8
     c14:	08 95       	ret

00000c16 <STEPPER_close>:
     c16:	87 e0       	ldi	r24, 0x07	; 7
     c18:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
     c1c:	81 30       	cpi	r24, 0x01	; 1
     c1e:	41 f4       	brne	.+16     	; 0xc30 <STEPPER_close+0x1a>
     c20:	80 93 51 04 	sts	0x0451, r24
     c24:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <__STEPPER_close>
     c28:	87 e0       	ldi	r24, 0x07	; 7
     c2a:	60 e0       	ldi	r22, 0x00	; 0
     c2c:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
     c30:	08 95       	ret

00000c32 <STEPPER_stepmode>:
     c32:	2f 92       	push	r2
     c34:	3f 92       	push	r3
     c36:	4f 92       	push	r4
     c38:	5f 92       	push	r5
     c3a:	6f 92       	push	r6
     c3c:	7f 92       	push	r7
     c3e:	8f 92       	push	r8
     c40:	9f 92       	push	r9
     c42:	af 92       	push	r10
     c44:	bf 92       	push	r11
     c46:	cf 92       	push	r12
     c48:	df 92       	push	r13
     c4a:	ef 92       	push	r14
     c4c:	ff 92       	push	r15
     c4e:	0f 93       	push	r16
     c50:	1f 93       	push	r17
     c52:	df 93       	push	r29
     c54:	cf 93       	push	r28
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
     c5a:	58 2e       	mov	r5, r24
     c5c:	96 2e       	mov	r9, r22
     c5e:	44 2e       	mov	r4, r20
     c60:	39 01       	movw	r6, r18
     c62:	3c 2c       	mov	r3, r12
     c64:	c9 8c       	ldd	r12, Y+25	; 0x19
     c66:	da 8c       	ldd	r13, Y+26	; 0x1a
     c68:	2b 8c       	ldd	r2, Y+27	; 0x1b
     c6a:	81 e0       	ldi	r24, 0x01	; 1
     c6c:	68 17       	cp	r22, r24
     c6e:	39 f1       	breq	.+78     	; 0xcbe <STEPPER_stepmode+0x8c>
     c70:	68 17       	cp	r22, r24
     c72:	28 f0       	brcs	.+10     	; 0xc7e <STEPPER_stepmode+0x4c>
     c74:	92 e0       	ldi	r25, 0x02	; 2
     c76:	69 17       	cp	r22, r25
     c78:	09 f0       	breq	.+2      	; 0xc7c <STEPPER_stepmode+0x4a>
     c7a:	85 c0       	rjmp	.+266    	; 0xd86 <STEPPER_stepmode+0x154>
     c7c:	49 c0       	rjmp	.+146    	; 0xd10 <STEPPER_stepmode+0xde>
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	61 e0       	ldi	r22, 0x01	; 1
     c82:	0e 94 22 08 	call	0x1044	; 0x1044 <STEPPER_set_mode>
     c86:	80 e0       	ldi	r24, 0x00	; 0
     c88:	b7 01       	movw	r22, r14
     c8a:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_set_accel>
     c8e:	80 e0       	ldi	r24, 0x00	; 0
     c90:	64 2d       	mov	r22, r4
     c92:	a3 01       	movw	r20, r6
     c94:	98 01       	movw	r18, r16
     c96:	03 2d       	mov	r16, r3
     c98:	ee 24       	eor	r14, r14
     c9a:	e3 94       	inc	r14
     c9c:	e2 e5       	ldi	r30, 0x52	; 82
     c9e:	ce 2e       	mov	r12, r30
     ca0:	e4 e0       	ldi	r30, 0x04	; 4
     ca2:	de 2e       	mov	r13, r30
     ca4:	0e 94 59 08 	call	0x10b2	; 0x10b2 <STEPPER_step>
     ca8:	55 20       	and	r5, r5
     caa:	09 f0       	breq	.+2      	; 0xcae <STEPPER_stepmode+0x7c>
     cac:	6c c0       	rjmp	.+216    	; 0xd86 <STEPPER_stepmode+0x154>
     cae:	00 d0       	rcall	.+0      	; 0xcb0 <STEPPER_stepmode+0x7e>
     cb0:	0f 92       	push	r0
     cb2:	ed b7       	in	r30, 0x3d	; 61
     cb4:	fe b7       	in	r31, 0x3e	; 62
     cb6:	11 82       	std	Z+1, r1	; 0x01
     cb8:	b3 82       	std	Z+3, r11	; 0x03
     cba:	a2 82       	std	Z+2, r10	; 0x02
     cbc:	23 c0       	rjmp	.+70     	; 0xd04 <STEPPER_stepmode+0xd2>
     cbe:	81 e0       	ldi	r24, 0x01	; 1
     cc0:	61 e0       	ldi	r22, 0x01	; 1
     cc2:	0e 94 22 08 	call	0x1044	; 0x1044 <STEPPER_set_mode>
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	b6 01       	movw	r22, r12
     cca:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_set_accel>
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	68 2d       	mov	r22, r8
     cd2:	4d 89       	ldd	r20, Y+21	; 0x15
     cd4:	5e 89       	ldd	r21, Y+22	; 0x16
     cd6:	2f 89       	ldd	r18, Y+23	; 0x17
     cd8:	38 8d       	ldd	r19, Y+24	; 0x18
     cda:	02 2d       	mov	r16, r2
     cdc:	ee 24       	eor	r14, r14
     cde:	e3 94       	inc	r14
     ce0:	72 e5       	ldi	r23, 0x52	; 82
     ce2:	c7 2e       	mov	r12, r23
     ce4:	74 e0       	ldi	r23, 0x04	; 4
     ce6:	d7 2e       	mov	r13, r23
     ce8:	0e 94 59 08 	call	0x10b2	; 0x10b2 <STEPPER_step>
     cec:	55 20       	and	r5, r5
     cee:	09 f0       	breq	.+2      	; 0xcf2 <STEPPER_stepmode+0xc0>
     cf0:	4a c0       	rjmp	.+148    	; 0xd86 <STEPPER_stepmode+0x154>
     cf2:	00 d0       	rcall	.+0      	; 0xcf4 <STEPPER_stepmode+0xc2>
     cf4:	0f 92       	push	r0
     cf6:	ed b7       	in	r30, 0x3d	; 61
     cf8:	fe b7       	in	r31, 0x3e	; 62
     cfa:	91 82       	std	Z+1, r9	; 0x01
     cfc:	8c 8d       	ldd	r24, Y+28	; 0x1c
     cfe:	9d 8d       	ldd	r25, Y+29	; 0x1d
     d00:	93 83       	std	Z+3, r25	; 0x03
     d02:	82 83       	std	Z+2, r24	; 0x02
     d04:	0e 94 0a 09 	call	0x1214	; 0x1214 <STEPPER_wait_and_then>
     d08:	0f 90       	pop	r0
     d0a:	0f 90       	pop	r0
     d0c:	0f 90       	pop	r0
     d0e:	3b c0       	rjmp	.+118    	; 0xd86 <STEPPER_stepmode+0x154>
     d10:	82 e0       	ldi	r24, 0x02	; 2
     d12:	61 e0       	ldi	r22, 0x01	; 1
     d14:	0e 94 22 08 	call	0x1044	; 0x1044 <STEPPER_set_mode>
     d18:	80 e0       	ldi	r24, 0x00	; 0
     d1a:	b7 01       	movw	r22, r14
     d1c:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_set_accel>
     d20:	81 e0       	ldi	r24, 0x01	; 1
     d22:	b6 01       	movw	r22, r12
     d24:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_set_accel>
     d28:	80 e0       	ldi	r24, 0x00	; 0
     d2a:	64 2d       	mov	r22, r4
     d2c:	a3 01       	movw	r20, r6
     d2e:	98 01       	movw	r18, r16
     d30:	03 2d       	mov	r16, r3
     d32:	ee 24       	eor	r14, r14
     d34:	e3 94       	inc	r14
     d36:	92 e5       	ldi	r25, 0x52	; 82
     d38:	c9 2e       	mov	r12, r25
     d3a:	94 e0       	ldi	r25, 0x04	; 4
     d3c:	d9 2e       	mov	r13, r25
     d3e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <STEPPER_step>
     d42:	81 e0       	ldi	r24, 0x01	; 1
     d44:	68 2d       	mov	r22, r8
     d46:	4d 89       	ldd	r20, Y+21	; 0x15
     d48:	5e 89       	ldd	r21, Y+22	; 0x16
     d4a:	2f 89       	ldd	r18, Y+23	; 0x17
     d4c:	38 8d       	ldd	r19, Y+24	; 0x18
     d4e:	02 2d       	mov	r16, r2
     d50:	0e 94 59 08 	call	0x10b2	; 0x10b2 <STEPPER_step>
     d54:	55 20       	and	r5, r5
     d56:	b9 f4       	brne	.+46     	; 0xd86 <STEPPER_stepmode+0x154>
     d58:	00 d0       	rcall	.+0      	; 0xd5a <STEPPER_stepmode+0x128>
     d5a:	00 d0       	rcall	.+0      	; 0xd5c <STEPPER_stepmode+0x12a>
     d5c:	0f 92       	push	r0
     d5e:	ad b7       	in	r26, 0x3d	; 61
     d60:	be b7       	in	r27, 0x3e	; 62
     d62:	11 96       	adiw	r26, 0x01	; 1
     d64:	ed b7       	in	r30, 0x3d	; 61
     d66:	fe b7       	in	r31, 0x3e	; 62
     d68:	91 82       	std	Z+1, r9	; 0x01
     d6a:	fd 01       	movw	r30, r26
     d6c:	b2 82       	std	Z+2, r11	; 0x02
     d6e:	a1 82       	std	Z+1, r10	; 0x01
     d70:	8c 8d       	ldd	r24, Y+28	; 0x1c
     d72:	9d 8d       	ldd	r25, Y+29	; 0x1d
     d74:	94 83       	std	Z+4, r25	; 0x04
     d76:	83 83       	std	Z+3, r24	; 0x03
     d78:	0e 94 0a 09 	call	0x1214	; 0x1214 <STEPPER_wait_and_then>
     d7c:	0f 90       	pop	r0
     d7e:	0f 90       	pop	r0
     d80:	0f 90       	pop	r0
     d82:	0f 90       	pop	r0
     d84:	0f 90       	pop	r0
     d86:	cf 91       	pop	r28
     d88:	df 91       	pop	r29
     d8a:	1f 91       	pop	r17
     d8c:	0f 91       	pop	r16
     d8e:	ff 90       	pop	r15
     d90:	ef 90       	pop	r14
     d92:	df 90       	pop	r13
     d94:	cf 90       	pop	r12
     d96:	bf 90       	pop	r11
     d98:	af 90       	pop	r10
     d9a:	9f 90       	pop	r9
     d9c:	8f 90       	pop	r8
     d9e:	7f 90       	pop	r7
     da0:	6f 90       	pop	r6
     da2:	5f 90       	pop	r5
     da4:	4f 90       	pop	r4
     da6:	3f 90       	pop	r3
     da8:	2f 90       	pop	r2
     daa:	08 95       	ret

00000dac <STEPPER_move>:
     dac:	6f 92       	push	r6
     dae:	7f 92       	push	r7
     db0:	8f 92       	push	r8
     db2:	9f 92       	push	r9
     db4:	af 92       	push	r10
     db6:	bf 92       	push	r11
     db8:	cf 92       	push	r12
     dba:	df 92       	push	r13
     dbc:	ef 92       	push	r14
     dbe:	ff 92       	push	r15
     dc0:	0f 93       	push	r16
     dc2:	1f 93       	push	r17
     dc4:	df 93       	push	r29
     dc6:	cf 93       	push	r28
     dc8:	cd b7       	in	r28, 0x3d	; 61
     dca:	de b7       	in	r29, 0x3e	; 62
     dcc:	94 2e       	mov	r9, r20
     dce:	7c 2d       	mov	r23, r12
     dd0:	d5 01       	movw	r26, r10
     dd2:	49 89       	ldd	r20, Y+17	; 0x11
     dd4:	5a 89       	ldd	r21, Y+18	; 0x12
     dd6:	ab 88       	ldd	r10, Y+19	; 0x13
     dd8:	bc 88       	ldd	r11, Y+20	; 0x14
     dda:	cd 88       	ldd	r12, Y+21	; 0x15
     ddc:	de 88       	ldd	r13, Y+22	; 0x16
     dde:	9f 89       	ldd	r25, Y+23	; 0x17
     de0:	81 30       	cpi	r24, 0x01	; 1
     de2:	09 f4       	brne	.+2      	; 0xde6 <STEPPER_move+0x3a>
     de4:	57 c0       	rjmp	.+174    	; 0xe94 <STEPPER_move+0xe8>
     de6:	81 30       	cpi	r24, 0x01	; 1
     de8:	b8 f1       	brcs	.+110    	; 0xe58 <STEPPER_move+0xac>
     dea:	82 30       	cpi	r24, 0x02	; 2
     dec:	09 f0       	breq	.+2      	; 0xdf0 <STEPPER_move+0x44>
     dee:	76 c0       	rjmp	.+236    	; 0xedc <STEPPER_move+0x130>
     df0:	61 30       	cpi	r22, 0x01	; 1
     df2:	91 f0       	breq	.+36     	; 0xe18 <STEPPER_move+0x6c>
     df4:	61 30       	cpi	r22, 0x01	; 1
     df6:	20 f0       	brcs	.+8      	; 0xe00 <STEPPER_move+0x54>
     df8:	62 30       	cpi	r22, 0x02	; 2
     dfa:	09 f0       	breq	.+2      	; 0xdfe <STEPPER_move+0x52>
     dfc:	6f c0       	rjmp	.+222    	; 0xedc <STEPPER_move+0x130>
     dfe:	15 c0       	rjmp	.+42     	; 0xe2a <STEPPER_move+0x7e>
     e00:	80 e0       	ldi	r24, 0x00	; 0
     e02:	60 e0       	ldi	r22, 0x00	; 0
     e04:	0e 94 22 08 	call	0x1044	; 0x1044 <STEPPER_set_mode>
     e08:	80 e0       	ldi	r24, 0x00	; 0
     e0a:	b7 01       	movw	r22, r14
     e0c:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_set_accel>
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	69 2d       	mov	r22, r9
     e14:	a8 01       	movw	r20, r16
     e16:	1d c0       	rjmp	.+58     	; 0xe52 <STEPPER_move+0xa6>
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	60 e0       	ldi	r22, 0x00	; 0
     e1c:	0e 94 22 08 	call	0x1044	; 0x1044 <STEPPER_set_mode>
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	b6 01       	movw	r22, r12
     e24:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_set_accel>
     e28:	11 c0       	rjmp	.+34     	; 0xe4c <STEPPER_move+0xa0>
     e2a:	82 e0       	ldi	r24, 0x02	; 2
     e2c:	60 e0       	ldi	r22, 0x00	; 0
     e2e:	0e 94 22 08 	call	0x1044	; 0x1044 <STEPPER_set_mode>
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	b7 01       	movw	r22, r14
     e36:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_set_accel>
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	b6 01       	movw	r22, r12
     e3e:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_set_accel>
     e42:	80 e0       	ldi	r24, 0x00	; 0
     e44:	69 2d       	mov	r22, r9
     e46:	a8 01       	movw	r20, r16
     e48:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <STEPPER_run>
     e4c:	81 e0       	ldi	r24, 0x01	; 1
     e4e:	68 2d       	mov	r22, r8
     e50:	a5 01       	movw	r20, r10
     e52:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <STEPPER_run>
     e56:	42 c0       	rjmp	.+132    	; 0xedc <STEPPER_move+0x130>
     e58:	ed b7       	in	r30, 0x3d	; 61
     e5a:	fe b7       	in	r31, 0x3e	; 62
     e5c:	39 97       	sbiw	r30, 0x09	; 9
     e5e:	0f b6       	in	r0, 0x3f	; 63
     e60:	f8 94       	cli
     e62:	fe bf       	out	0x3e, r31	; 62
     e64:	0f be       	out	0x3f, r0	; 63
     e66:	ed bf       	out	0x3d, r30	; 61
     e68:	6d b6       	in	r6, 0x3d	; 61
     e6a:	7e b6       	in	r7, 0x3e	; 62
     e6c:	08 94       	sec
     e6e:	61 1c       	adc	r6, r1
     e70:	71 1c       	adc	r7, r1
     e72:	52 83       	std	Z+2, r21	; 0x02
     e74:	41 83       	std	Z+1, r20	; 0x01
     e76:	f3 01       	movw	r30, r6
     e78:	b3 82       	std	Z+3, r11	; 0x03
     e7a:	a2 82       	std	Z+2, r10	; 0x02
     e7c:	d5 82       	std	Z+5, r13	; 0x05
     e7e:	c4 82       	std	Z+4, r12	; 0x04
     e80:	96 83       	std	Z+6, r25	; 0x06
     e82:	88 8d       	ldd	r24, Y+24	; 0x18
     e84:	99 8d       	ldd	r25, Y+25	; 0x19
     e86:	90 87       	std	Z+8, r25	; 0x08
     e88:	87 83       	std	Z+7, r24	; 0x07
     e8a:	80 e0       	ldi	r24, 0x00	; 0
     e8c:	49 2d       	mov	r20, r9
     e8e:	c7 2e       	mov	r12, r23
     e90:	5d 01       	movw	r10, r26
     e92:	1a c0       	rjmp	.+52     	; 0xec8 <STEPPER_move+0x11c>
     e94:	ed b7       	in	r30, 0x3d	; 61
     e96:	fe b7       	in	r31, 0x3e	; 62
     e98:	39 97       	sbiw	r30, 0x09	; 9
     e9a:	0f b6       	in	r0, 0x3f	; 63
     e9c:	f8 94       	cli
     e9e:	fe bf       	out	0x3e, r31	; 62
     ea0:	0f be       	out	0x3f, r0	; 63
     ea2:	ed bf       	out	0x3d, r30	; 61
     ea4:	ad b7       	in	r26, 0x3d	; 61
     ea6:	be b7       	in	r27, 0x3e	; 62
     ea8:	11 96       	adiw	r26, 0x01	; 1
     eaa:	52 83       	std	Z+2, r21	; 0x02
     eac:	41 83       	std	Z+1, r20	; 0x01
     eae:	fd 01       	movw	r30, r26
     eb0:	b3 82       	std	Z+3, r11	; 0x03
     eb2:	a2 82       	std	Z+2, r10	; 0x02
     eb4:	d5 82       	std	Z+5, r13	; 0x05
     eb6:	c4 82       	std	Z+4, r12	; 0x04
     eb8:	96 83       	std	Z+6, r25	; 0x06
     eba:	10 86       	std	Z+8, r1	; 0x08
     ebc:	17 82       	std	Z+7, r1	; 0x07
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	49 2d       	mov	r20, r9
     ec2:	c7 2e       	mov	r12, r23
     ec4:	aa 24       	eor	r10, r10
     ec6:	bb 24       	eor	r11, r11
     ec8:	0e 94 19 06 	call	0xc32	; 0xc32 <STEPPER_stepmode>
     ecc:	8d b7       	in	r24, 0x3d	; 61
     ece:	9e b7       	in	r25, 0x3e	; 62
     ed0:	09 96       	adiw	r24, 0x09	; 9
     ed2:	0f b6       	in	r0, 0x3f	; 63
     ed4:	f8 94       	cli
     ed6:	9e bf       	out	0x3e, r25	; 62
     ed8:	0f be       	out	0x3f, r0	; 63
     eda:	8d bf       	out	0x3d, r24	; 61
     edc:	cf 91       	pop	r28
     ede:	df 91       	pop	r29
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	ff 90       	pop	r15
     ee6:	ef 90       	pop	r14
     ee8:	df 90       	pop	r13
     eea:	cf 90       	pop	r12
     eec:	bf 90       	pop	r11
     eee:	af 90       	pop	r10
     ef0:	9f 90       	pop	r9
     ef2:	8f 90       	pop	r8
     ef4:	7f 90       	pop	r7
     ef6:	6f 90       	pop	r6
     ef8:	08 95       	ret

00000efa <STEPPER_open>:
     efa:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <__STEPPER_init>
     efe:	81 e0       	ldi	r24, 0x01	; 1
     f00:	80 93 51 04 	sts	0x0451, r24
     f04:	eb e1       	ldi	r30, 0x1B	; 27
     f06:	f4 e0       	ldi	r31, 0x04	; 4
     f08:	11 92       	st	Z+, r1
     f0a:	11 92       	st	Z+, r1
     f0c:	11 82       	std	Z+1, r1	; 0x01
     f0e:	10 82       	st	Z, r1
     f10:	32 96       	adiw	r30, 0x02	; 2
     f12:	11 82       	std	Z+1, r1	; 0x01
     f14:	10 82       	st	Z, r1
     f16:	32 96       	adiw	r30, 0x02	; 2
     f18:	11 82       	std	Z+1, r1	; 0x01
     f1a:	10 82       	st	Z, r1
     f1c:	32 96       	adiw	r30, 0x02	; 2
     f1e:	11 82       	std	Z+1, r1	; 0x01
     f20:	10 82       	st	Z, r1
     f22:	32 96       	adiw	r30, 0x02	; 2
     f24:	11 82       	std	Z+1, r1	; 0x01
     f26:	10 82       	st	Z, r1
     f28:	32 96       	adiw	r30, 0x02	; 2
     f2a:	11 82       	std	Z+1, r1	; 0x01
     f2c:	10 82       	st	Z, r1
     f2e:	32 96       	adiw	r30, 0x02	; 2
     f30:	11 82       	std	Z+1, r1	; 0x01
     f32:	10 82       	st	Z, r1
     f34:	32 96       	adiw	r30, 0x02	; 2
     f36:	11 82       	std	Z+1, r1	; 0x01
     f38:	10 82       	st	Z, r1
     f3a:	32 96       	adiw	r30, 0x02	; 2
     f3c:	11 82       	std	Z+1, r1	; 0x01
     f3e:	10 82       	st	Z, r1
     f40:	32 96       	adiw	r30, 0x02	; 2
     f42:	11 82       	std	Z+1, r1	; 0x01
     f44:	10 82       	st	Z, r1
     f46:	32 96       	adiw	r30, 0x02	; 2
     f48:	11 82       	std	Z+1, r1	; 0x01
     f4a:	10 82       	st	Z, r1
     f4c:	32 96       	adiw	r30, 0x02	; 2
     f4e:	11 82       	std	Z+1, r1	; 0x01
     f50:	10 82       	st	Z, r1
     f52:	36 96       	adiw	r30, 0x06	; 6
     f54:	11 92       	st	Z+, r1
     f56:	11 92       	st	Z+, r1
     f58:	11 92       	st	Z+, r1
     f5a:	10 82       	st	Z, r1
     f5c:	32 96       	adiw	r30, 0x02	; 2
     f5e:	11 92       	st	Z+, r1
     f60:	11 92       	st	Z+, r1
     f62:	11 92       	st	Z+, r1
     f64:	11 92       	st	Z+, r1
     f66:	11 92       	st	Z+, r1
     f68:	11 92       	st	Z+, r1
     f6a:	11 92       	st	Z+, r1
     f6c:	11 82       	std	Z+1, r1	; 0x01
     f6e:	10 82       	st	Z, r1
     f70:	32 96       	adiw	r30, 0x02	; 2
     f72:	11 82       	std	Z+1, r1	; 0x01
     f74:	10 82       	st	Z, r1
     f76:	32 96       	adiw	r30, 0x02	; 2
     f78:	11 82       	std	Z+1, r1	; 0x01
     f7a:	10 82       	st	Z, r1
     f7c:	32 96       	adiw	r30, 0x02	; 2
     f7e:	11 82       	std	Z+1, r1	; 0x01
     f80:	10 82       	st	Z, r1
     f82:	76 97       	sbiw	r30, 0x16	; 22
     f84:	11 82       	std	Z+1, r1	; 0x01
     f86:	10 82       	st	Z, r1
     f88:	32 96       	adiw	r30, 0x02	; 2
     f8a:	11 82       	std	Z+1, r1	; 0x01
     f8c:	10 82       	st	Z, r1
     f8e:	10 92 50 04 	sts	0x0450, r1
     f92:	10 92 4f 04 	sts	0x044F, r1
     f96:	10 92 51 04 	sts	0x0451, r1
     f9a:	87 e0       	ldi	r24, 0x07	; 7
     f9c:	61 e0       	ldi	r22, 0x01	; 1
     f9e:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
     fa2:	87 e0       	ldi	r24, 0x07	; 7
     fa4:	91 e0       	ldi	r25, 0x01	; 1
     fa6:	08 95       	ret

00000fa8 <STEPPER_run>:
     fa8:	ef 92       	push	r14
     faa:	ff 92       	push	r15
     fac:	0f 93       	push	r16
     fae:	1f 93       	push	r17
     fb0:	18 2f       	mov	r17, r24
     fb2:	06 2f       	mov	r16, r22
     fb4:	7a 01       	movw	r14, r20
     fb6:	60 e0       	ldi	r22, 0x00	; 0
     fb8:	0e 94 22 08 	call	0x1044	; 0x1044 <STEPPER_set_mode>
     fbc:	81 2f       	mov	r24, r17
     fbe:	60 2f       	mov	r22, r16
     fc0:	0e 94 0d 08 	call	0x101a	; 0x101a <STEPPER_set_dir>
     fc4:	81 2f       	mov	r24, r17
     fc6:	b7 01       	movw	r22, r14
     fc8:	0e 94 37 08 	call	0x106e	; 0x106e <STEPPER_set_speed>
     fcc:	1f 91       	pop	r17
     fce:	0f 91       	pop	r16
     fd0:	ff 90       	pop	r15
     fd2:	ef 90       	pop	r14
     fd4:	08 95       	ret

00000fd6 <STEPPER_set_accel>:
     fd6:	48 2f       	mov	r20, r24
     fd8:	81 e0       	ldi	r24, 0x01	; 1
     fda:	80 93 51 04 	sts	0x0451, r24
     fde:	cb 01       	movw	r24, r22
     fe0:	23 e0       	ldi	r18, 0x03	; 3
     fe2:	69 3e       	cpi	r22, 0xE9	; 233
     fe4:	72 07       	cpc	r23, r18
     fe6:	10 f0       	brcs	.+4      	; 0xfec <STEPPER_set_accel+0x16>
     fe8:	88 ee       	ldi	r24, 0xE8	; 232
     fea:	93 e0       	ldi	r25, 0x03	; 3
     fec:	41 30       	cpi	r20, 0x01	; 1
     fee:	71 f0       	breq	.+28     	; 0x100c <STEPPER_set_accel+0x36>
     ff0:	41 30       	cpi	r20, 0x01	; 1
     ff2:	18 f0       	brcs	.+6      	; 0xffa <STEPPER_set_accel+0x24>
     ff4:	42 30       	cpi	r20, 0x02	; 2
     ff6:	71 f4       	brne	.+28     	; 0x1014 <STEPPER_set_accel+0x3e>
     ff8:	05 c0       	rjmp	.+10     	; 0x1004 <STEPPER_set_accel+0x2e>
     ffa:	90 93 26 04 	sts	0x0426, r25
     ffe:	80 93 25 04 	sts	0x0425, r24
    1002:	08 c0       	rjmp	.+16     	; 0x1014 <STEPPER_set_accel+0x3e>
    1004:	90 93 26 04 	sts	0x0426, r25
    1008:	80 93 25 04 	sts	0x0425, r24
    100c:	90 93 28 04 	sts	0x0428, r25
    1010:	80 93 27 04 	sts	0x0427, r24
    1014:	10 92 51 04 	sts	0x0451, r1
    1018:	08 95       	ret

0000101a <STEPPER_set_dir>:
    101a:	98 2f       	mov	r25, r24
    101c:	81 e0       	ldi	r24, 0x01	; 1
    101e:	80 93 51 04 	sts	0x0451, r24
    1022:	91 30       	cpi	r25, 0x01	; 1
    1024:	51 f0       	breq	.+20     	; 0x103a <STEPPER_set_dir+0x20>
    1026:	91 30       	cpi	r25, 0x01	; 1
    1028:	18 f0       	brcs	.+6      	; 0x1030 <STEPPER_set_dir+0x16>
    102a:	92 30       	cpi	r25, 0x02	; 2
    102c:	41 f4       	brne	.+16     	; 0x103e <STEPPER_set_dir+0x24>
    102e:	03 c0       	rjmp	.+6      	; 0x1036 <STEPPER_set_dir+0x1c>
    1030:	60 93 3e 04 	sts	0x043E, r22
    1034:	04 c0       	rjmp	.+8      	; 0x103e <STEPPER_set_dir+0x24>
    1036:	60 93 3e 04 	sts	0x043E, r22
    103a:	60 93 3f 04 	sts	0x043F, r22
    103e:	10 92 51 04 	sts	0x0451, r1
    1042:	08 95       	ret

00001044 <STEPPER_set_mode>:
    1044:	98 2f       	mov	r25, r24
    1046:	81 e0       	ldi	r24, 0x01	; 1
    1048:	80 93 51 04 	sts	0x0451, r24
    104c:	91 30       	cpi	r25, 0x01	; 1
    104e:	51 f0       	breq	.+20     	; 0x1064 <STEPPER_set_mode+0x20>
    1050:	91 30       	cpi	r25, 0x01	; 1
    1052:	18 f0       	brcs	.+6      	; 0x105a <STEPPER_set_mode+0x16>
    1054:	92 30       	cpi	r25, 0x02	; 2
    1056:	41 f4       	brne	.+16     	; 0x1068 <STEPPER_set_mode+0x24>
    1058:	03 c0       	rjmp	.+6      	; 0x1060 <STEPPER_set_mode+0x1c>
    105a:	60 93 1b 04 	sts	0x041B, r22
    105e:	04 c0       	rjmp	.+8      	; 0x1068 <STEPPER_set_mode+0x24>
    1060:	60 93 1b 04 	sts	0x041B, r22
    1064:	60 93 1c 04 	sts	0x041C, r22
    1068:	10 92 51 04 	sts	0x0451, r1
    106c:	08 95       	ret

0000106e <STEPPER_set_speed>:
    106e:	48 2f       	mov	r20, r24
    1070:	81 e0       	ldi	r24, 0x01	; 1
    1072:	80 93 51 04 	sts	0x0451, r24
    1076:	cb 01       	movw	r24, r22
    1078:	21 e0       	ldi	r18, 0x01	; 1
    107a:	61 39       	cpi	r22, 0x91	; 145
    107c:	72 07       	cpc	r23, r18
    107e:	10 f0       	brcs	.+4      	; 0x1084 <STEPPER_set_speed+0x16>
    1080:	80 e9       	ldi	r24, 0x90	; 144
    1082:	91 e0       	ldi	r25, 0x01	; 1
    1084:	41 30       	cpi	r20, 0x01	; 1
    1086:	71 f0       	breq	.+28     	; 0x10a4 <STEPPER_set_speed+0x36>
    1088:	41 30       	cpi	r20, 0x01	; 1
    108a:	18 f0       	brcs	.+6      	; 0x1092 <STEPPER_set_speed+0x24>
    108c:	42 30       	cpi	r20, 0x02	; 2
    108e:	71 f4       	brne	.+28     	; 0x10ac <STEPPER_set_speed+0x3e>
    1090:	05 c0       	rjmp	.+10     	; 0x109c <STEPPER_set_speed+0x2e>
    1092:	90 93 1e 04 	sts	0x041E, r25
    1096:	80 93 1d 04 	sts	0x041D, r24
    109a:	08 c0       	rjmp	.+16     	; 0x10ac <STEPPER_set_speed+0x3e>
    109c:	90 93 1e 04 	sts	0x041E, r25
    10a0:	80 93 1d 04 	sts	0x041D, r24
    10a4:	90 93 20 04 	sts	0x0420, r25
    10a8:	80 93 1f 04 	sts	0x041F, r24
    10ac:	10 92 51 04 	sts	0x0451, r1
    10b0:	08 95       	ret

000010b2 <STEPPER_step>:
    10b2:	8f 92       	push	r8
    10b4:	9f 92       	push	r9
    10b6:	af 92       	push	r10
    10b8:	bf 92       	push	r11
    10ba:	cf 92       	push	r12
    10bc:	df 92       	push	r13
    10be:	ef 92       	push	r14
    10c0:	ff 92       	push	r15
    10c2:	0f 93       	push	r16
    10c4:	1f 93       	push	r17
    10c6:	cf 93       	push	r28
    10c8:	df 93       	push	r29
    10ca:	18 2f       	mov	r17, r24
    10cc:	f6 2e       	mov	r15, r22
    10ce:	5a 01       	movw	r10, r20
    10d0:	49 01       	movw	r8, r18
    10d2:	e6 01       	movw	r28, r12
    10d4:	61 e0       	ldi	r22, 0x01	; 1
    10d6:	0e 94 22 08 	call	0x1044	; 0x1044 <STEPPER_set_mode>
    10da:	81 2f       	mov	r24, r17
    10dc:	b5 01       	movw	r22, r10
    10de:	a4 01       	movw	r20, r8
    10e0:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <STEPPER_setup_decels>
    10e4:	81 2f       	mov	r24, r17
    10e6:	6f 2d       	mov	r22, r15
    10e8:	0e 94 0d 08 	call	0x101a	; 0x101a <STEPPER_set_dir>
    10ec:	81 2f       	mov	r24, r17
    10ee:	60 2f       	mov	r22, r16
    10f0:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <STEPPER_set_stop_mode>
    10f4:	81 2f       	mov	r24, r17
    10f6:	b5 01       	movw	r22, r10
    10f8:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <STEPPER_set_steps>
    10fc:	c1 14       	cp	r12, r1
    10fe:	d1 04       	cpc	r13, r1
    1100:	99 f0       	breq	.+38     	; 0x1128 <STEPPER_step+0x76>
    1102:	11 30       	cpi	r17, 0x01	; 1
    1104:	49 f0       	breq	.+18     	; 0x1118 <STEPPER_step+0x66>
    1106:	11 30       	cpi	r17, 0x01	; 1
    1108:	18 f0       	brcs	.+6      	; 0x1110 <STEPPER_step+0x5e>
    110a:	12 30       	cpi	r17, 0x02	; 2
    110c:	69 f4       	brne	.+26     	; 0x1128 <STEPPER_step+0x76>
    110e:	06 c0       	rjmp	.+12     	; 0x111c <STEPPER_step+0x6a>
    1110:	18 82       	st	Y, r1
    1112:	10 92 4d 04 	sts	0x044D, r1
    1116:	08 c0       	rjmp	.+16     	; 0x1128 <STEPPER_step+0x76>
    1118:	19 82       	std	Y+1, r1	; 0x01
    111a:	04 c0       	rjmp	.+8      	; 0x1124 <STEPPER_step+0x72>
    111c:	18 82       	st	Y, r1
    111e:	19 82       	std	Y+1, r1	; 0x01
    1120:	10 92 4d 04 	sts	0x044D, r1
    1124:	10 92 4e 04 	sts	0x044E, r1
    1128:	d0 93 50 04 	sts	0x0450, r29
    112c:	c0 93 4f 04 	sts	0x044F, r28
    1130:	ee 20       	and	r14, r14
    1132:	b9 f5       	brne	.+110    	; 0x11a2 <STEPPER_step+0xf0>
    1134:	8c e9       	ldi	r24, 0x9C	; 156
    1136:	93 e0       	ldi	r25, 0x03	; 3
    1138:	90 93 50 04 	sts	0x0450, r25
    113c:	80 93 4f 04 	sts	0x044F, r24
    1140:	81 2f       	mov	r24, r17
    1142:	b4 01       	movw	r22, r8
    1144:	0e 94 37 08 	call	0x106e	; 0x106e <STEPPER_set_speed>
    1148:	81 2f       	mov	r24, r17
    114a:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <STEPPER_go>
    114e:	11 30       	cpi	r17, 0x01	; 1
    1150:	71 f0       	breq	.+28     	; 0x116e <STEPPER_step+0xbc>
    1152:	11 30       	cpi	r17, 0x01	; 1
    1154:	18 f0       	brcs	.+6      	; 0x115c <STEPPER_step+0xaa>
    1156:	12 30       	cpi	r17, 0x02	; 2
    1158:	59 f5       	brne	.+86     	; 0x11b0 <STEPPER_step+0xfe>
    115a:	12 c0       	rjmp	.+36     	; 0x1180 <STEPPER_step+0xce>
    115c:	10 92 9c 03 	sts	0x039C, r1
    1160:	10 92 4d 04 	sts	0x044D, r1
    1164:	80 91 9c 03 	lds	r24, 0x039C
    1168:	88 23       	and	r24, r24
    116a:	e1 f3       	breq	.-8      	; 0x1164 <STEPPER_step+0xb2>
    116c:	21 c0       	rjmp	.+66     	; 0x11b0 <STEPPER_step+0xfe>
    116e:	10 92 9d 03 	sts	0x039D, r1
    1172:	10 92 4e 04 	sts	0x044E, r1
    1176:	80 91 9d 03 	lds	r24, 0x039D
    117a:	88 23       	and	r24, r24
    117c:	e1 f3       	breq	.-8      	; 0x1176 <STEPPER_step+0xc4>
    117e:	18 c0       	rjmp	.+48     	; 0x11b0 <STEPPER_step+0xfe>
    1180:	10 92 9c 03 	sts	0x039C, r1
    1184:	10 92 9d 03 	sts	0x039D, r1
    1188:	10 92 4d 04 	sts	0x044D, r1
    118c:	10 92 4e 04 	sts	0x044E, r1
    1190:	80 91 9c 03 	lds	r24, 0x039C
    1194:	88 23       	and	r24, r24
    1196:	e1 f3       	breq	.-8      	; 0x1190 <STEPPER_step+0xde>
    1198:	80 91 9d 03 	lds	r24, 0x039D
    119c:	88 23       	and	r24, r24
    119e:	c1 f3       	breq	.-16     	; 0x1190 <STEPPER_step+0xde>
    11a0:	07 c0       	rjmp	.+14     	; 0x11b0 <STEPPER_step+0xfe>
    11a2:	81 2f       	mov	r24, r17
    11a4:	b4 01       	movw	r22, r8
    11a6:	0e 94 37 08 	call	0x106e	; 0x106e <STEPPER_set_speed>
    11aa:	81 2f       	mov	r24, r17
    11ac:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <STEPPER_go>
    11b0:	df 91       	pop	r29
    11b2:	cf 91       	pop	r28
    11b4:	1f 91       	pop	r17
    11b6:	0f 91       	pop	r16
    11b8:	ff 90       	pop	r15
    11ba:	ef 90       	pop	r14
    11bc:	df 90       	pop	r13
    11be:	cf 90       	pop	r12
    11c0:	bf 90       	pop	r11
    11c2:	af 90       	pop	r10
    11c4:	9f 90       	pop	r9
    11c6:	8f 90       	pop	r8
    11c8:	08 95       	ret

000011ca <STEPPER_stop>:
    11ca:	0f 93       	push	r16
    11cc:	1f 93       	push	r17
    11ce:	18 2f       	mov	r17, r24
    11d0:	06 2f       	mov	r16, r22
    11d2:	66 23       	and	r22, r22
    11d4:	49 f4       	brne	.+18     	; 0x11e8 <STEPPER_stop+0x1e>
    11d6:	60 e0       	ldi	r22, 0x00	; 0
    11d8:	70 e0       	ldi	r23, 0x00	; 0
    11da:	0e 94 37 08 	call	0x106e	; 0x106e <STEPPER_set_speed>
    11de:	81 2f       	mov	r24, r17
    11e0:	60 e0       	ldi	r22, 0x00	; 0
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <STEPPER_set_steps>
    11e8:	81 e0       	ldi	r24, 0x01	; 1
    11ea:	80 93 51 04 	sts	0x0451, r24
    11ee:	11 30       	cpi	r17, 0x01	; 1
    11f0:	51 f0       	breq	.+20     	; 0x1206 <STEPPER_stop+0x3c>
    11f2:	11 30       	cpi	r17, 0x01	; 1
    11f4:	18 f0       	brcs	.+6      	; 0x11fc <STEPPER_stop+0x32>
    11f6:	12 30       	cpi	r17, 0x02	; 2
    11f8:	41 f4       	brne	.+16     	; 0x120a <STEPPER_stop+0x40>
    11fa:	03 c0       	rjmp	.+6      	; 0x1202 <STEPPER_stop+0x38>
    11fc:	00 93 39 04 	sts	0x0439, r16
    1200:	04 c0       	rjmp	.+8      	; 0x120a <STEPPER_stop+0x40>
    1202:	00 93 39 04 	sts	0x0439, r16
    1206:	00 93 3a 04 	sts	0x043A, r16
    120a:	10 92 51 04 	sts	0x0451, r1
    120e:	1f 91       	pop	r17
    1210:	0f 91       	pop	r16
    1212:	08 95       	ret

00001214 <STEPPER_wait_and_then>:
    1214:	cf 92       	push	r12
    1216:	df 92       	push	r13
    1218:	ef 92       	push	r14
    121a:	ff 92       	push	r15
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	df 93       	push	r29
    1222:	cf 93       	push	r28
    1224:	cd b7       	in	r28, 0x3d	; 61
    1226:	de b7       	in	r29, 0x3e	; 62
    1228:	8b 85       	ldd	r24, Y+11	; 0x0b
    122a:	81 30       	cpi	r24, 0x01	; 1
    122c:	61 f0       	breq	.+24     	; 0x1246 <STEPPER_wait_and_then+0x32>
    122e:	81 30       	cpi	r24, 0x01	; 1
    1230:	18 f0       	brcs	.+6      	; 0x1238 <STEPPER_wait_and_then+0x24>
    1232:	82 30       	cpi	r24, 0x02	; 2
    1234:	a1 f5       	brne	.+104    	; 0x129e <STEPPER_wait_and_then+0x8a>
    1236:	11 c0       	rjmp	.+34     	; 0x125a <STEPPER_wait_and_then+0x46>
    1238:	ec 85       	ldd	r30, Y+12	; 0x0c
    123a:	fd 85       	ldd	r31, Y+13	; 0x0d
    123c:	80 91 52 04 	lds	r24, 0x0452
    1240:	88 23       	and	r24, r24
    1242:	e1 f3       	breq	.-8      	; 0x123c <STEPPER_wait_and_then+0x28>
    1244:	06 c0       	rjmp	.+12     	; 0x1252 <STEPPER_wait_and_then+0x3e>
    1246:	ec 85       	ldd	r30, Y+12	; 0x0c
    1248:	fd 85       	ldd	r31, Y+13	; 0x0d
    124a:	80 91 53 04 	lds	r24, 0x0453
    124e:	88 23       	and	r24, r24
    1250:	e1 f3       	breq	.-8      	; 0x124a <STEPPER_wait_and_then+0x36>
    1252:	30 97       	sbiw	r30, 0x00	; 0
    1254:	21 f1       	breq	.+72     	; 0x129e <STEPPER_wait_and_then+0x8a>
    1256:	09 95       	icall
    1258:	22 c0       	rjmp	.+68     	; 0x129e <STEPPER_wait_and_then+0x8a>
    125a:	cc 84       	ldd	r12, Y+12	; 0x0c
    125c:	dd 84       	ldd	r13, Y+13	; 0x0d
    125e:	ee 84       	ldd	r14, Y+14	; 0x0e
    1260:	ff 84       	ldd	r15, Y+15	; 0x0f
    1262:	00 e0       	ldi	r16, 0x00	; 0
    1264:	10 e0       	ldi	r17, 0x00	; 0
    1266:	00 23       	and	r16, r16
    1268:	51 f4       	brne	.+20     	; 0x127e <STEPPER_wait_and_then+0x6a>
    126a:	80 91 52 04 	lds	r24, 0x0452
    126e:	88 23       	and	r24, r24
    1270:	31 f0       	breq	.+12     	; 0x127e <STEPPER_wait_and_then+0x6a>
    1272:	c1 14       	cp	r12, r1
    1274:	d1 04       	cpc	r13, r1
    1276:	11 f0       	breq	.+4      	; 0x127c <STEPPER_wait_and_then+0x68>
    1278:	f6 01       	movw	r30, r12
    127a:	09 95       	icall
    127c:	01 e0       	ldi	r16, 0x01	; 1
    127e:	11 23       	and	r17, r17
    1280:	51 f4       	brne	.+20     	; 0x1296 <STEPPER_wait_and_then+0x82>
    1282:	80 91 53 04 	lds	r24, 0x0453
    1286:	88 23       	and	r24, r24
    1288:	31 f0       	breq	.+12     	; 0x1296 <STEPPER_wait_and_then+0x82>
    128a:	e1 14       	cp	r14, r1
    128c:	f1 04       	cpc	r15, r1
    128e:	11 f0       	breq	.+4      	; 0x1294 <STEPPER_wait_and_then+0x80>
    1290:	f7 01       	movw	r30, r14
    1292:	09 95       	icall
    1294:	11 e0       	ldi	r17, 0x01	; 1
    1296:	00 23       	and	r16, r16
    1298:	31 f3       	breq	.-52     	; 0x1266 <STEPPER_wait_and_then+0x52>
    129a:	11 23       	and	r17, r17
    129c:	21 f3       	breq	.-56     	; 0x1266 <STEPPER_wait_and_then+0x52>
    129e:	cf 91       	pop	r28
    12a0:	df 91       	pop	r29
    12a2:	1f 91       	pop	r17
    12a4:	0f 91       	pop	r16
    12a6:	ff 90       	pop	r15
    12a8:	ef 90       	pop	r14
    12aa:	df 90       	pop	r13
    12ac:	cf 90       	pop	r12
    12ae:	08 95       	ret

000012b0 <SYS_get_state>:
    12b0:	e8 2f       	mov	r30, r24
    12b2:	f0 e0       	ldi	r31, 0x00	; 0
    12b4:	e3 31       	cpi	r30, 0x13	; 19
    12b6:	f1 05       	cpc	r31, r1
    12b8:	40 f4       	brcc	.+16     	; 0x12ca <SYS_get_state+0x1a>
    12ba:	e2 5c       	subi	r30, 0xC2	; 194
    12bc:	ff 4f       	sbci	r31, 0xFF	; 255
    12be:	ee 0f       	add	r30, r30
    12c0:	ff 1f       	adc	r31, r31
    12c2:	05 90       	lpm	r0, Z+
    12c4:	f4 91       	lpm	r31, Z
    12c6:	e0 2d       	mov	r30, r0
    12c8:	09 94       	ijmp
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	08 95       	ret
    12ce:	80 91 54 04 	lds	r24, 0x0454
    12d2:	08 95       	ret
    12d4:	80 91 55 04 	lds	r24, 0x0455
    12d8:	08 95       	ret
    12da:	80 91 56 04 	lds	r24, 0x0456
    12de:	08 95       	ret
    12e0:	80 91 57 04 	lds	r24, 0x0457
    12e4:	08 95       	ret
    12e6:	80 91 58 04 	lds	r24, 0x0458
    12ea:	08 95       	ret
    12ec:	80 91 5a 04 	lds	r24, 0x045A
    12f0:	08 95       	ret
    12f2:	80 91 59 04 	lds	r24, 0x0459
    12f6:	08 95       	ret
    12f8:	80 91 5b 04 	lds	r24, 0x045B
    12fc:	08 95       	ret
    12fe:	80 91 5c 04 	lds	r24, 0x045C
    1302:	08 95       	ret
    1304:	80 91 5d 04 	lds	r24, 0x045D
    1308:	08 95       	ret
    130a:	80 91 5e 04 	lds	r24, 0x045E
    130e:	08 95       	ret
    1310:	80 91 5f 04 	lds	r24, 0x045F
    1314:	08 95       	ret
    1316:	80 91 60 04 	lds	r24, 0x0460
    131a:	08 95       	ret
    131c:	80 91 61 04 	lds	r24, 0x0461
    1320:	08 95       	ret
    1322:	80 91 62 04 	lds	r24, 0x0462
    1326:	08 95       	ret
    1328:	80 91 63 04 	lds	r24, 0x0463
    132c:	08 95       	ret
    132e:	80 91 64 04 	lds	r24, 0x0464
    1332:	08 95       	ret
    1334:	80 91 65 04 	lds	r24, 0x0465
    1338:	08 95       	ret
    133a:	80 91 66 04 	lds	r24, 0x0466
    133e:	08 95       	ret

00001340 <SYS_set_state>:
    1340:	e8 2f       	mov	r30, r24
    1342:	f0 e0       	ldi	r31, 0x00	; 0
    1344:	e3 31       	cpi	r30, 0x13	; 19
    1346:	f1 05       	cpc	r31, r1
    1348:	08 f0       	brcs	.+2      	; 0x134c <SYS_set_state+0xc>
    134a:	40 c0       	rjmp	.+128    	; 0x13cc <SYS_set_state+0x8c>
    134c:	ef 5a       	subi	r30, 0xAF	; 175
    134e:	ff 4f       	sbci	r31, 0xFF	; 255
    1350:	ee 0f       	add	r30, r30
    1352:	ff 1f       	adc	r31, r31
    1354:	05 90       	lpm	r0, Z+
    1356:	f4 91       	lpm	r31, Z
    1358:	e0 2d       	mov	r30, r0
    135a:	09 94       	ijmp
    135c:	60 93 54 04 	sts	0x0454, r22
    1360:	08 95       	ret
    1362:	60 93 55 04 	sts	0x0455, r22
    1366:	08 95       	ret
    1368:	60 93 56 04 	sts	0x0456, r22
    136c:	08 95       	ret
    136e:	60 93 57 04 	sts	0x0457, r22
    1372:	08 95       	ret
    1374:	60 93 58 04 	sts	0x0458, r22
    1378:	08 95       	ret
    137a:	60 93 5a 04 	sts	0x045A, r22
    137e:	08 95       	ret
    1380:	60 93 59 04 	sts	0x0459, r22
    1384:	08 95       	ret
    1386:	60 93 5b 04 	sts	0x045B, r22
    138a:	08 95       	ret
    138c:	60 93 5c 04 	sts	0x045C, r22
    1390:	08 95       	ret
    1392:	60 93 5d 04 	sts	0x045D, r22
    1396:	08 95       	ret
    1398:	60 93 5e 04 	sts	0x045E, r22
    139c:	08 95       	ret
    139e:	60 93 5f 04 	sts	0x045F, r22
    13a2:	08 95       	ret
    13a4:	60 93 60 04 	sts	0x0460, r22
    13a8:	08 95       	ret
    13aa:	60 93 61 04 	sts	0x0461, r22
    13ae:	08 95       	ret
    13b0:	60 93 62 04 	sts	0x0462, r22
    13b4:	08 95       	ret
    13b6:	60 93 63 04 	sts	0x0463, r22
    13ba:	08 95       	ret
    13bc:	60 93 64 04 	sts	0x0464, r22
    13c0:	08 95       	ret
    13c2:	60 93 65 04 	sts	0x0465, r22
    13c6:	08 95       	ret
    13c8:	60 93 64 04 	sts	0x0464, r22
    13cc:	08 95       	ret

000013ce <ATTINY_get_SW_state>:
    13ce:	1f 93       	push	r17
    13d0:	cf 93       	push	r28
    13d2:	df 93       	push	r29
    13d4:	18 2f       	mov	r17, r24
    13d6:	80 91 9f 03 	lds	r24, 0x039F
    13da:	88 23       	and	r24, r24
    13dc:	41 f0       	breq	.+16     	; 0x13ee <ATTINY_get_SW_state+0x20>
    13de:	80 91 a9 03 	lds	r24, 0x03A9
    13e2:	88 23       	and	r24, r24
    13e4:	99 f0       	breq	.+38     	; 0x140c <ATTINY_get_SW_state+0x3e>
    13e6:	10 92 9f 03 	sts	0x039F, r1
    13ea:	10 92 a9 03 	sts	0x03A9, r1
    13ee:	0e 94 37 10 	call	0x206e	; 0x206e <ATTINY_get_sensors>
    13f2:	80 93 9e 03 	sts	0x039E, r24
    13f6:	83 ea       	ldi	r24, 0xA3	; 163
    13f8:	93 e0       	ldi	r25, 0x03	; 3
    13fa:	61 e0       	ldi	r22, 0x01	; 1
    13fc:	40 e0       	ldi	r20, 0x00	; 0
    13fe:	22 e3       	ldi	r18, 0x32	; 50
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	0e 94 a5 0a 	call	0x154a	; 0x154a <TMRSRVC_new>
    1406:	81 e0       	ldi	r24, 0x01	; 1
    1408:	80 93 9f 03 	sts	0x039F, r24
    140c:	90 91 9e 03 	lds	r25, 0x039E
    1410:	a1 2f       	mov	r26, r17
    1412:	b0 e0       	ldi	r27, 0x00	; 0
    1414:	ed 01       	movw	r28, r26
    1416:	c7 5f       	subi	r28, 0xF7	; 247
    1418:	de 4f       	sbci	r29, 0xFE	; 254
    141a:	88 81       	ld	r24, Y
    141c:	88 23       	and	r24, r24
    141e:	69 f0       	breq	.+26     	; 0x143a <ATTINY_get_SW_state+0x6c>
    1420:	fd 01       	movw	r30, r26
    1422:	e4 5f       	subi	r30, 0xF4	; 244
    1424:	fe 4f       	sbci	r31, 0xFE	; 254
    1426:	80 81       	ld	r24, Z
    1428:	98 23       	and	r25, r24
    142a:	c1 f0       	breq	.+48     	; 0x145c <ATTINY_get_SW_state+0x8e>
    142c:	fd 01       	movw	r30, r26
    142e:	e0 56       	subi	r30, 0x60	; 96
    1430:	fc 4f       	sbci	r31, 0xFC	; 252
    1432:	81 e0       	ldi	r24, 0x01	; 1
    1434:	80 83       	st	Z, r24
    1436:	18 82       	st	Y, r1
    1438:	11 c0       	rjmp	.+34     	; 0x145c <ATTINY_get_SW_state+0x8e>
    143a:	fd 01       	movw	r30, r26
    143c:	e0 56       	subi	r30, 0x60	; 96
    143e:	fc 4f       	sbci	r31, 0xFC	; 252
    1440:	80 81       	ld	r24, Z
    1442:	81 11       	cpse	r24, r1
    1444:	10 82       	st	Z, r1
    1446:	fd 01       	movw	r30, r26
    1448:	e4 5f       	subi	r30, 0xF4	; 244
    144a:	fe 4f       	sbci	r31, 0xFE	; 254
    144c:	80 81       	ld	r24, Z
    144e:	98 23       	and	r25, r24
    1450:	29 f4       	brne	.+10     	; 0x145c <ATTINY_get_SW_state+0x8e>
    1452:	fd 01       	movw	r30, r26
    1454:	e7 5f       	subi	r30, 0xF7	; 247
    1456:	fe 4f       	sbci	r31, 0xFE	; 254
    1458:	81 e0       	ldi	r24, 0x01	; 1
    145a:	80 83       	st	Z, r24
    145c:	a0 56       	subi	r26, 0x60	; 96
    145e:	bc 4f       	sbci	r27, 0xFC	; 252
    1460:	8c 91       	ld	r24, X
    1462:	df 91       	pop	r29
    1464:	cf 91       	pop	r28
    1466:	1f 91       	pop	r17
    1468:	08 95       	ret

0000146a <ATTINY_open>:
    146a:	82 e0       	ldi	r24, 0x02	; 2
    146c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    1470:	88 23       	and	r24, r24
    1472:	19 f4       	brne	.+6      	; 0x147a <ATTINY_open+0x10>
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	82 e0       	ldi	r24, 0x02	; 2
    1478:	08 95       	ret
    147a:	10 92 82 04 	sts	0x0482, r1
    147e:	10 92 81 04 	sts	0x0481, r1
    1482:	10 92 84 04 	sts	0x0484, r1
    1486:	10 92 83 04 	sts	0x0483, r1
    148a:	10 92 86 04 	sts	0x0486, r1
    148e:	10 92 85 04 	sts	0x0485, r1
    1492:	10 92 88 04 	sts	0x0488, r1
    1496:	10 92 87 04 	sts	0x0487, r1
    149a:	10 92 8a 04 	sts	0x048A, r1
    149e:	10 92 89 04 	sts	0x0489, r1
    14a2:	80 e9       	ldi	r24, 0x90	; 144
    14a4:	91 e0       	ldi	r25, 0x01	; 1
    14a6:	90 93 6e 04 	sts	0x046E, r25
    14aa:	80 93 6d 04 	sts	0x046D, r24
    14ae:	90 93 70 04 	sts	0x0470, r25
    14b2:	80 93 6f 04 	sts	0x046F, r24
    14b6:	90 93 72 04 	sts	0x0472, r25
    14ba:	80 93 71 04 	sts	0x0471, r24
    14be:	90 93 74 04 	sts	0x0474, r25
    14c2:	80 93 73 04 	sts	0x0473, r24
    14c6:	90 93 76 04 	sts	0x0476, r25
    14ca:	80 93 75 04 	sts	0x0475, r24
    14ce:	84 e3       	ldi	r24, 0x34	; 52
    14d0:	98 e0       	ldi	r25, 0x08	; 8
    14d2:	90 93 78 04 	sts	0x0478, r25
    14d6:	80 93 77 04 	sts	0x0477, r24
    14da:	90 93 7a 04 	sts	0x047A, r25
    14de:	80 93 79 04 	sts	0x0479, r24
    14e2:	90 93 7c 04 	sts	0x047C, r25
    14e6:	80 93 7b 04 	sts	0x047B, r24
    14ea:	90 93 7e 04 	sts	0x047E, r25
    14ee:	80 93 7d 04 	sts	0x047D, r24
    14f2:	90 93 80 04 	sts	0x0480, r25
    14f6:	80 93 7f 04 	sts	0x047F, r24
    14fa:	81 e0       	ldi	r24, 0x01	; 1
    14fc:	61 e0       	ldi	r22, 0x01	; 1
    14fe:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
    1502:	91 e0       	ldi	r25, 0x01	; 1
    1504:	81 e0       	ldi	r24, 0x01	; 1
    1506:	08 95       	ret

00001508 <TMRSRVC_delay>:
    1508:	df 93       	push	r29
    150a:	cf 93       	push	r28
    150c:	cd b7       	in	r28, 0x3d	; 61
    150e:	de b7       	in	r29, 0x3e	; 62
    1510:	29 97       	sbiw	r28, 0x09	; 9
    1512:	0f b6       	in	r0, 0x3f	; 63
    1514:	f8 94       	cli
    1516:	de bf       	out	0x3e, r29	; 62
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	cd bf       	out	0x3d, r28	; 61
    151c:	9c 01       	movw	r18, r24
    151e:	ce 01       	movw	r24, r28
    1520:	01 96       	adiw	r24, 0x01	; 1
    1522:	61 e0       	ldi	r22, 0x01	; 1
    1524:	40 e0       	ldi	r20, 0x00	; 0
    1526:	0e 94 a5 0a 	call	0x154a	; 0x154a <TMRSRVC_new>
    152a:	98 2f       	mov	r25, r24
    152c:	88 23       	and	r24, r24
    152e:	19 f4       	brne	.+6      	; 0x1536 <TMRSRVC_delay+0x2e>
    1530:	8f 81       	ldd	r24, Y+7	; 0x07
    1532:	88 23       	and	r24, r24
    1534:	e9 f3       	breq	.-6      	; 0x1530 <TMRSRVC_delay+0x28>
    1536:	89 2f       	mov	r24, r25
    1538:	29 96       	adiw	r28, 0x09	; 9
    153a:	0f b6       	in	r0, 0x3f	; 63
    153c:	f8 94       	cli
    153e:	de bf       	out	0x3e, r29	; 62
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	cd bf       	out	0x3d, r28	; 61
    1544:	cf 91       	pop	r28
    1546:	df 91       	pop	r29
    1548:	08 95       	ret

0000154a <TMRSRVC_new>:
    154a:	ef 92       	push	r14
    154c:	ff 92       	push	r15
    154e:	0f 93       	push	r16
    1550:	1f 93       	push	r17
    1552:	cf 93       	push	r28
    1554:	df 93       	push	r29
    1556:	ec 01       	movw	r28, r24
    1558:	f6 2e       	mov	r15, r22
    155a:	e4 2e       	mov	r14, r20
    155c:	89 01       	movw	r16, r18
    155e:	88 e0       	ldi	r24, 0x08	; 8
    1560:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    1564:	81 30       	cpi	r24, 0x01	; 1
    1566:	11 f0       	breq	.+4      	; 0x156c <TMRSRVC_new+0x22>
    1568:	81 e0       	ldi	r24, 0x01	; 1
    156a:	26 c0       	rjmp	.+76     	; 0x15b8 <TMRSRVC_new+0x6e>
    156c:	84 e0       	ldi	r24, 0x04	; 4
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	0e 94 2a 29 	call	0x5254	; 0x5254 <malloc>
    1574:	fc 01       	movw	r30, r24
    1576:	00 97       	sbiw	r24, 0x00	; 0
    1578:	11 f4       	brne	.+4      	; 0x157e <TMRSRVC_new+0x34>
    157a:	82 e0       	ldi	r24, 0x02	; 2
    157c:	1d c0       	rjmp	.+58     	; 0x15b8 <TMRSRVC_new+0x6e>
    157e:	f9 82       	std	Y+1, r15	; 0x01
    1580:	f0 fc       	sbrc	r15, 0
    1582:	1e 82       	std	Y+6, r1	; 0x06
    1584:	81 e0       	ldi	r24, 0x01	; 1
    1586:	e8 16       	cp	r14, r24
    1588:	19 f4       	brne	.+6      	; 0x1590 <TMRSRVC_new+0x46>
    158a:	89 81       	ldd	r24, Y+1	; 0x01
    158c:	84 60       	ori	r24, 0x04	; 4
    158e:	89 83       	std	Y+1, r24	; 0x01
    1590:	89 81       	ldd	r24, Y+1	; 0x01
    1592:	88 60       	ori	r24, 0x08	; 8
    1594:	89 83       	std	Y+1, r24	; 0x01
    1596:	1b 83       	std	Y+3, r17	; 0x03
    1598:	0a 83       	std	Y+2, r16	; 0x02
    159a:	1d 83       	std	Y+5, r17	; 0x05
    159c:	0c 83       	std	Y+4, r16	; 0x04
    159e:	d1 83       	std	Z+1, r29	; 0x01
    15a0:	c0 83       	st	Z, r28
    15a2:	13 82       	std	Z+3, r1	; 0x03
    15a4:	12 82       	std	Z+2, r1	; 0x02
    15a6:	81 e0       	ldi	r24, 0x01	; 1
    15a8:	80 93 0c 04 	sts	0x040C, r24
    15ac:	cf 01       	movw	r24, r30
    15ae:	0e 94 68 10 	call	0x20d0	; 0x20d0 <TMRSRVC_insert>
    15b2:	10 92 0c 04 	sts	0x040C, r1
    15b6:	80 e0       	ldi	r24, 0x00	; 0
    15b8:	df 91       	pop	r29
    15ba:	cf 91       	pop	r28
    15bc:	1f 91       	pop	r17
    15be:	0f 91       	pop	r16
    15c0:	ff 90       	pop	r15
    15c2:	ef 90       	pop	r14
    15c4:	08 95       	ret

000015c6 <__ADC_init>:
    15c6:	8f e1       	ldi	r24, 0x1F	; 31
    15c8:	80 93 7c 00 	sts	0x007C, r24
    15cc:	ea e7       	ldi	r30, 0x7A	; 122
    15ce:	f0 e0       	ldi	r31, 0x00	; 0
    15d0:	87 e0       	ldi	r24, 0x07	; 7
    15d2:	80 83       	st	Z, r24
    15d4:	80 81       	ld	r24, Z
    15d6:	80 68       	ori	r24, 0x80	; 128
    15d8:	80 83       	st	Z, r24
    15da:	08 95       	ret

000015dc <CBOT_init>:
    15dc:	0e 94 14 10 	call	0x2028	; 0x2028 <SYS_init>
    15e0:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <ATMEGA_open>
    15e4:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <ISR_open>
    15e8:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <TMRSRVC_open>
    15ec:	0e 94 78 0e 	call	0x1cf0	; 0x1cf0 <SPI_open>
    15f0:	0e 94 35 0a 	call	0x146a	; 0x146a <ATTINY_open>
    15f4:	78 94       	sei
    15f6:	08 95       	ret

000015f8 <CBOT_ISR_init>:
    15f8:	00 00       	nop
    15fa:	08 95       	ret

000015fc <__vector_16>:
    15fc:	1f 92       	push	r1
    15fe:	0f 92       	push	r0
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	0f 92       	push	r0
    1604:	11 24       	eor	r1, r1
    1606:	2f 93       	push	r18
    1608:	3f 93       	push	r19
    160a:	4f 93       	push	r20
    160c:	5f 93       	push	r21
    160e:	6f 93       	push	r22
    1610:	7f 93       	push	r23
    1612:	8f 93       	push	r24
    1614:	9f 93       	push	r25
    1616:	af 93       	push	r26
    1618:	bf 93       	push	r27
    161a:	ef 93       	push	r30
    161c:	ff 93       	push	r31
    161e:	e0 91 cc 03 	lds	r30, 0x03CC
    1622:	f0 91 cd 03 	lds	r31, 0x03CD
    1626:	30 97       	sbiw	r30, 0x00	; 0
    1628:	09 f0       	breq	.+2      	; 0x162c <__vector_16+0x30>
    162a:	09 95       	icall
    162c:	ff 91       	pop	r31
    162e:	ef 91       	pop	r30
    1630:	bf 91       	pop	r27
    1632:	af 91       	pop	r26
    1634:	9f 91       	pop	r25
    1636:	8f 91       	pop	r24
    1638:	7f 91       	pop	r23
    163a:	6f 91       	pop	r22
    163c:	5f 91       	pop	r21
    163e:	4f 91       	pop	r20
    1640:	3f 91       	pop	r19
    1642:	2f 91       	pop	r18
    1644:	0f 90       	pop	r0
    1646:	0f be       	out	0x3f, r0	; 63
    1648:	0f 90       	pop	r0
    164a:	1f 90       	pop	r1
    164c:	18 95       	reti

0000164e <__vector_17>:
    164e:	1f 92       	push	r1
    1650:	0f 92       	push	r0
    1652:	0f b6       	in	r0, 0x3f	; 63
    1654:	0f 92       	push	r0
    1656:	11 24       	eor	r1, r1
    1658:	2f 93       	push	r18
    165a:	3f 93       	push	r19
    165c:	4f 93       	push	r20
    165e:	5f 93       	push	r21
    1660:	6f 93       	push	r22
    1662:	7f 93       	push	r23
    1664:	8f 93       	push	r24
    1666:	9f 93       	push	r25
    1668:	af 93       	push	r26
    166a:	bf 93       	push	r27
    166c:	ef 93       	push	r30
    166e:	ff 93       	push	r31
    1670:	e0 91 ce 03 	lds	r30, 0x03CE
    1674:	f0 91 cf 03 	lds	r31, 0x03CF
    1678:	30 97       	sbiw	r30, 0x00	; 0
    167a:	09 f0       	breq	.+2      	; 0x167e <__vector_17+0x30>
    167c:	09 95       	icall
    167e:	ff 91       	pop	r31
    1680:	ef 91       	pop	r30
    1682:	bf 91       	pop	r27
    1684:	af 91       	pop	r26
    1686:	9f 91       	pop	r25
    1688:	8f 91       	pop	r24
    168a:	7f 91       	pop	r23
    168c:	6f 91       	pop	r22
    168e:	5f 91       	pop	r21
    1690:	4f 91       	pop	r20
    1692:	3f 91       	pop	r19
    1694:	2f 91       	pop	r18
    1696:	0f 90       	pop	r0
    1698:	0f be       	out	0x3f, r0	; 63
    169a:	0f 90       	pop	r0
    169c:	1f 90       	pop	r1
    169e:	18 95       	reti

000016a0 <__vector_18>:
    16a0:	1f 92       	push	r1
    16a2:	0f 92       	push	r0
    16a4:	0f b6       	in	r0, 0x3f	; 63
    16a6:	0f 92       	push	r0
    16a8:	11 24       	eor	r1, r1
    16aa:	2f 93       	push	r18
    16ac:	3f 93       	push	r19
    16ae:	4f 93       	push	r20
    16b0:	5f 93       	push	r21
    16b2:	6f 93       	push	r22
    16b4:	7f 93       	push	r23
    16b6:	8f 93       	push	r24
    16b8:	9f 93       	push	r25
    16ba:	af 93       	push	r26
    16bc:	bf 93       	push	r27
    16be:	ef 93       	push	r30
    16c0:	ff 93       	push	r31
    16c2:	e0 91 d0 03 	lds	r30, 0x03D0
    16c6:	f0 91 d1 03 	lds	r31, 0x03D1
    16ca:	30 97       	sbiw	r30, 0x00	; 0
    16cc:	09 f0       	breq	.+2      	; 0x16d0 <__vector_18+0x30>
    16ce:	09 95       	icall
    16d0:	ff 91       	pop	r31
    16d2:	ef 91       	pop	r30
    16d4:	bf 91       	pop	r27
    16d6:	af 91       	pop	r26
    16d8:	9f 91       	pop	r25
    16da:	8f 91       	pop	r24
    16dc:	7f 91       	pop	r23
    16de:	6f 91       	pop	r22
    16e0:	5f 91       	pop	r21
    16e2:	4f 91       	pop	r20
    16e4:	3f 91       	pop	r19
    16e6:	2f 91       	pop	r18
    16e8:	0f 90       	pop	r0
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	0f 90       	pop	r0
    16ee:	1f 90       	pop	r1
    16f0:	18 95       	reti

000016f2 <__vector_9>:
    16f2:	1f 92       	push	r1
    16f4:	0f 92       	push	r0
    16f6:	0f b6       	in	r0, 0x3f	; 63
    16f8:	0f 92       	push	r0
    16fa:	11 24       	eor	r1, r1
    16fc:	2f 93       	push	r18
    16fe:	3f 93       	push	r19
    1700:	4f 93       	push	r20
    1702:	5f 93       	push	r21
    1704:	6f 93       	push	r22
    1706:	7f 93       	push	r23
    1708:	8f 93       	push	r24
    170a:	9f 93       	push	r25
    170c:	af 93       	push	r26
    170e:	bf 93       	push	r27
    1710:	ef 93       	push	r30
    1712:	ff 93       	push	r31
    1714:	e0 91 be 03 	lds	r30, 0x03BE
    1718:	f0 91 bf 03 	lds	r31, 0x03BF
    171c:	30 97       	sbiw	r30, 0x00	; 0
    171e:	09 f0       	breq	.+2      	; 0x1722 <__vector_9+0x30>
    1720:	09 95       	icall
    1722:	ff 91       	pop	r31
    1724:	ef 91       	pop	r30
    1726:	bf 91       	pop	r27
    1728:	af 91       	pop	r26
    172a:	9f 91       	pop	r25
    172c:	8f 91       	pop	r24
    172e:	7f 91       	pop	r23
    1730:	6f 91       	pop	r22
    1732:	5f 91       	pop	r21
    1734:	4f 91       	pop	r20
    1736:	3f 91       	pop	r19
    1738:	2f 91       	pop	r18
    173a:	0f 90       	pop	r0
    173c:	0f be       	out	0x3f, r0	; 63
    173e:	0f 90       	pop	r0
    1740:	1f 90       	pop	r1
    1742:	18 95       	reti

00001744 <__vector_10>:
    1744:	1f 92       	push	r1
    1746:	0f 92       	push	r0
    1748:	0f b6       	in	r0, 0x3f	; 63
    174a:	0f 92       	push	r0
    174c:	11 24       	eor	r1, r1
    174e:	2f 93       	push	r18
    1750:	3f 93       	push	r19
    1752:	4f 93       	push	r20
    1754:	5f 93       	push	r21
    1756:	6f 93       	push	r22
    1758:	7f 93       	push	r23
    175a:	8f 93       	push	r24
    175c:	9f 93       	push	r25
    175e:	af 93       	push	r26
    1760:	bf 93       	push	r27
    1762:	ef 93       	push	r30
    1764:	ff 93       	push	r31
    1766:	e0 91 c0 03 	lds	r30, 0x03C0
    176a:	f0 91 c1 03 	lds	r31, 0x03C1
    176e:	30 97       	sbiw	r30, 0x00	; 0
    1770:	09 f0       	breq	.+2      	; 0x1774 <__vector_10+0x30>
    1772:	09 95       	icall
    1774:	ff 91       	pop	r31
    1776:	ef 91       	pop	r30
    1778:	bf 91       	pop	r27
    177a:	af 91       	pop	r26
    177c:	9f 91       	pop	r25
    177e:	8f 91       	pop	r24
    1780:	7f 91       	pop	r23
    1782:	6f 91       	pop	r22
    1784:	5f 91       	pop	r21
    1786:	4f 91       	pop	r20
    1788:	3f 91       	pop	r19
    178a:	2f 91       	pop	r18
    178c:	0f 90       	pop	r0
    178e:	0f be       	out	0x3f, r0	; 63
    1790:	0f 90       	pop	r0
    1792:	1f 90       	pop	r1
    1794:	18 95       	reti

00001796 <__vector_11>:
    1796:	1f 92       	push	r1
    1798:	0f 92       	push	r0
    179a:	0f b6       	in	r0, 0x3f	; 63
    179c:	0f 92       	push	r0
    179e:	11 24       	eor	r1, r1
    17a0:	2f 93       	push	r18
    17a2:	3f 93       	push	r19
    17a4:	4f 93       	push	r20
    17a6:	5f 93       	push	r21
    17a8:	6f 93       	push	r22
    17aa:	7f 93       	push	r23
    17ac:	8f 93       	push	r24
    17ae:	9f 93       	push	r25
    17b0:	af 93       	push	r26
    17b2:	bf 93       	push	r27
    17b4:	ef 93       	push	r30
    17b6:	ff 93       	push	r31
    17b8:	e0 91 c2 03 	lds	r30, 0x03C2
    17bc:	f0 91 c3 03 	lds	r31, 0x03C3
    17c0:	30 97       	sbiw	r30, 0x00	; 0
    17c2:	09 f0       	breq	.+2      	; 0x17c6 <__vector_11+0x30>
    17c4:	09 95       	icall
    17c6:	ff 91       	pop	r31
    17c8:	ef 91       	pop	r30
    17ca:	bf 91       	pop	r27
    17cc:	af 91       	pop	r26
    17ce:	9f 91       	pop	r25
    17d0:	8f 91       	pop	r24
    17d2:	7f 91       	pop	r23
    17d4:	6f 91       	pop	r22
    17d6:	5f 91       	pop	r21
    17d8:	4f 91       	pop	r20
    17da:	3f 91       	pop	r19
    17dc:	2f 91       	pop	r18
    17de:	0f 90       	pop	r0
    17e0:	0f be       	out	0x3f, r0	; 63
    17e2:	0f 90       	pop	r0
    17e4:	1f 90       	pop	r1
    17e6:	18 95       	reti

000017e8 <__vector_13>:
    17e8:	1f 92       	push	r1
    17ea:	0f 92       	push	r0
    17ec:	0f b6       	in	r0, 0x3f	; 63
    17ee:	0f 92       	push	r0
    17f0:	11 24       	eor	r1, r1
    17f2:	2f 93       	push	r18
    17f4:	3f 93       	push	r19
    17f6:	4f 93       	push	r20
    17f8:	5f 93       	push	r21
    17fa:	6f 93       	push	r22
    17fc:	7f 93       	push	r23
    17fe:	8f 93       	push	r24
    1800:	9f 93       	push	r25
    1802:	af 93       	push	r26
    1804:	bf 93       	push	r27
    1806:	ef 93       	push	r30
    1808:	ff 93       	push	r31
    180a:	e0 91 c6 03 	lds	r30, 0x03C6
    180e:	f0 91 c7 03 	lds	r31, 0x03C7
    1812:	30 97       	sbiw	r30, 0x00	; 0
    1814:	09 f0       	breq	.+2      	; 0x1818 <__vector_13+0x30>
    1816:	09 95       	icall
    1818:	ff 91       	pop	r31
    181a:	ef 91       	pop	r30
    181c:	bf 91       	pop	r27
    181e:	af 91       	pop	r26
    1820:	9f 91       	pop	r25
    1822:	8f 91       	pop	r24
    1824:	7f 91       	pop	r23
    1826:	6f 91       	pop	r22
    1828:	5f 91       	pop	r21
    182a:	4f 91       	pop	r20
    182c:	3f 91       	pop	r19
    182e:	2f 91       	pop	r18
    1830:	0f 90       	pop	r0
    1832:	0f be       	out	0x3f, r0	; 63
    1834:	0f 90       	pop	r0
    1836:	1f 90       	pop	r1
    1838:	18 95       	reti

0000183a <__vector_14>:
    183a:	1f 92       	push	r1
    183c:	0f 92       	push	r0
    183e:	0f b6       	in	r0, 0x3f	; 63
    1840:	0f 92       	push	r0
    1842:	11 24       	eor	r1, r1
    1844:	2f 93       	push	r18
    1846:	3f 93       	push	r19
    1848:	4f 93       	push	r20
    184a:	5f 93       	push	r21
    184c:	6f 93       	push	r22
    184e:	7f 93       	push	r23
    1850:	8f 93       	push	r24
    1852:	9f 93       	push	r25
    1854:	af 93       	push	r26
    1856:	bf 93       	push	r27
    1858:	ef 93       	push	r30
    185a:	ff 93       	push	r31
    185c:	e0 91 c8 03 	lds	r30, 0x03C8
    1860:	f0 91 c9 03 	lds	r31, 0x03C9
    1864:	30 97       	sbiw	r30, 0x00	; 0
    1866:	09 f0       	breq	.+2      	; 0x186a <__vector_14+0x30>
    1868:	09 95       	icall
    186a:	ff 91       	pop	r31
    186c:	ef 91       	pop	r30
    186e:	bf 91       	pop	r27
    1870:	af 91       	pop	r26
    1872:	9f 91       	pop	r25
    1874:	8f 91       	pop	r24
    1876:	7f 91       	pop	r23
    1878:	6f 91       	pop	r22
    187a:	5f 91       	pop	r21
    187c:	4f 91       	pop	r20
    187e:	3f 91       	pop	r19
    1880:	2f 91       	pop	r18
    1882:	0f 90       	pop	r0
    1884:	0f be       	out	0x3f, r0	; 63
    1886:	0f 90       	pop	r0
    1888:	1f 90       	pop	r1
    188a:	18 95       	reti

0000188c <__vector_12>:
    188c:	1f 92       	push	r1
    188e:	0f 92       	push	r0
    1890:	0f b6       	in	r0, 0x3f	; 63
    1892:	0f 92       	push	r0
    1894:	11 24       	eor	r1, r1
    1896:	2f 93       	push	r18
    1898:	3f 93       	push	r19
    189a:	4f 93       	push	r20
    189c:	5f 93       	push	r21
    189e:	6f 93       	push	r22
    18a0:	7f 93       	push	r23
    18a2:	8f 93       	push	r24
    18a4:	9f 93       	push	r25
    18a6:	af 93       	push	r26
    18a8:	bf 93       	push	r27
    18aa:	ef 93       	push	r30
    18ac:	ff 93       	push	r31
    18ae:	e0 91 c4 03 	lds	r30, 0x03C4
    18b2:	f0 91 c5 03 	lds	r31, 0x03C5
    18b6:	30 97       	sbiw	r30, 0x00	; 0
    18b8:	09 f0       	breq	.+2      	; 0x18bc <__vector_12+0x30>
    18ba:	09 95       	icall
    18bc:	ff 91       	pop	r31
    18be:	ef 91       	pop	r30
    18c0:	bf 91       	pop	r27
    18c2:	af 91       	pop	r26
    18c4:	9f 91       	pop	r25
    18c6:	8f 91       	pop	r24
    18c8:	7f 91       	pop	r23
    18ca:	6f 91       	pop	r22
    18cc:	5f 91       	pop	r21
    18ce:	4f 91       	pop	r20
    18d0:	3f 91       	pop	r19
    18d2:	2f 91       	pop	r18
    18d4:	0f 90       	pop	r0
    18d6:	0f be       	out	0x3f, r0	; 63
    18d8:	0f 90       	pop	r0
    18da:	1f 90       	pop	r1
    18dc:	18 95       	reti

000018de <__vector_15>:
    18de:	1f 92       	push	r1
    18e0:	0f 92       	push	r0
    18e2:	0f b6       	in	r0, 0x3f	; 63
    18e4:	0f 92       	push	r0
    18e6:	11 24       	eor	r1, r1
    18e8:	2f 93       	push	r18
    18ea:	3f 93       	push	r19
    18ec:	4f 93       	push	r20
    18ee:	5f 93       	push	r21
    18f0:	6f 93       	push	r22
    18f2:	7f 93       	push	r23
    18f4:	8f 93       	push	r24
    18f6:	9f 93       	push	r25
    18f8:	af 93       	push	r26
    18fa:	bf 93       	push	r27
    18fc:	ef 93       	push	r30
    18fe:	ff 93       	push	r31
    1900:	e0 91 ca 03 	lds	r30, 0x03CA
    1904:	f0 91 cb 03 	lds	r31, 0x03CB
    1908:	30 97       	sbiw	r30, 0x00	; 0
    190a:	09 f0       	breq	.+2      	; 0x190e <__vector_15+0x30>
    190c:	09 95       	icall
    190e:	ff 91       	pop	r31
    1910:	ef 91       	pop	r30
    1912:	bf 91       	pop	r27
    1914:	af 91       	pop	r26
    1916:	9f 91       	pop	r25
    1918:	8f 91       	pop	r24
    191a:	7f 91       	pop	r23
    191c:	6f 91       	pop	r22
    191e:	5f 91       	pop	r21
    1920:	4f 91       	pop	r20
    1922:	3f 91       	pop	r19
    1924:	2f 91       	pop	r18
    1926:	0f 90       	pop	r0
    1928:	0f be       	out	0x3f, r0	; 63
    192a:	0f 90       	pop	r0
    192c:	1f 90       	pop	r1
    192e:	18 95       	reti

00001930 <__vector_4>:
    1930:	1f 92       	push	r1
    1932:	0f 92       	push	r0
    1934:	0f b6       	in	r0, 0x3f	; 63
    1936:	0f 92       	push	r0
    1938:	11 24       	eor	r1, r1
    193a:	2f 93       	push	r18
    193c:	3f 93       	push	r19
    193e:	4f 93       	push	r20
    1940:	5f 93       	push	r21
    1942:	6f 93       	push	r22
    1944:	7f 93       	push	r23
    1946:	8f 93       	push	r24
    1948:	9f 93       	push	r25
    194a:	af 93       	push	r26
    194c:	bf 93       	push	r27
    194e:	ef 93       	push	r30
    1950:	ff 93       	push	r31
    1952:	e0 91 b4 03 	lds	r30, 0x03B4
    1956:	f0 91 b5 03 	lds	r31, 0x03B5
    195a:	30 97       	sbiw	r30, 0x00	; 0
    195c:	09 f0       	breq	.+2      	; 0x1960 <__vector_4+0x30>
    195e:	09 95       	icall
    1960:	ff 91       	pop	r31
    1962:	ef 91       	pop	r30
    1964:	bf 91       	pop	r27
    1966:	af 91       	pop	r26
    1968:	9f 91       	pop	r25
    196a:	8f 91       	pop	r24
    196c:	7f 91       	pop	r23
    196e:	6f 91       	pop	r22
    1970:	5f 91       	pop	r21
    1972:	4f 91       	pop	r20
    1974:	3f 91       	pop	r19
    1976:	2f 91       	pop	r18
    1978:	0f 90       	pop	r0
    197a:	0f be       	out	0x3f, r0	; 63
    197c:	0f 90       	pop	r0
    197e:	1f 90       	pop	r1
    1980:	18 95       	reti

00001982 <__vector_5>:
    1982:	1f 92       	push	r1
    1984:	0f 92       	push	r0
    1986:	0f b6       	in	r0, 0x3f	; 63
    1988:	0f 92       	push	r0
    198a:	11 24       	eor	r1, r1
    198c:	2f 93       	push	r18
    198e:	3f 93       	push	r19
    1990:	4f 93       	push	r20
    1992:	5f 93       	push	r21
    1994:	6f 93       	push	r22
    1996:	7f 93       	push	r23
    1998:	8f 93       	push	r24
    199a:	9f 93       	push	r25
    199c:	af 93       	push	r26
    199e:	bf 93       	push	r27
    19a0:	ef 93       	push	r30
    19a2:	ff 93       	push	r31
    19a4:	e0 91 b6 03 	lds	r30, 0x03B6
    19a8:	f0 91 b7 03 	lds	r31, 0x03B7
    19ac:	30 97       	sbiw	r30, 0x00	; 0
    19ae:	09 f0       	breq	.+2      	; 0x19b2 <__vector_5+0x30>
    19b0:	09 95       	icall
    19b2:	ff 91       	pop	r31
    19b4:	ef 91       	pop	r30
    19b6:	bf 91       	pop	r27
    19b8:	af 91       	pop	r26
    19ba:	9f 91       	pop	r25
    19bc:	8f 91       	pop	r24
    19be:	7f 91       	pop	r23
    19c0:	6f 91       	pop	r22
    19c2:	5f 91       	pop	r21
    19c4:	4f 91       	pop	r20
    19c6:	3f 91       	pop	r19
    19c8:	2f 91       	pop	r18
    19ca:	0f 90       	pop	r0
    19cc:	0f be       	out	0x3f, r0	; 63
    19ce:	0f 90       	pop	r0
    19d0:	1f 90       	pop	r1
    19d2:	18 95       	reti

000019d4 <__vector_6>:
    19d4:	1f 92       	push	r1
    19d6:	0f 92       	push	r0
    19d8:	0f b6       	in	r0, 0x3f	; 63
    19da:	0f 92       	push	r0
    19dc:	11 24       	eor	r1, r1
    19de:	2f 93       	push	r18
    19e0:	3f 93       	push	r19
    19e2:	4f 93       	push	r20
    19e4:	5f 93       	push	r21
    19e6:	6f 93       	push	r22
    19e8:	7f 93       	push	r23
    19ea:	8f 93       	push	r24
    19ec:	9f 93       	push	r25
    19ee:	af 93       	push	r26
    19f0:	bf 93       	push	r27
    19f2:	ef 93       	push	r30
    19f4:	ff 93       	push	r31
    19f6:	e0 91 b8 03 	lds	r30, 0x03B8
    19fa:	f0 91 b9 03 	lds	r31, 0x03B9
    19fe:	30 97       	sbiw	r30, 0x00	; 0
    1a00:	09 f0       	breq	.+2      	; 0x1a04 <__vector_6+0x30>
    1a02:	09 95       	icall
    1a04:	ff 91       	pop	r31
    1a06:	ef 91       	pop	r30
    1a08:	bf 91       	pop	r27
    1a0a:	af 91       	pop	r26
    1a0c:	9f 91       	pop	r25
    1a0e:	8f 91       	pop	r24
    1a10:	7f 91       	pop	r23
    1a12:	6f 91       	pop	r22
    1a14:	5f 91       	pop	r21
    1a16:	4f 91       	pop	r20
    1a18:	3f 91       	pop	r19
    1a1a:	2f 91       	pop	r18
    1a1c:	0f 90       	pop	r0
    1a1e:	0f be       	out	0x3f, r0	; 63
    1a20:	0f 90       	pop	r0
    1a22:	1f 90       	pop	r1
    1a24:	18 95       	reti

00001a26 <__vector_7>:
    1a26:	1f 92       	push	r1
    1a28:	0f 92       	push	r0
    1a2a:	0f b6       	in	r0, 0x3f	; 63
    1a2c:	0f 92       	push	r0
    1a2e:	11 24       	eor	r1, r1
    1a30:	2f 93       	push	r18
    1a32:	3f 93       	push	r19
    1a34:	4f 93       	push	r20
    1a36:	5f 93       	push	r21
    1a38:	6f 93       	push	r22
    1a3a:	7f 93       	push	r23
    1a3c:	8f 93       	push	r24
    1a3e:	9f 93       	push	r25
    1a40:	af 93       	push	r26
    1a42:	bf 93       	push	r27
    1a44:	ef 93       	push	r30
    1a46:	ff 93       	push	r31
    1a48:	e0 91 ba 03 	lds	r30, 0x03BA
    1a4c:	f0 91 bb 03 	lds	r31, 0x03BB
    1a50:	30 97       	sbiw	r30, 0x00	; 0
    1a52:	09 f0       	breq	.+2      	; 0x1a56 <__vector_7+0x30>
    1a54:	09 95       	icall
    1a56:	ff 91       	pop	r31
    1a58:	ef 91       	pop	r30
    1a5a:	bf 91       	pop	r27
    1a5c:	af 91       	pop	r26
    1a5e:	9f 91       	pop	r25
    1a60:	8f 91       	pop	r24
    1a62:	7f 91       	pop	r23
    1a64:	6f 91       	pop	r22
    1a66:	5f 91       	pop	r21
    1a68:	4f 91       	pop	r20
    1a6a:	3f 91       	pop	r19
    1a6c:	2f 91       	pop	r18
    1a6e:	0f 90       	pop	r0
    1a70:	0f be       	out	0x3f, r0	; 63
    1a72:	0f 90       	pop	r0
    1a74:	1f 90       	pop	r1
    1a76:	18 95       	reti

00001a78 <ISR_attach>:
    1a78:	e8 2f       	mov	r30, r24
    1a7a:	80 32       	cpi	r24, 0x20	; 32
    1a7c:	68 f4       	brcc	.+26     	; 0x1a98 <ISR_attach+0x20>
    1a7e:	80 51       	subi	r24, 0x10	; 16
    1a80:	83 30       	cpi	r24, 0x03	; 3
    1a82:	50 f0       	brcs	.+20     	; 0x1a98 <ISR_attach+0x20>
    1a84:	f0 e0       	ldi	r31, 0x00	; 0
    1a86:	ee 0f       	add	r30, r30
    1a88:	ff 1f       	adc	r31, r31
    1a8a:	e4 55       	subi	r30, 0x54	; 84
    1a8c:	fc 4f       	sbci	r31, 0xFC	; 252
    1a8e:	20 81       	ld	r18, Z
    1a90:	31 81       	ldd	r19, Z+1	; 0x01
    1a92:	71 83       	std	Z+1, r23	; 0x01
    1a94:	60 83       	st	Z, r22
    1a96:	02 c0       	rjmp	.+4      	; 0x1a9c <ISR_attach+0x24>
    1a98:	20 e0       	ldi	r18, 0x00	; 0
    1a9a:	30 e0       	ldi	r19, 0x00	; 0
    1a9c:	c9 01       	movw	r24, r18
    1a9e:	08 95       	ret

00001aa0 <ISR_open>:
    1aa0:	80 e1       	ldi	r24, 0x10	; 16
    1aa2:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    1aa6:	88 23       	and	r24, r24
    1aa8:	61 f4       	brne	.+24     	; 0x1ac2 <ISR_open+0x22>
    1aaa:	ec ea       	ldi	r30, 0xAC	; 172
    1aac:	f3 e0       	ldi	r31, 0x03	; 3
    1aae:	11 92       	st	Z+, r1
    1ab0:	11 92       	st	Z+, r1
    1ab2:	83 e0       	ldi	r24, 0x03	; 3
    1ab4:	ec 3e       	cpi	r30, 0xEC	; 236
    1ab6:	f8 07       	cpc	r31, r24
    1ab8:	d1 f7       	brne	.-12     	; 0x1aae <ISR_open+0xe>
    1aba:	80 e1       	ldi	r24, 0x10	; 16
    1abc:	61 e0       	ldi	r22, 0x01	; 1
    1abe:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
    1ac2:	80 e1       	ldi	r24, 0x10	; 16
    1ac4:	91 e0       	ldi	r25, 0x01	; 1
    1ac6:	08 95       	ret

00001ac8 <__LCD_init>:
    1ac8:	23 9a       	sbi	0x04, 3	; 4
    1aca:	08 95       	ret

00001acc <__LCD_putchar>:
    1acc:	ff 92       	push	r15
    1ace:	0f 93       	push	r16
    1ad0:	1f 93       	push	r17
    1ad2:	cf 93       	push	r28
    1ad4:	df 93       	push	r29
    1ad6:	f8 2e       	mov	r15, r24
    1ad8:	8a e0       	ldi	r24, 0x0A	; 10
    1ada:	f8 16       	cp	r15, r24
    1adc:	b1 f0       	breq	.+44     	; 0x1b0a <__LCD_putchar+0x3e>
    1ade:	8f 15       	cp	r24, r15
    1ae0:	48 f0       	brcs	.+18     	; 0x1af4 <__LCD_putchar+0x28>
    1ae2:	e8 e0       	ldi	r30, 0x08	; 8
    1ae4:	fe 16       	cp	r15, r30
    1ae6:	b9 f1       	breq	.+110    	; 0x1b56 <__LCD_putchar+0x8a>
    1ae8:	ef 15       	cp	r30, r15
    1aea:	38 f1       	brcs	.+78     	; 0x1b3a <__LCD_putchar+0x6e>
    1aec:	f7 e0       	ldi	r31, 0x07	; 7
    1aee:	ff 16       	cp	r15, r31
    1af0:	51 f4       	brne	.+20     	; 0x1b06 <__LCD_putchar+0x3a>
    1af2:	3b c0       	rjmp	.+118    	; 0x1b6a <__LCD_putchar+0x9e>
    1af4:	8d e0       	ldi	r24, 0x0D	; 13
    1af6:	f8 16       	cp	r15, r24
    1af8:	59 f0       	breq	.+22     	; 0x1b10 <__LCD_putchar+0x44>
    1afa:	eb e1       	ldi	r30, 0x1B	; 27
    1afc:	fe 16       	cp	r15, r30
    1afe:	89 f0       	breq	.+34     	; 0x1b22 <__LCD_putchar+0x56>
    1b00:	fc e0       	ldi	r31, 0x0C	; 12
    1b02:	ff 16       	cp	r15, r31
    1b04:	41 f0       	breq	.+16     	; 0x1b16 <__LCD_putchar+0x4a>
    1b06:	01 e0       	ldi	r16, 0x01	; 1
    1b08:	41 c0       	rjmp	.+130    	; 0x1b8c <__LCD_putchar+0xc0>
    1b0a:	10 92 67 04 	sts	0x0467, r1
    1b0e:	03 c0       	rjmp	.+6      	; 0x1b16 <__LCD_putchar+0x4a>
    1b10:	10 92 67 04 	sts	0x0467, r1
    1b14:	3a c0       	rjmp	.+116    	; 0x1b8a <__LCD_putchar+0xbe>
    1b16:	80 91 68 04 	lds	r24, 0x0468
    1b1a:	81 50       	subi	r24, 0x01	; 1
    1b1c:	80 93 68 04 	sts	0x0468, r24
    1b20:	34 c0       	rjmp	.+104    	; 0x1b8a <__LCD_putchar+0xbe>
    1b22:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
    1b26:	14 c0       	rjmp	.+40     	; 0x1b50 <__LCD_putchar+0x84>
    1b28:	80 e0       	ldi	r24, 0x00	; 0
    1b2a:	61 e0       	ldi	r22, 0x01	; 1
    1b2c:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
    1b30:	80 91 67 04 	lds	r24, 0x0467
    1b34:	8f 5f       	subi	r24, 0xFF	; 255
    1b36:	80 93 67 04 	sts	0x0467, r24
    1b3a:	80 91 67 04 	lds	r24, 0x0467
    1b3e:	87 ff       	sbrs	r24, 7
    1b40:	f3 cf       	rjmp	.-26     	; 0x1b28 <__LCD_putchar+0x5c>
    1b42:	10 92 67 04 	sts	0x0467, r1
    1b46:	80 91 68 04 	lds	r24, 0x0468
    1b4a:	81 50       	subi	r24, 0x01	; 1
    1b4c:	80 93 68 04 	sts	0x0468, r24
    1b50:	00 e0       	ldi	r16, 0x00	; 0
    1b52:	11 e0       	ldi	r17, 0x01	; 1
    1b54:	1c c0       	rjmp	.+56     	; 0x1b8e <__LCD_putchar+0xc2>
    1b56:	80 91 67 04 	lds	r24, 0x0467
    1b5a:	88 23       	and	r24, r24
    1b5c:	b1 f0       	breq	.+44     	; 0x1b8a <__LCD_putchar+0xbe>
    1b5e:	80 91 67 04 	lds	r24, 0x0467
    1b62:	86 50       	subi	r24, 0x06	; 6
    1b64:	80 93 67 04 	sts	0x0467, r24
    1b68:	10 c0       	rjmp	.+32     	; 0x1b8a <__LCD_putchar+0xbe>
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	0e 94 b1 05 	call	0xb62	; 0xb62 <SPKR_open>
    1b70:	64 ef       	ldi	r22, 0xF4	; 244
    1b72:	71 e0       	ldi	r23, 0x01	; 1
    1b74:	80 e0       	ldi	r24, 0x00	; 0
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	4d e7       	ldi	r20, 0x7D	; 125
    1b7a:	50 e0       	ldi	r21, 0x00	; 0
    1b7c:	24 e6       	ldi	r18, 0x64	; 100
    1b7e:	30 e0       	ldi	r19, 0x00	; 0
    1b80:	0e 94 be 05 	call	0xb7c	; 0xb7c <SPKR_play_beep>
    1b84:	81 e0       	ldi	r24, 0x01	; 1
    1b86:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <SPKR_close>
    1b8a:	00 e0       	ldi	r16, 0x00	; 0
    1b8c:	10 e0       	ldi	r17, 0x00	; 0
    1b8e:	80 91 68 04 	lds	r24, 0x0468
    1b92:	60 91 67 04 	lds	r22, 0x0467
    1b96:	0e 94 8c 04 	call	0x918	; 0x918 <LCD_set_PGC_addr>
    1b9a:	00 23       	and	r16, r16
    1b9c:	51 f1       	breq	.+84     	; 0x1bf2 <__LCD_putchar+0x126>
    1b9e:	85 e0       	ldi	r24, 0x05	; 5
    1ba0:	f8 9e       	mul	r15, r24
    1ba2:	c0 01       	movw	r24, r0
    1ba4:	11 24       	eor	r1, r1
    1ba6:	ec 01       	movw	r28, r24
    1ba8:	c3 55       	subi	r28, 0x53	; 83
    1baa:	df 4f       	sbci	r29, 0xFF	; 255
    1bac:	8c 01       	movw	r16, r24
    1bae:	0e 54       	subi	r16, 0x4E	; 78
    1bb0:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb2:	fe 01       	movw	r30, r28
    1bb4:	84 91       	lpm	r24, Z
    1bb6:	61 e0       	ldi	r22, 0x01	; 1
    1bb8:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
    1bbc:	21 96       	adiw	r28, 0x01	; 1
    1bbe:	c0 17       	cp	r28, r16
    1bc0:	d1 07       	cpc	r29, r17
    1bc2:	b9 f7       	brne	.-18     	; 0x1bb2 <__LCD_putchar+0xe6>
    1bc4:	80 e0       	ldi	r24, 0x00	; 0
    1bc6:	61 e0       	ldi	r22, 0x01	; 1
    1bc8:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_write>
    1bcc:	80 91 67 04 	lds	r24, 0x0467
    1bd0:	8a 5f       	subi	r24, 0xFA	; 250
    1bd2:	80 93 67 04 	sts	0x0467, r24
    1bd6:	80 91 67 04 	lds	r24, 0x0467
    1bda:	90 e0       	ldi	r25, 0x00	; 0
    1bdc:	8c 37       	cpi	r24, 0x7C	; 124
    1bde:	91 05       	cpc	r25, r1
    1be0:	3c f0       	brlt	.+14     	; 0x1bf0 <__LCD_putchar+0x124>
    1be2:	10 92 67 04 	sts	0x0467, r1
    1be6:	80 91 68 04 	lds	r24, 0x0468
    1bea:	81 50       	subi	r24, 0x01	; 1
    1bec:	80 93 68 04 	sts	0x0468, r24
    1bf0:	11 e0       	ldi	r17, 0x01	; 1
    1bf2:	80 91 68 04 	lds	r24, 0x0468
    1bf6:	83 70       	andi	r24, 0x03	; 3
    1bf8:	80 93 68 04 	sts	0x0468, r24
    1bfc:	11 30       	cpi	r17, 0x01	; 1
    1bfe:	59 f4       	brne	.+22     	; 0x1c16 <__LCD_putchar+0x14a>
    1c00:	80 91 69 04 	lds	r24, 0x0469
    1c04:	81 30       	cpi	r24, 0x01	; 1
    1c06:	39 f4       	brne	.+14     	; 0x1c16 <__LCD_putchar+0x14a>
    1c08:	e0 91 6a 04 	lds	r30, 0x046A
    1c0c:	f0 91 6b 04 	lds	r31, 0x046B
    1c10:	30 97       	sbiw	r30, 0x00	; 0
    1c12:	09 f0       	breq	.+2      	; 0x1c16 <__LCD_putchar+0x14a>
    1c14:	09 95       	icall
    1c16:	80 e0       	ldi	r24, 0x00	; 0
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	df 91       	pop	r29
    1c1c:	cf 91       	pop	r28
    1c1e:	1f 91       	pop	r17
    1c20:	0f 91       	pop	r16
    1c22:	ff 90       	pop	r15
    1c24:	08 95       	ret

00001c26 <ATMEGA_open>:
    1c26:	80 e0       	ldi	r24, 0x00	; 0
    1c28:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    1c2c:	88 23       	and	r24, r24
    1c2e:	51 f4       	brne	.+20     	; 0x1c44 <ATMEGA_open+0x1e>
    1c30:	f8 94       	cli
    1c32:	0e 94 0b 11 	call	0x2216	; 0x2216 <__ATMEGA_init>
    1c36:	81 e0       	ldi	r24, 0x01	; 1
    1c38:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <ATMEGA_set_clk_mode>
    1c3c:	80 e0       	ldi	r24, 0x00	; 0
    1c3e:	61 e0       	ldi	r22, 0x01	; 1
    1c40:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
    1c44:	80 e0       	ldi	r24, 0x00	; 0
    1c46:	91 e0       	ldi	r25, 0x01	; 1
    1c48:	08 95       	ret

00001c4a <ATMEGA_set_clk_mode>:
    1c4a:	81 30       	cpi	r24, 0x01	; 1
    1c4c:	49 f0       	breq	.+18     	; 0x1c60 <ATMEGA_set_clk_mode+0x16>
    1c4e:	f8 94       	cli
    1c50:	81 30       	cpi	r24, 0x01	; 1
    1c52:	20 f1       	brcs	.+72     	; 0x1c9c <ATMEGA_set_clk_mode+0x52>
    1c54:	82 30       	cpi	r24, 0x02	; 2
    1c56:	b1 f0       	breq	.+44     	; 0x1c84 <ATMEGA_set_clk_mode+0x3a>
    1c58:	83 30       	cpi	r24, 0x03	; 3
    1c5a:	09 f0       	breq	.+2      	; 0x1c5e <ATMEGA_set_clk_mode+0x14>
    1c5c:	45 c0       	rjmp	.+138    	; 0x1ce8 <ATMEGA_set_clk_mode+0x9e>
    1c5e:	17 c0       	rjmp	.+46     	; 0x1c8e <ATMEGA_set_clk_mode+0x44>
    1c60:	2c 9a       	sbi	0x05, 4	; 5
    1c62:	80 e8       	ldi	r24, 0x80	; 128
    1c64:	80 93 61 00 	sts	0x0061, r24
    1c68:	10 92 61 00 	sts	0x0061, r1
    1c6c:	80 e0       	ldi	r24, 0x00	; 0
    1c6e:	90 e0       	ldi	r25, 0x00	; 0
    1c70:	00 00       	nop
    1c72:	01 96       	adiw	r24, 0x01	; 1
    1c74:	88 32       	cpi	r24, 0x28	; 40
    1c76:	91 05       	cpc	r25, r1
    1c78:	d9 f7       	brne	.-10     	; 0x1c70 <ATMEGA_set_clk_mode+0x26>
    1c7a:	10 92 68 00 	sts	0x0068, r1
    1c7e:	10 92 6b 00 	sts	0x006B, r1
    1c82:	08 95       	ret
    1c84:	80 e8       	ldi	r24, 0x80	; 128
    1c86:	80 93 61 00 	sts	0x0061, r24
    1c8a:	83 e0       	ldi	r24, 0x03	; 3
    1c8c:	04 c0       	rjmp	.+8      	; 0x1c96 <ATMEGA_set_clk_mode+0x4c>
    1c8e:	80 e8       	ldi	r24, 0x80	; 128
    1c90:	80 93 61 00 	sts	0x0061, r24
    1c94:	88 e0       	ldi	r24, 0x08	; 8
    1c96:	80 93 61 00 	sts	0x0061, r24
    1c9a:	28 c0       	rjmp	.+80     	; 0x1cec <ATMEGA_set_clk_mode+0xa2>
    1c9c:	80 e0       	ldi	r24, 0x00	; 0
    1c9e:	90 e0       	ldi	r25, 0x00	; 0
    1ca0:	00 00       	nop
    1ca2:	01 96       	adiw	r24, 0x01	; 1
    1ca4:	2d e6       	ldi	r18, 0x6D	; 109
    1ca6:	80 36       	cpi	r24, 0x60	; 96
    1ca8:	92 07       	cpc	r25, r18
    1caa:	d1 f7       	brne	.-12     	; 0x1ca0 <ATMEGA_set_clk_mode+0x56>
    1cac:	2c 98       	cbi	0x05, 4	; 5
    1cae:	80 e0       	ldi	r24, 0x00	; 0
    1cb0:	90 e0       	ldi	r25, 0x00	; 0
    1cb2:	00 00       	nop
    1cb4:	01 96       	adiw	r24, 0x01	; 1
    1cb6:	2d e6       	ldi	r18, 0x6D	; 109
    1cb8:	80 36       	cpi	r24, 0x60	; 96
    1cba:	92 07       	cpc	r25, r18
    1cbc:	d1 f7       	brne	.-12     	; 0x1cb2 <ATMEGA_set_clk_mode+0x68>
    1cbe:	10 92 7a 00 	sts	0x007A, r1
    1cc2:	8f ef       	ldi	r24, 0xFF	; 255
    1cc4:	80 93 64 00 	sts	0x0064, r24
    1cc8:	80 91 68 00 	lds	r24, 0x0068
    1ccc:	81 60       	ori	r24, 0x01	; 1
    1cce:	80 93 68 00 	sts	0x0068, r24
    1cd2:	80 91 6b 00 	lds	r24, 0x006B
    1cd6:	84 60       	ori	r24, 0x04	; 4
    1cd8:	80 93 6b 00 	sts	0x006B, r24
    1cdc:	78 94       	sei
    1cde:	83 b7       	in	r24, 0x33	; 51
    1ce0:	81 60       	ori	r24, 0x01	; 1
    1ce2:	83 bf       	out	0x33, r24	; 51
    1ce4:	88 95       	sleep
    1ce6:	08 95       	ret
    1ce8:	82 30       	cpi	r24, 0x02	; 2
    1cea:	08 f0       	brcs	.+2      	; 0x1cee <ATMEGA_set_clk_mode+0xa4>
    1cec:	78 94       	sei
    1cee:	08 95       	ret

00001cf0 <SPI_open>:
    1cf0:	0f 93       	push	r16
    1cf2:	1f 93       	push	r17
    1cf4:	0e 94 37 11 	call	0x226e	; 0x226e <__SPI_init>
    1cf8:	80 e0       	ldi	r24, 0x00	; 0
    1cfa:	66 e2       	ldi	r22, 0x26	; 38
    1cfc:	71 e1       	ldi	r23, 0x11	; 17
    1cfe:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <SPI_set_config_func>
    1d02:	81 e0       	ldi	r24, 0x01	; 1
    1d04:	6e e1       	ldi	r22, 0x1E	; 30
    1d06:	71 e1       	ldi	r23, 0x11	; 17
    1d08:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <SPI_set_config_func>
    1d0c:	82 e0       	ldi	r24, 0x02	; 2
    1d0e:	66 e1       	ldi	r22, 0x16	; 22
    1d10:	71 e1       	ldi	r23, 0x11	; 17
    1d12:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <SPI_set_config_func>
    1d16:	86 e0       	ldi	r24, 0x06	; 6
    1d18:	6e e2       	ldi	r22, 0x2E	; 46
    1d1a:	71 e1       	ldi	r23, 0x11	; 17
    1d1c:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <SPI_set_config_func>
    1d20:	0e e0       	ldi	r16, 0x0E	; 14
    1d22:	11 e1       	ldi	r17, 0x11	; 17
    1d24:	83 e0       	ldi	r24, 0x03	; 3
    1d26:	b8 01       	movw	r22, r16
    1d28:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <SPI_set_config_func>
    1d2c:	84 e0       	ldi	r24, 0x04	; 4
    1d2e:	b8 01       	movw	r22, r16
    1d30:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <SPI_set_config_func>
    1d34:	85 e0       	ldi	r24, 0x05	; 5
    1d36:	b8 01       	movw	r22, r16
    1d38:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <SPI_set_config_func>
    1d3c:	87 e0       	ldi	r24, 0x07	; 7
    1d3e:	b8 01       	movw	r22, r16
    1d40:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <SPI_set_config_func>
    1d44:	82 e0       	ldi	r24, 0x02	; 2
    1d46:	61 e0       	ldi	r22, 0x01	; 1
    1d48:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
    1d4c:	8f ef       	ldi	r24, 0xFF	; 255
    1d4e:	80 93 6c 04 	sts	0x046C, r24
    1d52:	87 e0       	ldi	r24, 0x07	; 7
    1d54:	0e 94 c0 04 	call	0x980	; 0x980 <SPI_set_slave_addr>
    1d58:	82 e0       	ldi	r24, 0x02	; 2
    1d5a:	91 e0       	ldi	r25, 0x01	; 1
    1d5c:	1f 91       	pop	r17
    1d5e:	0f 91       	pop	r16
    1d60:	08 95       	ret

00001d62 <SPI_set_config_func>:
    1d62:	e8 2f       	mov	r30, r24
    1d64:	f0 e0       	ldi	r31, 0x00	; 0
    1d66:	ee 0f       	add	r30, r30
    1d68:	ff 1f       	adc	r31, r31
    1d6a:	e4 51       	subi	r30, 0x14	; 20
    1d6c:	fc 4f       	sbci	r31, 0xFC	; 252
    1d6e:	71 83       	std	Z+1, r23	; 0x01
    1d70:	60 83       	st	Z, r22
    1d72:	08 95       	ret

00001d74 <__SPKR_TIMER1_COMPA_vect>:
    1d74:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <SPKR_clk>
    1d78:	08 95       	ret

00001d7a <SPKR_beep>:
    1d7a:	9b 01       	movw	r18, r22
    1d7c:	ac 01       	movw	r20, r24
    1d7e:	80 91 fd 03 	lds	r24, 0x03FD
    1d82:	88 23       	and	r24, r24
    1d84:	81 f0       	breq	.+32     	; 0x1da6 <SPKR_beep+0x2c>
    1d86:	da 01       	movw	r26, r20
    1d88:	c9 01       	movw	r24, r18
    1d8a:	88 0f       	add	r24, r24
    1d8c:	99 1f       	adc	r25, r25
    1d8e:	aa 1f       	adc	r26, r26
    1d90:	bb 1f       	adc	r27, r27
    1d92:	90 93 09 04 	sts	0x0409, r25
    1d96:	80 93 08 04 	sts	0x0408, r24
    1d9a:	21 15       	cp	r18, r1
    1d9c:	31 05       	cpc	r19, r1
    1d9e:	41 05       	cpc	r20, r1
    1da0:	51 05       	cpc	r21, r1
    1da2:	09 f4       	brne	.+2      	; 0x1da6 <SPKR_beep+0x2c>
    1da4:	5f 98       	cbi	0x0b, 7	; 11
    1da6:	08 95       	ret

00001da8 <SPKR_clk>:
    1da8:	80 91 fe 03 	lds	r24, 0x03FE
    1dac:	90 91 ff 03 	lds	r25, 0x03FF
    1db0:	a0 91 00 04 	lds	r26, 0x0400
    1db4:	b0 91 01 04 	lds	r27, 0x0401
    1db8:	20 91 02 04 	lds	r18, 0x0402
    1dbc:	30 91 03 04 	lds	r19, 0x0403
    1dc0:	40 91 04 04 	lds	r20, 0x0404
    1dc4:	50 91 05 04 	lds	r21, 0x0405
    1dc8:	28 0f       	add	r18, r24
    1dca:	39 1f       	adc	r19, r25
    1dcc:	4a 1f       	adc	r20, r26
    1dce:	5b 1f       	adc	r21, r27
    1dd0:	20 93 fe 03 	sts	0x03FE, r18
    1dd4:	30 93 ff 03 	sts	0x03FF, r19
    1dd8:	40 93 00 04 	sts	0x0400, r20
    1ddc:	50 93 01 04 	sts	0x0401, r21
    1de0:	80 91 fe 03 	lds	r24, 0x03FE
    1de4:	90 91 ff 03 	lds	r25, 0x03FF
    1de8:	a0 91 00 04 	lds	r26, 0x0400
    1dec:	b0 91 01 04 	lds	r27, 0x0401
    1df0:	88 51       	subi	r24, 0x18	; 24
    1df2:	96 4f       	sbci	r25, 0xF6	; 246
    1df4:	a0 40       	sbci	r26, 0x00	; 0
    1df6:	b0 40       	sbci	r27, 0x00	; 0
    1df8:	bc f0       	brlt	.+46     	; 0x1e28 <SPKR_clk+0x80>
    1dfa:	8b b1       	in	r24, 0x0b	; 11
    1dfc:	80 58       	subi	r24, 0x80	; 128
    1dfe:	8b b9       	out	0x0b, r24	; 11
    1e00:	80 91 fe 03 	lds	r24, 0x03FE
    1e04:	90 91 ff 03 	lds	r25, 0x03FF
    1e08:	a0 91 00 04 	lds	r26, 0x0400
    1e0c:	b0 91 01 04 	lds	r27, 0x0401
    1e10:	88 51       	subi	r24, 0x18	; 24
    1e12:	96 4f       	sbci	r25, 0xF6	; 246
    1e14:	a0 40       	sbci	r26, 0x00	; 0
    1e16:	b0 40       	sbci	r27, 0x00	; 0
    1e18:	80 93 fe 03 	sts	0x03FE, r24
    1e1c:	90 93 ff 03 	sts	0x03FF, r25
    1e20:	a0 93 00 04 	sts	0x0400, r26
    1e24:	b0 93 01 04 	sts	0x0401, r27
    1e28:	08 95       	ret

00001e2a <__SPKR_close_beep_mode>:
    1e2a:	8a e0       	ldi	r24, 0x0A	; 10
    1e2c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    1e30:	81 30       	cpi	r24, 0x01	; 1
    1e32:	41 f4       	brne	.+16     	; 0x1e44 <__SPKR_close_beep_mode+0x1a>
    1e34:	0e 94 50 11 	call	0x22a0	; 0x22a0 <__SPKR_close>
    1e38:	10 92 fd 03 	sts	0x03FD, r1
    1e3c:	8a e0       	ldi	r24, 0x0A	; 10
    1e3e:	60 e0       	ldi	r22, 0x00	; 0
    1e40:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
    1e44:	08 95       	ret

00001e46 <__SPKR_close_tone_mode>:
    1e46:	89 e0       	ldi	r24, 0x09	; 9
    1e48:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    1e4c:	81 30       	cpi	r24, 0x01	; 1
    1e4e:	d9 f4       	brne	.+54     	; 0x1e86 <__SPKR_close_tone_mode+0x40>
    1e50:	80 91 fc 03 	lds	r24, 0x03FC
    1e54:	88 23       	and	r24, r24
    1e56:	11 f0       	breq	.+4      	; 0x1e5c <__SPKR_close_tone_mode+0x16>
    1e58:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <__SPKR_stop>
    1e5c:	82 e0       	ldi	r24, 0x02	; 2
    1e5e:	0e 94 50 11 	call	0x22a0	; 0x22a0 <__SPKR_close>
    1e62:	80 91 0a 04 	lds	r24, 0x040A
    1e66:	90 91 0b 04 	lds	r25, 0x040B
    1e6a:	00 97       	sbiw	r24, 0x00	; 0
    1e6c:	31 f0       	breq	.+12     	; 0x1e7a <__SPKR_close_tone_mode+0x34>
    1e6e:	0e 94 c2 29 	call	0x5384	; 0x5384 <free>
    1e72:	10 92 0b 04 	sts	0x040B, r1
    1e76:	10 92 0a 04 	sts	0x040A, r1
    1e7a:	10 92 fc 03 	sts	0x03FC, r1
    1e7e:	89 e0       	ldi	r24, 0x09	; 9
    1e80:	60 e0       	ldi	r22, 0x00	; 0
    1e82:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
    1e86:	08 95       	ret

00001e88 <SPKR_close>:
    1e88:	81 30       	cpi	r24, 0x01	; 1
    1e8a:	29 f0       	breq	.+10     	; 0x1e96 <SPKR_close+0xe>
    1e8c:	82 30       	cpi	r24, 0x02	; 2
    1e8e:	29 f4       	brne	.+10     	; 0x1e9a <SPKR_close+0x12>
    1e90:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <__SPKR_close_tone_mode>
    1e94:	08 95       	ret
    1e96:	0e 94 15 0f 	call	0x1e2a	; 0x1e2a <__SPKR_close_beep_mode>
    1e9a:	08 95       	ret

00001e9c <__SPKR_init>:
    1e9c:	98 2f       	mov	r25, r24
    1e9e:	80 91 fc 03 	lds	r24, 0x03FC
    1ea2:	88 23       	and	r24, r24
    1ea4:	31 f4       	brne	.+12     	; 0x1eb2 <__SPKR_init+0x16>
    1ea6:	80 91 fd 03 	lds	r24, 0x03FD
    1eaa:	88 23       	and	r24, r24
    1eac:	11 f4       	brne	.+4      	; 0x1eb2 <__SPKR_init+0x16>
    1eae:	57 9a       	sbi	0x0a, 7	; 10
    1eb0:	5f 98       	cbi	0x0b, 7	; 11
    1eb2:	80 91 fc 03 	lds	r24, 0x03FC
    1eb6:	88 23       	and	r24, r24
    1eb8:	d1 f4       	brne	.+52     	; 0x1eee <__SPKR_init+0x52>
    1eba:	92 30       	cpi	r25, 0x02	; 2
    1ebc:	c1 f4       	brne	.+48     	; 0x1eee <__SPKR_init+0x52>
    1ebe:	10 92 80 00 	sts	0x0080, r1
    1ec2:	10 92 81 00 	sts	0x0081, r1
    1ec6:	80 91 81 00 	lds	r24, 0x0081
    1eca:	88 60       	ori	r24, 0x08	; 8
    1ecc:	80 93 81 00 	sts	0x0081, r24
    1ed0:	80 91 81 00 	lds	r24, 0x0081
    1ed4:	81 60       	ori	r24, 0x01	; 1
    1ed6:	80 93 81 00 	sts	0x0081, r24
    1eda:	10 92 85 00 	sts	0x0085, r1
    1ede:	10 92 84 00 	sts	0x0084, r1
    1ee2:	81 e0       	ldi	r24, 0x01	; 1
    1ee4:	80 93 89 00 	sts	0x0089, r24
    1ee8:	80 e9       	ldi	r24, 0x90	; 144
    1eea:	80 93 88 00 	sts	0x0088, r24
    1eee:	08 95       	ret

00001ef0 <__SPKR_stop>:
    1ef0:	ef e6       	ldi	r30, 0x6F	; 111
    1ef2:	f0 e0       	ldi	r31, 0x00	; 0
    1ef4:	80 81       	ld	r24, Z
    1ef6:	8d 7f       	andi	r24, 0xFD	; 253
    1ef8:	80 83       	st	Z, r24
    1efa:	08 95       	ret

00001efc <__STEPPER_close>:
    1efc:	88 b1       	in	r24, 0x08	; 8
    1efe:	83 70       	andi	r24, 0x03	; 3
    1f00:	88 b9       	out	0x08, r24	; 8
    1f02:	3a 98       	cbi	0x07, 2	; 7
    1f04:	3b 98       	cbi	0x07, 3	; 7
    1f06:	3c 98       	cbi	0x07, 4	; 7
    1f08:	3d 98       	cbi	0x07, 5	; 7
    1f0a:	3e 98       	cbi	0x07, 6	; 7
    1f0c:	3f 98       	cbi	0x07, 7	; 7
    1f0e:	08 95       	ret

00001f10 <STEPPER_go>:
    1f10:	98 2f       	mov	r25, r24
    1f12:	81 e0       	ldi	r24, 0x01	; 1
    1f14:	80 93 51 04 	sts	0x0451, r24
    1f18:	91 30       	cpi	r25, 0x01	; 1
    1f1a:	51 f0       	breq	.+20     	; 0x1f30 <STEPPER_go+0x20>
    1f1c:	91 30       	cpi	r25, 0x01	; 1
    1f1e:	18 f0       	brcs	.+6      	; 0x1f26 <STEPPER_go+0x16>
    1f20:	92 30       	cpi	r25, 0x02	; 2
    1f22:	41 f4       	brne	.+16     	; 0x1f34 <STEPPER_go+0x24>
    1f24:	03 c0       	rjmp	.+6      	; 0x1f2c <STEPPER_go+0x1c>
    1f26:	10 92 39 04 	sts	0x0439, r1
    1f2a:	04 c0       	rjmp	.+8      	; 0x1f34 <STEPPER_go+0x24>
    1f2c:	10 92 39 04 	sts	0x0439, r1
    1f30:	10 92 3a 04 	sts	0x043A, r1
    1f34:	10 92 51 04 	sts	0x0451, r1
    1f38:	08 95       	ret

00001f3a <__STEPPER_init>:
    1f3a:	3a 9a       	sbi	0x07, 2	; 7
    1f3c:	3b 9a       	sbi	0x07, 3	; 7
    1f3e:	3c 9a       	sbi	0x07, 4	; 7
    1f40:	3d 9a       	sbi	0x07, 5	; 7
    1f42:	3e 9a       	sbi	0x07, 6	; 7
    1f44:	3f 9a       	sbi	0x07, 7	; 7
    1f46:	88 b1       	in	r24, 0x08	; 8
    1f48:	83 70       	andi	r24, 0x03	; 3
    1f4a:	88 b9       	out	0x08, r24	; 8
    1f4c:	08 95       	ret

00001f4e <STEPPER_set_steps>:
    1f4e:	98 2f       	mov	r25, r24
    1f50:	81 e0       	ldi	r24, 0x01	; 1
    1f52:	80 93 51 04 	sts	0x0451, r24
    1f56:	91 30       	cpi	r25, 0x01	; 1
    1f58:	71 f0       	breq	.+28     	; 0x1f76 <STEPPER_set_steps+0x28>
    1f5a:	91 30       	cpi	r25, 0x01	; 1
    1f5c:	18 f0       	brcs	.+6      	; 0x1f64 <STEPPER_set_steps+0x16>
    1f5e:	92 30       	cpi	r25, 0x02	; 2
    1f60:	71 f4       	brne	.+28     	; 0x1f7e <STEPPER_set_steps+0x30>
    1f62:	05 c0       	rjmp	.+10     	; 0x1f6e <STEPPER_set_steps+0x20>
    1f64:	70 93 2e 04 	sts	0x042E, r23
    1f68:	60 93 2d 04 	sts	0x042D, r22
    1f6c:	08 c0       	rjmp	.+16     	; 0x1f7e <STEPPER_set_steps+0x30>
    1f6e:	70 93 2e 04 	sts	0x042E, r23
    1f72:	60 93 2d 04 	sts	0x042D, r22
    1f76:	70 93 30 04 	sts	0x0430, r23
    1f7a:	60 93 2f 04 	sts	0x042F, r22
    1f7e:	10 92 51 04 	sts	0x0451, r1
    1f82:	08 95       	ret

00001f84 <STEPPER_set_stop_mode>:
    1f84:	98 2f       	mov	r25, r24
    1f86:	81 e0       	ldi	r24, 0x01	; 1
    1f88:	80 93 51 04 	sts	0x0451, r24
    1f8c:	91 30       	cpi	r25, 0x01	; 1
    1f8e:	51 f0       	breq	.+20     	; 0x1fa4 <STEPPER_set_stop_mode+0x20>
    1f90:	91 30       	cpi	r25, 0x01	; 1
    1f92:	18 f0       	brcs	.+6      	; 0x1f9a <STEPPER_set_stop_mode+0x16>
    1f94:	92 30       	cpi	r25, 0x02	; 2
    1f96:	41 f4       	brne	.+16     	; 0x1fa8 <STEPPER_set_stop_mode+0x24>
    1f98:	03 c0       	rjmp	.+6      	; 0x1fa0 <STEPPER_set_stop_mode+0x1c>
    1f9a:	60 93 3b 04 	sts	0x043B, r22
    1f9e:	04 c0       	rjmp	.+8      	; 0x1fa8 <STEPPER_set_stop_mode+0x24>
    1fa0:	60 93 3b 04 	sts	0x043B, r22
    1fa4:	60 93 3c 04 	sts	0x043C, r22
    1fa8:	10 92 51 04 	sts	0x0451, r1
    1fac:	08 95       	ret

00001fae <STEPPER_setup_decels>:
    1fae:	0f 93       	push	r16
    1fb0:	1f 93       	push	r17
    1fb2:	cf 93       	push	r28
    1fb4:	df 93       	push	r29
    1fb6:	eb 01       	movw	r28, r22
    1fb8:	8a 01       	movw	r16, r20
    1fba:	81 30       	cpi	r24, 0x01	; 1
    1fbc:	01 f1       	breq	.+64     	; 0x1ffe <STEPPER_setup_decels+0x50>
    1fbe:	81 30       	cpi	r24, 0x01	; 1
    1fc0:	18 f0       	brcs	.+6      	; 0x1fc8 <STEPPER_setup_decels+0x1a>
    1fc2:	82 30       	cpi	r24, 0x02	; 2
    1fc4:	61 f5       	brne	.+88     	; 0x201e <STEPPER_setup_decels+0x70>
    1fc6:	0d c0       	rjmp	.+26     	; 0x1fe2 <STEPPER_setup_decels+0x34>
    1fc8:	80 91 25 04 	lds	r24, 0x0425
    1fcc:	90 91 26 04 	lds	r25, 0x0426
    1fd0:	89 2b       	or	r24, r25
    1fd2:	11 f0       	breq	.+4      	; 0x1fd8 <STEPPER_setup_decels+0x2a>
    1fd4:	80 e0       	ldi	r24, 0x00	; 0
    1fd6:	1a c0       	rjmp	.+52     	; 0x200c <STEPPER_setup_decels+0x5e>
    1fd8:	10 92 32 04 	sts	0x0432, r1
    1fdc:	10 92 31 04 	sts	0x0431, r1
    1fe0:	1e c0       	rjmp	.+60     	; 0x201e <STEPPER_setup_decels+0x70>
    1fe2:	80 91 25 04 	lds	r24, 0x0425
    1fe6:	90 91 26 04 	lds	r25, 0x0426
    1fea:	89 2b       	or	r24, r25
    1fec:	21 f0       	breq	.+8      	; 0x1ff6 <STEPPER_setup_decels+0x48>
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <STEPPER_set_decel_step_values>
    1ff4:	04 c0       	rjmp	.+8      	; 0x1ffe <STEPPER_setup_decels+0x50>
    1ff6:	10 92 32 04 	sts	0x0432, r1
    1ffa:	10 92 31 04 	sts	0x0431, r1
    1ffe:	80 91 27 04 	lds	r24, 0x0427
    2002:	90 91 28 04 	lds	r25, 0x0428
    2006:	89 2b       	or	r24, r25
    2008:	31 f0       	breq	.+12     	; 0x2016 <STEPPER_setup_decels+0x68>
    200a:	81 e0       	ldi	r24, 0x01	; 1
    200c:	be 01       	movw	r22, r28
    200e:	a8 01       	movw	r20, r16
    2010:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <STEPPER_set_decel_step_values>
    2014:	04 c0       	rjmp	.+8      	; 0x201e <STEPPER_setup_decels+0x70>
    2016:	10 92 34 04 	sts	0x0434, r1
    201a:	10 92 33 04 	sts	0x0433, r1
    201e:	df 91       	pop	r29
    2020:	cf 91       	pop	r28
    2022:	1f 91       	pop	r17
    2024:	0f 91       	pop	r16
    2026:	08 95       	ret

00002028 <SYS_init>:
    2028:	10 92 54 04 	sts	0x0454, r1
    202c:	10 92 55 04 	sts	0x0455, r1
    2030:	10 92 59 04 	sts	0x0459, r1
    2034:	10 92 56 04 	sts	0x0456, r1
    2038:	10 92 58 04 	sts	0x0458, r1
    203c:	10 92 5a 04 	sts	0x045A, r1
    2040:	10 92 5b 04 	sts	0x045B, r1
    2044:	10 92 5c 04 	sts	0x045C, r1
    2048:	10 92 5d 04 	sts	0x045D, r1
    204c:	10 92 5e 04 	sts	0x045E, r1
    2050:	10 92 5f 04 	sts	0x045F, r1
    2054:	10 92 60 04 	sts	0x0460, r1
    2058:	10 92 61 04 	sts	0x0461, r1
    205c:	10 92 62 04 	sts	0x0462, r1
    2060:	10 92 63 04 	sts	0x0463, r1
    2064:	10 92 64 04 	sts	0x0464, r1
    2068:	10 92 65 04 	sts	0x0465, r1
    206c:	08 95       	ret

0000206e <ATTINY_get_sensors>:
    206e:	0f 93       	push	r16
    2070:	1f 93       	push	r17
    2072:	81 e0       	ldi	r24, 0x01	; 1
    2074:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    2078:	81 30       	cpi	r24, 0x01	; 1
    207a:	11 f0       	breq	.+4      	; 0x2080 <ATTINY_get_sensors+0x12>
    207c:	00 e0       	ldi	r16, 0x00	; 0
    207e:	24 c0       	rjmp	.+72     	; 0x20c8 <ATTINY_get_sensors+0x5a>
    2080:	87 e0       	ldi	r24, 0x07	; 7
    2082:	0e 94 c0 04 	call	0x980	; 0x980 <SPI_set_slave_addr>
    2086:	82 e0       	ldi	r24, 0x02	; 2
    2088:	6a e0       	ldi	r22, 0x0A	; 10
    208a:	0e 94 11 05 	call	0xa22	; 0xa22 <SPI_transmit>
    208e:	82 e0       	ldi	r24, 0x02	; 2
    2090:	62 eb       	ldi	r22, 0xB2	; 178
    2092:	0e 94 11 05 	call	0xa22	; 0xa22 <SPI_transmit>
    2096:	18 ec       	ldi	r17, 0xC8	; 200
    2098:	81 2f       	mov	r24, r17
    209a:	8a 95       	dec	r24
    209c:	f1 f7       	brne	.-4      	; 0x209a <ATTINY_get_sensors+0x2c>
    209e:	82 e0       	ldi	r24, 0x02	; 2
    20a0:	60 e0       	ldi	r22, 0x00	; 0
    20a2:	0e 94 3e 11 	call	0x227c	; 0x227c <SPI_receive>
    20a6:	08 2f       	mov	r16, r24
    20a8:	81 2f       	mov	r24, r17
    20aa:	8a 95       	dec	r24
    20ac:	f1 f7       	brne	.-4      	; 0x20aa <ATTINY_get_sensors+0x3c>
    20ae:	82 e0       	ldi	r24, 0x02	; 2
    20b0:	60 e0       	ldi	r22, 0x00	; 0
    20b2:	0e 94 3e 11 	call	0x227c	; 0x227c <SPI_receive>
    20b6:	1a 95       	dec	r17
    20b8:	f1 f7       	brne	.-4      	; 0x20b6 <ATTINY_get_sensors+0x48>
    20ba:	87 e0       	ldi	r24, 0x07	; 7
    20bc:	0e 94 c0 04 	call	0x980	; 0x980 <SPI_set_slave_addr>
    20c0:	88 e8       	ldi	r24, 0x88	; 136
    20c2:	93 e1       	ldi	r25, 0x13	; 19
    20c4:	01 97       	sbiw	r24, 0x01	; 1
    20c6:	f1 f7       	brne	.-4      	; 0x20c4 <ATTINY_get_sensors+0x56>
    20c8:	80 2f       	mov	r24, r16
    20ca:	1f 91       	pop	r17
    20cc:	0f 91       	pop	r16
    20ce:	08 95       	ret

000020d0 <TMRSRVC_insert>:
    20d0:	cf 92       	push	r12
    20d2:	df 92       	push	r13
    20d4:	ef 92       	push	r14
    20d6:	ff 92       	push	r15
    20d8:	0f 93       	push	r16
    20da:	1f 93       	push	r17
    20dc:	cf 93       	push	r28
    20de:	df 93       	push	r29
    20e0:	ec 01       	movw	r28, r24
    20e2:	80 91 8b 04 	lds	r24, 0x048B
    20e6:	88 23       	and	r24, r24
    20e8:	39 f4       	brne	.+14     	; 0x20f8 <TMRSRVC_insert+0x28>
    20ea:	d0 93 8d 04 	sts	0x048D, r29
    20ee:	c0 93 8c 04 	sts	0x048C, r28
    20f2:	0e 94 f6 10 	call	0x21ec	; 0x21ec <TMRSRVC_start>
    20f6:	47 c0       	rjmp	.+142    	; 0x2186 <TMRSRVC_insert+0xb6>
    20f8:	c0 90 8c 04 	lds	r12, 0x048C
    20fc:	d0 90 8d 04 	lds	r13, 0x048D
    2100:	00 e0       	ldi	r16, 0x00	; 0
    2102:	10 e0       	ldi	r17, 0x00	; 0
    2104:	ee 24       	eor	r14, r14
    2106:	ff 24       	eor	r15, r15
    2108:	37 c0       	rjmp	.+110    	; 0x2178 <TMRSRVC_insert+0xa8>
    210a:	a8 81       	ld	r26, Y
    210c:	b9 81       	ldd	r27, Y+1	; 0x01
    210e:	fd 01       	movw	r30, r26
    2110:	64 81       	ldd	r22, Z+4	; 0x04
    2112:	75 81       	ldd	r23, Z+5	; 0x05
    2114:	f6 01       	movw	r30, r12
    2116:	40 81       	ld	r20, Z
    2118:	51 81       	ldd	r21, Z+1	; 0x01
    211a:	fa 01       	movw	r30, r20
    211c:	84 81       	ldd	r24, Z+4	; 0x04
    211e:	95 81       	ldd	r25, Z+5	; 0x05
    2120:	9b 01       	movw	r18, r22
    2122:	28 1b       	sub	r18, r24
    2124:	39 0b       	sbc	r19, r25
    2126:	37 ff       	sbrs	r19, 7
    2128:	0f c0       	rjmp	.+30     	; 0x2148 <TMRSRVC_insert+0x78>
    212a:	86 1b       	sub	r24, r22
    212c:	97 0b       	sbc	r25, r23
    212e:	95 83       	std	Z+5, r25	; 0x05
    2130:	84 83       	std	Z+4, r24	; 0x04
    2132:	db 82       	std	Y+3, r13	; 0x03
    2134:	ca 82       	std	Y+2, r12	; 0x02
    2136:	01 2b       	or	r16, r17
    2138:	29 f4       	brne	.+10     	; 0x2144 <TMRSRVC_insert+0x74>
    213a:	d0 93 8d 04 	sts	0x048D, r29
    213e:	c0 93 8c 04 	sts	0x048C, r28
    2142:	21 c0       	rjmp	.+66     	; 0x2186 <TMRSRVC_insert+0xb6>
    2144:	f7 01       	movw	r30, r14
    2146:	0c c0       	rjmp	.+24     	; 0x2160 <TMRSRVC_insert+0x90>
    2148:	f6 01       	movw	r30, r12
    214a:	82 81       	ldd	r24, Z+2	; 0x02
    214c:	93 81       	ldd	r25, Z+3	; 0x03
    214e:	21 15       	cp	r18, r1
    2150:	31 05       	cpc	r19, r1
    2152:	49 f4       	brne	.+18     	; 0x2166 <TMRSRVC_insert+0x96>
    2154:	fd 01       	movw	r30, r26
    2156:	15 82       	std	Z+5, r1	; 0x05
    2158:	14 82       	std	Z+4, r1	; 0x04
    215a:	9b 83       	std	Y+3, r25	; 0x03
    215c:	8a 83       	std	Y+2, r24	; 0x02
    215e:	f6 01       	movw	r30, r12
    2160:	d3 83       	std	Z+3, r29	; 0x03
    2162:	c2 83       	std	Z+2, r28	; 0x02
    2164:	10 c0       	rjmp	.+32     	; 0x2186 <TMRSRVC_insert+0xb6>
    2166:	fd 01       	movw	r30, r26
    2168:	35 83       	std	Z+5, r19	; 0x05
    216a:	24 83       	std	Z+4, r18	; 0x04
    216c:	00 97       	sbiw	r24, 0x00	; 0
    216e:	b9 f3       	breq	.-18     	; 0x215e <TMRSRVC_insert+0x8e>
    2170:	0f 5f       	subi	r16, 0xFF	; 255
    2172:	1f 4f       	sbci	r17, 0xFF	; 255
    2174:	76 01       	movw	r14, r12
    2176:	6c 01       	movw	r12, r24
    2178:	80 91 8b 04 	lds	r24, 0x048B
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	08 17       	cp	r16, r24
    2180:	19 07       	cpc	r17, r25
    2182:	18 f2       	brcs	.-122    	; 0x210a <TMRSRVC_insert+0x3a>
    2184:	ec cf       	rjmp	.-40     	; 0x215e <TMRSRVC_insert+0x8e>
    2186:	80 91 8b 04 	lds	r24, 0x048B
    218a:	8f 5f       	subi	r24, 0xFF	; 255
    218c:	80 93 8b 04 	sts	0x048B, r24
    2190:	df 91       	pop	r29
    2192:	cf 91       	pop	r28
    2194:	1f 91       	pop	r17
    2196:	0f 91       	pop	r16
    2198:	ff 90       	pop	r15
    219a:	ef 90       	pop	r14
    219c:	df 90       	pop	r13
    219e:	cf 90       	pop	r12
    21a0:	08 95       	ret

000021a2 <TMRSRVC_open>:
    21a2:	88 e0       	ldi	r24, 0x08	; 8
    21a4:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    21a8:	88 23       	and	r24, r24
    21aa:	b9 f4       	brne	.+46     	; 0x21da <TMRSRVC_open+0x38>
    21ac:	10 92 8b 04 	sts	0x048B, r1
    21b0:	10 92 8d 04 	sts	0x048D, r1
    21b4:	10 92 8c 04 	sts	0x048C, r1
    21b8:	10 92 0c 04 	sts	0x040C, r1
    21bc:	10 92 0d 04 	sts	0x040D, r1
    21c0:	80 e1       	ldi	r24, 0x10	; 16
    21c2:	69 ed       	ldi	r22, 0xD9	; 217
    21c4:	71 e1       	ldi	r23, 0x11	; 17
    21c6:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__ISR_attach>
    21ca:	0e 94 e0 11 	call	0x23c0	; 0x23c0 <__TMRSRVC_init>
    21ce:	0e 94 f0 10 	call	0x21e0	; 0x21e0 <__TMRSRVC_start>
    21d2:	88 e0       	ldi	r24, 0x08	; 8
    21d4:	61 e0       	ldi	r22, 0x01	; 1
    21d6:	0e 94 a0 09 	call	0x1340	; 0x1340 <SYS_set_state>
    21da:	88 e0       	ldi	r24, 0x08	; 8
    21dc:	91 e0       	ldi	r25, 0x01	; 1
    21de:	08 95       	ret

000021e0 <__TMRSRVC_start>:
    21e0:	ee e6       	ldi	r30, 0x6E	; 110
    21e2:	f0 e0       	ldi	r31, 0x00	; 0
    21e4:	80 81       	ld	r24, Z
    21e6:	82 60       	ori	r24, 0x02	; 2
    21e8:	80 83       	st	Z, r24
    21ea:	08 95       	ret

000021ec <TMRSRVC_start>:
    21ec:	81 e0       	ldi	r24, 0x01	; 1
    21ee:	80 93 0d 04 	sts	0x040D, r24
    21f2:	08 95       	ret

000021f4 <__ISR_attach>:
    21f4:	80 32       	cpi	r24, 0x20	; 32
    21f6:	18 f0       	brcs	.+6      	; 0x21fe <__ISR_attach+0xa>
    21f8:	20 e0       	ldi	r18, 0x00	; 0
    21fa:	30 e0       	ldi	r19, 0x00	; 0
    21fc:	0a c0       	rjmp	.+20     	; 0x2212 <__ISR_attach+0x1e>
    21fe:	e8 2f       	mov	r30, r24
    2200:	f0 e0       	ldi	r31, 0x00	; 0
    2202:	ee 0f       	add	r30, r30
    2204:	ff 1f       	adc	r31, r31
    2206:	e4 55       	subi	r30, 0x54	; 84
    2208:	fc 4f       	sbci	r31, 0xFC	; 252
    220a:	20 81       	ld	r18, Z
    220c:	31 81       	ldd	r19, Z+1	; 0x01
    220e:	71 83       	std	Z+1, r23	; 0x01
    2210:	60 83       	st	Z, r22
    2212:	c9 01       	movw	r24, r18
    2214:	08 95       	ret

00002216 <__ATMEGA_init>:
    2216:	24 9a       	sbi	0x04, 4	; 4
    2218:	2c 9a       	sbi	0x05, 4	; 5
    221a:	08 95       	ret

0000221c <SPI_default_config>:
    221c:	83 e5       	ldi	r24, 0x53	; 83
    221e:	8c bd       	out	0x2c, r24	; 44
    2220:	81 e0       	ldi	r24, 0x01	; 1
    2222:	8d bd       	out	0x2d, r24	; 45
    2224:	8d e0       	ldi	r24, 0x0D	; 13
    2226:	8a 95       	dec	r24
    2228:	f1 f7       	brne	.-4      	; 0x2226 <SPI_default_config+0xa>
    222a:	08 95       	ret

0000222c <SPI_ATtiny0_config>:
    222c:	83 e5       	ldi	r24, 0x53	; 83
    222e:	8c bd       	out	0x2c, r24	; 44
    2230:	1d bc       	out	0x2d, r1	; 45
    2232:	84 ef       	ldi	r24, 0xF4	; 244
    2234:	91 e0       	ldi	r25, 0x01	; 1
    2236:	01 97       	sbiw	r24, 0x01	; 1
    2238:	f1 f7       	brne	.-4      	; 0x2236 <SPI_ATtiny0_config+0xa>
    223a:	08 95       	ret

0000223c <SPI_PSXC_config>:
    223c:	8f e7       	ldi	r24, 0x7F	; 127
    223e:	8c bd       	out	0x2c, r24	; 44
    2240:	1d bc       	out	0x2d, r1	; 45
    2242:	84 ef       	ldi	r24, 0xF4	; 244
    2244:	91 e0       	ldi	r25, 0x01	; 1
    2246:	01 97       	sbiw	r24, 0x01	; 1
    2248:	f1 f7       	brne	.-4      	; 0x2246 <SPI_PSXC_config+0xa>
    224a:	08 95       	ret

0000224c <SPI_LCD_config>:
    224c:	83 e5       	ldi	r24, 0x53	; 83
    224e:	8c bd       	out	0x2c, r24	; 44
    2250:	81 e0       	ldi	r24, 0x01	; 1
    2252:	8d bd       	out	0x2d, r24	; 45
    2254:	8d e0       	ldi	r24, 0x0D	; 13
    2256:	8a 95       	dec	r24
    2258:	f1 f7       	brne	.-4      	; 0x2256 <SPI_LCD_config+0xa>
    225a:	08 95       	ret

0000225c <SPI_FLASH_config>:
    225c:	83 e5       	ldi	r24, 0x53	; 83
    225e:	8c bd       	out	0x2c, r24	; 44
    2260:	81 e0       	ldi	r24, 0x01	; 1
    2262:	8d bd       	out	0x2d, r24	; 45
    2264:	84 ef       	ldi	r24, 0xF4	; 244
    2266:	91 e0       	ldi	r25, 0x01	; 1
    2268:	01 97       	sbiw	r24, 0x01	; 1
    226a:	f1 f7       	brne	.-4      	; 0x2268 <SPI_FLASH_config+0xc>
    226c:	08 95       	ret

0000226e <__SPI_init>:
    226e:	25 9a       	sbi	0x04, 5	; 4
    2270:	26 98       	cbi	0x04, 6	; 4
    2272:	27 9a       	sbi	0x04, 7	; 4
    2274:	20 9a       	sbi	0x04, 0	; 4
    2276:	21 9a       	sbi	0x04, 1	; 4
    2278:	22 9a       	sbi	0x04, 2	; 4
    227a:	08 95       	ret

0000227c <SPI_receive>:
    227c:	1f 93       	push	r17
    227e:	16 2f       	mov	r17, r22
    2280:	0e 94 c0 04 	call	0x980	; 0x980 <SPI_set_slave_addr>
    2284:	82 e0       	ldi	r24, 0x02	; 2
    2286:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    228a:	81 30       	cpi	r24, 0x01	; 1
    228c:	11 f0       	breq	.+4      	; 0x2292 <SPI_receive+0x16>
    228e:	80 e0       	ldi	r24, 0x00	; 0
    2290:	05 c0       	rjmp	.+10     	; 0x229c <SPI_receive+0x20>
    2292:	1e bd       	out	0x2e, r17	; 46
    2294:	0d b4       	in	r0, 0x2d	; 45
    2296:	07 fe       	sbrs	r0, 7
    2298:	fd cf       	rjmp	.-6      	; 0x2294 <SPI_receive+0x18>
    229a:	8e b5       	in	r24, 0x2e	; 46
    229c:	1f 91       	pop	r17
    229e:	08 95       	ret

000022a0 <__SPKR_close>:
    22a0:	82 30       	cpi	r24, 0x02	; 2
    22a2:	29 f4       	brne	.+10     	; 0x22ae <__SPKR_close+0xe>
    22a4:	80 91 81 00 	lds	r24, 0x0081
    22a8:	8e 7f       	andi	r24, 0xFE	; 254
    22aa:	80 93 81 00 	sts	0x0081, r24
    22ae:	80 91 fc 03 	lds	r24, 0x03FC
    22b2:	81 30       	cpi	r24, 0x01	; 1
    22b4:	31 f4       	brne	.+12     	; 0x22c2 <__SPKR_close+0x22>
    22b6:	80 91 fd 03 	lds	r24, 0x03FD
    22ba:	81 30       	cpi	r24, 0x01	; 1
    22bc:	11 f4       	brne	.+4      	; 0x22c2 <__SPKR_close+0x22>
    22be:	00 00       	nop
    22c0:	08 95       	ret
    22c2:	80 91 fc 03 	lds	r24, 0x03FC
    22c6:	81 30       	cpi	r24, 0x01	; 1
    22c8:	21 f0       	breq	.+8      	; 0x22d2 <__SPKR_close+0x32>
    22ca:	80 91 fd 03 	lds	r24, 0x03FD
    22ce:	81 30       	cpi	r24, 0x01	; 1
    22d0:	11 f4       	brne	.+4      	; 0x22d6 <__SPKR_close+0x36>
    22d2:	5f 98       	cbi	0x0b, 7	; 11
    22d4:	57 98       	cbi	0x0a, 7	; 10
    22d6:	08 95       	ret

000022d8 <STEPPER_set_decel_step_values>:
    22d8:	ef 92       	push	r14
    22da:	ff 92       	push	r15
    22dc:	0f 93       	push	r16
    22de:	1f 93       	push	r17
    22e0:	cf 93       	push	r28
    22e2:	df 93       	push	r29
    22e4:	eb 01       	movw	r28, r22
    22e6:	88 23       	and	r24, r24
    22e8:	21 f0       	breq	.+8      	; 0x22f2 <STEPPER_set_decel_step_values+0x1a>
    22ea:	81 30       	cpi	r24, 0x01	; 1
    22ec:	09 f0       	breq	.+2      	; 0x22f0 <STEPPER_set_decel_step_values+0x18>
    22ee:	5a c0       	rjmp	.+180    	; 0x23a4 <STEPPER_set_decel_step_values+0xcc>
    22f0:	2d c0       	rjmp	.+90     	; 0x234c <STEPPER_set_decel_step_values+0x74>
    22f2:	9a 01       	movw	r18, r20
    22f4:	40 e0       	ldi	r20, 0x00	; 0
    22f6:	50 e0       	ldi	r21, 0x00	; 0
    22f8:	ca 01       	movw	r24, r20
    22fa:	b9 01       	movw	r22, r18
    22fc:	0e 94 7f 28 	call	0x50fe	; 0x50fe <__mulsi3>
    2300:	20 91 25 04 	lds	r18, 0x0425
    2304:	30 91 26 04 	lds	r19, 0x0426
    2308:	22 0f       	add	r18, r18
    230a:	33 1f       	adc	r19, r19
    230c:	40 e0       	ldi	r20, 0x00	; 0
    230e:	50 e0       	ldi	r21, 0x00	; 0
    2310:	0e 94 a3 28 	call	0x5146	; 0x5146 <__udivmodsi4>
    2314:	79 01       	movw	r14, r18
    2316:	8a 01       	movw	r16, r20
    2318:	a8 01       	movw	r20, r16
    231a:	97 01       	movw	r18, r14
    231c:	22 0f       	add	r18, r18
    231e:	33 1f       	adc	r19, r19
    2320:	44 1f       	adc	r20, r20
    2322:	55 1f       	adc	r21, r21
    2324:	ce 01       	movw	r24, r28
    2326:	a0 e0       	ldi	r26, 0x00	; 0
    2328:	b0 e0       	ldi	r27, 0x00	; 0
    232a:	82 17       	cp	r24, r18
    232c:	93 07       	cpc	r25, r19
    232e:	a4 07       	cpc	r26, r20
    2330:	b5 07       	cpc	r27, r21
    2332:	28 f0       	brcs	.+10     	; 0x233e <STEPPER_set_decel_step_values+0x66>
    2334:	f0 92 32 04 	sts	0x0432, r15
    2338:	e0 92 31 04 	sts	0x0431, r14
    233c:	33 c0       	rjmp	.+102    	; 0x23a4 <STEPPER_set_decel_step_values+0xcc>
    233e:	d6 95       	lsr	r29
    2340:	c7 95       	ror	r28
    2342:	d0 93 32 04 	sts	0x0432, r29
    2346:	c0 93 31 04 	sts	0x0431, r28
    234a:	2c c0       	rjmp	.+88     	; 0x23a4 <STEPPER_set_decel_step_values+0xcc>
    234c:	9a 01       	movw	r18, r20
    234e:	40 e0       	ldi	r20, 0x00	; 0
    2350:	50 e0       	ldi	r21, 0x00	; 0
    2352:	ca 01       	movw	r24, r20
    2354:	b9 01       	movw	r22, r18
    2356:	0e 94 7f 28 	call	0x50fe	; 0x50fe <__mulsi3>
    235a:	20 91 27 04 	lds	r18, 0x0427
    235e:	30 91 28 04 	lds	r19, 0x0428
    2362:	22 0f       	add	r18, r18
    2364:	33 1f       	adc	r19, r19
    2366:	40 e0       	ldi	r20, 0x00	; 0
    2368:	50 e0       	ldi	r21, 0x00	; 0
    236a:	0e 94 a3 28 	call	0x5146	; 0x5146 <__udivmodsi4>
    236e:	79 01       	movw	r14, r18
    2370:	8a 01       	movw	r16, r20
    2372:	a8 01       	movw	r20, r16
    2374:	97 01       	movw	r18, r14
    2376:	22 0f       	add	r18, r18
    2378:	33 1f       	adc	r19, r19
    237a:	44 1f       	adc	r20, r20
    237c:	55 1f       	adc	r21, r21
    237e:	ce 01       	movw	r24, r28
    2380:	a0 e0       	ldi	r26, 0x00	; 0
    2382:	b0 e0       	ldi	r27, 0x00	; 0
    2384:	82 17       	cp	r24, r18
    2386:	93 07       	cpc	r25, r19
    2388:	a4 07       	cpc	r26, r20
    238a:	b5 07       	cpc	r27, r21
    238c:	28 f0       	brcs	.+10     	; 0x2398 <STEPPER_set_decel_step_values+0xc0>
    238e:	f0 92 34 04 	sts	0x0434, r15
    2392:	e0 92 33 04 	sts	0x0433, r14
    2396:	06 c0       	rjmp	.+12     	; 0x23a4 <STEPPER_set_decel_step_values+0xcc>
    2398:	d6 95       	lsr	r29
    239a:	c7 95       	ror	r28
    239c:	d0 93 34 04 	sts	0x0434, r29
    23a0:	c0 93 33 04 	sts	0x0433, r28
    23a4:	df 91       	pop	r29
    23a6:	cf 91       	pop	r28
    23a8:	1f 91       	pop	r17
    23aa:	0f 91       	pop	r16
    23ac:	ff 90       	pop	r15
    23ae:	ef 90       	pop	r14
    23b0:	08 95       	ret

000023b2 <__TIMER0_COMPA_vect>:
    23b2:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <TMRSRVC_tick>
    23b6:	0e 94 29 12 	call	0x2452	; 0x2452 <STEPPER_clk>
    23ba:	0e 94 02 12 	call	0x2404	; 0x2404 <SPKR_beep_clk>
    23be:	08 95       	ret

000023c0 <__TMRSRVC_init>:
    23c0:	84 b5       	in	r24, 0x24	; 36
    23c2:	82 60       	ori	r24, 0x02	; 2
    23c4:	84 bd       	out	0x24, r24	; 36
    23c6:	85 b5       	in	r24, 0x25	; 37
    23c8:	84 60       	ori	r24, 0x04	; 4
    23ca:	85 bd       	out	0x25, r24	; 37
    23cc:	8e e4       	ldi	r24, 0x4E	; 78
    23ce:	87 bd       	out	0x27, r24	; 39
    23d0:	08 95       	ret

000023d2 <TMRSRVC_tick>:
    23d2:	88 e0       	ldi	r24, 0x08	; 8
    23d4:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    23d8:	88 23       	and	r24, r24
    23da:	11 f4       	brne	.+4      	; 0x23e0 <TMRSRVC_tick+0xe>
    23dc:	84 e0       	ldi	r24, 0x04	; 4
    23de:	08 95       	ret
    23e0:	80 91 0d 04 	lds	r24, 0x040D
    23e4:	88 23       	and	r24, r24
    23e6:	11 f4       	brne	.+4      	; 0x23ec <TMRSRVC_tick+0x1a>
    23e8:	83 e0       	ldi	r24, 0x03	; 3
    23ea:	08 95       	ret
    23ec:	80 91 0c 04 	lds	r24, 0x040C
    23f0:	88 23       	and	r24, r24
    23f2:	11 f0       	breq	.+4      	; 0x23f8 <TMRSRVC_tick+0x26>
    23f4:	82 e0       	ldi	r24, 0x02	; 2
    23f6:	08 95       	ret
    23f8:	0e 94 76 14 	call	0x28ec	; 0x28ec <TMRSRVC_process>
    23fc:	81 30       	cpi	r24, 0x01	; 1
    23fe:	e1 f3       	breq	.-8      	; 0x23f8 <TMRSRVC_tick+0x26>
    2400:	80 e0       	ldi	r24, 0x00	; 0
    2402:	08 95       	ret

00002404 <SPKR_beep_clk>:
    2404:	80 91 fd 03 	lds	r24, 0x03FD
    2408:	81 30       	cpi	r24, 0x01	; 1
    240a:	11 f5       	brne	.+68     	; 0x2450 <SPKR_beep_clk+0x4c>
    240c:	80 91 06 04 	lds	r24, 0x0406
    2410:	90 91 07 04 	lds	r25, 0x0407
    2414:	20 91 08 04 	lds	r18, 0x0408
    2418:	30 91 09 04 	lds	r19, 0x0409
    241c:	28 0f       	add	r18, r24
    241e:	39 1f       	adc	r19, r25
    2420:	30 93 07 04 	sts	0x0407, r19
    2424:	20 93 06 04 	sts	0x0406, r18
    2428:	80 91 06 04 	lds	r24, 0x0406
    242c:	90 91 07 04 	lds	r25, 0x0407
    2430:	88 5e       	subi	r24, 0xE8	; 232
    2432:	93 40       	sbci	r25, 0x03	; 3
    2434:	6c f0       	brlt	.+26     	; 0x2450 <SPKR_beep_clk+0x4c>
    2436:	8b b1       	in	r24, 0x0b	; 11
    2438:	80 58       	subi	r24, 0x80	; 128
    243a:	8b b9       	out	0x0b, r24	; 11
    243c:	80 91 06 04 	lds	r24, 0x0406
    2440:	90 91 07 04 	lds	r25, 0x0407
    2444:	88 5e       	subi	r24, 0xE8	; 232
    2446:	93 40       	sbci	r25, 0x03	; 3
    2448:	90 93 07 04 	sts	0x0407, r25
    244c:	80 93 06 04 	sts	0x0406, r24
    2450:	08 95       	ret

00002452 <STEPPER_clk>:
    2452:	87 e0       	ldi	r24, 0x07	; 7
    2454:	0e 94 58 09 	call	0x12b0	; 0x12b0 <SYS_get_state>
    2458:	81 30       	cpi	r24, 0x01	; 1
    245a:	09 f0       	breq	.+2      	; 0x245e <STEPPER_clk+0xc>
    245c:	aa c0       	rjmp	.+340    	; 0x25b2 <STEPPER_clk+0x160>
    245e:	80 91 25 04 	lds	r24, 0x0425
    2462:	90 91 26 04 	lds	r25, 0x0426
    2466:	89 2b       	or	r24, r25
    2468:	09 f1       	breq	.+66     	; 0x24ac <STEPPER_clk+0x5a>
    246a:	80 91 49 04 	lds	r24, 0x0449
    246e:	90 91 4a 04 	lds	r25, 0x044A
    2472:	20 91 25 04 	lds	r18, 0x0425
    2476:	30 91 26 04 	lds	r19, 0x0426
    247a:	82 0f       	add	r24, r18
    247c:	93 1f       	adc	r25, r19
    247e:	90 93 4a 04 	sts	0x044A, r25
    2482:	80 93 49 04 	sts	0x0449, r24
    2486:	80 91 49 04 	lds	r24, 0x0449
    248a:	90 91 4a 04 	lds	r25, 0x044A
    248e:	88 5e       	subi	r24, 0xE8	; 232
    2490:	93 40       	sbci	r25, 0x03	; 3
    2492:	a4 f0       	brlt	.+40     	; 0x24bc <STEPPER_clk+0x6a>
    2494:	80 91 49 04 	lds	r24, 0x0449
    2498:	90 91 4a 04 	lds	r25, 0x044A
    249c:	88 5e       	subi	r24, 0xE8	; 232
    249e:	93 40       	sbci	r25, 0x03	; 3
    24a0:	90 93 4a 04 	sts	0x044A, r25
    24a4:	80 93 49 04 	sts	0x0449, r24
    24a8:	41 e0       	ldi	r20, 0x01	; 1
    24aa:	09 c0       	rjmp	.+18     	; 0x24be <STEPPER_clk+0x6c>
    24ac:	80 91 1d 04 	lds	r24, 0x041D
    24b0:	90 91 1e 04 	lds	r25, 0x041E
    24b4:	90 93 22 04 	sts	0x0422, r25
    24b8:	80 93 21 04 	sts	0x0421, r24
    24bc:	40 e0       	ldi	r20, 0x00	; 0
    24be:	80 91 27 04 	lds	r24, 0x0427
    24c2:	90 91 28 04 	lds	r25, 0x0428
    24c6:	89 2b       	or	r24, r25
    24c8:	09 f1       	breq	.+66     	; 0x250c <STEPPER_clk+0xba>
    24ca:	80 91 4b 04 	lds	r24, 0x044B
    24ce:	90 91 4c 04 	lds	r25, 0x044C
    24d2:	20 91 27 04 	lds	r18, 0x0427
    24d6:	30 91 28 04 	lds	r19, 0x0428
    24da:	82 0f       	add	r24, r18
    24dc:	93 1f       	adc	r25, r19
    24de:	90 93 4c 04 	sts	0x044C, r25
    24e2:	80 93 4b 04 	sts	0x044B, r24
    24e6:	80 91 4b 04 	lds	r24, 0x044B
    24ea:	90 91 4c 04 	lds	r25, 0x044C
    24ee:	88 5e       	subi	r24, 0xE8	; 232
    24f0:	93 40       	sbci	r25, 0x03	; 3
    24f2:	a4 f0       	brlt	.+40     	; 0x251c <STEPPER_clk+0xca>
    24f4:	80 91 4b 04 	lds	r24, 0x044B
    24f8:	90 91 4c 04 	lds	r25, 0x044C
    24fc:	88 5e       	subi	r24, 0xE8	; 232
    24fe:	93 40       	sbci	r25, 0x03	; 3
    2500:	90 93 4c 04 	sts	0x044C, r25
    2504:	80 93 4b 04 	sts	0x044B, r24
    2508:	61 e0       	ldi	r22, 0x01	; 1
    250a:	09 c0       	rjmp	.+18     	; 0x251e <STEPPER_clk+0xcc>
    250c:	80 91 1f 04 	lds	r24, 0x041F
    2510:	90 91 20 04 	lds	r25, 0x0420
    2514:	90 93 24 04 	sts	0x0424, r25
    2518:	80 93 23 04 	sts	0x0423, r24
    251c:	60 e0       	ldi	r22, 0x00	; 0
    251e:	84 2f       	mov	r24, r20
    2520:	0e 94 da 12 	call	0x25b4	; 0x25b4 <STEPPER_process_accel>
    2524:	80 91 45 04 	lds	r24, 0x0445
    2528:	90 91 46 04 	lds	r25, 0x0446
    252c:	20 91 21 04 	lds	r18, 0x0421
    2530:	30 91 22 04 	lds	r19, 0x0422
    2534:	28 0f       	add	r18, r24
    2536:	39 1f       	adc	r19, r25
    2538:	30 93 46 04 	sts	0x0446, r19
    253c:	20 93 45 04 	sts	0x0445, r18
    2540:	80 91 45 04 	lds	r24, 0x0445
    2544:	90 91 46 04 	lds	r25, 0x0446
    2548:	88 5e       	subi	r24, 0xE8	; 232
    254a:	93 40       	sbci	r25, 0x03	; 3
    254c:	14 f4       	brge	.+4      	; 0x2552 <STEPPER_clk+0x100>
    254e:	40 e0       	ldi	r20, 0x00	; 0
    2550:	0b c0       	rjmp	.+22     	; 0x2568 <STEPPER_clk+0x116>
    2552:	80 91 45 04 	lds	r24, 0x0445
    2556:	90 91 46 04 	lds	r25, 0x0446
    255a:	88 5e       	subi	r24, 0xE8	; 232
    255c:	93 40       	sbci	r25, 0x03	; 3
    255e:	90 93 46 04 	sts	0x0446, r25
    2562:	80 93 45 04 	sts	0x0445, r24
    2566:	41 e0       	ldi	r20, 0x01	; 1
    2568:	80 91 47 04 	lds	r24, 0x0447
    256c:	90 91 48 04 	lds	r25, 0x0448
    2570:	20 91 23 04 	lds	r18, 0x0423
    2574:	30 91 24 04 	lds	r19, 0x0424
    2578:	28 0f       	add	r18, r24
    257a:	39 1f       	adc	r19, r25
    257c:	30 93 48 04 	sts	0x0448, r19
    2580:	20 93 47 04 	sts	0x0447, r18
    2584:	80 91 47 04 	lds	r24, 0x0447
    2588:	90 91 48 04 	lds	r25, 0x0448
    258c:	88 5e       	subi	r24, 0xE8	; 232
    258e:	93 40       	sbci	r25, 0x03	; 3
    2590:	14 f4       	brge	.+4      	; 0x2596 <STEPPER_clk+0x144>
    2592:	60 e0       	ldi	r22, 0x00	; 0
    2594:	0b c0       	rjmp	.+22     	; 0x25ac <STEPPER_clk+0x15a>
    2596:	80 91 47 04 	lds	r24, 0x0447
    259a:	90 91 48 04 	lds	r25, 0x0448
    259e:	88 5e       	subi	r24, 0xE8	; 232
    25a0:	93 40       	sbci	r25, 0x03	; 3
    25a2:	90 93 48 04 	sts	0x0448, r25
    25a6:	80 93 47 04 	sts	0x0447, r24
    25aa:	61 e0       	ldi	r22, 0x01	; 1
    25ac:	84 2f       	mov	r24, r20
    25ae:	0e 94 1f 13 	call	0x263e	; 0x263e <STEPPER_process_run_mode>
    25b2:	08 95       	ret

000025b4 <STEPPER_process_accel>:
    25b4:	88 23       	and	r24, r24
    25b6:	f1 f0       	breq	.+60     	; 0x25f4 <STEPPER_process_accel+0x40>
    25b8:	20 91 1d 04 	lds	r18, 0x041D
    25bc:	30 91 1e 04 	lds	r19, 0x041E
    25c0:	80 91 21 04 	lds	r24, 0x0421
    25c4:	90 91 22 04 	lds	r25, 0x0422
    25c8:	28 1b       	sub	r18, r24
    25ca:	39 0b       	sbc	r19, r25
    25cc:	12 16       	cp	r1, r18
    25ce:	13 06       	cpc	r1, r19
    25d0:	34 f4       	brge	.+12     	; 0x25de <STEPPER_process_accel+0x2a>
    25d2:	80 91 21 04 	lds	r24, 0x0421
    25d6:	90 91 22 04 	lds	r25, 0x0422
    25da:	01 96       	adiw	r24, 0x01	; 1
    25dc:	07 c0       	rjmp	.+14     	; 0x25ec <STEPPER_process_accel+0x38>
    25de:	23 2b       	or	r18, r19
    25e0:	49 f0       	breq	.+18     	; 0x25f4 <STEPPER_process_accel+0x40>
    25e2:	80 91 21 04 	lds	r24, 0x0421
    25e6:	90 91 22 04 	lds	r25, 0x0422
    25ea:	01 97       	sbiw	r24, 0x01	; 1
    25ec:	90 93 22 04 	sts	0x0422, r25
    25f0:	80 93 21 04 	sts	0x0421, r24
    25f4:	66 23       	and	r22, r22
    25f6:	11 f1       	breq	.+68     	; 0x263c <STEPPER_process_accel+0x88>
    25f8:	20 91 1f 04 	lds	r18, 0x041F
    25fc:	30 91 20 04 	lds	r19, 0x0420
    2600:	80 91 23 04 	lds	r24, 0x0423
    2604:	90 91 24 04 	lds	r25, 0x0424
    2608:	28 1b       	sub	r18, r24
    260a:	39 0b       	sbc	r19, r25
    260c:	12 16       	cp	r1, r18
    260e:	13 06       	cpc	r1, r19
    2610:	54 f4       	brge	.+20     	; 0x2626 <STEPPER_process_accel+0x72>
    2612:	80 91 23 04 	lds	r24, 0x0423
    2616:	90 91 24 04 	lds	r25, 0x0424
    261a:	01 96       	adiw	r24, 0x01	; 1
    261c:	90 93 24 04 	sts	0x0424, r25
    2620:	80 93 23 04 	sts	0x0423, r24
    2624:	08 95       	ret
    2626:	23 2b       	or	r18, r19
    2628:	49 f0       	breq	.+18     	; 0x263c <STEPPER_process_accel+0x88>
    262a:	80 91 23 04 	lds	r24, 0x0423
    262e:	90 91 24 04 	lds	r25, 0x0424
    2632:	01 97       	sbiw	r24, 0x01	; 1
    2634:	90 93 24 04 	sts	0x0424, r25
    2638:	80 93 23 04 	sts	0x0423, r24
    263c:	08 95       	ret

0000263e <STEPPER_process_run_mode>:
    263e:	0f 93       	push	r16
    2640:	1f 93       	push	r17
    2642:	18 2f       	mov	r17, r24
    2644:	06 2f       	mov	r16, r22
    2646:	80 91 51 04 	lds	r24, 0x0451
    264a:	88 23       	and	r24, r24
    264c:	09 f0       	breq	.+2      	; 0x2650 <STEPPER_process_run_mode+0x12>
    264e:	e7 c0       	rjmp	.+462    	; 0x281e <STEPPER_process_run_mode+0x1e0>
    2650:	80 91 39 04 	lds	r24, 0x0439
    2654:	88 23       	and	r24, r24
    2656:	09 f0       	breq	.+2      	; 0x265a <STEPPER_process_run_mode+0x1c>
    2658:	5a c0       	rjmp	.+180    	; 0x270e <STEPPER_process_run_mode+0xd0>
    265a:	80 91 21 04 	lds	r24, 0x0421
    265e:	90 91 22 04 	lds	r25, 0x0422
    2662:	89 2b       	or	r24, r25
    2664:	e9 f4       	brne	.+58     	; 0x26a0 <STEPPER_process_run_mode+0x62>
    2666:	80 91 0e 04 	lds	r24, 0x040E
    266a:	83 7e       	andi	r24, 0xE3	; 227
    266c:	80 93 0e 04 	sts	0x040E, r24
    2670:	10 92 42 04 	sts	0x0442, r1
    2674:	80 91 4d 04 	lds	r24, 0x044D
    2678:	88 23       	and	r24, r24
    267a:	09 f4       	brne	.+2      	; 0x267e <STEPPER_process_run_mode+0x40>
    267c:	5d c0       	rjmp	.+186    	; 0x2738 <STEPPER_process_run_mode+0xfa>
    267e:	60 91 3b 04 	lds	r22, 0x043B
    2682:	80 e0       	ldi	r24, 0x00	; 0
    2684:	0e 94 e5 08 	call	0x11ca	; 0x11ca <STEPPER_stop>
    2688:	e0 91 4f 04 	lds	r30, 0x044F
    268c:	f0 91 50 04 	lds	r31, 0x0450
    2690:	30 97       	sbiw	r30, 0x00	; 0
    2692:	09 f4       	brne	.+2      	; 0x2696 <STEPPER_process_run_mode+0x58>
    2694:	51 c0       	rjmp	.+162    	; 0x2738 <STEPPER_process_run_mode+0xfa>
    2696:	81 e0       	ldi	r24, 0x01	; 1
    2698:	80 83       	st	Z, r24
    269a:	10 92 4d 04 	sts	0x044D, r1
    269e:	4c c0       	rjmp	.+152    	; 0x2738 <STEPPER_process_run_mode+0xfa>
    26a0:	80 91 1b 04 	lds	r24, 0x041B
    26a4:	81 30       	cpi	r24, 0x01	; 1
    26a6:	41 f4       	brne	.+16     	; 0x26b8 <STEPPER_process_run_mode+0x7a>
    26a8:	80 91 2d 04 	lds	r24, 0x042D
    26ac:	90 91 2e 04 	lds	r25, 0x042E
    26b0:	01 97       	sbiw	r24, 0x01	; 1
    26b2:	11 f4       	brne	.+4      	; 0x26b8 <STEPPER_process_run_mode+0x7a>
    26b4:	11 e0       	ldi	r17, 0x01	; 1
    26b6:	02 c0       	rjmp	.+4      	; 0x26bc <STEPPER_process_run_mode+0x7e>
    26b8:	11 23       	and	r17, r17
    26ba:	f1 f1       	breq	.+124    	; 0x2738 <STEPPER_process_run_mode+0xfa>
    26bc:	e0 91 40 04 	lds	r30, 0x0440
    26c0:	f0 e0       	ldi	r31, 0x00	; 0
    26c2:	ef 5f       	subi	r30, 0xFF	; 255
    26c4:	fe 4f       	sbci	r31, 0xFE	; 254
    26c6:	90 91 0e 04 	lds	r25, 0x040E
    26ca:	93 7e       	andi	r25, 0xE3	; 227
    26cc:	80 81       	ld	r24, Z
    26ce:	89 2b       	or	r24, r25
    26d0:	80 93 0e 04 	sts	0x040E, r24
    26d4:	80 91 3e 04 	lds	r24, 0x043E
    26d8:	88 23       	and	r24, r24
    26da:	21 f4       	brne	.+8      	; 0x26e4 <STEPPER_process_run_mode+0xa6>
    26dc:	80 91 40 04 	lds	r24, 0x0440
    26e0:	8f 5f       	subi	r24, 0xFF	; 255
    26e2:	03 c0       	rjmp	.+6      	; 0x26ea <STEPPER_process_run_mode+0xac>
    26e4:	80 91 40 04 	lds	r24, 0x0440
    26e8:	81 50       	subi	r24, 0x01	; 1
    26ea:	80 93 40 04 	sts	0x0440, r24
    26ee:	80 91 40 04 	lds	r24, 0x0440
    26f2:	83 70       	andi	r24, 0x03	; 3
    26f4:	80 93 40 04 	sts	0x0440, r24
    26f8:	81 e0       	ldi	r24, 0x01	; 1
    26fa:	80 93 42 04 	sts	0x0442, r24
    26fe:	80 91 1b 04 	lds	r24, 0x041B
    2702:	81 30       	cpi	r24, 0x01	; 1
    2704:	c9 f4       	brne	.+50     	; 0x2738 <STEPPER_process_run_mode+0xfa>
    2706:	80 e0       	ldi	r24, 0x00	; 0
    2708:	0e 94 22 14 	call	0x2844	; 0x2844 <STEPPER_process_step_mode>
    270c:	15 c0       	rjmp	.+42     	; 0x2738 <STEPPER_process_run_mode+0xfa>
    270e:	90 91 0e 04 	lds	r25, 0x040E
    2712:	93 7e       	andi	r25, 0xE3	; 227
    2714:	90 93 0e 04 	sts	0x040E, r25
    2718:	e0 91 40 04 	lds	r30, 0x0440
    271c:	f0 e0       	ldi	r31, 0x00	; 0
    271e:	ef 5f       	subi	r30, 0xFF	; 255
    2720:	fe 4f       	sbci	r31, 0xFE	; 254
    2722:	80 81       	ld	r24, Z
    2724:	89 2b       	or	r24, r25
    2726:	80 93 0e 04 	sts	0x040E, r24
    272a:	82 e0       	ldi	r24, 0x02	; 2
    272c:	80 93 42 04 	sts	0x0442, r24
    2730:	10 92 22 04 	sts	0x0422, r1
    2734:	10 92 21 04 	sts	0x0421, r1
    2738:	80 91 3a 04 	lds	r24, 0x043A
    273c:	88 23       	and	r24, r24
    273e:	09 f0       	breq	.+2      	; 0x2742 <STEPPER_process_run_mode+0x104>
    2740:	59 c0       	rjmp	.+178    	; 0x27f4 <STEPPER_process_run_mode+0x1b6>
    2742:	80 91 23 04 	lds	r24, 0x0423
    2746:	90 91 24 04 	lds	r25, 0x0424
    274a:	89 2b       	or	r24, r25
    274c:	e9 f4       	brne	.+58     	; 0x2788 <STEPPER_process_run_mode+0x14a>
    274e:	80 91 0e 04 	lds	r24, 0x040E
    2752:	8f 71       	andi	r24, 0x1F	; 31
    2754:	80 93 0e 04 	sts	0x040E, r24
    2758:	10 92 43 04 	sts	0x0443, r1
    275c:	80 91 4e 04 	lds	r24, 0x044E
    2760:	88 23       	and	r24, r24
    2762:	09 f4       	brne	.+2      	; 0x2766 <STEPPER_process_run_mode+0x128>
    2764:	5c c0       	rjmp	.+184    	; 0x281e <STEPPER_process_run_mode+0x1e0>
    2766:	60 91 3c 04 	lds	r22, 0x043C
    276a:	81 e0       	ldi	r24, 0x01	; 1
    276c:	0e 94 e5 08 	call	0x11ca	; 0x11ca <STEPPER_stop>
    2770:	e0 91 4f 04 	lds	r30, 0x044F
    2774:	f0 91 50 04 	lds	r31, 0x0450
    2778:	30 97       	sbiw	r30, 0x00	; 0
    277a:	09 f4       	brne	.+2      	; 0x277e <STEPPER_process_run_mode+0x140>
    277c:	50 c0       	rjmp	.+160    	; 0x281e <STEPPER_process_run_mode+0x1e0>
    277e:	81 e0       	ldi	r24, 0x01	; 1
    2780:	81 83       	std	Z+1, r24	; 0x01
    2782:	10 92 4e 04 	sts	0x044E, r1
    2786:	4b c0       	rjmp	.+150    	; 0x281e <STEPPER_process_run_mode+0x1e0>
    2788:	80 91 1c 04 	lds	r24, 0x041C
    278c:	81 30       	cpi	r24, 0x01	; 1
    278e:	41 f4       	brne	.+16     	; 0x27a0 <STEPPER_process_run_mode+0x162>
    2790:	80 91 2f 04 	lds	r24, 0x042F
    2794:	90 91 30 04 	lds	r25, 0x0430
    2798:	01 97       	sbiw	r24, 0x01	; 1
    279a:	11 f4       	brne	.+4      	; 0x27a0 <STEPPER_process_run_mode+0x162>
    279c:	01 e0       	ldi	r16, 0x01	; 1
    279e:	02 c0       	rjmp	.+4      	; 0x27a4 <STEPPER_process_run_mode+0x166>
    27a0:	00 23       	and	r16, r16
    27a2:	e9 f1       	breq	.+122    	; 0x281e <STEPPER_process_run_mode+0x1e0>
    27a4:	e0 91 41 04 	lds	r30, 0x0441
    27a8:	f0 e0       	ldi	r31, 0x00	; 0
    27aa:	eb 5f       	subi	r30, 0xFB	; 251
    27ac:	fe 4f       	sbci	r31, 0xFE	; 254
    27ae:	90 91 0e 04 	lds	r25, 0x040E
    27b2:	9f 71       	andi	r25, 0x1F	; 31
    27b4:	80 81       	ld	r24, Z
    27b6:	89 2b       	or	r24, r25
    27b8:	80 93 0e 04 	sts	0x040E, r24
    27bc:	80 91 3f 04 	lds	r24, 0x043F
    27c0:	88 23       	and	r24, r24
    27c2:	21 f4       	brne	.+8      	; 0x27cc <STEPPER_process_run_mode+0x18e>
    27c4:	80 91 41 04 	lds	r24, 0x0441
    27c8:	8f 5f       	subi	r24, 0xFF	; 255
    27ca:	03 c0       	rjmp	.+6      	; 0x27d2 <STEPPER_process_run_mode+0x194>
    27cc:	80 91 41 04 	lds	r24, 0x0441
    27d0:	81 50       	subi	r24, 0x01	; 1
    27d2:	80 93 41 04 	sts	0x0441, r24
    27d6:	80 91 41 04 	lds	r24, 0x0441
    27da:	83 70       	andi	r24, 0x03	; 3
    27dc:	80 93 41 04 	sts	0x0441, r24
    27e0:	81 e0       	ldi	r24, 0x01	; 1
    27e2:	80 93 43 04 	sts	0x0443, r24
    27e6:	80 91 1c 04 	lds	r24, 0x041C
    27ea:	81 30       	cpi	r24, 0x01	; 1
    27ec:	c1 f4       	brne	.+48     	; 0x281e <STEPPER_process_run_mode+0x1e0>
    27ee:	0e 94 22 14 	call	0x2844	; 0x2844 <STEPPER_process_step_mode>
    27f2:	15 c0       	rjmp	.+42     	; 0x281e <STEPPER_process_run_mode+0x1e0>
    27f4:	90 91 0e 04 	lds	r25, 0x040E
    27f8:	9f 71       	andi	r25, 0x1F	; 31
    27fa:	90 93 0e 04 	sts	0x040E, r25
    27fe:	e0 91 41 04 	lds	r30, 0x0441
    2802:	f0 e0       	ldi	r31, 0x00	; 0
    2804:	eb 5f       	subi	r30, 0xFB	; 251
    2806:	fe 4f       	sbci	r31, 0xFE	; 254
    2808:	80 81       	ld	r24, Z
    280a:	89 2b       	or	r24, r25
    280c:	80 93 0e 04 	sts	0x040E, r24
    2810:	82 e0       	ldi	r24, 0x02	; 2
    2812:	80 93 43 04 	sts	0x0443, r24
    2816:	10 92 24 04 	sts	0x0424, r1
    281a:	10 92 23 04 	sts	0x0423, r1
    281e:	80 91 44 04 	lds	r24, 0x0444
    2822:	88 23       	and	r24, r24
    2824:	31 f4       	brne	.+12     	; 0x2832 <STEPPER_process_run_mode+0x1f4>
    2826:	8e e0       	ldi	r24, 0x0E	; 14
    2828:	94 e0       	ldi	r25, 0x04	; 4
    282a:	61 2f       	mov	r22, r17
    282c:	40 2f       	mov	r20, r16
    282e:	0e 94 e4 14 	call	0x29c8	; 0x29c8 <STEPPER_process_pwm>
    2832:	88 b1       	in	r24, 0x08	; 8
    2834:	83 70       	andi	r24, 0x03	; 3
    2836:	90 91 0e 04 	lds	r25, 0x040E
    283a:	89 2b       	or	r24, r25
    283c:	88 b9       	out	0x08, r24	; 8
    283e:	1f 91       	pop	r17
    2840:	0f 91       	pop	r16
    2842:	08 95       	ret

00002844 <STEPPER_process_step_mode>:
    2844:	88 23       	and	r24, r24
    2846:	21 f0       	breq	.+8      	; 0x2850 <STEPPER_process_step_mode+0xc>
    2848:	81 30       	cpi	r24, 0x01	; 1
    284a:	09 f0       	breq	.+2      	; 0x284e <STEPPER_process_step_mode+0xa>
    284c:	4e c0       	rjmp	.+156    	; 0x28ea <STEPPER_process_step_mode+0xa6>
    284e:	27 c0       	rjmp	.+78     	; 0x289e <STEPPER_process_step_mode+0x5a>
    2850:	80 91 2d 04 	lds	r24, 0x042D
    2854:	90 91 2e 04 	lds	r25, 0x042E
    2858:	89 2b       	or	r24, r25
    285a:	49 f0       	breq	.+18     	; 0x286e <STEPPER_process_step_mode+0x2a>
    285c:	80 91 2d 04 	lds	r24, 0x042D
    2860:	90 91 2e 04 	lds	r25, 0x042E
    2864:	01 97       	sbiw	r24, 0x01	; 1
    2866:	90 93 2e 04 	sts	0x042E, r25
    286a:	80 93 2d 04 	sts	0x042D, r24
    286e:	80 91 4d 04 	lds	r24, 0x044D
    2872:	88 23       	and	r24, r24
    2874:	d1 f5       	brne	.+116    	; 0x28ea <STEPPER_process_step_mode+0xa6>
    2876:	20 91 2d 04 	lds	r18, 0x042D
    287a:	30 91 2e 04 	lds	r19, 0x042E
    287e:	80 91 31 04 	lds	r24, 0x0431
    2882:	90 91 32 04 	lds	r25, 0x0432
    2886:	28 17       	cp	r18, r24
    2888:	39 07       	cpc	r19, r25
    288a:	79 f5       	brne	.+94     	; 0x28ea <STEPPER_process_step_mode+0xa6>
    288c:	80 e0       	ldi	r24, 0x00	; 0
    288e:	60 e0       	ldi	r22, 0x00	; 0
    2890:	70 e0       	ldi	r23, 0x00	; 0
    2892:	0e 94 37 08 	call	0x106e	; 0x106e <STEPPER_set_speed>
    2896:	81 e0       	ldi	r24, 0x01	; 1
    2898:	80 93 4d 04 	sts	0x044D, r24
    289c:	08 95       	ret
    289e:	80 91 2f 04 	lds	r24, 0x042F
    28a2:	90 91 30 04 	lds	r25, 0x0430
    28a6:	89 2b       	or	r24, r25
    28a8:	49 f0       	breq	.+18     	; 0x28bc <STEPPER_process_step_mode+0x78>
    28aa:	80 91 2f 04 	lds	r24, 0x042F
    28ae:	90 91 30 04 	lds	r25, 0x0430
    28b2:	01 97       	sbiw	r24, 0x01	; 1
    28b4:	90 93 30 04 	sts	0x0430, r25
    28b8:	80 93 2f 04 	sts	0x042F, r24
    28bc:	80 91 4e 04 	lds	r24, 0x044E
    28c0:	88 23       	and	r24, r24
    28c2:	99 f4       	brne	.+38     	; 0x28ea <STEPPER_process_step_mode+0xa6>
    28c4:	20 91 2f 04 	lds	r18, 0x042F
    28c8:	30 91 30 04 	lds	r19, 0x0430
    28cc:	80 91 33 04 	lds	r24, 0x0433
    28d0:	90 91 34 04 	lds	r25, 0x0434
    28d4:	28 17       	cp	r18, r24
    28d6:	39 07       	cpc	r19, r25
    28d8:	41 f4       	brne	.+16     	; 0x28ea <STEPPER_process_step_mode+0xa6>
    28da:	81 e0       	ldi	r24, 0x01	; 1
    28dc:	60 e0       	ldi	r22, 0x00	; 0
    28de:	70 e0       	ldi	r23, 0x00	; 0
    28e0:	0e 94 37 08 	call	0x106e	; 0x106e <STEPPER_set_speed>
    28e4:	81 e0       	ldi	r24, 0x01	; 1
    28e6:	80 93 4e 04 	sts	0x044E, r24
    28ea:	08 95       	ret

000028ec <TMRSRVC_process>:
    28ec:	ff 92       	push	r15
    28ee:	0f 93       	push	r16
    28f0:	1f 93       	push	r17
    28f2:	cf 93       	push	r28
    28f4:	df 93       	push	r29
    28f6:	80 91 8b 04 	lds	r24, 0x048B
    28fa:	88 23       	and	r24, r24
    28fc:	09 f4       	brne	.+2      	; 0x2900 <TMRSRVC_process+0x14>
    28fe:	59 c0       	rjmp	.+178    	; 0x29b2 <TMRSRVC_process+0xc6>
    2900:	00 91 8c 04 	lds	r16, 0x048C
    2904:	10 91 8d 04 	lds	r17, 0x048D
    2908:	f8 01       	movw	r30, r16
    290a:	c0 81       	ld	r28, Z
    290c:	d1 81       	ldd	r29, Z+1	; 0x01
    290e:	8c 81       	ldd	r24, Y+4	; 0x04
    2910:	9d 81       	ldd	r25, Y+5	; 0x05
    2912:	01 97       	sbiw	r24, 0x01	; 1
    2914:	9d 83       	std	Y+5, r25	; 0x05
    2916:	8c 83       	std	Y+4, r24	; 0x04
    2918:	18 16       	cp	r1, r24
    291a:	19 06       	cpc	r1, r25
    291c:	0c f4       	brge	.+2      	; 0x2920 <TMRSRVC_process+0x34>
    291e:	49 c0       	rjmp	.+146    	; 0x29b2 <TMRSRVC_process+0xc6>
    2920:	89 81       	ldd	r24, Y+1	; 0x01
    2922:	80 ff       	sbrs	r24, 0
    2924:	05 c0       	rjmp	.+10     	; 0x2930 <TMRSRVC_process+0x44>
    2926:	8e 81       	ldd	r24, Y+6	; 0x06
    2928:	88 23       	and	r24, r24
    292a:	11 f4       	brne	.+4      	; 0x2930 <TMRSRVC_process+0x44>
    292c:	81 e0       	ldi	r24, 0x01	; 1
    292e:	8e 83       	std	Y+6, r24	; 0x06
    2930:	89 81       	ldd	r24, Y+1	; 0x01
    2932:	81 ff       	sbrs	r24, 1
    2934:	03 c0       	rjmp	.+6      	; 0x293c <TMRSRVC_process+0x50>
    2936:	ef 81       	ldd	r30, Y+7	; 0x07
    2938:	f8 85       	ldd	r31, Y+8	; 0x08
    293a:	09 95       	icall
    293c:	80 91 8b 04 	lds	r24, 0x048B
    2940:	82 30       	cpi	r24, 0x02	; 2
    2942:	a8 f0       	brcs	.+42     	; 0x296e <TMRSRVC_process+0x82>
    2944:	f8 01       	movw	r30, r16
    2946:	82 81       	ldd	r24, Z+2	; 0x02
    2948:	93 81       	ldd	r25, Z+3	; 0x03
    294a:	90 93 8d 04 	sts	0x048D, r25
    294e:	80 93 8c 04 	sts	0x048C, r24
    2952:	13 82       	std	Z+3, r1	; 0x03
    2954:	12 82       	std	Z+2, r1	; 0x02
    2956:	e0 91 00 00 	lds	r30, 0x0000
    295a:	f0 91 01 00 	lds	r31, 0x0001
    295e:	84 81       	ldd	r24, Z+4	; 0x04
    2960:	95 81       	ldd	r25, Z+5	; 0x05
    2962:	18 16       	cp	r1, r24
    2964:	19 06       	cpc	r1, r25
    2966:	3c f0       	brlt	.+14     	; 0x2976 <TMRSRVC_process+0x8a>
    2968:	ff 24       	eor	r15, r15
    296a:	f3 94       	inc	r15
    296c:	05 c0       	rjmp	.+10     	; 0x2978 <TMRSRVC_process+0x8c>
    296e:	10 92 8d 04 	sts	0x048D, r1
    2972:	10 92 8c 04 	sts	0x048C, r1
    2976:	ff 24       	eor	r15, r15
    2978:	80 91 8b 04 	lds	r24, 0x048B
    297c:	81 50       	subi	r24, 0x01	; 1
    297e:	80 93 8b 04 	sts	0x048B, r24
    2982:	80 91 8b 04 	lds	r24, 0x048B
    2986:	88 23       	and	r24, r24
    2988:	11 f4       	brne	.+4      	; 0x298e <TMRSRVC_process+0xa2>
    298a:	0e 94 e1 14 	call	0x29c2	; 0x29c2 <TMRSRVC_stop>
    298e:	89 81       	ldd	r24, Y+1	; 0x01
    2990:	82 ff       	sbrs	r24, 2
    2992:	08 c0       	rjmp	.+16     	; 0x29a4 <TMRSRVC_process+0xb8>
    2994:	8a 81       	ldd	r24, Y+2	; 0x02
    2996:	9b 81       	ldd	r25, Y+3	; 0x03
    2998:	9d 83       	std	Y+5, r25	; 0x05
    299a:	8c 83       	std	Y+4, r24	; 0x04
    299c:	c8 01       	movw	r24, r16
    299e:	0e 94 68 10 	call	0x20d0	; 0x20d0 <TMRSRVC_insert>
    29a2:	08 c0       	rjmp	.+16     	; 0x29b4 <TMRSRVC_process+0xc8>
    29a4:	c8 01       	movw	r24, r16
    29a6:	0e 94 c2 29 	call	0x5384	; 0x5384 <free>
    29aa:	89 81       	ldd	r24, Y+1	; 0x01
    29ac:	8f 7e       	andi	r24, 0xEF	; 239
    29ae:	89 83       	std	Y+1, r24	; 0x01
    29b0:	01 c0       	rjmp	.+2      	; 0x29b4 <TMRSRVC_process+0xc8>
    29b2:	ff 24       	eor	r15, r15
    29b4:	8f 2d       	mov	r24, r15
    29b6:	df 91       	pop	r29
    29b8:	cf 91       	pop	r28
    29ba:	1f 91       	pop	r17
    29bc:	0f 91       	pop	r16
    29be:	ff 90       	pop	r15
    29c0:	08 95       	ret

000029c2 <TMRSRVC_stop>:
    29c2:	10 92 0d 04 	sts	0x040D, r1
    29c6:	08 95       	ret

000029c8 <STEPPER_process_pwm>:
    29c8:	fc 01       	movw	r30, r24
    29ca:	80 91 42 04 	lds	r24, 0x0442
    29ce:	82 30       	cpi	r24, 0x02	; 2
    29d0:	69 f4       	brne	.+26     	; 0x29ec <STEPPER_process_pwm+0x24>
    29d2:	80 91 12 04 	lds	r24, 0x0412
    29d6:	91 e0       	ldi	r25, 0x01	; 1
    29d8:	89 27       	eor	r24, r25
    29da:	80 93 12 04 	sts	0x0412, r24
    29de:	88 23       	and	r24, r24
    29e0:	09 f0       	breq	.+2      	; 0x29e4 <STEPPER_process_pwm+0x1c>
    29e2:	3e c0       	rjmp	.+124    	; 0x2a60 <STEPPER_process_pwm+0x98>
    29e4:	80 81       	ld	r24, Z
    29e6:	83 7e       	andi	r24, 0xE3	; 227
    29e8:	80 83       	st	Z, r24
    29ea:	3a c0       	rjmp	.+116    	; 0x2a60 <STEPPER_process_pwm+0x98>
    29ec:	80 91 21 04 	lds	r24, 0x0421
    29f0:	90 91 22 04 	lds	r25, 0x0422
    29f4:	c3 97       	sbiw	r24, 0x33	; 51
    29f6:	a4 f5       	brge	.+104    	; 0x2a60 <STEPPER_process_pwm+0x98>
    29f8:	66 23       	and	r22, r22
    29fa:	d1 f0       	breq	.+52     	; 0x2a30 <STEPPER_process_pwm+0x68>
    29fc:	20 91 21 04 	lds	r18, 0x0421
    2a00:	30 91 22 04 	lds	r19, 0x0422
    2a04:	80 e6       	ldi	r24, 0x60	; 96
    2a06:	90 e0       	ldi	r25, 0x00	; 0
    2a08:	bc 01       	movw	r22, r24
    2a0a:	26 9f       	mul	r18, r22
    2a0c:	c0 01       	movw	r24, r0
    2a0e:	27 9f       	mul	r18, r23
    2a10:	90 0d       	add	r25, r0
    2a12:	36 9f       	mul	r19, r22
    2a14:	90 0d       	add	r25, r0
    2a16:	11 24       	eor	r1, r1
    2a18:	88 0f       	add	r24, r24
    2a1a:	89 2f       	mov	r24, r25
    2a1c:	88 1f       	adc	r24, r24
    2a1e:	99 0b       	sbc	r25, r25
    2a20:	90 93 36 04 	sts	0x0436, r25
    2a24:	80 93 35 04 	sts	0x0435, r24
    2a28:	81 e0       	ldi	r24, 0x01	; 1
    2a2a:	80 93 10 04 	sts	0x0410, r24
    2a2e:	18 c0       	rjmp	.+48     	; 0x2a60 <STEPPER_process_pwm+0x98>
    2a30:	80 91 10 04 	lds	r24, 0x0410
    2a34:	88 23       	and	r24, r24
    2a36:	a1 f0       	breq	.+40     	; 0x2a60 <STEPPER_process_pwm+0x98>
    2a38:	80 91 35 04 	lds	r24, 0x0435
    2a3c:	90 91 36 04 	lds	r25, 0x0436
    2a40:	01 97       	sbiw	r24, 0x01	; 1
    2a42:	90 93 36 04 	sts	0x0436, r25
    2a46:	80 93 35 04 	sts	0x0435, r24
    2a4a:	80 91 35 04 	lds	r24, 0x0435
    2a4e:	90 91 36 04 	lds	r25, 0x0436
    2a52:	89 2b       	or	r24, r25
    2a54:	29 f4       	brne	.+10     	; 0x2a60 <STEPPER_process_pwm+0x98>
    2a56:	80 81       	ld	r24, Z
    2a58:	83 7e       	andi	r24, 0xE3	; 227
    2a5a:	80 83       	st	Z, r24
    2a5c:	10 92 10 04 	sts	0x0410, r1
    2a60:	80 91 43 04 	lds	r24, 0x0443
    2a64:	82 30       	cpi	r24, 0x02	; 2
    2a66:	69 f4       	brne	.+26     	; 0x2a82 <STEPPER_process_pwm+0xba>
    2a68:	80 91 11 04 	lds	r24, 0x0411
    2a6c:	91 e0       	ldi	r25, 0x01	; 1
    2a6e:	89 27       	eor	r24, r25
    2a70:	80 93 11 04 	sts	0x0411, r24
    2a74:	88 23       	and	r24, r24
    2a76:	09 f0       	breq	.+2      	; 0x2a7a <STEPPER_process_pwm+0xb2>
    2a78:	3e c0       	rjmp	.+124    	; 0x2af6 <STEPPER_process_pwm+0x12e>
    2a7a:	80 81       	ld	r24, Z
    2a7c:	8f 71       	andi	r24, 0x1F	; 31
    2a7e:	80 83       	st	Z, r24
    2a80:	08 95       	ret
    2a82:	80 91 23 04 	lds	r24, 0x0423
    2a86:	90 91 24 04 	lds	r25, 0x0424
    2a8a:	c3 97       	sbiw	r24, 0x33	; 51
    2a8c:	a4 f5       	brge	.+104    	; 0x2af6 <STEPPER_process_pwm+0x12e>
    2a8e:	44 23       	and	r20, r20
    2a90:	d1 f0       	breq	.+52     	; 0x2ac6 <STEPPER_process_pwm+0xfe>
    2a92:	20 91 23 04 	lds	r18, 0x0423
    2a96:	30 91 24 04 	lds	r19, 0x0424
    2a9a:	80 e6       	ldi	r24, 0x60	; 96
    2a9c:	90 e0       	ldi	r25, 0x00	; 0
    2a9e:	ac 01       	movw	r20, r24
    2aa0:	24 9f       	mul	r18, r20
    2aa2:	c0 01       	movw	r24, r0
    2aa4:	25 9f       	mul	r18, r21
    2aa6:	90 0d       	add	r25, r0
    2aa8:	34 9f       	mul	r19, r20
    2aaa:	90 0d       	add	r25, r0
    2aac:	11 24       	eor	r1, r1
    2aae:	88 0f       	add	r24, r24
    2ab0:	89 2f       	mov	r24, r25
    2ab2:	88 1f       	adc	r24, r24
    2ab4:	99 0b       	sbc	r25, r25
    2ab6:	90 93 38 04 	sts	0x0438, r25
    2aba:	80 93 37 04 	sts	0x0437, r24
    2abe:	81 e0       	ldi	r24, 0x01	; 1
    2ac0:	80 93 0f 04 	sts	0x040F, r24
    2ac4:	08 95       	ret
    2ac6:	80 91 0f 04 	lds	r24, 0x040F
    2aca:	88 23       	and	r24, r24
    2acc:	a1 f0       	breq	.+40     	; 0x2af6 <STEPPER_process_pwm+0x12e>
    2ace:	80 91 37 04 	lds	r24, 0x0437
    2ad2:	90 91 38 04 	lds	r25, 0x0438
    2ad6:	01 97       	sbiw	r24, 0x01	; 1
    2ad8:	90 93 38 04 	sts	0x0438, r25
    2adc:	80 93 37 04 	sts	0x0437, r24
    2ae0:	80 91 37 04 	lds	r24, 0x0437
    2ae4:	90 91 38 04 	lds	r25, 0x0438
    2ae8:	89 2b       	or	r24, r25
    2aea:	29 f4       	brne	.+10     	; 0x2af6 <STEPPER_process_pwm+0x12e>
    2aec:	80 81       	ld	r24, Z
    2aee:	8f 71       	andi	r24, 0x1F	; 31
    2af0:	80 83       	st	Z, r24
    2af2:	10 92 0f 04 	sts	0x040F, r1
    2af6:	08 95       	ret

00002af8 <Random_Wanderer>:
// Alexandre van der Ven de Freitas
// Peter Richard Olejnik
// December 18, 2014

// Random wanderer function
void Random_Wanderer(){
    2af8:	8f 92       	push	r8
    2afa:	af 92       	push	r10
    2afc:	bf 92       	push	r11
    2afe:	cf 92       	push	r12
    2b00:	ef 92       	push	r14
    2b02:	ff 92       	push	r15
    2b04:	0f 93       	push	r16
    2b06:	1f 93       	push	r17
    2b08:	cf 93       	push	r28
    2b0a:	df 93       	push	r29
	char RightWheelSpeed;
	char LeftWheelSpeed;
	
	// Randomly select speed of wheels
	RightWheelSpeed = rand() % 201;
    2b0c:	0e 94 9f 2a 	call	0x553e	; 0x553e <rand>
    2b10:	ec 01       	movw	r28, r24
	LeftWheelSpeed = rand() % 201;
    2b12:	0e 94 9f 2a 	call	0x553e	; 0x553e <rand>
    2b16:	29 ec       	ldi	r18, 0xC9	; 201
    2b18:	30 e0       	ldi	r19, 0x00	; 0
    2b1a:	b9 01       	movw	r22, r18
    2b1c:	0e 94 8f 28 	call	0x511e	; 0x511e <__divmodhi4>
    2b20:	8c 01       	movw	r16, r24
    2b22:	11 27       	eor	r17, r17

	STEPPER_move_rn(STEPPER_BOTH,
    2b24:	1f 92       	push	r1
    2b26:	1f 92       	push	r1
    2b28:	1f 92       	push	r1
    2b2a:	81 e0       	ldi	r24, 0x01	; 1
    2b2c:	8f 93       	push	r24
    2b2e:	80 e9       	ldi	r24, 0x90	; 144
    2b30:	8f 93       	push	r24
void Random_Wanderer(){
	char RightWheelSpeed;
	char LeftWheelSpeed;
	
	// Randomly select speed of wheels
	RightWheelSpeed = rand() % 201;
    2b32:	ce 01       	movw	r24, r28
    2b34:	b9 01       	movw	r22, r18
    2b36:	0e 94 8f 28 	call	0x511e	; 0x511e <__divmodhi4>
    2b3a:	99 27       	eor	r25, r25
	LeftWheelSpeed = rand() % 201;

	STEPPER_move_rn(STEPPER_BOTH,
    2b3c:	9f 93       	push	r25
    2b3e:	8f 93       	push	r24
    2b40:	1f 92       	push	r1
    2b42:	1f 92       	push	r1
    2b44:	81 2c       	mov	r8, r1
    2b46:	a1 2c       	mov	r10, r1
    2b48:	b1 2c       	mov	r11, r1
    2b4a:	c1 2c       	mov	r12, r1
    2b4c:	0f 2e       	mov	r0, r31
    2b4e:	f0 e9       	ldi	r31, 0x90	; 144
    2b50:	ef 2e       	mov	r14, r31
    2b52:	ff 24       	eor	r15, r15
    2b54:	f3 94       	inc	r15
    2b56:	f0 2d       	mov	r31, r0
    2b58:	20 e0       	ldi	r18, 0x00	; 0
    2b5a:	30 e0       	ldi	r19, 0x00	; 0
    2b5c:	40 e0       	ldi	r20, 0x00	; 0
    2b5e:	62 e0       	ldi	r22, 0x02	; 2
    2b60:	82 e0       	ldi	r24, 0x02	; 2
    2b62:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
		STEPPER_FWD, LeftWheelSpeed, 400,	//Left
		STEPPER_FWD, RightWheelSpeed, 400);	//Right
	TMRSRVC_delay(500); // 0.5 Sec duration
    2b66:	84 ef       	ldi	r24, 0xF4	; 244
    2b68:	91 e0       	ldi	r25, 0x01	; 1
    2b6a:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
    2b6e:	8d b7       	in	r24, 0x3d	; 61
    2b70:	9e b7       	in	r25, 0x3e	; 62
    2b72:	09 96       	adiw	r24, 0x09	; 9
    2b74:	0f b6       	in	r0, 0x3f	; 63
    2b76:	f8 94       	cli
    2b78:	9e bf       	out	0x3e, r25	; 62
    2b7a:	0f be       	out	0x3f, r0	; 63
    2b7c:	8d bf       	out	0x3d, r24	; 61
	}
    2b7e:	df 91       	pop	r29
    2b80:	cf 91       	pop	r28
    2b82:	1f 91       	pop	r17
    2b84:	0f 91       	pop	r16
    2b86:	ff 90       	pop	r15
    2b88:	ef 90       	pop	r14
    2b8a:	cf 90       	pop	r12
    2b8c:	bf 90       	pop	r11
    2b8e:	af 90       	pop	r10
    2b90:	8f 90       	pop	r8
    2b92:	08 95       	ret

00002b94 <getLeftIR>:
	//float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    2b94:	81 e0       	ldi	r24, 0x01	; 1
    2b96:	0e 94 b2 03 	call	0x764	; 0x764 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
    2b9a:	84 e0       	ldi	r24, 0x04	; 4
    2b9c:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    2ba0:	0e 94 5e 03 	call	0x6bc	; 0x6bc <ADC_sample>
	//LCD_printf( "ADC: %i\n",adcsample);
	// Convert to meaningful voltage value.
	//voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
    2ba4:	bc 01       	movw	r22, r24
    2ba6:	80 e0       	ldi	r24, 0x00	; 0
    2ba8:	90 e0       	ldi	r25, 0x00	; 0
    2baa:	0e 94 4c 22 	call	0x4498	; 0x4498 <__floatunsisf>
    2bae:	20 e0       	ldi	r18, 0x00	; 0
    2bb0:	30 e0       	ldi	r19, 0x00	; 0
    2bb2:	40 ea       	ldi	r20, 0xA0	; 160
    2bb4:	50 e4       	ldi	r21, 0x40	; 64
    2bb6:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    2bba:	9b 01       	movw	r18, r22
    2bbc:	ac 01       	movw	r20, r24
    2bbe:	60 e0       	ldi	r22, 0x00	; 0
    2bc0:	70 e2       	ldi	r23, 0x20	; 32
    2bc2:	86 e3       	ldi	r24, 0x36	; 54
    2bc4:	95 e4       	ldi	r25, 0x45	; 69
    2bc6:	0e 94 b3 21 	call	0x4366	; 0x4366 <__divsf3>
    2bca:	20 e0       	ldi	r18, 0x00	; 0
    2bcc:	30 e0       	ldi	r19, 0x00	; 0
    2bce:	40 e8       	ldi	r20, 0x80	; 128
    2bd0:	5f e3       	ldi	r21, 0x3F	; 63
    2bd2:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
	//Convert distance to inches
	dist = distance*0.3937;
    2bd6:	2c e0       	ldi	r18, 0x0C	; 12
    2bd8:	33 e9       	ldi	r19, 0x93	; 147
    2bda:	49 ec       	ldi	r20, 0xC9	; 201
    2bdc:	5e e3       	ldi	r21, 0x3E	; 62
    2bde:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
	return dist;
}
    2be2:	08 95       	ret

00002be4 <getRightIR>:
	//float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    2be4:	81 e0       	ldi	r24, 0x01	; 1
    2be6:	0e 94 b2 03 	call	0x764	; 0x764 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
    2bea:	83 e0       	ldi	r24, 0x03	; 3
    2bec:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    2bf0:	0e 94 5e 03 	call	0x6bc	; 0x6bc <ADC_sample>
	// Convert to meaningful voltage value.
	//voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
    2bf4:	bc 01       	movw	r22, r24
    2bf6:	80 e0       	ldi	r24, 0x00	; 0
    2bf8:	90 e0       	ldi	r25, 0x00	; 0
    2bfa:	0e 94 4c 22 	call	0x4498	; 0x4498 <__floatunsisf>
    2bfe:	20 e0       	ldi	r18, 0x00	; 0
    2c00:	30 e0       	ldi	r19, 0x00	; 0
    2c02:	40 ea       	ldi	r20, 0xA0	; 160
    2c04:	50 e4       	ldi	r21, 0x40	; 64
    2c06:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    2c0a:	9b 01       	movw	r18, r22
    2c0c:	ac 01       	movw	r20, r24
    2c0e:	60 e0       	ldi	r22, 0x00	; 0
    2c10:	70 e2       	ldi	r23, 0x20	; 32
    2c12:	86 e3       	ldi	r24, 0x36	; 54
    2c14:	95 e4       	ldi	r25, 0x45	; 69
    2c16:	0e 94 b3 21 	call	0x4366	; 0x4366 <__divsf3>
    2c1a:	20 e0       	ldi	r18, 0x00	; 0
    2c1c:	30 e0       	ldi	r19, 0x00	; 0
    2c1e:	40 e8       	ldi	r20, 0x80	; 128
    2c20:	5f e3       	ldi	r21, 0x3F	; 63
    2c22:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
	//Convert distance to inches
	dist = distance*0.3937;
    2c26:	2c e0       	ldi	r18, 0x0C	; 12
    2c28:	33 e9       	ldi	r19, 0x93	; 147
    2c2a:	49 ec       	ldi	r20, 0xC9	; 201
    2c2c:	5e e3       	ldi	r21, 0x3E	; 62
    2c2e:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
	return dist;
}
    2c32:	08 95       	ret

00002c34 <getFrontIR>:
	//float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    2c34:	81 e0       	ldi	r24, 0x01	; 1
    2c36:	0e 94 b2 03 	call	0x764	; 0x764 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRFRONT_CHAN);
    2c3a:	87 e0       	ldi	r24, 0x07	; 7
    2c3c:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    2c40:	0e 94 5e 03 	call	0x6bc	; 0x6bc <ADC_sample>
	// Convert to meaningful voltage value.
	//voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
    2c44:	bc 01       	movw	r22, r24
    2c46:	80 e0       	ldi	r24, 0x00	; 0
    2c48:	90 e0       	ldi	r25, 0x00	; 0
    2c4a:	0e 94 4c 22 	call	0x4498	; 0x4498 <__floatunsisf>
    2c4e:	20 e0       	ldi	r18, 0x00	; 0
    2c50:	30 e0       	ldi	r19, 0x00	; 0
    2c52:	40 ea       	ldi	r20, 0xA0	; 160
    2c54:	50 e4       	ldi	r21, 0x40	; 64
    2c56:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    2c5a:	9b 01       	movw	r18, r22
    2c5c:	ac 01       	movw	r20, r24
    2c5e:	60 e0       	ldi	r22, 0x00	; 0
    2c60:	70 e2       	ldi	r23, 0x20	; 32
    2c62:	86 e3       	ldi	r24, 0x36	; 54
    2c64:	95 e4       	ldi	r25, 0x45	; 69
    2c66:	0e 94 b3 21 	call	0x4366	; 0x4366 <__divsf3>
    2c6a:	20 e0       	ldi	r18, 0x00	; 0
    2c6c:	30 e0       	ldi	r19, 0x00	; 0
    2c6e:	40 e8       	ldi	r20, 0x80	; 128
    2c70:	5f e3       	ldi	r21, 0x3F	; 63
    2c72:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
	//Convert distance to inches
	dist = distance*0.3937;
    2c76:	2c e0       	ldi	r18, 0x0C	; 12
    2c78:	33 e9       	ldi	r19, 0x93	; 147
    2c7a:	49 ec       	ldi	r20, 0xC9	; 201
    2c7c:	5e e3       	ldi	r21, 0x3E	; 62
    2c7e:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
	return dist;
}
    2c82:	08 95       	ret

00002c84 <moveForward>:
float xo = 0;
float yo = 0;
short thetao = 0;

// Moves the robot forward for a given number of steps.
void moveForward(int steps, int speed){
    2c84:	8f 92       	push	r8
    2c86:	af 92       	push	r10
    2c88:	bf 92       	push	r11
    2c8a:	cf 92       	push	r12
    2c8c:	ef 92       	push	r14
    2c8e:	ff 92       	push	r15
    2c90:	0f 93       	push	r16
    2c92:	1f 93       	push	r17
    2c94:	cf 93       	push	r28
    2c96:	df 93       	push	r29
    2c98:	d8 2f       	mov	r29, r24
    2c9a:	c9 2f       	mov	r28, r25
    2c9c:	06 2f       	mov	r16, r22
    2c9e:	17 2f       	mov	r17, r23
	// Performs the same error detection procedure for the Stepper subsystem as it was performed with ATTINY.
	SUBSYS_OPENSTAT openStepper;
	
	// Stepper subsystem is opened.
	openStepper = STEPPER_open();
    2ca0:	0e 94 7d 07 	call	0xefa	; 0xefa <STEPPER_open>
	
	// Displays an error message if the returned value for the opened stepper subsystem is unexpected.
	if (openStepper.state != SUBSYS_OPEN){
    2ca4:	91 30       	cpi	r25, 0x01	; 1
    2ca6:	41 f0       	breq	.+16     	; 0x2cb8 <moveForward+0x34>
		LCD_printf("\nError when opening STEPPER subsystem!");
    2ca8:	4f eb       	ldi	r20, 0xBF	; 191
    2caa:	51 e0       	ldi	r21, 0x01	; 1
    2cac:	5f 93       	push	r21
    2cae:	4f 93       	push	r20
    2cb0:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
    2cb4:	0f 90       	pop	r0
    2cb6:	0f 90       	pop	r0
	}
	
	// Moving both wheels forward.
	STEPPER_move_stwt(STEPPER_BOTH,
    2cb8:	1f 92       	push	r1
    2cba:	1f 92       	push	r1
    2cbc:	1f 92       	push	r1
    2cbe:	81 e0       	ldi	r24, 0x01	; 1
    2cc0:	8f 93       	push	r24
    2cc2:	80 e9       	ldi	r24, 0x90	; 144
    2cc4:	8f 93       	push	r24
    2cc6:	1f 93       	push	r17
    2cc8:	0f 93       	push	r16
    2cca:	cf 93       	push	r28
    2ccc:	df 93       	push	r29
    2cce:	81 2c       	mov	r8, r1
    2cd0:	a1 2c       	mov	r10, r1
    2cd2:	b1 2c       	mov	r11, r1
    2cd4:	c1 2c       	mov	r12, r1
    2cd6:	0f 2e       	mov	r0, r31
    2cd8:	f0 e9       	ldi	r31, 0x90	; 144
    2cda:	ef 2e       	mov	r14, r31
    2cdc:	ff 24       	eor	r15, r15
    2cde:	f3 94       	inc	r15
    2ce0:	f0 2d       	mov	r31, r0
    2ce2:	2d 2f       	mov	r18, r29
    2ce4:	3c 2f       	mov	r19, r28
    2ce6:	40 e0       	ldi	r20, 0x00	; 0
    2ce8:	62 e0       	ldi	r22, 0x02	; 2
    2cea:	80 e0       	ldi	r24, 0x00	; 0
    2cec:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
    2cf0:	8d b7       	in	r24, 0x3d	; 61
    2cf2:	9e b7       	in	r25, 0x3e	; 62
    2cf4:	09 96       	adiw	r24, 0x09	; 9
    2cf6:	0f b6       	in	r0, 0x3f	; 63
    2cf8:	f8 94       	cli
    2cfa:	9e bf       	out	0x3e, r25	; 62
    2cfc:	0f be       	out	0x3f, r0	; 63
    2cfe:	8d bf       	out	0x3d, r24	; 61
		STEPPER_FWD, steps, speed, 400, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_FWD, steps, speed, 400, STEPPER_BRK_OFF);	//Right wheel
}
    2d00:	df 91       	pop	r29
    2d02:	cf 91       	pop	r28
    2d04:	1f 91       	pop	r17
    2d06:	0f 91       	pop	r16
    2d08:	ff 90       	pop	r15
    2d0a:	ef 90       	pop	r14
    2d0c:	cf 90       	pop	r12
    2d0e:	bf 90       	pop	r11
    2d10:	af 90       	pop	r10
    2d12:	8f 90       	pop	r8
    2d14:	08 95       	ret

00002d16 <sTurnLeft>:
	yo = y;
	thetao = theta;
}

// Given an angle and a speed, this function makes the robot turn/spin to the left.
void sTurnLeft(int angle, int speed){
    2d16:	8f 92       	push	r8
    2d18:	af 92       	push	r10
    2d1a:	bf 92       	push	r11
    2d1c:	cf 92       	push	r12
    2d1e:	ef 92       	push	r14
    2d20:	ff 92       	push	r15
    2d22:	0f 93       	push	r16
    2d24:	1f 93       	push	r17
    2d26:	cf 93       	push	r28
    2d28:	df 93       	push	r29
    2d2a:	ec 01       	movw	r28, r24
    2d2c:	06 2f       	mov	r16, r22
    2d2e:	17 2f       	mov	r17, r23
	
	// Performs the same error detection procedure for the Stepper subsystem as it was performed with ATTINY.
	SUBSYS_OPENSTAT openStepper;
	
	// Stepper subsystem is opened.
	openStepper = STEPPER_open();
    2d30:	0e 94 7d 07 	call	0xefa	; 0xefa <STEPPER_open>
	
	// Displays an error message if the returned value for the opened stepper subsystem is unexpected.
	if (openStepper.state != SUBSYS_OPEN){
    2d34:	91 30       	cpi	r25, 0x01	; 1
    2d36:	41 f0       	breq	.+16     	; 0x2d48 <sTurnLeft+0x32>
		LCD_printf("\nError when opening STEPPER subsystem!");
    2d38:	8f eb       	ldi	r24, 0xBF	; 191
    2d3a:	91 e0       	ldi	r25, 0x01	; 1
    2d3c:	9f 93       	push	r25
    2d3e:	8f 93       	push	r24
    2d40:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
    2d44:	0f 90       	pop	r0
    2d46:	0f 90       	pop	r0
	}
	
	steps = angle*130/90;
    2d48:	22 e8       	ldi	r18, 0x82	; 130
    2d4a:	2c 9f       	mul	r18, r28
    2d4c:	c0 01       	movw	r24, r0
    2d4e:	2d 9f       	mul	r18, r29
    2d50:	90 0d       	add	r25, r0
    2d52:	11 24       	eor	r1, r1
    2d54:	6a e5       	ldi	r22, 0x5A	; 90
    2d56:	70 e0       	ldi	r23, 0x00	; 0
    2d58:	0e 94 8f 28 	call	0x511e	; 0x511e <__divmodhi4>
    2d5c:	26 2f       	mov	r18, r22
    2d5e:	37 2f       	mov	r19, r23
	STEPPER_move_stwt(STEPPER_BOTH,
    2d60:	1f 92       	push	r1
    2d62:	1f 92       	push	r1
    2d64:	1f 92       	push	r1
    2d66:	83 e0       	ldi	r24, 0x03	; 3
    2d68:	8f 93       	push	r24
    2d6a:	80 e2       	ldi	r24, 0x20	; 32
    2d6c:	8f 93       	push	r24
    2d6e:	1f 93       	push	r17
    2d70:	0f 93       	push	r16
    2d72:	7f 93       	push	r23
    2d74:	6f 93       	push	r22
    2d76:	81 2c       	mov	r8, r1
    2d78:	a1 2c       	mov	r10, r1
    2d7a:	b1 2c       	mov	r11, r1
    2d7c:	c1 2c       	mov	r12, r1
    2d7e:	0f 2e       	mov	r0, r31
    2d80:	f0 e2       	ldi	r31, 0x20	; 32
    2d82:	ef 2e       	mov	r14, r31
    2d84:	f3 e0       	ldi	r31, 0x03	; 3
    2d86:	ff 2e       	mov	r15, r31
    2d88:	f0 2d       	mov	r31, r0
    2d8a:	41 e0       	ldi	r20, 0x01	; 1
    2d8c:	62 e0       	ldi	r22, 0x02	; 2
    2d8e:	80 e0       	ldi	r24, 0x00	; 0
    2d90:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
		STEPPER_REV, steps, speed, 800, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_FWD, steps, speed, 800, STEPPER_BRK_OFF);	//Right wheel
		
	STEPPER_close();
    2d94:	0e 94 0b 06 	call	0xc16	; 0xc16 <STEPPER_close>
    2d98:	8d b7       	in	r24, 0x3d	; 61
    2d9a:	9e b7       	in	r25, 0x3e	; 62
    2d9c:	09 96       	adiw	r24, 0x09	; 9
    2d9e:	0f b6       	in	r0, 0x3f	; 63
    2da0:	f8 94       	cli
    2da2:	9e bf       	out	0x3e, r25	; 62
    2da4:	0f be       	out	0x3f, r0	; 63
    2da6:	8d bf       	out	0x3d, r24	; 61
}
    2da8:	df 91       	pop	r29
    2daa:	cf 91       	pop	r28
    2dac:	1f 91       	pop	r17
    2dae:	0f 91       	pop	r16
    2db0:	ff 90       	pop	r15
    2db2:	ef 90       	pop	r14
    2db4:	cf 90       	pop	r12
    2db6:	bf 90       	pop	r11
    2db8:	af 90       	pop	r10
    2dba:	8f 90       	pop	r8
    2dbc:	08 95       	ret

00002dbe <sTurnRight>:

// Given an angle and a speed, this function makes the robot turn/spin to the right.
void sTurnRight(int angle, int speed){
    2dbe:	8f 92       	push	r8
    2dc0:	af 92       	push	r10
    2dc2:	bf 92       	push	r11
    2dc4:	cf 92       	push	r12
    2dc6:	ef 92       	push	r14
    2dc8:	ff 92       	push	r15
    2dca:	0f 93       	push	r16
    2dcc:	1f 93       	push	r17
    2dce:	cf 93       	push	r28
    2dd0:	df 93       	push	r29
    2dd2:	ec 01       	movw	r28, r24
    2dd4:	06 2f       	mov	r16, r22
    2dd6:	17 2f       	mov	r17, r23
	
	// Performs the same error detection procedure for the Stepper subsystem as it was performed with ATTINY.
	SUBSYS_OPENSTAT openStepper;
	
	// Stepper subsystem is opened.
	openStepper = STEPPER_open();
    2dd8:	0e 94 7d 07 	call	0xefa	; 0xefa <STEPPER_open>
	
	// Displays an error message if the returned value for the opened stepper subsystem is unexpected.
	if (openStepper.state != SUBSYS_OPEN){
    2ddc:	91 30       	cpi	r25, 0x01	; 1
    2dde:	41 f0       	breq	.+16     	; 0x2df0 <sTurnRight+0x32>
		LCD_printf("\nError when opening STEPPER subsystem!");
    2de0:	8f eb       	ldi	r24, 0xBF	; 191
    2de2:	91 e0       	ldi	r25, 0x01	; 1
    2de4:	9f 93       	push	r25
    2de6:	8f 93       	push	r24
    2de8:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
    2dec:	0f 90       	pop	r0
    2dee:	0f 90       	pop	r0
	}
	
	steps = angle*130/90;
    2df0:	22 e8       	ldi	r18, 0x82	; 130
    2df2:	2c 9f       	mul	r18, r28
    2df4:	c0 01       	movw	r24, r0
    2df6:	2d 9f       	mul	r18, r29
    2df8:	90 0d       	add	r25, r0
    2dfa:	11 24       	eor	r1, r1
    2dfc:	6a e5       	ldi	r22, 0x5A	; 90
    2dfe:	70 e0       	ldi	r23, 0x00	; 0
    2e00:	0e 94 8f 28 	call	0x511e	; 0x511e <__divmodhi4>
    2e04:	26 2f       	mov	r18, r22
    2e06:	37 2f       	mov	r19, r23
	STEPPER_move_stwt(STEPPER_BOTH,
    2e08:	1f 92       	push	r1
    2e0a:	1f 92       	push	r1
    2e0c:	1f 92       	push	r1
    2e0e:	83 e0       	ldi	r24, 0x03	; 3
    2e10:	8f 93       	push	r24
    2e12:	80 e2       	ldi	r24, 0x20	; 32
    2e14:	8f 93       	push	r24
    2e16:	1f 93       	push	r17
    2e18:	0f 93       	push	r16
    2e1a:	7f 93       	push	r23
    2e1c:	6f 93       	push	r22
    2e1e:	88 24       	eor	r8, r8
    2e20:	83 94       	inc	r8
    2e22:	a1 2c       	mov	r10, r1
    2e24:	b1 2c       	mov	r11, r1
    2e26:	c1 2c       	mov	r12, r1
    2e28:	0f 2e       	mov	r0, r31
    2e2a:	f0 e2       	ldi	r31, 0x20	; 32
    2e2c:	ef 2e       	mov	r14, r31
    2e2e:	f3 e0       	ldi	r31, 0x03	; 3
    2e30:	ff 2e       	mov	r15, r31
    2e32:	f0 2d       	mov	r31, r0
    2e34:	40 e0       	ldi	r20, 0x00	; 0
    2e36:	62 e0       	ldi	r22, 0x02	; 2
    2e38:	80 e0       	ldi	r24, 0x00	; 0
    2e3a:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
		STEPPER_FWD, steps, speed, 800, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_REV, steps, speed, 800, STEPPER_BRK_OFF);	//Right wheel
		
	STEPPER_close();
    2e3e:	0e 94 0b 06 	call	0xc16	; 0xc16 <STEPPER_close>
    2e42:	8d b7       	in	r24, 0x3d	; 61
    2e44:	9e b7       	in	r25, 0x3e	; 62
    2e46:	09 96       	adiw	r24, 0x09	; 9
    2e48:	0f b6       	in	r0, 0x3f	; 63
    2e4a:	f8 94       	cli
    2e4c:	9e bf       	out	0x3e, r25	; 62
    2e4e:	0f be       	out	0x3f, r0	; 63
    2e50:	8d bf       	out	0x3d, r24	; 61
}
    2e52:	df 91       	pop	r29
    2e54:	cf 91       	pop	r28
    2e56:	1f 91       	pop	r17
    2e58:	0f 91       	pop	r16
    2e5a:	ff 90       	pop	r15
    2e5c:	ef 90       	pop	r14
    2e5e:	cf 90       	pop	r12
    2e60:	bf 90       	pop	r11
    2e62:	af 90       	pop	r10
    2e64:	8f 90       	pop	r8
    2e66:	08 95       	ret

00002e68 <go2Angle>:
		STEPPER_FWD, steps, speed, 400, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_FWD, steps, speed, 400, STEPPER_BRK_OFF);	//Right wheel
}

// Rotates the robot to the required functions.
void go2Angle(int angle){
    2e68:	cf 93       	push	r28
    2e6a:	df 93       	push	r29
	
	// If the angle is positive, rotate the robot in a certain angle that is converted in steps to the left.
	if (angle > 0){
    2e6c:	18 16       	cp	r1, r24
    2e6e:	19 06       	cpc	r1, r25
    2e70:	dc f4       	brge	.+54     	; 0x2ea8 <go2Angle+0x40>
		if (angle <= 180){
    2e72:	85 3b       	cpi	r24, 0xB5	; 181
    2e74:	91 05       	cpc	r25, r1
    2e76:	2c f4       	brge	.+10     	; 0x2e82 <go2Angle+0x1a>
			sTurnLeft(angle, 400);
    2e78:	60 e9       	ldi	r22, 0x90	; 144
    2e7a:	71 e0       	ldi	r23, 0x01	; 1
    2e7c:	0e 94 8b 16 	call	0x2d16	; 0x2d16 <sTurnLeft>
    2e80:	32 c0       	rjmp	.+100    	; 0x2ee6 <go2Angle+0x7e>
		}else if(angle > 180){
			angle = angle/2;
    2e82:	9c 01       	movw	r18, r24
    2e84:	99 23       	and	r25, r25
    2e86:	14 f4       	brge	.+4      	; 0x2e8c <go2Angle+0x24>
    2e88:	2f 5f       	subi	r18, 0xFF	; 255
    2e8a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e8c:	e9 01       	movw	r28, r18
    2e8e:	d5 95       	asr	r29
    2e90:	c7 95       	ror	r28
			sTurnLeft(angle, 400);
    2e92:	60 e9       	ldi	r22, 0x90	; 144
    2e94:	71 e0       	ldi	r23, 0x01	; 1
    2e96:	ce 01       	movw	r24, r28
    2e98:	0e 94 8b 16 	call	0x2d16	; 0x2d16 <sTurnLeft>
			sTurnLeft(angle, 400);
    2e9c:	60 e9       	ldi	r22, 0x90	; 144
    2e9e:	71 e0       	ldi	r23, 0x01	; 1
    2ea0:	ce 01       	movw	r24, r28
    2ea2:	0e 94 8b 16 	call	0x2d16	; 0x2d16 <sTurnLeft>
    2ea6:	1f c0       	rjmp	.+62     	; 0x2ee6 <go2Angle+0x7e>
		}
	// If the angle is negative, rotate the robot in a certain angle that is converted in steps to the right.
	}else if(angle < 0){
    2ea8:	99 23       	and	r25, r25
    2eaa:	ec f4       	brge	.+58     	; 0x2ee6 <go2Angle+0x7e>
		angle = angle * (-1); //Make the angle positive to calculate the amount of steps.
    2eac:	91 95       	neg	r25
    2eae:	81 95       	neg	r24
    2eb0:	91 09       	sbc	r25, r1
		if (angle <= 180){
    2eb2:	85 3b       	cpi	r24, 0xB5	; 181
    2eb4:	91 05       	cpc	r25, r1
    2eb6:	2c f4       	brge	.+10     	; 0x2ec2 <go2Angle+0x5a>
			sTurnRight(angle, 400);
    2eb8:	60 e9       	ldi	r22, 0x90	; 144
    2eba:	71 e0       	ldi	r23, 0x01	; 1
    2ebc:	0e 94 df 16 	call	0x2dbe	; 0x2dbe <sTurnRight>
    2ec0:	12 c0       	rjmp	.+36     	; 0x2ee6 <go2Angle+0x7e>
		}else if (angle > 180){
			angle = angle/2;
    2ec2:	9c 01       	movw	r18, r24
    2ec4:	99 23       	and	r25, r25
    2ec6:	14 f4       	brge	.+4      	; 0x2ecc <go2Angle+0x64>
    2ec8:	2f 5f       	subi	r18, 0xFF	; 255
    2eca:	3f 4f       	sbci	r19, 0xFF	; 255
    2ecc:	e9 01       	movw	r28, r18
    2ece:	d5 95       	asr	r29
    2ed0:	c7 95       	ror	r28
			sTurnRight(angle, 400);
    2ed2:	60 e9       	ldi	r22, 0x90	; 144
    2ed4:	71 e0       	ldi	r23, 0x01	; 1
    2ed6:	ce 01       	movw	r24, r28
    2ed8:	0e 94 df 16 	call	0x2dbe	; 0x2dbe <sTurnRight>
			sTurnRight(angle, 400);
    2edc:	60 e9       	ldi	r22, 0x90	; 144
    2ede:	71 e0       	ldi	r23, 0x01	; 1
    2ee0:	ce 01       	movw	r24, r28
    2ee2:	0e 94 df 16 	call	0x2dbe	; 0x2dbe <sTurnRight>
		}
	}else{
		// does nothing
	}
}
    2ee6:	df 91       	pop	r29
    2ee8:	cf 91       	pop	r28
    2eea:	08 95       	ret

00002eec <go2ContAngle>:
		STEPPER_REV, steps, speed, 800, STEPPER_BRK_OFF);	//Right wheel
		
	STEPPER_close();
}

void go2ContAngle(float angle, short speed){
    2eec:	8f 92       	push	r8
    2eee:	9f 92       	push	r9
    2ef0:	af 92       	push	r10
    2ef2:	bf 92       	push	r11
    2ef4:	cf 92       	push	r12
    2ef6:	df 92       	push	r13
    2ef8:	ef 92       	push	r14
    2efa:	ff 92       	push	r15
    2efc:	0f 93       	push	r16
    2efe:	1f 93       	push	r17
    2f00:	cf 93       	push	r28
    2f02:	df 93       	push	r29
    2f04:	6b 01       	movw	r12, r22
    2f06:	7c 01       	movw	r14, r24
    2f08:	04 2f       	mov	r16, r20
    2f0a:	15 2f       	mov	r17, r21
	unsigned const short timeMultiplier = 500;
	
	if(angle > 0){
    2f0c:	20 e0       	ldi	r18, 0x00	; 0
    2f0e:	30 e0       	ldi	r19, 0x00	; 0
    2f10:	a9 01       	movw	r20, r18
    2f12:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    2f16:	18 16       	cp	r1, r24
    2f18:	0c f0       	brlt	.+2      	; 0x2f1c <go2ContAngle+0x30>
    2f1a:	4d c0       	rjmp	.+154    	; 0x2fb6 <go2ContAngle+0xca>
		
		//angle = angle * (-1);
		angle = (timeMultiplier*angle)/45;
    2f1c:	20 e0       	ldi	r18, 0x00	; 0
    2f1e:	30 e0       	ldi	r19, 0x00	; 0
    2f20:	4a ef       	ldi	r20, 0xFA	; 250
    2f22:	53 e4       	ldi	r21, 0x43	; 67
    2f24:	c7 01       	movw	r24, r14
    2f26:	b6 01       	movw	r22, r12
    2f28:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    2f2c:	20 e0       	ldi	r18, 0x00	; 0
    2f2e:	30 e0       	ldi	r19, 0x00	; 0
    2f30:	44 e3       	ldi	r20, 0x34	; 52
    2f32:	52 e4       	ldi	r21, 0x42	; 66
    2f34:	0e 94 b3 21 	call	0x4366	; 0x4366 <__divsf3>
    2f38:	96 2e       	mov	r9, r22
    2f3a:	d7 2f       	mov	r29, r23
    2f3c:	c8 2f       	mov	r28, r24
    2f3e:	d9 2e       	mov	r13, r25
		LCD_clear();
    2f40:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
		LCD_printf("%f", angle);
    2f44:	df 92       	push	r13
    2f46:	cf 93       	push	r28
    2f48:	df 93       	push	r29
    2f4a:	9f 92       	push	r9
    2f4c:	27 e1       	ldi	r18, 0x17	; 23
    2f4e:	32 e0       	ldi	r19, 0x02	; 2
    2f50:	3f 93       	push	r19
    2f52:	2f 93       	push	r18
    2f54:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
	
		STEPPER_move_rn(STEPPER_BOTH,
    2f58:	1f 92       	push	r1
    2f5a:	1f 92       	push	r1
    2f5c:	1f 92       	push	r1
    2f5e:	81 e0       	ldi	r24, 0x01	; 1
    2f60:	8f 93       	push	r24
    2f62:	80 e9       	ldi	r24, 0x90	; 144
    2f64:	8f 93       	push	r24
    2f66:	1f 93       	push	r17
    2f68:	0f 93       	push	r16
    2f6a:	1f 92       	push	r1
    2f6c:	1f 92       	push	r1
    2f6e:	88 24       	eor	r8, r8
    2f70:	83 94       	inc	r8
    2f72:	a1 2c       	mov	r10, r1
    2f74:	b1 2c       	mov	r11, r1
    2f76:	c1 2c       	mov	r12, r1
    2f78:	0f 2e       	mov	r0, r31
    2f7a:	f0 e9       	ldi	r31, 0x90	; 144
    2f7c:	ef 2e       	mov	r14, r31
    2f7e:	ff 24       	eor	r15, r15
    2f80:	f3 94       	inc	r15
    2f82:	f0 2d       	mov	r31, r0
    2f84:	20 e0       	ldi	r18, 0x00	; 0
    2f86:	30 e0       	ldi	r19, 0x00	; 0
    2f88:	40 e0       	ldi	r20, 0x00	; 0
    2f8a:	62 e0       	ldi	r22, 0x02	; 2
    2f8c:	82 e0       	ldi	r24, 0x02	; 2
    2f8e:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
			STEPPER_FWD, speed, 400,	//Left
			STEPPER_REV, speed, 400);	//Right
		TMRSRVC_delay(angle);
    2f92:	69 2d       	mov	r22, r9
    2f94:	7d 2f       	mov	r23, r29
    2f96:	8c 2f       	mov	r24, r28
    2f98:	9d 2d       	mov	r25, r13
    2f9a:	0e 94 1b 22 	call	0x4436	; 0x4436 <__fixsfsi>
    2f9e:	cb 01       	movw	r24, r22
    2fa0:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
    2fa4:	8d b7       	in	r24, 0x3d	; 61
    2fa6:	9e b7       	in	r25, 0x3e	; 62
    2fa8:	0f 96       	adiw	r24, 0x0f	; 15
    2faa:	0f b6       	in	r0, 0x3f	; 63
    2fac:	f8 94       	cli
    2fae:	9e bf       	out	0x3e, r25	; 62
    2fb0:	0f be       	out	0x3f, r0	; 63
    2fb2:	8d bf       	out	0x3d, r24	; 61
    2fb4:	4c c0       	rjmp	.+152    	; 0x304e <go2ContAngle+0x162>
	}else{
		angle = angle * (-1);
    2fb6:	c7 01       	movw	r24, r14
    2fb8:	b6 01       	movw	r22, r12
    2fba:	90 58       	subi	r25, 0x80	; 128
		angle = (timeMultiplier*angle)/45;
    2fbc:	20 e0       	ldi	r18, 0x00	; 0
    2fbe:	30 e0       	ldi	r19, 0x00	; 0
    2fc0:	4a ef       	ldi	r20, 0xFA	; 250
    2fc2:	53 e4       	ldi	r21, 0x43	; 67
    2fc4:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    2fc8:	20 e0       	ldi	r18, 0x00	; 0
    2fca:	30 e0       	ldi	r19, 0x00	; 0
    2fcc:	44 e3       	ldi	r20, 0x34	; 52
    2fce:	52 e4       	ldi	r21, 0x42	; 66
    2fd0:	0e 94 b3 21 	call	0x4366	; 0x4366 <__divsf3>
    2fd4:	96 2e       	mov	r9, r22
    2fd6:	d7 2e       	mov	r13, r23
    2fd8:	d8 2f       	mov	r29, r24
    2fda:	c9 2f       	mov	r28, r25
		LCD_clear();
    2fdc:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
		LCD_printf("%f", angle);
    2fe0:	cf 93       	push	r28
    2fe2:	df 93       	push	r29
    2fe4:	df 92       	push	r13
    2fe6:	9f 92       	push	r9
    2fe8:	27 e1       	ldi	r18, 0x17	; 23
    2fea:	32 e0       	ldi	r19, 0x02	; 2
    2fec:	3f 93       	push	r19
    2fee:	2f 93       	push	r18
    2ff0:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
	
		STEPPER_move_rn(STEPPER_BOTH,
    2ff4:	1f 92       	push	r1
    2ff6:	1f 92       	push	r1
    2ff8:	1f 92       	push	r1
    2ffa:	81 e0       	ldi	r24, 0x01	; 1
    2ffc:	8f 93       	push	r24
    2ffe:	80 e9       	ldi	r24, 0x90	; 144
    3000:	8f 93       	push	r24
    3002:	1f 93       	push	r17
    3004:	0f 93       	push	r16
    3006:	1f 92       	push	r1
    3008:	1f 92       	push	r1
    300a:	81 2c       	mov	r8, r1
    300c:	a1 2c       	mov	r10, r1
    300e:	b1 2c       	mov	r11, r1
    3010:	c1 2c       	mov	r12, r1
    3012:	0f 2e       	mov	r0, r31
    3014:	f0 e9       	ldi	r31, 0x90	; 144
    3016:	ef 2e       	mov	r14, r31
    3018:	ff 24       	eor	r15, r15
    301a:	f3 94       	inc	r15
    301c:	f0 2d       	mov	r31, r0
    301e:	20 e0       	ldi	r18, 0x00	; 0
    3020:	30 e0       	ldi	r19, 0x00	; 0
    3022:	41 e0       	ldi	r20, 0x01	; 1
    3024:	62 e0       	ldi	r22, 0x02	; 2
    3026:	82 e0       	ldi	r24, 0x02	; 2
    3028:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
			STEPPER_REV, speed, 400,	//Left
			STEPPER_FWD, speed, 400);	//Right
		TMRSRVC_delay(angle);
    302c:	69 2d       	mov	r22, r9
    302e:	7d 2d       	mov	r23, r13
    3030:	8d 2f       	mov	r24, r29
    3032:	9c 2f       	mov	r25, r28
    3034:	0e 94 1b 22 	call	0x4436	; 0x4436 <__fixsfsi>
    3038:	cb 01       	movw	r24, r22
    303a:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
    303e:	8d b7       	in	r24, 0x3d	; 61
    3040:	9e b7       	in	r25, 0x3e	; 62
    3042:	0f 96       	adiw	r24, 0x0f	; 15
    3044:	0f b6       	in	r0, 0x3f	; 63
    3046:	f8 94       	cli
    3048:	9e bf       	out	0x3e, r25	; 62
    304a:	0f be       	out	0x3f, r0	; 63
    304c:	8d bf       	out	0x3d, r24	; 61
	}
	STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    304e:	60 e0       	ldi	r22, 0x00	; 0
    3050:	82 e0       	ldi	r24, 0x02	; 2
    3052:	0e 94 e5 08 	call	0x11ca	; 0x11ca <STEPPER_stop>
}
    3056:	df 91       	pop	r29
    3058:	cf 91       	pop	r28
    305a:	1f 91       	pop	r17
    305c:	0f 91       	pop	r16
    305e:	ff 90       	pop	r15
    3060:	ef 90       	pop	r14
    3062:	df 90       	pop	r13
    3064:	cf 90       	pop	r12
    3066:	bf 90       	pop	r11
    3068:	af 90       	pop	r10
    306a:	9f 90       	pop	r9
    306c:	8f 90       	pop	r8
    306e:	08 95       	ret

00003070 <rightFollow>:
void rightFollow(void){
    3070:	cf 93       	push	r28
    3072:	df 93       	push	r29
    3074:	00 d0       	rcall	.+0      	; 0x3076 <rightFollow+0x6>
    3076:	00 d0       	rcall	.+0      	; 0x3078 <rightFollow+0x8>
    3078:	1f 92       	push	r1
    307a:	cd b7       	in	r28, 0x3d	; 61
    307c:	de b7       	in	r29, 0x3e	; 62
	char lowerLimit = 4.75;
	char higherLimit = 5.25;
	char ICT = 12;
	float LP, RP, LWS, RWS, frontIR, rightIR, leftIR;
	float oLWS = 0;
	float oRWS = 0;
    307e:	21 2c       	mov	r2, r1
    3080:	31 2c       	mov	r3, r1
    3082:	1a 82       	std	Y+2, r1	; 0x02
    3084:	1b 82       	std	Y+3, r1	; 0x03
	// code that powers the right wall following routine
	char lowerLimit = 4.75;
	char higherLimit = 5.25;
	char ICT = 12;
	float LP, RP, LWS, RWS, frontIR, rightIR, leftIR;
	float oLWS = 0;
    3086:	91 2c       	mov	r9, r1
    3088:	19 82       	std	Y+1, r1	; 0x01
    308a:	1d 82       	std	Y+5, r1	; 0x05
    308c:	1c 82       	std	Y+4, r1	; 0x04
	char KP = 1.5;
	char KI = 0.75;
	char KD = 0;

	while(1){
		frontIR = getFrontIR();
    308e:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <getFrontIR>
    3092:	2b 01       	movw	r4, r22
    3094:	3c 01       	movw	r6, r24
		rightIR = getRightIR();
    3096:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
    309a:	6b 01       	movw	r12, r22
    309c:	7c 01       	movw	r14, r24
		leftIR = getLeftIR();
    309e:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
		if((frontIR > ICT) && (rightIR < ICT)){ // Condition for simple wall following
    30a2:	20 e0       	ldi	r18, 0x00	; 0
    30a4:	30 e0       	ldi	r19, 0x00	; 0
    30a6:	40 e4       	ldi	r20, 0x40	; 64
    30a8:	51 e4       	ldi	r21, 0x41	; 65
    30aa:	c3 01       	movw	r24, r6
    30ac:	b2 01       	movw	r22, r4
    30ae:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    30b2:	18 16       	cp	r1, r24
    30b4:	0c f0       	brlt	.+2      	; 0x30b8 <rightFollow+0x48>
    30b6:	fe c0       	rjmp	.+508    	; 0x32b4 <rightFollow+0x244>
    30b8:	20 e0       	ldi	r18, 0x00	; 0
    30ba:	30 e0       	ldi	r19, 0x00	; 0
    30bc:	40 e4       	ldi	r20, 0x40	; 64
    30be:	51 e4       	ldi	r21, 0x41	; 65
    30c0:	c7 01       	movw	r24, r14
    30c2:	b6 01       	movw	r22, r12
    30c4:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    30c8:	88 23       	and	r24, r24
    30ca:	0c f0       	brlt	.+2      	; 0x30ce <rightFollow+0x5e>
    30cc:	f3 c0       	rjmp	.+486    	; 0x32b4 <rightFollow+0x244>
			if (rightIR < lowerLimit){ // Too close to wall
    30ce:	20 e0       	ldi	r18, 0x00	; 0
    30d0:	30 e0       	ldi	r19, 0x00	; 0
    30d2:	40 e8       	ldi	r20, 0x80	; 128
    30d4:	50 e4       	ldi	r21, 0x40	; 64
    30d6:	c7 01       	movw	r24, r14
    30d8:	b6 01       	movw	r22, r12
    30da:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    30de:	88 23       	and	r24, r24
    30e0:	e4 f4       	brge	.+56     	; 0x311a <rightFollow+0xaa>
				LCD_clear();
    30e2:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
				LCD_printf("Right Follow\n");
    30e6:	8a e1       	ldi	r24, 0x1A	; 26
    30e8:	92 e0       	ldi	r25, 0x02	; 2
    30ea:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Inside Target\n");
    30ee:	87 e2       	ldi	r24, 0x27	; 39
    30f0:	92 e0       	ldi	r25, 0x02	; 2
    30f2:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Range\n");
    30f6:	85 e3       	ldi	r24, 0x35	; 53
    30f8:	92 e0       	ldi	r25, 0x02	; 2
    30fa:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

				LP = 0;
				RP = lowerLimit - rightIR;
    30fe:	a7 01       	movw	r20, r14
    3100:	96 01       	movw	r18, r12
    3102:	60 e0       	ldi	r22, 0x00	; 0
    3104:	70 e0       	ldi	r23, 0x00	; 0
    3106:	80 e8       	ldi	r24, 0x80	; 128
    3108:	90 e4       	ldi	r25, 0x40	; 64
    310a:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    310e:	2b 01       	movw	r4, r22
    3110:	3c 01       	movw	r6, r24
				LCD_clear();
				LCD_printf("Right Follow\n");
				LCD_printf("Inside Target\n");
				LCD_printf("Range\n");

				LP = 0;
    3112:	60 e0       	ldi	r22, 0x00	; 0
    3114:	70 e0       	ldi	r23, 0x00	; 0
    3116:	cb 01       	movw	r24, r22
    3118:	37 c0       	rjmp	.+110    	; 0x3188 <rightFollow+0x118>
				RP = lowerLimit - rightIR;
				LI = 0;
				RI = RI++;
			}else if(rightIR > higherLimit){ // Too far from wall
    311a:	20 e0       	ldi	r18, 0x00	; 0
    311c:	30 e0       	ldi	r19, 0x00	; 0
    311e:	40 ea       	ldi	r20, 0xA0	; 160
    3120:	50 e4       	ldi	r21, 0x40	; 64
    3122:	c7 01       	movw	r24, r14
    3124:	b6 01       	movw	r22, r12
    3126:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    312a:	18 16       	cp	r1, r24
    312c:	d4 f4       	brge	.+52     	; 0x3162 <rightFollow+0xf2>
				LCD_clear();
    312e:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
				LCD_printf("Right Follow\n");
    3132:	8a e1       	ldi	r24, 0x1A	; 26
    3134:	92 e0       	ldi	r25, 0x02	; 2
    3136:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Outside Target\n");
    313a:	8b e3       	ldi	r24, 0x3B	; 59
    313c:	92 e0       	ldi	r25, 0x02	; 2
    313e:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Range\n");
    3142:	85 e3       	ldi	r24, 0x35	; 53
    3144:	92 e0       	ldi	r25, 0x02	; 2
    3146:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

				LP = rightIR - higherLimit;
    314a:	20 e0       	ldi	r18, 0x00	; 0
    314c:	30 e0       	ldi	r19, 0x00	; 0
    314e:	40 ea       	ldi	r20, 0xA0	; 160
    3150:	50 e4       	ldi	r21, 0x40	; 64
    3152:	c7 01       	movw	r24, r14
    3154:	b6 01       	movw	r22, r12
    3156:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
				RP = 0;
    315a:	41 2c       	mov	r4, r1
    315c:	51 2c       	mov	r5, r1
    315e:	32 01       	movw	r6, r4
    3160:	13 c0       	rjmp	.+38     	; 0x3188 <rightFollow+0x118>
				LI = LI++;
				RI = 0;
			}else{ // Proper range from wall
				LCD_clear();
    3162:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
				LCD_printf("Right Follow\n");
    3166:	8a e1       	ldi	r24, 0x1A	; 26
    3168:	92 e0       	ldi	r25, 0x02	; 2
    316a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("At Target\n");
    316e:	8a e4       	ldi	r24, 0x4A	; 74
    3170:	92 e0       	ldi	r25, 0x02	; 2
    3172:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Range\n");
    3176:	85 e3       	ldi	r24, 0x35	; 53
    3178:	92 e0       	ldi	r25, 0x02	; 2
    317a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

				LP = 0;
				RP = 0;
    317e:	41 2c       	mov	r4, r1
    3180:	51 2c       	mov	r5, r1
    3182:	32 01       	movw	r6, r4
				LCD_clear();
				LCD_printf("Right Follow\n");
				LCD_printf("At Target\n");
				LCD_printf("Range\n");

				LP = 0;
    3184:	c3 01       	movw	r24, r6
    3186:	b2 01       	movw	r22, r4
				RI = 0;
			}
			
			// PID lopp
			
			LWS = KP*LP + KI*LI + base; // Proportinal and Integral
    3188:	20 e0       	ldi	r18, 0x00	; 0
    318a:	30 e0       	ldi	r19, 0x00	; 0
    318c:	a9 01       	movw	r20, r18
    318e:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3192:	20 e0       	ldi	r18, 0x00	; 0
    3194:	30 e0       	ldi	r19, 0x00	; 0
    3196:	40 ef       	ldi	r20, 0xF0	; 240
    3198:	52 e4       	ldi	r21, 0x42	; 66
    319a:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    319e:	e6 2e       	mov	r14, r22
    31a0:	f7 2e       	mov	r15, r23
    31a2:	08 2f       	mov	r16, r24
    31a4:	19 2f       	mov	r17, r25
			RWS = KP*RP + KI*RI + base;
    31a6:	20 e0       	ldi	r18, 0x00	; 0
    31a8:	30 e0       	ldi	r19, 0x00	; 0
    31aa:	a9 01       	movw	r20, r18
    31ac:	c3 01       	movw	r24, r6
    31ae:	b2 01       	movw	r22, r4
    31b0:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    31b4:	20 e0       	ldi	r18, 0x00	; 0
    31b6:	30 e0       	ldi	r19, 0x00	; 0
    31b8:	40 ef       	ldi	r20, 0xF0	; 240
    31ba:	52 e4       	ldi	r21, 0x42	; 66
    31bc:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    31c0:	46 2e       	mov	r4, r22
    31c2:	57 2e       	mov	r5, r23
    31c4:	68 2e       	mov	r6, r24
    31c6:	79 2e       	mov	r7, r25
			if (oLWS == 0){ // Case to prevent weird stuff on first run
    31c8:	20 e0       	ldi	r18, 0x00	; 0
    31ca:	30 e0       	ldi	r19, 0x00	; 0
    31cc:	a9 01       	movw	r20, r18
    31ce:	69 2d       	mov	r22, r9
    31d0:	79 81       	ldd	r23, Y+1	; 0x01
    31d2:	8d 81       	ldd	r24, Y+5	; 0x05
    31d4:	9c 81       	ldd	r25, Y+4	; 0x04
    31d6:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    31da:	81 11       	cpse	r24, r1
    31dc:	08 c0       	rjmp	.+16     	; 0x31ee <rightFollow+0x17e>
				oLWS = LWS;
				oRWS = RWS;
    31de:	24 2c       	mov	r2, r4
    31e0:	35 2c       	mov	r3, r5
    31e2:	6a 82       	std	Y+2, r6	; 0x02
    31e4:	7b 82       	std	Y+3, r7	; 0x03
			// PID lopp
			
			LWS = KP*LP + KI*LI + base; // Proportinal and Integral
			RWS = KP*RP + KI*RI + base;
			if (oLWS == 0){ // Case to prevent weird stuff on first run
				oLWS = LWS;
    31e6:	9e 2c       	mov	r9, r14
    31e8:	f9 82       	std	Y+1, r15	; 0x01
    31ea:	0d 83       	std	Y+5, r16	; 0x05
    31ec:	1c 83       	std	Y+4, r17	; 0x04
				oRWS = RWS;
			}
			LWS = LWS + KD*(oLWS-LWS); // Derivative component
    31ee:	2e 2d       	mov	r18, r14
    31f0:	3f 2d       	mov	r19, r15
    31f2:	40 2f       	mov	r20, r16
    31f4:	51 2f       	mov	r21, r17
    31f6:	69 2d       	mov	r22, r9
    31f8:	79 81       	ldd	r23, Y+1	; 0x01
    31fa:	8d 81       	ldd	r24, Y+5	; 0x05
    31fc:	9c 81       	ldd	r25, Y+4	; 0x04
    31fe:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3202:	20 e0       	ldi	r18, 0x00	; 0
    3204:	30 e0       	ldi	r19, 0x00	; 0
    3206:	a9 01       	movw	r20, r18
    3208:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    320c:	2e 2d       	mov	r18, r14
    320e:	3f 2d       	mov	r19, r15
    3210:	40 2f       	mov	r20, r16
    3212:	51 2f       	mov	r21, r17
    3214:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3218:	96 2e       	mov	r9, r22
    321a:	79 83       	std	Y+1, r23	; 0x01
    321c:	8d 83       	std	Y+5, r24	; 0x05
    321e:	9c 83       	std	Y+4, r25	; 0x04
			RWS = RWS + KD*(oRWS-RWS);
    3220:	24 2d       	mov	r18, r4
    3222:	35 2d       	mov	r19, r5
    3224:	46 2d       	mov	r20, r6
    3226:	57 2d       	mov	r21, r7
    3228:	62 2d       	mov	r22, r2
    322a:	73 2d       	mov	r23, r3
    322c:	8a 81       	ldd	r24, Y+2	; 0x02
    322e:	9b 81       	ldd	r25, Y+3	; 0x03
    3230:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3234:	20 e0       	ldi	r18, 0x00	; 0
    3236:	30 e0       	ldi	r19, 0x00	; 0
    3238:	a9 01       	movw	r20, r18
    323a:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    323e:	24 2d       	mov	r18, r4
    3240:	35 2d       	mov	r19, r5
    3242:	46 2d       	mov	r20, r6
    3244:	57 2d       	mov	r21, r7
    3246:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    324a:	26 2e       	mov	r2, r22
    324c:	37 2e       	mov	r3, r23
    324e:	8a 83       	std	Y+2, r24	; 0x02
    3250:	9b 83       	std	Y+3, r25	; 0x03

			STEPPER_move_rn(STEPPER_BOTH, // Forward Movement based on input speeds
    3252:	69 2d       	mov	r22, r9
    3254:	79 81       	ldd	r23, Y+1	; 0x01
    3256:	8d 81       	ldd	r24, Y+5	; 0x05
    3258:	9c 81       	ldd	r25, Y+4	; 0x04
    325a:	0e 94 20 22 	call	0x4440	; 0x4440 <__fixunssfsi>
    325e:	2b 01       	movw	r4, r22
    3260:	3c 01       	movw	r6, r24
    3262:	1f 92       	push	r1
    3264:	1f 92       	push	r1
    3266:	1f 92       	push	r1
    3268:	21 e0       	ldi	r18, 0x01	; 1
    326a:	2f 93       	push	r18
    326c:	30 e9       	ldi	r19, 0x90	; 144
    326e:	3f 93       	push	r19
    3270:	62 2d       	mov	r22, r2
    3272:	73 2d       	mov	r23, r3
    3274:	8a 81       	ldd	r24, Y+2	; 0x02
    3276:	9b 81       	ldd	r25, Y+3	; 0x03
    3278:	0e 94 20 22 	call	0x4440	; 0x4440 <__fixunssfsi>
    327c:	7f 93       	push	r23
    327e:	6f 93       	push	r22
    3280:	1f 92       	push	r1
    3282:	1f 92       	push	r1
    3284:	81 2c       	mov	r8, r1
    3286:	a1 2c       	mov	r10, r1
    3288:	b1 2c       	mov	r11, r1
    328a:	c1 2c       	mov	r12, r1
    328c:	0f 2e       	mov	r0, r31
    328e:	f0 e9       	ldi	r31, 0x90	; 144
    3290:	ef 2e       	mov	r14, r31
    3292:	ff 24       	eor	r15, r15
    3294:	f3 94       	inc	r15
    3296:	f0 2d       	mov	r31, r0
    3298:	82 01       	movw	r16, r4
    329a:	20 e0       	ldi	r18, 0x00	; 0
    329c:	30 e0       	ldi	r19, 0x00	; 0
    329e:	40 e0       	ldi	r20, 0x00	; 0
    32a0:	62 e0       	ldi	r22, 0x02	; 2
    32a2:	82 e0       	ldi	r24, 0x02	; 2
    32a4:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
					STEPPER_FWD, LWS, 400,	//Left
					STEPPER_FWD, RWS, 400);	//Right

			oLWS = LWS; // Remember previous speeds for derivative component
			oRWS = RWS;
    32a8:	0f b6       	in	r0, 0x3f	; 63
    32aa:	f8 94       	cli
    32ac:	de bf       	out	0x3e, r29	; 62
    32ae:	0f be       	out	0x3f, r0	; 63
    32b0:	cd bf       	out	0x3d, r28	; 61
    32b2:	ed ce       	rjmp	.-550    	; 0x308e <rightFollow+0x1e>

		}else if((frontIR < ICT) && (rightIR < ICT)){ // Condition for if wall is in front
    32b4:	20 e0       	ldi	r18, 0x00	; 0
    32b6:	30 e0       	ldi	r19, 0x00	; 0
    32b8:	40 e4       	ldi	r20, 0x40	; 64
    32ba:	51 e4       	ldi	r21, 0x41	; 65
    32bc:	c3 01       	movw	r24, r6
    32be:	b2 01       	movw	r22, r4
    32c0:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    32c4:	88 23       	and	r24, r24
    32c6:	0c f0       	brlt	.+2      	; 0x32ca <rightFollow+0x25a>
    32c8:	4a c0       	rjmp	.+148    	; 0x335e <rightFollow+0x2ee>
    32ca:	20 e0       	ldi	r18, 0x00	; 0
    32cc:	30 e0       	ldi	r19, 0x00	; 0
    32ce:	40 e4       	ldi	r20, 0x40	; 64
    32d0:	51 e4       	ldi	r21, 0x41	; 65
    32d2:	c7 01       	movw	r24, r14
    32d4:	b6 01       	movw	r22, r12
    32d6:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    32da:	88 23       	and	r24, r24
    32dc:	0c f0       	brlt	.+2      	; 0x32e0 <rightFollow+0x270>
    32de:	3f c0       	rjmp	.+126    	; 0x335e <rightFollow+0x2ee>
			LCD_clear();
    32e0:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
			LCD_printf("Right Follow\n");
    32e4:	8a e1       	ldi	r24, 0x1A	; 26
    32e6:	92 e0       	ldi	r25, 0x02	; 2
    32e8:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Wall in Front\n");
    32ec:	84 e5       	ldi	r24, 0x54	; 84
    32ee:	92 e0       	ldi	r25, 0x02	; 2
    32f0:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Turning Left\n");
    32f4:	82 e6       	ldi	r24, 0x62	; 98
    32f6:	92 e0       	ldi	r25, 0x02	; 2
    32f8:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			
			STEPPER_move_rn(STEPPER_BOTH, // Forward movement
    32fc:	1f 92       	push	r1
    32fe:	1f 92       	push	r1
    3300:	1f 92       	push	r1
    3302:	91 e0       	ldi	r25, 0x01	; 1
    3304:	9f 93       	push	r25
    3306:	e0 e9       	ldi	r30, 0x90	; 144
    3308:	ef 93       	push	r30
    330a:	1f 92       	push	r1
    330c:	f6 e9       	ldi	r31, 0x96	; 150
    330e:	ff 93       	push	r31
    3310:	1f 92       	push	r1
    3312:	1f 92       	push	r1
    3314:	81 2c       	mov	r8, r1
    3316:	a1 2c       	mov	r10, r1
    3318:	b1 2c       	mov	r11, r1
    331a:	c1 2c       	mov	r12, r1
    331c:	0f 2e       	mov	r0, r31
    331e:	f0 e9       	ldi	r31, 0x90	; 144
    3320:	ef 2e       	mov	r14, r31
    3322:	ff 24       	eor	r15, r15
    3324:	f3 94       	inc	r15
    3326:	f0 2d       	mov	r31, r0
    3328:	06 e9       	ldi	r16, 0x96	; 150
    332a:	10 e0       	ldi	r17, 0x00	; 0
    332c:	20 e0       	ldi	r18, 0x00	; 0
    332e:	30 e0       	ldi	r19, 0x00	; 0
    3330:	40 e0       	ldi	r20, 0x00	; 0
    3332:	62 e0       	ldi	r22, 0x02	; 2
    3334:	82 e0       	ldi	r24, 0x02	; 2
    3336:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
					STEPPER_FWD, 150, 400,	//Left
					STEPPER_FWD, 150, 400);	//Right
			TMRSRVC_delay(500); // 0.5 sec delay
    333a:	84 ef       	ldi	r24, 0xF4	; 244
    333c:	91 e0       	ldi	r25, 0x01	; 1
    333e:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
			go2ContAngle(-90, 100); // Left 90 Turn
    3342:	44 e6       	ldi	r20, 0x64	; 100
    3344:	50 e0       	ldi	r21, 0x00	; 0
    3346:	60 e0       	ldi	r22, 0x00	; 0
    3348:	70 e0       	ldi	r23, 0x00	; 0
    334a:	84 eb       	ldi	r24, 0xB4	; 180
    334c:	92 ec       	ldi	r25, 0xC2	; 194
    334e:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
			LP = 0;
			RP = 0;
			LI = 0;
			RI = 0;
    3352:	0f b6       	in	r0, 0x3f	; 63
    3354:	f8 94       	cli
    3356:	de bf       	out	0x3e, r29	; 62
    3358:	0f be       	out	0x3f, r0	; 63
    335a:	cd bf       	out	0x3d, r28	; 61
    335c:	98 ce       	rjmp	.-720    	; 0x308e <rightFollow+0x1e>
		}else if((frontIR > ICT) && (rightIR > ICT)){ // Condition for is no wall to follow or in front
    335e:	20 e0       	ldi	r18, 0x00	; 0
    3360:	30 e0       	ldi	r19, 0x00	; 0
    3362:	40 e4       	ldi	r20, 0x40	; 64
    3364:	51 e4       	ldi	r21, 0x41	; 65
    3366:	c3 01       	movw	r24, r6
    3368:	b2 01       	movw	r22, r4
    336a:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    336e:	18 16       	cp	r1, r24
    3370:	0c f0       	brlt	.+2      	; 0x3374 <rightFollow+0x304>
    3372:	8d ce       	rjmp	.-742    	; 0x308e <rightFollow+0x1e>
    3374:	20 e0       	ldi	r18, 0x00	; 0
    3376:	30 e0       	ldi	r19, 0x00	; 0
    3378:	40 e4       	ldi	r20, 0x40	; 64
    337a:	51 e4       	ldi	r21, 0x41	; 65
    337c:	c7 01       	movw	r24, r14
    337e:	b6 01       	movw	r22, r12
    3380:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3384:	18 16       	cp	r1, r24
    3386:	0c f0       	brlt	.+2      	; 0x338a <rightFollow+0x31a>
    3388:	82 ce       	rjmp	.-764    	; 0x308e <rightFollow+0x1e>
			LCD_clear();
    338a:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
			LCD_printf("Right Follow\n");
    338e:	8a e1       	ldi	r24, 0x1A	; 26
    3390:	92 e0       	ldi	r25, 0x02	; 2
    3392:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Lack of Wall\n");
    3396:	8f e6       	ldi	r24, 0x6F	; 111
    3398:	92 e0       	ldi	r25, 0x02	; 2
    339a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Turning Right\n");
    339e:	8c e7       	ldi	r24, 0x7C	; 124
    33a0:	92 e0       	ldi	r25, 0x02	; 2
    33a2:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			
			STEPPER_move_rn(STEPPER_BOTH, // Forward movement
    33a6:	1f 92       	push	r1
    33a8:	1f 92       	push	r1
    33aa:	1f 92       	push	r1
    33ac:	31 e0       	ldi	r19, 0x01	; 1
    33ae:	3f 93       	push	r19
    33b0:	80 e9       	ldi	r24, 0x90	; 144
    33b2:	8f 93       	push	r24
    33b4:	1f 92       	push	r1
    33b6:	96 e9       	ldi	r25, 0x96	; 150
    33b8:	9f 93       	push	r25
    33ba:	1f 92       	push	r1
    33bc:	1f 92       	push	r1
    33be:	81 2c       	mov	r8, r1
    33c0:	a1 2c       	mov	r10, r1
    33c2:	b1 2c       	mov	r11, r1
    33c4:	c1 2c       	mov	r12, r1
    33c6:	0f 2e       	mov	r0, r31
    33c8:	f0 e9       	ldi	r31, 0x90	; 144
    33ca:	ef 2e       	mov	r14, r31
    33cc:	ff 24       	eor	r15, r15
    33ce:	f3 94       	inc	r15
    33d0:	f0 2d       	mov	r31, r0
    33d2:	06 e9       	ldi	r16, 0x96	; 150
    33d4:	10 e0       	ldi	r17, 0x00	; 0
    33d6:	20 e0       	ldi	r18, 0x00	; 0
    33d8:	30 e0       	ldi	r19, 0x00	; 0
    33da:	40 e0       	ldi	r20, 0x00	; 0
    33dc:	62 e0       	ldi	r22, 0x02	; 2
    33de:	82 e0       	ldi	r24, 0x02	; 2
    33e0:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
					STEPPER_FWD, 150, 400,	//Left
					STEPPER_FWD, 150, 400);	//Right
			TMRSRVC_delay(500); // 0.5 Sec delay
    33e4:	84 ef       	ldi	r24, 0xF4	; 244
    33e6:	91 e0       	ldi	r25, 0x01	; 1
    33e8:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
			rightIR = getRightIR();
    33ec:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
			if ((frontIR > ICT) && (rightIR > ICT)){
    33f0:	0f b6       	in	r0, 0x3f	; 63
    33f2:	f8 94       	cli
    33f4:	de bf       	out	0x3e, r29	; 62
    33f6:	0f be       	out	0x3f, r0	; 63
    33f8:	cd bf       	out	0x3d, r28	; 61
    33fa:	20 e0       	ldi	r18, 0x00	; 0
    33fc:	30 e0       	ldi	r19, 0x00	; 0
    33fe:	40 e4       	ldi	r20, 0x40	; 64
    3400:	51 e4       	ldi	r21, 0x41	; 65
    3402:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3406:	18 16       	cp	r1, r24
    3408:	0c f0       	brlt	.+2      	; 0x340c <rightFollow+0x39c>
    340a:	41 ce       	rjmp	.-894    	; 0x308e <rightFollow+0x1e>
				go2ContAngle(90, 100); // Right 90 Turn
    340c:	44 e6       	ldi	r20, 0x64	; 100
    340e:	50 e0       	ldi	r21, 0x00	; 0
    3410:	60 e0       	ldi	r22, 0x00	; 0
    3412:	70 e0       	ldi	r23, 0x00	; 0
    3414:	84 eb       	ldi	r24, 0xB4	; 180
    3416:	92 e4       	ldi	r25, 0x42	; 66
    3418:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
				STEPPER_move_rn(STEPPER_BOTH, // Forward movement
    341c:	1f 92       	push	r1
    341e:	1f 92       	push	r1
    3420:	1f 92       	push	r1
    3422:	f1 e0       	ldi	r31, 0x01	; 1
    3424:	ff 93       	push	r31
    3426:	20 e9       	ldi	r18, 0x90	; 144
    3428:	2f 93       	push	r18
    342a:	1f 92       	push	r1
    342c:	36 e9       	ldi	r19, 0x96	; 150
    342e:	3f 93       	push	r19
    3430:	1f 92       	push	r1
    3432:	1f 92       	push	r1
    3434:	20 e0       	ldi	r18, 0x00	; 0
    3436:	30 e0       	ldi	r19, 0x00	; 0
    3438:	40 e0       	ldi	r20, 0x00	; 0
    343a:	62 e0       	ldi	r22, 0x02	; 2
    343c:	82 e0       	ldi	r24, 0x02	; 2
    343e:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
						STEPPER_FWD, 150, 400,	//Left
						STEPPER_FWD, 150, 400);	//Right
				rightIR = getRightIR();
    3442:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
				while(rightIR > ICT){
    3446:	0f b6       	in	r0, 0x3f	; 63
    3448:	f8 94       	cli
    344a:	de bf       	out	0x3e, r29	; 62
    344c:	0f be       	out	0x3f, r0	; 63
    344e:	cd bf       	out	0x3d, r28	; 61
    3450:	20 e0       	ldi	r18, 0x00	; 0
    3452:	30 e0       	ldi	r19, 0x00	; 0
    3454:	40 e4       	ldi	r20, 0x40	; 64
    3456:	51 e4       	ldi	r21, 0x41	; 65
    3458:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    345c:	18 16       	cp	r1, r24
    345e:	0c f0       	brlt	.+2      	; 0x3462 <rightFollow+0x3f2>
    3460:	16 ce       	rjmp	.-980    	; 0x308e <rightFollow+0x1e>
					TMRSRVC_delay(100); // 0.1 sec delay
    3462:	84 e6       	ldi	r24, 0x64	; 100
    3464:	90 e0       	ldi	r25, 0x00	; 0
    3466:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
					rightIR = getRightIR();
    346a:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
				go2ContAngle(90, 100); // Right 90 Turn
				STEPPER_move_rn(STEPPER_BOTH, // Forward movement
						STEPPER_FWD, 150, 400,	//Left
						STEPPER_FWD, 150, 400);	//Right
				rightIR = getRightIR();
				while(rightIR > ICT){
    346e:	20 e0       	ldi	r18, 0x00	; 0
    3470:	30 e0       	ldi	r19, 0x00	; 0
    3472:	40 e4       	ldi	r20, 0x40	; 64
    3474:	51 e4       	ldi	r21, 0x41	; 65
    3476:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    347a:	18 16       	cp	r1, r24
    347c:	94 f3       	brlt	.-28     	; 0x3462 <rightFollow+0x3f2>
    347e:	07 ce       	rjmp	.-1010   	; 0x308e <rightFollow+0x1e>

00003480 <leftFollow>:
			}
		}
	}
}

void leftFollow(void){
    3480:	cf 93       	push	r28
    3482:	df 93       	push	r29
    3484:	00 d0       	rcall	.+0      	; 0x3486 <leftFollow+0x6>
    3486:	00 d0       	rcall	.+0      	; 0x3488 <leftFollow+0x8>
    3488:	1f 92       	push	r1
    348a:	cd b7       	in	r28, 0x3d	; 61
    348c:	de b7       	in	r29, 0x3e	; 62
	char lowerLimit = 4.75;
	char higherLimit = 5.25;
	char ICT = 12;
	float LP, RP, LWS, RWS, frontIR, rightIR, leftIR;
	float oLWS = 0;
	float oRWS = 0;
    348e:	21 2c       	mov	r2, r1
    3490:	31 2c       	mov	r3, r1
    3492:	1a 82       	std	Y+2, r1	; 0x02
    3494:	1b 82       	std	Y+3, r1	; 0x03
	// code that powers the left wall following routine
	char lowerLimit = 4.75;
	char higherLimit = 5.25;
	char ICT = 12;
	float LP, RP, LWS, RWS, frontIR, rightIR, leftIR;
	float oLWS = 0;
    3496:	91 2c       	mov	r9, r1
    3498:	19 82       	std	Y+1, r1	; 0x01
    349a:	1d 82       	std	Y+5, r1	; 0x05
    349c:	1c 82       	std	Y+4, r1	; 0x04
	char KP = 1.5;
	char KI = 0.75;
	char KD = 0;

	while(1){
		frontIR = getFrontIR();
    349e:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <getFrontIR>
    34a2:	2b 01       	movw	r4, r22
    34a4:	3c 01       	movw	r6, r24
		rightIR = getRightIR();
    34a6:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
		leftIR = getLeftIR();
    34aa:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
    34ae:	6b 01       	movw	r12, r22
    34b0:	7c 01       	movw	r14, r24
		if((frontIR > ICT) && (leftIR < ICT)){ // Condition for simple wall following
    34b2:	20 e0       	ldi	r18, 0x00	; 0
    34b4:	30 e0       	ldi	r19, 0x00	; 0
    34b6:	40 e4       	ldi	r20, 0x40	; 64
    34b8:	51 e4       	ldi	r21, 0x41	; 65
    34ba:	c3 01       	movw	r24, r6
    34bc:	b2 01       	movw	r22, r4
    34be:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    34c2:	18 16       	cp	r1, r24
    34c4:	0c f0       	brlt	.+2      	; 0x34c8 <leftFollow+0x48>
    34c6:	fe c0       	rjmp	.+508    	; 0x36c4 <leftFollow+0x244>
    34c8:	20 e0       	ldi	r18, 0x00	; 0
    34ca:	30 e0       	ldi	r19, 0x00	; 0
    34cc:	40 e4       	ldi	r20, 0x40	; 64
    34ce:	51 e4       	ldi	r21, 0x41	; 65
    34d0:	c7 01       	movw	r24, r14
    34d2:	b6 01       	movw	r22, r12
    34d4:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    34d8:	88 23       	and	r24, r24
    34da:	0c f0       	brlt	.+2      	; 0x34de <leftFollow+0x5e>
    34dc:	f3 c0       	rjmp	.+486    	; 0x36c4 <leftFollow+0x244>
			if (leftIR < lowerLimit){ // Too close to wall
    34de:	20 e0       	ldi	r18, 0x00	; 0
    34e0:	30 e0       	ldi	r19, 0x00	; 0
    34e2:	40 e8       	ldi	r20, 0x80	; 128
    34e4:	50 e4       	ldi	r21, 0x40	; 64
    34e6:	c7 01       	movw	r24, r14
    34e8:	b6 01       	movw	r22, r12
    34ea:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    34ee:	88 23       	and	r24, r24
    34f0:	d4 f4       	brge	.+52     	; 0x3526 <leftFollow+0xa6>
				LCD_clear();
    34f2:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
				LCD_printf("Left Follow\n");
    34f6:	8a e8       	ldi	r24, 0x8A	; 138
    34f8:	92 e0       	ldi	r25, 0x02	; 2
    34fa:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Inside Target\n");
    34fe:	87 e2       	ldi	r24, 0x27	; 39
    3500:	92 e0       	ldi	r25, 0x02	; 2
    3502:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Range\n");
    3506:	85 e3       	ldi	r24, 0x35	; 53
    3508:	92 e0       	ldi	r25, 0x02	; 2
    350a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

				LP = lowerLimit - leftIR;
    350e:	a7 01       	movw	r20, r14
    3510:	96 01       	movw	r18, r12
    3512:	60 e0       	ldi	r22, 0x00	; 0
    3514:	70 e0       	ldi	r23, 0x00	; 0
    3516:	80 e8       	ldi	r24, 0x80	; 128
    3518:	90 e4       	ldi	r25, 0x40	; 64
    351a:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
				RP = 0;
    351e:	41 2c       	mov	r4, r1
    3520:	51 2c       	mov	r5, r1
    3522:	32 01       	movw	r6, r4
    3524:	39 c0       	rjmp	.+114    	; 0x3598 <leftFollow+0x118>
				LI = LI++;
				RI = 0;
			}else if(leftIR > higherLimit){ // Too far from wall
    3526:	20 e0       	ldi	r18, 0x00	; 0
    3528:	30 e0       	ldi	r19, 0x00	; 0
    352a:	40 ea       	ldi	r20, 0xA0	; 160
    352c:	50 e4       	ldi	r21, 0x40	; 64
    352e:	c7 01       	movw	r24, r14
    3530:	b6 01       	movw	r22, r12
    3532:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3536:	18 16       	cp	r1, r24
    3538:	e4 f4       	brge	.+56     	; 0x3572 <leftFollow+0xf2>
				LCD_clear();
    353a:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
				LCD_printf("Left Follow\n");
    353e:	8a e8       	ldi	r24, 0x8A	; 138
    3540:	92 e0       	ldi	r25, 0x02	; 2
    3542:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Outside Target\n");
    3546:	8b e3       	ldi	r24, 0x3B	; 59
    3548:	92 e0       	ldi	r25, 0x02	; 2
    354a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Range\n");
    354e:	85 e3       	ldi	r24, 0x35	; 53
    3550:	92 e0       	ldi	r25, 0x02	; 2
    3552:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

				LP = 0;
				RP = leftIR - higherLimit;
    3556:	20 e0       	ldi	r18, 0x00	; 0
    3558:	30 e0       	ldi	r19, 0x00	; 0
    355a:	40 ea       	ldi	r20, 0xA0	; 160
    355c:	50 e4       	ldi	r21, 0x40	; 64
    355e:	c7 01       	movw	r24, r14
    3560:	b6 01       	movw	r22, r12
    3562:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3566:	2b 01       	movw	r4, r22
    3568:	3c 01       	movw	r6, r24
				LCD_clear();
				LCD_printf("Left Follow\n");
				LCD_printf("Outside Target\n");
				LCD_printf("Range\n");

				LP = 0;
    356a:	60 e0       	ldi	r22, 0x00	; 0
    356c:	70 e0       	ldi	r23, 0x00	; 0
    356e:	cb 01       	movw	r24, r22
    3570:	13 c0       	rjmp	.+38     	; 0x3598 <leftFollow+0x118>
				RP = leftIR - higherLimit;
				LI = 0;
				RI = RI++;
			}else{ // Proper range from wall
				LCD_clear();
    3572:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
				LCD_printf("Left Follow\n");
    3576:	8a e8       	ldi	r24, 0x8A	; 138
    3578:	92 e0       	ldi	r25, 0x02	; 2
    357a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("At Target\n");
    357e:	8a e4       	ldi	r24, 0x4A	; 74
    3580:	92 e0       	ldi	r25, 0x02	; 2
    3582:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
				LCD_printf("Range\n");
    3586:	85 e3       	ldi	r24, 0x35	; 53
    3588:	92 e0       	ldi	r25, 0x02	; 2
    358a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

				LP = 0;
				RP = 0;
    358e:	41 2c       	mov	r4, r1
    3590:	51 2c       	mov	r5, r1
    3592:	32 01       	movw	r6, r4
				LCD_clear();
				LCD_printf("Left Follow\n");
				LCD_printf("At Target\n");
				LCD_printf("Range\n");

				LP = 0;
    3594:	c3 01       	movw	r24, r6
    3596:	b2 01       	movw	r22, r4
				RI = 0;
			}

			// PID lopp
									
			LWS = KP*LP + KI*LI + base; // Proportinal and Integral
    3598:	20 e0       	ldi	r18, 0x00	; 0
    359a:	30 e0       	ldi	r19, 0x00	; 0
    359c:	a9 01       	movw	r20, r18
    359e:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    35a2:	20 e0       	ldi	r18, 0x00	; 0
    35a4:	30 e0       	ldi	r19, 0x00	; 0
    35a6:	40 ef       	ldi	r20, 0xF0	; 240
    35a8:	52 e4       	ldi	r21, 0x42	; 66
    35aa:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    35ae:	e6 2e       	mov	r14, r22
    35b0:	f7 2e       	mov	r15, r23
    35b2:	08 2f       	mov	r16, r24
    35b4:	19 2f       	mov	r17, r25
			RWS = KP*RP + KI*RI + base;
    35b6:	20 e0       	ldi	r18, 0x00	; 0
    35b8:	30 e0       	ldi	r19, 0x00	; 0
    35ba:	a9 01       	movw	r20, r18
    35bc:	c3 01       	movw	r24, r6
    35be:	b2 01       	movw	r22, r4
    35c0:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    35c4:	20 e0       	ldi	r18, 0x00	; 0
    35c6:	30 e0       	ldi	r19, 0x00	; 0
    35c8:	40 ef       	ldi	r20, 0xF0	; 240
    35ca:	52 e4       	ldi	r21, 0x42	; 66
    35cc:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    35d0:	46 2e       	mov	r4, r22
    35d2:	57 2e       	mov	r5, r23
    35d4:	68 2e       	mov	r6, r24
    35d6:	79 2e       	mov	r7, r25
			if (oLWS == 0){ // Case to prevent weird stuff on first run
    35d8:	20 e0       	ldi	r18, 0x00	; 0
    35da:	30 e0       	ldi	r19, 0x00	; 0
    35dc:	a9 01       	movw	r20, r18
    35de:	69 2d       	mov	r22, r9
    35e0:	79 81       	ldd	r23, Y+1	; 0x01
    35e2:	8d 81       	ldd	r24, Y+5	; 0x05
    35e4:	9c 81       	ldd	r25, Y+4	; 0x04
    35e6:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    35ea:	81 11       	cpse	r24, r1
    35ec:	08 c0       	rjmp	.+16     	; 0x35fe <leftFollow+0x17e>
				oLWS = LWS;
				oRWS = RWS;
    35ee:	24 2c       	mov	r2, r4
    35f0:	35 2c       	mov	r3, r5
    35f2:	6a 82       	std	Y+2, r6	; 0x02
    35f4:	7b 82       	std	Y+3, r7	; 0x03
			// PID lopp
									
			LWS = KP*LP + KI*LI + base; // Proportinal and Integral
			RWS = KP*RP + KI*RI + base;
			if (oLWS == 0){ // Case to prevent weird stuff on first run
				oLWS = LWS;
    35f6:	9e 2c       	mov	r9, r14
    35f8:	f9 82       	std	Y+1, r15	; 0x01
    35fa:	0d 83       	std	Y+5, r16	; 0x05
    35fc:	1c 83       	std	Y+4, r17	; 0x04
				oRWS = RWS;
			}
			LWS = LWS + KD*(oLWS-LWS); // Derivative component
    35fe:	2e 2d       	mov	r18, r14
    3600:	3f 2d       	mov	r19, r15
    3602:	40 2f       	mov	r20, r16
    3604:	51 2f       	mov	r21, r17
    3606:	69 2d       	mov	r22, r9
    3608:	79 81       	ldd	r23, Y+1	; 0x01
    360a:	8d 81       	ldd	r24, Y+5	; 0x05
    360c:	9c 81       	ldd	r25, Y+4	; 0x04
    360e:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3612:	20 e0       	ldi	r18, 0x00	; 0
    3614:	30 e0       	ldi	r19, 0x00	; 0
    3616:	a9 01       	movw	r20, r18
    3618:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    361c:	2e 2d       	mov	r18, r14
    361e:	3f 2d       	mov	r19, r15
    3620:	40 2f       	mov	r20, r16
    3622:	51 2f       	mov	r21, r17
    3624:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3628:	96 2e       	mov	r9, r22
    362a:	79 83       	std	Y+1, r23	; 0x01
    362c:	8d 83       	std	Y+5, r24	; 0x05
    362e:	9c 83       	std	Y+4, r25	; 0x04
			RWS = RWS + KD*(oRWS-RWS);
    3630:	24 2d       	mov	r18, r4
    3632:	35 2d       	mov	r19, r5
    3634:	46 2d       	mov	r20, r6
    3636:	57 2d       	mov	r21, r7
    3638:	62 2d       	mov	r22, r2
    363a:	73 2d       	mov	r23, r3
    363c:	8a 81       	ldd	r24, Y+2	; 0x02
    363e:	9b 81       	ldd	r25, Y+3	; 0x03
    3640:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3644:	20 e0       	ldi	r18, 0x00	; 0
    3646:	30 e0       	ldi	r19, 0x00	; 0
    3648:	a9 01       	movw	r20, r18
    364a:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    364e:	24 2d       	mov	r18, r4
    3650:	35 2d       	mov	r19, r5
    3652:	46 2d       	mov	r20, r6
    3654:	57 2d       	mov	r21, r7
    3656:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    365a:	26 2e       	mov	r2, r22
    365c:	37 2e       	mov	r3, r23
    365e:	8a 83       	std	Y+2, r24	; 0x02
    3660:	9b 83       	std	Y+3, r25	; 0x03

			STEPPER_move_rn(STEPPER_BOTH, // Forward Movement based on input speeds
    3662:	69 2d       	mov	r22, r9
    3664:	79 81       	ldd	r23, Y+1	; 0x01
    3666:	8d 81       	ldd	r24, Y+5	; 0x05
    3668:	9c 81       	ldd	r25, Y+4	; 0x04
    366a:	0e 94 20 22 	call	0x4440	; 0x4440 <__fixunssfsi>
    366e:	2b 01       	movw	r4, r22
    3670:	3c 01       	movw	r6, r24
    3672:	1f 92       	push	r1
    3674:	1f 92       	push	r1
    3676:	1f 92       	push	r1
    3678:	21 e0       	ldi	r18, 0x01	; 1
    367a:	2f 93       	push	r18
    367c:	30 e9       	ldi	r19, 0x90	; 144
    367e:	3f 93       	push	r19
    3680:	62 2d       	mov	r22, r2
    3682:	73 2d       	mov	r23, r3
    3684:	8a 81       	ldd	r24, Y+2	; 0x02
    3686:	9b 81       	ldd	r25, Y+3	; 0x03
    3688:	0e 94 20 22 	call	0x4440	; 0x4440 <__fixunssfsi>
    368c:	7f 93       	push	r23
    368e:	6f 93       	push	r22
    3690:	1f 92       	push	r1
    3692:	1f 92       	push	r1
    3694:	81 2c       	mov	r8, r1
    3696:	a1 2c       	mov	r10, r1
    3698:	b1 2c       	mov	r11, r1
    369a:	c1 2c       	mov	r12, r1
    369c:	0f 2e       	mov	r0, r31
    369e:	f0 e9       	ldi	r31, 0x90	; 144
    36a0:	ef 2e       	mov	r14, r31
    36a2:	ff 24       	eor	r15, r15
    36a4:	f3 94       	inc	r15
    36a6:	f0 2d       	mov	r31, r0
    36a8:	82 01       	movw	r16, r4
    36aa:	20 e0       	ldi	r18, 0x00	; 0
    36ac:	30 e0       	ldi	r19, 0x00	; 0
    36ae:	40 e0       	ldi	r20, 0x00	; 0
    36b0:	62 e0       	ldi	r22, 0x02	; 2
    36b2:	82 e0       	ldi	r24, 0x02	; 2
    36b4:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
					STEPPER_FWD, LWS, 400,	//Left
					STEPPER_FWD, RWS, 400);	//Right

			oLWS = LWS; // Remember previous speeds for derivative component
			oRWS = RWS;
    36b8:	0f b6       	in	r0, 0x3f	; 63
    36ba:	f8 94       	cli
    36bc:	de bf       	out	0x3e, r29	; 62
    36be:	0f be       	out	0x3f, r0	; 63
    36c0:	cd bf       	out	0x3d, r28	; 61
    36c2:	ed ce       	rjmp	.-550    	; 0x349e <leftFollow+0x1e>

		}else if((frontIR < ICT) && (leftIR < ICT)){ // Condition for if wall is in front
    36c4:	20 e0       	ldi	r18, 0x00	; 0
    36c6:	30 e0       	ldi	r19, 0x00	; 0
    36c8:	40 e4       	ldi	r20, 0x40	; 64
    36ca:	51 e4       	ldi	r21, 0x41	; 65
    36cc:	c3 01       	movw	r24, r6
    36ce:	b2 01       	movw	r22, r4
    36d0:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    36d4:	88 23       	and	r24, r24
    36d6:	0c f0       	brlt	.+2      	; 0x36da <leftFollow+0x25a>
    36d8:	4a c0       	rjmp	.+148    	; 0x376e <leftFollow+0x2ee>
    36da:	20 e0       	ldi	r18, 0x00	; 0
    36dc:	30 e0       	ldi	r19, 0x00	; 0
    36de:	40 e4       	ldi	r20, 0x40	; 64
    36e0:	51 e4       	ldi	r21, 0x41	; 65
    36e2:	c7 01       	movw	r24, r14
    36e4:	b6 01       	movw	r22, r12
    36e6:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    36ea:	88 23       	and	r24, r24
    36ec:	0c f0       	brlt	.+2      	; 0x36f0 <leftFollow+0x270>
    36ee:	3f c0       	rjmp	.+126    	; 0x376e <leftFollow+0x2ee>
			LCD_clear();
    36f0:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
			LCD_printf("Left Follow\n");
    36f4:	8a e8       	ldi	r24, 0x8A	; 138
    36f6:	92 e0       	ldi	r25, 0x02	; 2
    36f8:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Wall in Front\n");
    36fc:	84 e5       	ldi	r24, 0x54	; 84
    36fe:	92 e0       	ldi	r25, 0x02	; 2
    3700:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Turning Right\n");
    3704:	8c e7       	ldi	r24, 0x7C	; 124
    3706:	92 e0       	ldi	r25, 0x02	; 2
    3708:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

			STEPPER_move_rn(STEPPER_BOTH, // Forward movement
    370c:	1f 92       	push	r1
    370e:	1f 92       	push	r1
    3710:	1f 92       	push	r1
    3712:	91 e0       	ldi	r25, 0x01	; 1
    3714:	9f 93       	push	r25
    3716:	e0 e9       	ldi	r30, 0x90	; 144
    3718:	ef 93       	push	r30
    371a:	1f 92       	push	r1
    371c:	f6 e9       	ldi	r31, 0x96	; 150
    371e:	ff 93       	push	r31
    3720:	1f 92       	push	r1
    3722:	1f 92       	push	r1
    3724:	81 2c       	mov	r8, r1
    3726:	a1 2c       	mov	r10, r1
    3728:	b1 2c       	mov	r11, r1
    372a:	c1 2c       	mov	r12, r1
    372c:	0f 2e       	mov	r0, r31
    372e:	f0 e9       	ldi	r31, 0x90	; 144
    3730:	ef 2e       	mov	r14, r31
    3732:	ff 24       	eor	r15, r15
    3734:	f3 94       	inc	r15
    3736:	f0 2d       	mov	r31, r0
    3738:	06 e9       	ldi	r16, 0x96	; 150
    373a:	10 e0       	ldi	r17, 0x00	; 0
    373c:	20 e0       	ldi	r18, 0x00	; 0
    373e:	30 e0       	ldi	r19, 0x00	; 0
    3740:	40 e0       	ldi	r20, 0x00	; 0
    3742:	62 e0       	ldi	r22, 0x02	; 2
    3744:	82 e0       	ldi	r24, 0x02	; 2
    3746:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
					STEPPER_FWD, 150, 400,	//Left
					STEPPER_FWD, 150, 400);	//Right
			TMRSRVC_delay(500); // 0.5 sec delay
    374a:	84 ef       	ldi	r24, 0xF4	; 244
    374c:	91 e0       	ldi	r25, 0x01	; 1
    374e:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
			go2ContAngle(90, 100); // Right 90 Turn
    3752:	44 e6       	ldi	r20, 0x64	; 100
    3754:	50 e0       	ldi	r21, 0x00	; 0
    3756:	60 e0       	ldi	r22, 0x00	; 0
    3758:	70 e0       	ldi	r23, 0x00	; 0
    375a:	84 eb       	ldi	r24, 0xB4	; 180
    375c:	92 e4       	ldi	r25, 0x42	; 66
    375e:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
			LP = 0;
			RP = 0;
			LI = 0;
			RI = 0;	
    3762:	0f b6       	in	r0, 0x3f	; 63
    3764:	f8 94       	cli
    3766:	de bf       	out	0x3e, r29	; 62
    3768:	0f be       	out	0x3f, r0	; 63
    376a:	cd bf       	out	0x3d, r28	; 61
    376c:	98 ce       	rjmp	.-720    	; 0x349e <leftFollow+0x1e>
		}else if((frontIR > ICT) && (leftIR > ICT)){ // Condition for is no wall to follow or in front
    376e:	20 e0       	ldi	r18, 0x00	; 0
    3770:	30 e0       	ldi	r19, 0x00	; 0
    3772:	40 e4       	ldi	r20, 0x40	; 64
    3774:	51 e4       	ldi	r21, 0x41	; 65
    3776:	c3 01       	movw	r24, r6
    3778:	b2 01       	movw	r22, r4
    377a:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    377e:	18 16       	cp	r1, r24
    3780:	0c f0       	brlt	.+2      	; 0x3784 <leftFollow+0x304>
    3782:	8d ce       	rjmp	.-742    	; 0x349e <leftFollow+0x1e>
    3784:	20 e0       	ldi	r18, 0x00	; 0
    3786:	30 e0       	ldi	r19, 0x00	; 0
    3788:	40 e4       	ldi	r20, 0x40	; 64
    378a:	51 e4       	ldi	r21, 0x41	; 65
    378c:	c7 01       	movw	r24, r14
    378e:	b6 01       	movw	r22, r12
    3790:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3794:	18 16       	cp	r1, r24
    3796:	0c f0       	brlt	.+2      	; 0x379a <leftFollow+0x31a>
    3798:	82 ce       	rjmp	.-764    	; 0x349e <leftFollow+0x1e>
			LCD_clear();
    379a:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
			LCD_printf("Left Follow\n");
    379e:	8a e8       	ldi	r24, 0x8A	; 138
    37a0:	92 e0       	ldi	r25, 0x02	; 2
    37a2:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Lack of Wall\n");
    37a6:	8f e6       	ldi	r24, 0x6F	; 111
    37a8:	92 e0       	ldi	r25, 0x02	; 2
    37aa:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Turning Left\n");
    37ae:	82 e6       	ldi	r24, 0x62	; 98
    37b0:	92 e0       	ldi	r25, 0x02	; 2
    37b2:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

			STEPPER_move_rn(STEPPER_BOTH, // Forward movement
    37b6:	1f 92       	push	r1
    37b8:	1f 92       	push	r1
    37ba:	1f 92       	push	r1
    37bc:	31 e0       	ldi	r19, 0x01	; 1
    37be:	3f 93       	push	r19
    37c0:	80 e9       	ldi	r24, 0x90	; 144
    37c2:	8f 93       	push	r24
    37c4:	1f 92       	push	r1
    37c6:	96 e9       	ldi	r25, 0x96	; 150
    37c8:	9f 93       	push	r25
    37ca:	1f 92       	push	r1
    37cc:	1f 92       	push	r1
    37ce:	81 2c       	mov	r8, r1
    37d0:	a1 2c       	mov	r10, r1
    37d2:	b1 2c       	mov	r11, r1
    37d4:	c1 2c       	mov	r12, r1
    37d6:	0f 2e       	mov	r0, r31
    37d8:	f0 e9       	ldi	r31, 0x90	; 144
    37da:	ef 2e       	mov	r14, r31
    37dc:	ff 24       	eor	r15, r15
    37de:	f3 94       	inc	r15
    37e0:	f0 2d       	mov	r31, r0
    37e2:	06 e9       	ldi	r16, 0x96	; 150
    37e4:	10 e0       	ldi	r17, 0x00	; 0
    37e6:	20 e0       	ldi	r18, 0x00	; 0
    37e8:	30 e0       	ldi	r19, 0x00	; 0
    37ea:	40 e0       	ldi	r20, 0x00	; 0
    37ec:	62 e0       	ldi	r22, 0x02	; 2
    37ee:	82 e0       	ldi	r24, 0x02	; 2
    37f0:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
					STEPPER_FWD, 150, 400,	//Left
					STEPPER_FWD, 150, 400);	//Right
			TMRSRVC_delay(500); // 0.5 sec delay
    37f4:	84 ef       	ldi	r24, 0xF4	; 244
    37f6:	91 e0       	ldi	r25, 0x01	; 1
    37f8:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
			leftIR = getLeftIR();
    37fc:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
			if ((frontIR > ICT) && (leftIR > ICT)){
    3800:	0f b6       	in	r0, 0x3f	; 63
    3802:	f8 94       	cli
    3804:	de bf       	out	0x3e, r29	; 62
    3806:	0f be       	out	0x3f, r0	; 63
    3808:	cd bf       	out	0x3d, r28	; 61
    380a:	20 e0       	ldi	r18, 0x00	; 0
    380c:	30 e0       	ldi	r19, 0x00	; 0
    380e:	40 e4       	ldi	r20, 0x40	; 64
    3810:	51 e4       	ldi	r21, 0x41	; 65
    3812:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3816:	18 16       	cp	r1, r24
    3818:	0c f0       	brlt	.+2      	; 0x381c <leftFollow+0x39c>
    381a:	41 ce       	rjmp	.-894    	; 0x349e <leftFollow+0x1e>
				go2ContAngle(-90, 100); // Left 90 Turn
    381c:	44 e6       	ldi	r20, 0x64	; 100
    381e:	50 e0       	ldi	r21, 0x00	; 0
    3820:	60 e0       	ldi	r22, 0x00	; 0
    3822:	70 e0       	ldi	r23, 0x00	; 0
    3824:	84 eb       	ldi	r24, 0xB4	; 180
    3826:	92 ec       	ldi	r25, 0xC2	; 194
    3828:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
				STEPPER_move_rn(STEPPER_BOTH, // Forward movement
    382c:	1f 92       	push	r1
    382e:	1f 92       	push	r1
    3830:	1f 92       	push	r1
    3832:	f1 e0       	ldi	r31, 0x01	; 1
    3834:	ff 93       	push	r31
    3836:	20 e9       	ldi	r18, 0x90	; 144
    3838:	2f 93       	push	r18
    383a:	1f 92       	push	r1
    383c:	36 e9       	ldi	r19, 0x96	; 150
    383e:	3f 93       	push	r19
    3840:	1f 92       	push	r1
    3842:	1f 92       	push	r1
    3844:	20 e0       	ldi	r18, 0x00	; 0
    3846:	30 e0       	ldi	r19, 0x00	; 0
    3848:	40 e0       	ldi	r20, 0x00	; 0
    384a:	62 e0       	ldi	r22, 0x02	; 2
    384c:	82 e0       	ldi	r24, 0x02	; 2
    384e:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
						STEPPER_FWD, 150, 400,	//Left
						STEPPER_FWD, 150, 400);	//Right
				leftIR = getLeftIR();
    3852:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
				while(leftIR > ICT){
    3856:	0f b6       	in	r0, 0x3f	; 63
    3858:	f8 94       	cli
    385a:	de bf       	out	0x3e, r29	; 62
    385c:	0f be       	out	0x3f, r0	; 63
    385e:	cd bf       	out	0x3d, r28	; 61
    3860:	20 e0       	ldi	r18, 0x00	; 0
    3862:	30 e0       	ldi	r19, 0x00	; 0
    3864:	40 e4       	ldi	r20, 0x40	; 64
    3866:	51 e4       	ldi	r21, 0x41	; 65
    3868:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    386c:	18 16       	cp	r1, r24
    386e:	0c f0       	brlt	.+2      	; 0x3872 <leftFollow+0x3f2>
    3870:	16 ce       	rjmp	.-980    	; 0x349e <leftFollow+0x1e>
					TMRSRVC_delay(100); // 0.1 sec delay
    3872:	84 e6       	ldi	r24, 0x64	; 100
    3874:	90 e0       	ldi	r25, 0x00	; 0
    3876:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
					leftIR = getLeftIR();
    387a:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
				go2ContAngle(-90, 100); // Left 90 Turn
				STEPPER_move_rn(STEPPER_BOTH, // Forward movement
						STEPPER_FWD, 150, 400,	//Left
						STEPPER_FWD, 150, 400);	//Right
				leftIR = getLeftIR();
				while(leftIR > ICT){
    387e:	20 e0       	ldi	r18, 0x00	; 0
    3880:	30 e0       	ldi	r19, 0x00	; 0
    3882:	40 e4       	ldi	r20, 0x40	; 64
    3884:	51 e4       	ldi	r21, 0x41	; 65
    3886:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    388a:	18 16       	cp	r1, r24
    388c:	94 f3       	brlt	.-28     	; 0x3872 <leftFollow+0x3f2>
    388e:	07 ce       	rjmp	.-1010   	; 0x349e <leftFollow+0x1e>

00003890 <centerFollow>:
				RI = 0;	
			}
		}
	}
}
void centerFollow(void){
    3890:	2f 92       	push	r2
    3892:	3f 92       	push	r3
    3894:	4f 92       	push	r4
    3896:	5f 92       	push	r5
    3898:	6f 92       	push	r6
    389a:	7f 92       	push	r7
    389c:	8f 92       	push	r8
    389e:	9f 92       	push	r9
    38a0:	af 92       	push	r10
    38a2:	bf 92       	push	r11
    38a4:	cf 92       	push	r12
    38a6:	df 92       	push	r13
    38a8:	ef 92       	push	r14
    38aa:	ff 92       	push	r15
    38ac:	0f 93       	push	r16
    38ae:	1f 93       	push	r17
    38b0:	cf 93       	push	r28
    38b2:	df 93       	push	r29
    38b4:	cd b7       	in	r28, 0x3d	; 61
    38b6:	de b7       	in	r29, 0x3e	; 62
    38b8:	2f 97       	sbiw	r28, 0x0f	; 15
    38ba:	0f b6       	in	r0, 0x3f	; 63
    38bc:	f8 94       	cli
    38be:	de bf       	out	0x3e, r29	; 62
    38c0:	0f be       	out	0x3f, r0	; 63
    38c2:	cd bf       	out	0x3d, r28	; 61
	
	char KP = 1.5;
	char KI = 0.75;
	char KD = 0;

	rightIR = getRightIR();
    38c4:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
    38c8:	6b 01       	movw	r12, r22
    38ca:	7c 01       	movw	r14, r24
	leftIR = getLeftIR();
    38cc:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
	while ((leftIR < ICT) && (rightIR < ICT)){ // If between two walls
    38d0:	20 e0       	ldi	r18, 0x00	; 0
    38d2:	30 e0       	ldi	r19, 0x00	; 0
    38d4:	40 e4       	ldi	r20, 0x40	; 64
    38d6:	51 e4       	ldi	r21, 0x41	; 65
    38d8:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    38dc:	88 23       	and	r24, r24
    38de:	0c f0       	brlt	.+2      	; 0x38e2 <centerFollow+0x52>
    38e0:	5d c1       	rjmp	.+698    	; 0x3b9c <centerFollow+0x30c>
    38e2:	20 e0       	ldi	r18, 0x00	; 0
    38e4:	30 e0       	ldi	r19, 0x00	; 0
    38e6:	40 e4       	ldi	r20, 0x40	; 64
    38e8:	51 e4       	ldi	r21, 0x41	; 65
    38ea:	c7 01       	movw	r24, r14
    38ec:	b6 01       	movw	r22, r12
    38ee:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    38f2:	88 23       	and	r24, r24
    38f4:	0c f0       	brlt	.+2      	; 0x38f8 <centerFollow+0x68>
    38f6:	52 c1       	rjmp	.+676    	; 0x3b9c <centerFollow+0x30c>
void centerFollow(void){
	// Code that powers the center follower
	char tollerance_band = 0;
	float LP, RP, LWS, RWS, frontIR, rightIR, leftIR, avrageIR;
	float oLWS = 0;
	float oRWS = 0;
    38f8:	1d 82       	std	Y+5, r1	; 0x05
    38fa:	1e 82       	std	Y+6, r1	; 0x06
    38fc:	1f 82       	std	Y+7, r1	; 0x07
    38fe:	18 86       	std	Y+8, r1	; 0x08
}
void centerFollow(void){
	// Code that powers the center follower
	char tollerance_band = 0;
	float LP, RP, LWS, RWS, frontIR, rightIR, leftIR, avrageIR;
	float oLWS = 0;
    3900:	31 2c       	mov	r3, r1
    3902:	21 2c       	mov	r2, r1
    3904:	00 e0       	ldi	r16, 0x00	; 0
    3906:	10 e0       	ldi	r17, 0x00	; 0
			oRWS = RWS;
		}
		LWS = LWS + KD*(oLWS-LWS); // Derivative Control
		RWS = RWS + KD*(oRWS-RWS);

		STEPPER_move_rn(STEPPER_BOTH, // Forward Movement based on input speeds
    3908:	0e 87       	std	Y+14, r16	; 0x0e
    390a:	1f 87       	std	Y+15, r17	; 0x0f
	char KD = 0;

	rightIR = getRightIR();
	leftIR = getLeftIR();
	while ((leftIR < ICT) && (rightIR < ICT)){ // If between two walls
		rightIR = getRightIR();
    390c:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
    3910:	2b 01       	movw	r4, r22
    3912:	3c 01       	movw	r6, r24
		leftIR = getLeftIR();
    3914:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
    3918:	6a 87       	std	Y+10, r22	; 0x0a
    391a:	7b 87       	std	Y+11, r23	; 0x0b
    391c:	8c 87       	std	Y+12, r24	; 0x0c
    391e:	9d 87       	std	Y+13, r25	; 0x0d
		avrageIR = (rightIR + leftIR)/2;
    3920:	9b 01       	movw	r18, r22
    3922:	ac 01       	movw	r20, r24
    3924:	c3 01       	movw	r24, r6
    3926:	b2 01       	movw	r22, r4
    3928:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    392c:	20 e0       	ldi	r18, 0x00	; 0
    392e:	30 e0       	ldi	r19, 0x00	; 0
    3930:	40 e0       	ldi	r20, 0x00	; 0
    3932:	5f e3       	ldi	r21, 0x3F	; 63
    3934:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    3938:	4b 01       	movw	r8, r22
    393a:	5c 01       	movw	r10, r24
		if ((rightIR - avrageIR) > tollerance_band){
    393c:	9b 01       	movw	r18, r22
    393e:	ac 01       	movw	r20, r24
    3940:	c3 01       	movw	r24, r6
    3942:	b2 01       	movw	r22, r4
    3944:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3948:	6b 01       	movw	r12, r22
    394a:	7c 01       	movw	r14, r24
    394c:	20 e0       	ldi	r18, 0x00	; 0
    394e:	30 e0       	ldi	r19, 0x00	; 0
    3950:	a9 01       	movw	r20, r18
    3952:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3956:	18 16       	cp	r1, r24
    3958:	94 f4       	brge	.+36     	; 0x397e <centerFollow+0xee>
			//means left of center
			LCD_clear();
    395a:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
			LCD_printf("Center Follow\n");
    395e:	86 e9       	ldi	r24, 0x96	; 150
    3960:	92 e0       	ldi	r25, 0x02	; 2
    3962:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Left of\n");
    3966:	84 ea       	ldi	r24, 0xA4	; 164
    3968:	92 e0       	ldi	r25, 0x02	; 2
    396a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Center\n");
    396e:	8c ea       	ldi	r24, 0xAC	; 172
    3970:	92 e0       	ldi	r25, 0x02	; 2
    3972:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

			LP = rightIR - avrageIR;
			RP = 0;
    3976:	81 2c       	mov	r8, r1
    3978:	91 2c       	mov	r9, r1
    397a:	54 01       	movw	r10, r8
    397c:	3c c0       	rjmp	.+120    	; 0x39f6 <centerFollow+0x166>
			LI = LI++;
			RI = 0;
		} else if ((avrageIR - rightIR) > (tollerance_band)) {
    397e:	a3 01       	movw	r20, r6
    3980:	92 01       	movw	r18, r4
    3982:	c5 01       	movw	r24, r10
    3984:	b4 01       	movw	r22, r8
    3986:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    398a:	20 e0       	ldi	r18, 0x00	; 0
    398c:	30 e0       	ldi	r19, 0x00	; 0
    398e:	a9 01       	movw	r20, r18
    3990:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3994:	18 16       	cp	r1, r24
    3996:	e4 f4       	brge	.+56     	; 0x39d0 <centerFollow+0x140>
			//means right of center
			LCD_clear();
    3998:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
			LCD_printf("Center Follow\n");
    399c:	86 e9       	ldi	r24, 0x96	; 150
    399e:	92 e0       	ldi	r25, 0x02	; 2
    39a0:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Right of\n");
    39a4:	83 eb       	ldi	r24, 0xB3	; 179
    39a6:	92 e0       	ldi	r25, 0x02	; 2
    39a8:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("Center\n");
    39ac:	8c ea       	ldi	r24, 0xAC	; 172
    39ae:	92 e0       	ldi	r25, 0x02	; 2
    39b0:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

			LP = 0;
			RP = leftIR - avrageIR;
    39b4:	a5 01       	movw	r20, r10
    39b6:	94 01       	movw	r18, r8
    39b8:	6a 85       	ldd	r22, Y+10	; 0x0a
    39ba:	7b 85       	ldd	r23, Y+11	; 0x0b
    39bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    39be:	9d 85       	ldd	r25, Y+13	; 0x0d
    39c0:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    39c4:	4b 01       	movw	r8, r22
    39c6:	5c 01       	movw	r10, r24
			LCD_clear();
			LCD_printf("Center Follow\n");
			LCD_printf("Right of\n");
			LCD_printf("Center\n");

			LP = 0;
    39c8:	c1 2c       	mov	r12, r1
    39ca:	d1 2c       	mov	r13, r1
    39cc:	76 01       	movw	r14, r12
    39ce:	13 c0       	rjmp	.+38     	; 0x39f6 <centerFollow+0x166>
			RP = leftIR - avrageIR;
			LI = 0;
			RI = RI++;
		} else {
			//means center of center
			LCD_clear();
    39d0:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
			LCD_printf("I shall\n");
    39d4:	8c eb       	ldi	r24, 0xBC	; 188
    39d6:	92 e0       	ldi	r25, 0x02	; 2
    39d8:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("fear no\n");
    39dc:	84 ec       	ldi	r24, 0xC4	; 196
    39de:	92 e0       	ldi	r25, 0x02	; 2
    39e0:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
			LCD_printf("evil\n");
    39e4:	8c ec       	ldi	r24, 0xCC	; 204
    39e6:	92 e0       	ldi	r25, 0x02	; 2
    39e8:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

			LP = 0;
			RP = 0;
    39ec:	81 2c       	mov	r8, r1
    39ee:	91 2c       	mov	r9, r1
    39f0:	54 01       	movw	r10, r8
			LCD_clear();
			LCD_printf("I shall\n");
			LCD_printf("fear no\n");
			LCD_printf("evil\n");

			LP = 0;
    39f2:	75 01       	movw	r14, r10
    39f4:	64 01       	movw	r12, r8
			RI = 0;
		}

		// PID lopp
				
		LWS = KP*LP + KI*LI + KD*oLWS + base; // Proportinal and Integral Control
    39f6:	20 e0       	ldi	r18, 0x00	; 0
    39f8:	30 e0       	ldi	r19, 0x00	; 0
    39fa:	a9 01       	movw	r20, r18
    39fc:	c7 01       	movw	r24, r14
    39fe:	b6 01       	movw	r22, r12
    3a00:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3a04:	6b 01       	movw	r12, r22
    3a06:	7c 01       	movw	r14, r24
    3a08:	20 e0       	ldi	r18, 0x00	; 0
    3a0a:	30 e0       	ldi	r19, 0x00	; 0
    3a0c:	a9 01       	movw	r20, r18
    3a0e:	63 2d       	mov	r22, r3
    3a10:	72 2d       	mov	r23, r2
    3a12:	8e 85       	ldd	r24, Y+14	; 0x0e
    3a14:	9f 85       	ldd	r25, Y+15	; 0x0f
    3a16:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    3a1a:	9b 01       	movw	r18, r22
    3a1c:	ac 01       	movw	r20, r24
    3a1e:	c7 01       	movw	r24, r14
    3a20:	b6 01       	movw	r22, r12
    3a22:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3a26:	20 e0       	ldi	r18, 0x00	; 0
    3a28:	30 e0       	ldi	r19, 0x00	; 0
    3a2a:	40 ef       	ldi	r20, 0xF0	; 240
    3a2c:	52 e4       	ldi	r21, 0x42	; 66
    3a2e:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3a32:	69 83       	std	Y+1, r22	; 0x01
    3a34:	79 87       	std	Y+9, r23	; 0x09
    3a36:	18 2f       	mov	r17, r24
    3a38:	09 2f       	mov	r16, r25
		RWS = KP*RP + KI*RI + KD*oRWS + base;
    3a3a:	20 e0       	ldi	r18, 0x00	; 0
    3a3c:	30 e0       	ldi	r19, 0x00	; 0
    3a3e:	a9 01       	movw	r20, r18
    3a40:	c5 01       	movw	r24, r10
    3a42:	b4 01       	movw	r22, r8
    3a44:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3a48:	6b 01       	movw	r12, r22
    3a4a:	7c 01       	movw	r14, r24
    3a4c:	20 e0       	ldi	r18, 0x00	; 0
    3a4e:	30 e0       	ldi	r19, 0x00	; 0
    3a50:	a9 01       	movw	r20, r18
    3a52:	6d 81       	ldd	r22, Y+5	; 0x05
    3a54:	7e 81       	ldd	r23, Y+6	; 0x06
    3a56:	8f 81       	ldd	r24, Y+7	; 0x07
    3a58:	98 85       	ldd	r25, Y+8	; 0x08
    3a5a:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    3a5e:	9b 01       	movw	r18, r22
    3a60:	ac 01       	movw	r20, r24
    3a62:	c7 01       	movw	r24, r14
    3a64:	b6 01       	movw	r22, r12
    3a66:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3a6a:	20 e0       	ldi	r18, 0x00	; 0
    3a6c:	30 e0       	ldi	r19, 0x00	; 0
    3a6e:	40 ef       	ldi	r20, 0xF0	; 240
    3a70:	52 e4       	ldi	r21, 0x42	; 66
    3a72:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3a76:	c6 2e       	mov	r12, r22
    3a78:	d7 2e       	mov	r13, r23
    3a7a:	e8 2e       	mov	r14, r24
    3a7c:	f9 2e       	mov	r15, r25
		if (oLWS == 0){ // For first case
    3a7e:	20 e0       	ldi	r18, 0x00	; 0
    3a80:	30 e0       	ldi	r19, 0x00	; 0
    3a82:	a9 01       	movw	r20, r18
    3a84:	63 2d       	mov	r22, r3
    3a86:	72 2d       	mov	r23, r2
    3a88:	8e 85       	ldd	r24, Y+14	; 0x0e
    3a8a:	9f 85       	ldd	r25, Y+15	; 0x0f
    3a8c:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3a90:	81 11       	cpse	r24, r1
    3a92:	08 c0       	rjmp	.+16     	; 0x3aa4 <centerFollow+0x214>
			oLWS = LWS;
			oRWS = RWS;
    3a94:	cd 82       	std	Y+5, r12	; 0x05
    3a96:	de 82       	std	Y+6, r13	; 0x06
    3a98:	ef 82       	std	Y+7, r14	; 0x07
    3a9a:	f8 86       	std	Y+8, r15	; 0x08
		// PID lopp
				
		LWS = KP*LP + KI*LI + KD*oLWS + base; // Proportinal and Integral Control
		RWS = KP*RP + KI*RI + KD*oRWS + base;
		if (oLWS == 0){ // For first case
			oLWS = LWS;
    3a9c:	39 80       	ldd	r3, Y+1	; 0x01
    3a9e:	29 84       	ldd	r2, Y+9	; 0x09
    3aa0:	1e 87       	std	Y+14, r17	; 0x0e
    3aa2:	0f 87       	std	Y+15, r16	; 0x0f
			oRWS = RWS;
		}
		LWS = LWS + KD*(oLWS-LWS); // Derivative Control
    3aa4:	29 81       	ldd	r18, Y+1	; 0x01
    3aa6:	39 85       	ldd	r19, Y+9	; 0x09
    3aa8:	41 2f       	mov	r20, r17
    3aaa:	50 2f       	mov	r21, r16
    3aac:	63 2d       	mov	r22, r3
    3aae:	72 2d       	mov	r23, r2
    3ab0:	8e 85       	ldd	r24, Y+14	; 0x0e
    3ab2:	9f 85       	ldd	r25, Y+15	; 0x0f
    3ab4:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3ab8:	20 e0       	ldi	r18, 0x00	; 0
    3aba:	30 e0       	ldi	r19, 0x00	; 0
    3abc:	a9 01       	movw	r20, r18
    3abe:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    3ac2:	29 81       	ldd	r18, Y+1	; 0x01
    3ac4:	39 85       	ldd	r19, Y+9	; 0x09
    3ac6:	41 2f       	mov	r20, r17
    3ac8:	50 2f       	mov	r21, r16
    3aca:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3ace:	36 2e       	mov	r3, r22
    3ad0:	27 2e       	mov	r2, r23
    3ad2:	8e 87       	std	Y+14, r24	; 0x0e
    3ad4:	9f 87       	std	Y+15, r25	; 0x0f
		RWS = RWS + KD*(oRWS-RWS);
    3ad6:	2c 2d       	mov	r18, r12
    3ad8:	3d 2d       	mov	r19, r13
    3ada:	4e 2d       	mov	r20, r14
    3adc:	5f 2d       	mov	r21, r15
    3ade:	6d 81       	ldd	r22, Y+5	; 0x05
    3ae0:	7e 81       	ldd	r23, Y+6	; 0x06
    3ae2:	8f 81       	ldd	r24, Y+7	; 0x07
    3ae4:	98 85       	ldd	r25, Y+8	; 0x08
    3ae6:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3aea:	20 e0       	ldi	r18, 0x00	; 0
    3aec:	30 e0       	ldi	r19, 0x00	; 0
    3aee:	a9 01       	movw	r20, r18
    3af0:	0e 94 2e 23 	call	0x465c	; 0x465c <__mulsf3>
    3af4:	2c 2d       	mov	r18, r12
    3af6:	3d 2d       	mov	r19, r13
    3af8:	4e 2d       	mov	r20, r14
    3afa:	5f 2d       	mov	r21, r15
    3afc:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3b00:	6d 83       	std	Y+5, r22	; 0x05
    3b02:	7e 83       	std	Y+6, r23	; 0x06
    3b04:	8f 83       	std	Y+7, r24	; 0x07
    3b06:	98 87       	std	Y+8, r25	; 0x08

		STEPPER_move_rn(STEPPER_BOTH, // Forward Movement based on input speeds
    3b08:	63 2d       	mov	r22, r3
    3b0a:	72 2d       	mov	r23, r2
    3b0c:	8e 85       	ldd	r24, Y+14	; 0x0e
    3b0e:	9f 85       	ldd	r25, Y+15	; 0x0f
    3b10:	0e 94 20 22 	call	0x4440	; 0x4440 <__fixunssfsi>
    3b14:	69 83       	std	Y+1, r22	; 0x01
    3b16:	7a 83       	std	Y+2, r23	; 0x02
    3b18:	8b 83       	std	Y+3, r24	; 0x03
    3b1a:	9c 83       	std	Y+4, r25	; 0x04
    3b1c:	1f 92       	push	r1
    3b1e:	1f 92       	push	r1
    3b20:	1f 92       	push	r1
    3b22:	81 e0       	ldi	r24, 0x01	; 1
    3b24:	8f 93       	push	r24
    3b26:	90 e9       	ldi	r25, 0x90	; 144
    3b28:	9f 93       	push	r25
    3b2a:	6d 81       	ldd	r22, Y+5	; 0x05
    3b2c:	7e 81       	ldd	r23, Y+6	; 0x06
    3b2e:	8f 81       	ldd	r24, Y+7	; 0x07
    3b30:	98 85       	ldd	r25, Y+8	; 0x08
    3b32:	0e 94 20 22 	call	0x4440	; 0x4440 <__fixunssfsi>
    3b36:	7f 93       	push	r23
    3b38:	6f 93       	push	r22
    3b3a:	1f 92       	push	r1
    3b3c:	1f 92       	push	r1
    3b3e:	81 2c       	mov	r8, r1
    3b40:	a1 2c       	mov	r10, r1
    3b42:	b1 2c       	mov	r11, r1
    3b44:	c1 2c       	mov	r12, r1
    3b46:	0f 2e       	mov	r0, r31
    3b48:	f0 e9       	ldi	r31, 0x90	; 144
    3b4a:	ef 2e       	mov	r14, r31
    3b4c:	ff 24       	eor	r15, r15
    3b4e:	f3 94       	inc	r15
    3b50:	f0 2d       	mov	r31, r0
    3b52:	09 81       	ldd	r16, Y+1	; 0x01
    3b54:	1a 81       	ldd	r17, Y+2	; 0x02
    3b56:	20 e0       	ldi	r18, 0x00	; 0
    3b58:	30 e0       	ldi	r19, 0x00	; 0
    3b5a:	40 e0       	ldi	r20, 0x00	; 0
    3b5c:	62 e0       	ldi	r22, 0x02	; 2
    3b5e:	82 e0       	ldi	r24, 0x02	; 2
    3b60:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
	char KI = 0.75;
	char KD = 0;

	rightIR = getRightIR();
	leftIR = getLeftIR();
	while ((leftIR < ICT) && (rightIR < ICT)){ // If between two walls
    3b64:	0f b6       	in	r0, 0x3f	; 63
    3b66:	f8 94       	cli
    3b68:	de bf       	out	0x3e, r29	; 62
    3b6a:	0f be       	out	0x3f, r0	; 63
    3b6c:	cd bf       	out	0x3d, r28	; 61
    3b6e:	20 e0       	ldi	r18, 0x00	; 0
    3b70:	30 e0       	ldi	r19, 0x00	; 0
    3b72:	40 e4       	ldi	r20, 0x40	; 64
    3b74:	51 e4       	ldi	r21, 0x41	; 65
    3b76:	6a 85       	ldd	r22, Y+10	; 0x0a
    3b78:	7b 85       	ldd	r23, Y+11	; 0x0b
    3b7a:	8c 85       	ldd	r24, Y+12	; 0x0c
    3b7c:	9d 85       	ldd	r25, Y+13	; 0x0d
    3b7e:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3b82:	88 23       	and	r24, r24
    3b84:	5c f4       	brge	.+22     	; 0x3b9c <centerFollow+0x30c>
    3b86:	20 e0       	ldi	r18, 0x00	; 0
    3b88:	30 e0       	ldi	r19, 0x00	; 0
    3b8a:	40 e4       	ldi	r20, 0x40	; 64
    3b8c:	51 e4       	ldi	r21, 0x41	; 65
    3b8e:	c3 01       	movw	r24, r6
    3b90:	b2 01       	movw	r22, r4
    3b92:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3b96:	88 23       	and	r24, r24
    3b98:	0c f4       	brge	.+2      	; 0x3b9c <centerFollow+0x30c>
    3b9a:	b8 ce       	rjmp	.-656    	; 0x390c <centerFollow+0x7c>
				STEPPER_FWD, RWS, 400);	//Right

		oLWS = LWS;
		oRWS = RWS;
	}	
}
    3b9c:	2f 96       	adiw	r28, 0x0f	; 15
    3b9e:	0f b6       	in	r0, 0x3f	; 63
    3ba0:	f8 94       	cli
    3ba2:	de bf       	out	0x3e, r29	; 62
    3ba4:	0f be       	out	0x3f, r0	; 63
    3ba6:	cd bf       	out	0x3d, r28	; 61
    3ba8:	df 91       	pop	r29
    3baa:	cf 91       	pop	r28
    3bac:	1f 91       	pop	r17
    3bae:	0f 91       	pop	r16
    3bb0:	ff 90       	pop	r15
    3bb2:	ef 90       	pop	r14
    3bb4:	df 90       	pop	r13
    3bb6:	cf 90       	pop	r12
    3bb8:	bf 90       	pop	r11
    3bba:	af 90       	pop	r10
    3bbc:	9f 90       	pop	r9
    3bbe:	8f 90       	pop	r8
    3bc0:	7f 90       	pop	r7
    3bc2:	6f 90       	pop	r6
    3bc4:	5f 90       	pop	r5
    3bc6:	4f 90       	pop	r4
    3bc8:	3f 90       	pop	r3
    3bca:	2f 90       	pop	r2
    3bcc:	08 95       	ret

00003bce <go2Goal>:

void go2Goal(signed char x, signed char y){
    3bce:	4f 92       	push	r4
    3bd0:	5f 92       	push	r5
    3bd2:	6f 92       	push	r6
    3bd4:	7f 92       	push	r7
    3bd6:	8f 92       	push	r8
    3bd8:	9f 92       	push	r9
    3bda:	af 92       	push	r10
    3bdc:	bf 92       	push	r11
    3bde:	cf 92       	push	r12
    3be0:	df 92       	push	r13
    3be2:	ef 92       	push	r14
    3be4:	ff 92       	push	r15
    3be6:	0f 93       	push	r16
    3be8:	1f 93       	push	r17
    3bea:	cf 93       	push	r28
    3bec:	df 93       	push	r29
    3bee:	cd b7       	in	r28, 0x3d	; 61
    3bf0:	de b7       	in	r29, 0x3e	; 62
    3bf2:	28 97       	sbiw	r28, 0x08	; 8
    3bf4:	0f b6       	in	r0, 0x3f	; 63
    3bf6:	f8 94       	cli
    3bf8:	de bf       	out	0x3e, r29	; 62
    3bfa:	0f be       	out	0x3f, r0	; 63
    3bfc:	cd bf       	out	0x3d, r28	; 61
    3bfe:	96 2f       	mov	r25, r22
	float deltax, deltay, frontIR, rightIR, leftIR;
	int currAngle;
	short stepSize = 100;
	char goal = 0;
	x = x*12;
    3c00:	68 2f       	mov	r22, r24
    3c02:	66 0f       	add	r22, r22
    3c04:	68 0f       	add	r22, r24
    3c06:	66 0f       	add	r22, r22
    3c08:	66 0f       	add	r22, r22
	y = y*12;
    3c0a:	89 2f       	mov	r24, r25
    3c0c:	88 0f       	add	r24, r24
    3c0e:	98 0f       	add	r25, r24
    3c10:	19 2f       	mov	r17, r25
    3c12:	11 0f       	add	r17, r17
    3c14:	11 0f       	add	r17, r17
	
	deltax = x - xo;
    3c16:	77 27       	eor	r23, r23
    3c18:	67 fd       	sbrc	r22, 7
    3c1a:	70 95       	com	r23
    3c1c:	87 2f       	mov	r24, r23
    3c1e:	97 2f       	mov	r25, r23
    3c20:	0e 94 4e 22 	call	0x449c	; 0x449c <__floatsisf>
    3c24:	20 91 17 04 	lds	r18, 0x0417
    3c28:	30 91 18 04 	lds	r19, 0x0418
    3c2c:	40 91 19 04 	lds	r20, 0x0419
    3c30:	50 91 1a 04 	lds	r21, 0x041A
    3c34:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3c38:	6d 83       	std	Y+5, r22	; 0x05
    3c3a:	7e 83       	std	Y+6, r23	; 0x06
    3c3c:	8f 83       	std	Y+7, r24	; 0x07
    3c3e:	98 87       	std	Y+8, r25	; 0x08
	deltay = y - yo;
    3c40:	61 2f       	mov	r22, r17
    3c42:	77 27       	eor	r23, r23
    3c44:	67 fd       	sbrc	r22, 7
    3c46:	70 95       	com	r23
    3c48:	87 2f       	mov	r24, r23
    3c4a:	97 2f       	mov	r25, r23
    3c4c:	0e 94 4e 22 	call	0x449c	; 0x449c <__floatsisf>
    3c50:	20 91 13 04 	lds	r18, 0x0413
    3c54:	30 91 14 04 	lds	r19, 0x0414
    3c58:	40 91 15 04 	lds	r20, 0x0415
    3c5c:	50 91 16 04 	lds	r21, 0x0416
    3c60:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3c64:	4b 01       	movw	r8, r22
    3c66:	5c 01       	movw	r10, r24
	//targetX = deltax;
	//targetY = deltaY;
	currAngle = 0;
    3c68:	00 e0       	ldi	r16, 0x00	; 0
    3c6a:	10 e0       	ldi	r17, 0x00	; 0
	//go2Angle(deltaTheta);
	// Stores the previous angle
	//orignalAngle = deltaTheta;
	
	while(goal == 0){ // Condition where the goal is not met.
		frontIR = getFrontIR();
    3c6c:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <getFrontIR>
    3c70:	6b 01       	movw	r12, r22
    3c72:	7c 01       	movw	r14, r24
		rightIR = getRightIR();
    3c74:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
    3c78:	2b 01       	movw	r4, r22
    3c7a:	3c 01       	movw	r6, r24
		leftIR = getLeftIR();
    3c7c:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
    3c80:	69 83       	std	Y+1, r22	; 0x01
    3c82:	7a 83       	std	Y+2, r23	; 0x02
    3c84:	8b 83       	std	Y+3, r24	; 0x03
    3c86:	9c 83       	std	Y+4, r25	; 0x04
		// Remember to use: currAngle = currAngle + originalAngle;
		
		if(frontIR > 6){
    3c88:	20 e0       	ldi	r18, 0x00	; 0
    3c8a:	30 e0       	ldi	r19, 0x00	; 0
    3c8c:	40 ec       	ldi	r20, 0xC0	; 192
    3c8e:	50 e4       	ldi	r21, 0x40	; 64
    3c90:	c7 01       	movw	r24, r14
    3c92:	b6 01       	movw	r22, r12
    3c94:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3c98:	18 16       	cp	r1, r24
    3c9a:	fc f4       	brge	.+62     	; 0x3cda <go2Goal+0x10c>
			moveForward(stepSize,200);
    3c9c:	68 ec       	ldi	r22, 0xC8	; 200
    3c9e:	70 e0       	ldi	r23, 0x00	; 0
    3ca0:	84 e6       	ldi	r24, 0x64	; 100
    3ca2:	90 e0       	ldi	r25, 0x00	; 0
    3ca4:	0e 94 42 16 	call	0x2c84	; 0x2c84 <moveForward>
			
			if(currAngle != 0 || currAngle != 360 || currAngle != -360 || currAngle != 180 || currAngle != -180){
				// Working on the Y axis:
				if(currAngle > 0){// Pointing towards the goal
    3ca8:	10 16       	cp	r1, r16
    3caa:	11 06       	cpc	r1, r17
    3cac:	5c f4       	brge	.+22     	; 0x3cc4 <go2Goal+0xf6>
					deltay = deltay - stepSize*0.108;
    3cae:	2d ec       	ldi	r18, 0xCD	; 205
    3cb0:	3c ec       	ldi	r19, 0xCC	; 204
    3cb2:	4c e2       	ldi	r20, 0x2C	; 44
    3cb4:	51 e4       	ldi	r21, 0x41	; 65
    3cb6:	c5 01       	movw	r24, r10
    3cb8:	b4 01       	movw	r22, r8
    3cba:	0e 94 4a 21 	call	0x4294	; 0x4294 <__subsf3>
    3cbe:	4b 01       	movw	r8, r22
    3cc0:	5c 01       	movw	r10, r24
    3cc2:	3e c0       	rjmp	.+124    	; 0x3d40 <go2Goal+0x172>
				}else{ // Pointing away from the goal.
					deltay = deltay + stepSize*0.108;
    3cc4:	2d ec       	ldi	r18, 0xCD	; 205
    3cc6:	3c ec       	ldi	r19, 0xCC	; 204
    3cc8:	4c e2       	ldi	r20, 0x2C	; 44
    3cca:	51 e4       	ldi	r21, 0x41	; 65
    3ccc:	c5 01       	movw	r24, r10
    3cce:	b4 01       	movw	r22, r8
    3cd0:	0e 94 4b 21 	call	0x4296	; 0x4296 <__addsf3>
    3cd4:	4b 01       	movw	r8, r22
    3cd6:	5c 01       	movw	r10, r24
    3cd8:	33 c0       	rjmp	.+102    	; 0x3d40 <go2Goal+0x172>
				}
				
			}
			
		}else{
			if(rightIR < leftIR){
    3cda:	29 81       	ldd	r18, Y+1	; 0x01
    3cdc:	3a 81       	ldd	r19, Y+2	; 0x02
    3cde:	4b 81       	ldd	r20, Y+3	; 0x03
    3ce0:	5c 81       	ldd	r21, Y+4	; 0x04
    3ce2:	c3 01       	movw	r24, r6
    3ce4:	b2 01       	movw	r22, r4
    3ce6:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3cea:	88 23       	and	r24, r24
    3cec:	ac f4       	brge	.+42     	; 0x3d18 <go2Goal+0x14a>
				if(deltay >= 0){
    3cee:	20 e0       	ldi	r18, 0x00	; 0
    3cf0:	30 e0       	ldi	r19, 0x00	; 0
    3cf2:	a9 01       	movw	r20, r18
    3cf4:	c5 01       	movw	r24, r10
    3cf6:	b4 01       	movw	r22, r8
    3cf8:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3cfc:	88 23       	and	r24, r24
    3cfe:	34 f0       	brlt	.+12     	; 0x3d0c <go2Goal+0x13e>
					currAngle = currAngle + 90;
    3d00:	06 5a       	subi	r16, 0xA6	; 166
    3d02:	1f 4f       	sbci	r17, 0xFF	; 255
					go2Angle(currAngle);
    3d04:	c8 01       	movw	r24, r16
    3d06:	0e 94 34 17 	call	0x2e68	; 0x2e68 <go2Angle>
    3d0a:	1a c0       	rjmp	.+52     	; 0x3d40 <go2Goal+0x172>
					// Right wall follow.
				}else{
					currAngle = currAngle - 90;
    3d0c:	0a 55       	subi	r16, 0x5A	; 90
    3d0e:	11 09       	sbc	r17, r1
					go2Angle(currAngle);
    3d10:	c8 01       	movw	r24, r16
    3d12:	0e 94 34 17 	call	0x2e68	; 0x2e68 <go2Angle>
    3d16:	14 c0       	rjmp	.+40     	; 0x3d40 <go2Goal+0x172>
					// Left wall follow.
				}
			}else{
				if(deltay >= 0){
    3d18:	20 e0       	ldi	r18, 0x00	; 0
    3d1a:	30 e0       	ldi	r19, 0x00	; 0
    3d1c:	a9 01       	movw	r20, r18
    3d1e:	c5 01       	movw	r24, r10
    3d20:	b4 01       	movw	r22, r8
    3d22:	0e 94 23 23 	call	0x4646	; 0x4646 <__gesf2>
    3d26:	88 23       	and	r24, r24
    3d28:	34 f0       	brlt	.+12     	; 0x3d36 <go2Goal+0x168>
					currAngle = currAngle - 90;
    3d2a:	0a 55       	subi	r16, 0x5A	; 90
    3d2c:	11 09       	sbc	r17, r1
					go2Angle(currAngle);
    3d2e:	c8 01       	movw	r24, r16
    3d30:	0e 94 34 17 	call	0x2e68	; 0x2e68 <go2Angle>
    3d34:	05 c0       	rjmp	.+10     	; 0x3d40 <go2Goal+0x172>
					// Left wall follow
				}else{
					currAngle = currAngle + 90;
    3d36:	06 5a       	subi	r16, 0xA6	; 166
    3d38:	1f 4f       	sbci	r17, 0xFF	; 255
					go2Angle(currAngle);
    3d3a:	c8 01       	movw	r24, r16
    3d3c:	0e 94 34 17 	call	0x2e68	; 0x2e68 <go2Angle>
					// Right wall follow
				}
			}
		}
		
		if(deltax==0 && deltay==0){ // Might need to set a tolerance
    3d40:	20 e0       	ldi	r18, 0x00	; 0
    3d42:	30 e0       	ldi	r19, 0x00	; 0
    3d44:	a9 01       	movw	r20, r18
    3d46:	6d 81       	ldd	r22, Y+5	; 0x05
    3d48:	7e 81       	ldd	r23, Y+6	; 0x06
    3d4a:	8f 81       	ldd	r24, Y+7	; 0x07
    3d4c:	98 85       	ldd	r25, Y+8	; 0x08
    3d4e:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3d52:	81 11       	cpse	r24, r1
    3d54:	8b cf       	rjmp	.-234    	; 0x3c6c <go2Goal+0x9e>
    3d56:	20 e0       	ldi	r18, 0x00	; 0
    3d58:	30 e0       	ldi	r19, 0x00	; 0
    3d5a:	a9 01       	movw	r20, r18
    3d5c:	c5 01       	movw	r24, r10
    3d5e:	b4 01       	movw	r22, r8
    3d60:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3d64:	81 11       	cpse	r24, r1
    3d66:	82 cf       	rjmp	.-252    	; 0x3c6c <go2Goal+0x9e>
			goal = 1;
		}
	}
	
    3d68:	28 96       	adiw	r28, 0x08	; 8
    3d6a:	0f b6       	in	r0, 0x3f	; 63
    3d6c:	f8 94       	cli
    3d6e:	de bf       	out	0x3e, r29	; 62
    3d70:	0f be       	out	0x3f, r0	; 63
    3d72:	cd bf       	out	0x3d, r28	; 61
    3d74:	df 91       	pop	r29
    3d76:	cf 91       	pop	r28
    3d78:	1f 91       	pop	r17
    3d7a:	0f 91       	pop	r16
    3d7c:	ff 90       	pop	r15
    3d7e:	ef 90       	pop	r14
    3d80:	df 90       	pop	r13
    3d82:	cf 90       	pop	r12
    3d84:	bf 90       	pop	r11
    3d86:	af 90       	pop	r10
    3d88:	9f 90       	pop	r9
    3d8a:	8f 90       	pop	r8
    3d8c:	7f 90       	pop	r7
    3d8e:	6f 90       	pop	r6
    3d90:	5f 90       	pop	r5
    3d92:	4f 90       	pop	r4
    3d94:	08 95       	ret

00003d96 <CBOT_main>:
	char ICT = 10;
	char IsWall = 0;
	float frontIR, rightIR, leftIR;

	// Opening LCD subsystem management.
	LCD_open();
    3d96:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <LCD_open>

	// This information is printed on the LCD display in case this initial setup takes longer.
	LCD_printf("Setting up...");
    3d9a:	81 ed       	ldi	r24, 0xD1	; 209
    3d9c:	92 e0       	ldi	r25, 0x02	; 2
    3d9e:	9f 93       	push	r25
    3da0:	8f 93       	push	r24
    3da2:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>

	// Subsystem open state variable information.
	SUBSYS_OPENSTAT openTiny;

	// Opening ATTINY subsystem management and storing returning value in openTiny that is associated to the struct SUBSYS_OPENSTAT_TYPE.
	openTiny = ATTINY_open();
    3da6:	0e 94 35 0a 	call	0x146a	; 0x146a <ATTINY_open>

	// If the state struct from openTiny is different from the expected value, an error occurs.
	if (openTiny.state != SUBSYS_OPEN){
    3daa:	0f 90       	pop	r0
    3dac:	0f 90       	pop	r0
    3dae:	91 30       	cpi	r25, 0x01	; 1
    3db0:	51 f0       	breq	.+20     	; 0x3dc6 <CBOT_main+0x30>
		LCD_clear();
    3db2:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
		// The error is then displayed.
		LCD_printf("Error when opening ATTINY!");
    3db6:	8f ed       	ldi	r24, 0xDF	; 223
    3db8:	92 e0       	ldi	r25, 0x02	; 2
    3dba:	9f 93       	push	r25
    3dbc:	8f 93       	push	r24
    3dbe:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
    3dc2:	0f 90       	pop	r0
    3dc4:	0f 90       	pop	r0
	}

	SPKR_open(SPKR_BEEP_MODE);		// Open the speaker in beep mode
    3dc6:	81 e0       	ldi	r24, 0x01	; 1
    3dc8:	0e 94 b1 05 	call	0xb62	; 0xb62 <SPKR_open>
	ADC_open();						// Open the ADC module
    3dcc:	0e 94 50 03 	call	0x6a0	; 0x6a0 <ADC_open>
	ADC_set_VREF( ADC_VREF_AVCC );	// Set the Voltage Reference first so VREF=5V.
    3dd0:	81 e0       	ldi	r24, 0x01	; 1
    3dd2:	0e 94 b2 03 	call	0x764	; 0x764 <ADC_set_VREF>
	STEPPER_open();					// Open Stepper module.
    3dd6:	0e 94 7d 07 	call	0xefa	; 0xefa <STEPPER_open>

	// After the initial setup, a "Ready!" message is displayed on the second line of the LCD display.
	LCD_printf("\nReady!");
    3dda:	8a ef       	ldi	r24, 0xFA	; 250
    3ddc:	92 e0       	ldi	r25, 0x02	; 2
    3dde:	9f 93       	push	r25
    3de0:	8f 93       	push	r24
    3de2:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
	LCD_clear();
    3de6:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>

	STEPPER_set_mode(STEPPER_BOTH, STEPPER_NORMAL_MODE);
    3dea:	60 e0       	ldi	r22, 0x00	; 0
    3dec:	82 e0       	ldi	r24, 0x02	; 2
    3dee:	0e 94 22 08 	call	0x1044	; 0x1044 <STEPPER_set_mode>
    3df2:	0f 90       	pop	r0
    3df4:	0f 90       	pop	r0

			}else if(ATTINY_get_SW_state(ATTINY_SW5)){
				// While SW5 is not pressed...
				while(!ATTINY_get_SW_state(ATTINY_SW5)){
					LCD_clear();
					LCD_printf("( %d , %d )", cox, coy); // Displays the angle selection.
    3df6:	cd e5       	ldi	r28, 0x5D	; 93
    3df8:	d3 e0       	ldi	r29, 0x03	; 3
					LCD_printf("\nSW3 + | SW4 - \nSW5 To y");
    3dfa:	0f 2e       	mov	r0, r31
    3dfc:	f9 e6       	ldi	r31, 0x69	; 105
    3dfe:	ef 2e       	mov	r14, r31
    3e00:	f3 e0       	ldi	r31, 0x03	; 3
    3e02:	ff 2e       	mov	r15, r31
    3e04:	f0 2d       	mov	r31, r0
						// If SW4 is pressed, the coordinate x is decremented.
						}else if(ATTINY_get_SW_state(ATTINY_SW4)){
						cox--;
						// If the x value is < -5, it goes back to 5.
						if(cox < -20){
							cox = 20;
    3e06:	0f 2e       	mov	r0, r31
    3e08:	f4 e1       	ldi	r31, 0x14	; 20
    3e0a:	8f 2e       	mov	r8, r31
    3e0c:	f0 2d       	mov	r31, r0
					// If SW3 is pressed, the coordinate x is incremented.
					if(ATTINY_get_SW_state(ATTINY_SW3)){
						cox++;
						// If the x value is > 5, it goes back to -5.
						if (cox > 20){
							cox = -20;
    3e0e:	0f 2e       	mov	r0, r31
    3e10:	fc ee       	ldi	r31, 0xEC	; 236
    3e12:	9f 2e       	mov	r9, r31
    3e14:	f0 2d       	mov	r31, r0
				// After choosing the value of the coordinate x, the user must choose the value of the coordinate y:
				// While SW5 is not pressed...
				while(!ATTINY_get_SW_state(ATTINY_SW5)){
					LCD_clear();
					LCD_printf("( %d , %d )", cox, coy);
					LCD_printf("\nSW3 + | SW4 - \nSW5 Enter");
    3e16:	02 e8       	ldi	r16, 0x82	; 130
    3e18:	13 e0       	ldi	r17, 0x03	; 3

	// While loop that keeps the micro controller running begins here:
	while(1)
	{
		// Main menu:
		LCD_clear();
    3e1a:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
		LCD_printf("SW3: Wall Follow\n");
    3e1e:	82 e0       	ldi	r24, 0x02	; 2
    3e20:	93 e0       	ldi	r25, 0x03	; 3
    3e22:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
		LCD_printf("SW4: AvoidFollow\n");
    3e26:	83 e1       	ldi	r24, 0x13	; 19
    3e28:	93 e0       	ldi	r25, 0x03	; 3
    3e2a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
		LCD_printf("SW5: Target Follow\n");
    3e2e:	84 e2       	ldi	r24, 0x24	; 36
    3e30:	93 e0       	ldi	r25, 0x03	; 3
    3e32:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

		// Press SW3 to select one of the kids.
		if (ATTINY_get_SW_state(ATTINY_SW3)){
    3e36:	80 e0       	ldi	r24, 0x00	; 0
    3e38:	0e 94 e7 09 	call	0x13ce	; 0x13ce <ATTINY_get_SW_state>
    3e3c:	88 23       	and	r24, r24
    3e3e:	09 f4       	brne	.+2      	; 0x3e42 <CBOT_main+0xac>
    3e40:	ad c0       	rjmp	.+346    	; 0x3f9c <CBOT_main+0x206>
			while(1){ // Logic that determins what conditions the robot starts at and what to demo
				frontIR = getFrontIR();
    3e42:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <getFrontIR>
    3e46:	2b 01       	movw	r4, r22
    3e48:	3c 01       	movw	r6, r24
				rightIR = getRightIR();
    3e4a:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
    3e4e:	4b 01       	movw	r8, r22
    3e50:	5c 01       	movw	r10, r24
				leftIR = getLeftIR();
    3e52:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
    3e56:	6b 01       	movw	r12, r22
    3e58:	7c 01       	movw	r14, r24
				if ((leftIR < ICT) && (rightIR < ICT)) { // near both walls so use center follow
    3e5a:	20 e0       	ldi	r18, 0x00	; 0
    3e5c:	30 e0       	ldi	r19, 0x00	; 0
    3e5e:	40 e2       	ldi	r20, 0x20	; 32
    3e60:	51 e4       	ldi	r21, 0x41	; 65
    3e62:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3e66:	88 23       	and	r24, r24
    3e68:	74 f4       	brge	.+28     	; 0x3e86 <CBOT_main+0xf0>
    3e6a:	20 e0       	ldi	r18, 0x00	; 0
    3e6c:	30 e0       	ldi	r19, 0x00	; 0
    3e6e:	40 e2       	ldi	r20, 0x20	; 32
    3e70:	51 e4       	ldi	r21, 0x41	; 65
    3e72:	c5 01       	movw	r24, r10
    3e74:	b4 01       	movw	r22, r8
    3e76:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3e7a:	88 23       	and	r24, r24
    3e7c:	0c f0       	brlt	.+2      	; 0x3e80 <CBOT_main+0xea>
    3e7e:	f2 c1       	rjmp	.+996    	; 0x4264 <CBOT_main+0x4ce>
					centerFollow();
    3e80:	0e 94 48 1c 	call	0x3890	; 0x3890 <centerFollow>
    3e84:	de cf       	rjmp	.-68     	; 0x3e42 <CBOT_main+0xac>
				} else if (rightIR < ICT){ // Walls to the right so follows on the right side
    3e86:	20 e0       	ldi	r18, 0x00	; 0
    3e88:	30 e0       	ldi	r19, 0x00	; 0
    3e8a:	40 e2       	ldi	r20, 0x20	; 32
    3e8c:	51 e4       	ldi	r21, 0x41	; 65
    3e8e:	c5 01       	movw	r24, r10
    3e90:	b4 01       	movw	r22, r8
    3e92:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3e96:	88 23       	and	r24, r24
    3e98:	14 f4       	brge	.+4      	; 0x3e9e <CBOT_main+0x108>
					rightFollow();
    3e9a:	0e 94 38 18 	call	0x3070	; 0x3070 <rightFollow>
				} else if (leftIR < ICT) { // Walls to the left so follows on the left side
    3e9e:	20 e0       	ldi	r18, 0x00	; 0
    3ea0:	30 e0       	ldi	r19, 0x00	; 0
    3ea2:	40 e2       	ldi	r20, 0x20	; 32
    3ea4:	51 e4       	ldi	r21, 0x41	; 65
    3ea6:	c7 01       	movw	r24, r14
    3ea8:	b6 01       	movw	r22, r12
    3eaa:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3eae:	88 23       	and	r24, r24
    3eb0:	14 f4       	brge	.+4      	; 0x3eb6 <CBOT_main+0x120>
					leftFollow();
    3eb2:	0e 94 40 1a 	call	0x3480	; 0x3480 <leftFollow>
				} else if (frontIR < ICT) { // Sees something to the front of it
    3eb6:	20 e0       	ldi	r18, 0x00	; 0
    3eb8:	30 e0       	ldi	r19, 0x00	; 0
    3eba:	40 e2       	ldi	r20, 0x20	; 32
    3ebc:	51 e4       	ldi	r21, 0x41	; 65
    3ebe:	c3 01       	movw	r24, r6
    3ec0:	b2 01       	movw	r22, r4
    3ec2:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3ec6:	88 23       	and	r24, r24
    3ec8:	0c f0       	brlt	.+2      	; 0x3ecc <CBOT_main+0x136>
    3eca:	5b c0       	rjmp	.+182    	; 0x3f82 <CBOT_main+0x1ec>
					LCD_clear();
    3ecc:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
					LCD_printf("Forward,");
    3ed0:	87 e3       	ldi	r24, 0x37	; 55
    3ed2:	93 e0       	ldi	r25, 0x03	; 3
    3ed4:	9f 93       	push	r25
    3ed6:	8f 93       	push	r24
    3ed8:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
					LCD_printf("\nthen Follow");
    3edc:	80 e4       	ldi	r24, 0x40	; 64
    3ede:	93 e0       	ldi	r25, 0x03	; 3
    3ee0:	9f 93       	push	r25
    3ee2:	8f 93       	push	r24
    3ee4:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>

					STEPPER_move_rn(STEPPER_BOTH, // Move a tad forward to get closer to the wall
    3ee8:	1f 92       	push	r1
    3eea:	1f 92       	push	r1
    3eec:	1f 92       	push	r1
    3eee:	81 e0       	ldi	r24, 0x01	; 1
    3ef0:	8f 93       	push	r24
    3ef2:	80 e9       	ldi	r24, 0x90	; 144
    3ef4:	8f 93       	push	r24
    3ef6:	1f 92       	push	r1
    3ef8:	86 e9       	ldi	r24, 0x96	; 150
    3efa:	8f 93       	push	r24
    3efc:	1f 92       	push	r1
    3efe:	1f 92       	push	r1
    3f00:	81 2c       	mov	r8, r1
    3f02:	a1 2c       	mov	r10, r1
    3f04:	b1 2c       	mov	r11, r1
    3f06:	c1 2c       	mov	r12, r1
    3f08:	0f 2e       	mov	r0, r31
    3f0a:	f0 e9       	ldi	r31, 0x90	; 144
    3f0c:	ef 2e       	mov	r14, r31
    3f0e:	ff 24       	eor	r15, r15
    3f10:	f3 94       	inc	r15
    3f12:	f0 2d       	mov	r31, r0
    3f14:	06 e9       	ldi	r16, 0x96	; 150
    3f16:	10 e0       	ldi	r17, 0x00	; 0
    3f18:	20 e0       	ldi	r18, 0x00	; 0
    3f1a:	30 e0       	ldi	r19, 0x00	; 0
    3f1c:	40 e0       	ldi	r20, 0x00	; 0
    3f1e:	62 e0       	ldi	r22, 0x02	; 2
    3f20:	82 e0       	ldi	r24, 0x02	; 2
    3f22:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
							STEPPER_FWD, 150, 400,	//Left
							STEPPER_FWD, 150, 400);	//Right
					TMRSRVC_delay(500); // 0.5 sec delay
    3f26:	84 ef       	ldi	r24, 0xF4	; 244
    3f28:	91 e0       	ldi	r25, 0x01	; 1
    3f2a:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
					rightIR = getRightIR();
    3f2e:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
    3f32:	6b 01       	movw	r12, r22
    3f34:	7c 01       	movw	r14, r24
					leftIR = getLeftIR();
    3f36:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
    3f3a:	9b 01       	movw	r18, r22
    3f3c:	ac 01       	movw	r20, r24
					if (leftIR > rightIR){ // determins what side the robot is closer to the wall. Essentialy random when perpendicular
    3f3e:	8d b7       	in	r24, 0x3d	; 61
    3f40:	9e b7       	in	r25, 0x3e	; 62
    3f42:	0d 96       	adiw	r24, 0x0d	; 13
    3f44:	0f b6       	in	r0, 0x3f	; 63
    3f46:	f8 94       	cli
    3f48:	9e bf       	out	0x3e, r25	; 62
    3f4a:	0f be       	out	0x3f, r0	; 63
    3f4c:	8d bf       	out	0x3d, r24	; 61
    3f4e:	c7 01       	movw	r24, r14
    3f50:	b6 01       	movw	r22, r12
    3f52:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3f56:	88 23       	and	r24, r24
    3f58:	54 f4       	brge	.+20     	; 0x3f6e <CBOT_main+0x1d8>
						//turn right
						go2ContAngle(-90, 100); // Left 90 turn
    3f5a:	44 e6       	ldi	r20, 0x64	; 100
    3f5c:	50 e0       	ldi	r21, 0x00	; 0
    3f5e:	60 e0       	ldi	r22, 0x00	; 0
    3f60:	70 e0       	ldi	r23, 0x00	; 0
    3f62:	84 eb       	ldi	r24, 0xB4	; 180
    3f64:	92 ec       	ldi	r25, 0xC2	; 194
    3f66:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
						leftFollow();
    3f6a:	0e 94 40 1a 	call	0x3480	; 0x3480 <leftFollow>
					}else {
						//turn left
						go2ContAngle(90, 100); // Right 90 turn
    3f6e:	44 e6       	ldi	r20, 0x64	; 100
    3f70:	50 e0       	ldi	r21, 0x00	; 0
    3f72:	60 e0       	ldi	r22, 0x00	; 0
    3f74:	70 e0       	ldi	r23, 0x00	; 0
    3f76:	84 eb       	ldi	r24, 0xB4	; 180
    3f78:	92 e4       	ldi	r25, 0x42	; 66
    3f7a:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
						rightFollow();
    3f7e:	0e 94 38 18 	call	0x3070	; 0x3070 <rightFollow>
					}
				} else { // If sensors don't detect anything, random wanderer is engaged
					LCD_clear();
    3f82:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
					LCD_printf("Random\n");
    3f86:	8d e4       	ldi	r24, 0x4D	; 77
    3f88:	93 e0       	ldi	r25, 0x03	; 3
    3f8a:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
					LCD_printf("Wanderer\n");
    3f8e:	84 e5       	ldi	r24, 0x54	; 84
    3f90:	93 e0       	ldi	r25, 0x03	; 3
    3f92:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

					Random_Wanderer();
    3f96:	0e 94 7c 15 	call	0x2af8	; 0x2af8 <Random_Wanderer>
    3f9a:	53 cf       	rjmp	.-346    	; 0x3e42 <CBOT_main+0xac>
				}
			}
		}else if(ATTINY_get_SW_state(ATTINY_SW4)){
    3f9c:	81 e0       	ldi	r24, 0x01	; 1
    3f9e:	0e 94 e7 09 	call	0x13ce	; 0x13ce <ATTINY_get_SW_state>
    3fa2:	88 23       	and	r24, r24
    3fa4:	09 f4       	brne	.+2      	; 0x3fa8 <CBOT_main+0x212>
    3fa6:	db c0       	rjmp	.+438    	; 0x415e <CBOT_main+0x3c8>
			while(1){
				frontIR = getFrontIR();
    3fa8:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <getFrontIR>
    3fac:	2b 01       	movw	r4, r22
    3fae:	3c 01       	movw	r6, r24
				rightIR = getRightIR();
    3fb0:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
    3fb4:	4b 01       	movw	r8, r22
    3fb6:	5c 01       	movw	r10, r24
				leftIR = getLeftIR();
    3fb8:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
    3fbc:	6b 01       	movw	r12, r22
    3fbe:	7c 01       	movw	r14, r24
				if ((leftIR < ICT) && (rightIR < ICT)) { // near both walls so use center follow
    3fc0:	20 e0       	ldi	r18, 0x00	; 0
    3fc2:	30 e0       	ldi	r19, 0x00	; 0
    3fc4:	40 e2       	ldi	r20, 0x20	; 32
    3fc6:	51 e4       	ldi	r21, 0x41	; 65
    3fc8:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3fcc:	88 23       	and	r24, r24
    3fce:	74 f4       	brge	.+28     	; 0x3fec <CBOT_main+0x256>
    3fd0:	20 e0       	ldi	r18, 0x00	; 0
    3fd2:	30 e0       	ldi	r19, 0x00	; 0
    3fd4:	40 e2       	ldi	r20, 0x20	; 32
    3fd6:	51 e4       	ldi	r21, 0x41	; 65
    3fd8:	c5 01       	movw	r24, r10
    3fda:	b4 01       	movw	r22, r8
    3fdc:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3fe0:	88 23       	and	r24, r24
    3fe2:	0c f0       	brlt	.+2      	; 0x3fe6 <CBOT_main+0x250>
    3fe4:	4b c1       	rjmp	.+662    	; 0x427c <CBOT_main+0x4e6>
					centerFollow();
    3fe6:	0e 94 48 1c 	call	0x3890	; 0x3890 <centerFollow>
    3fea:	de cf       	rjmp	.-68     	; 0x3fa8 <CBOT_main+0x212>
				} else if (rightIR < ICT){ // Walls to the right so follows on the right side
    3fec:	20 e0       	ldi	r18, 0x00	; 0
    3fee:	30 e0       	ldi	r19, 0x00	; 0
    3ff0:	40 e2       	ldi	r20, 0x20	; 32
    3ff2:	51 e4       	ldi	r21, 0x41	; 65
    3ff4:	c5 01       	movw	r24, r10
    3ff6:	b4 01       	movw	r22, r8
    3ff8:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    3ffc:	88 23       	and	r24, r24
    3ffe:	14 f4       	brge	.+4      	; 0x4004 <CBOT_main+0x26e>
					rightFollow();
    4000:	0e 94 38 18 	call	0x3070	; 0x3070 <rightFollow>
				} else if (leftIR < ICT) { // Walls to the left so follows on the left side
    4004:	20 e0       	ldi	r18, 0x00	; 0
    4006:	30 e0       	ldi	r19, 0x00	; 0
    4008:	40 e2       	ldi	r20, 0x20	; 32
    400a:	51 e4       	ldi	r21, 0x41	; 65
    400c:	c7 01       	movw	r24, r14
    400e:	b6 01       	movw	r22, r12
    4010:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    4014:	88 23       	and	r24, r24
    4016:	14 f4       	brge	.+4      	; 0x401c <CBOT_main+0x286>
					leftFollow();
    4018:	0e 94 40 1a 	call	0x3480	; 0x3480 <leftFollow>
				} else if (frontIR < ICT) { // Sees something to the front of it
    401c:	20 e0       	ldi	r18, 0x00	; 0
    401e:	30 e0       	ldi	r19, 0x00	; 0
    4020:	40 e2       	ldi	r20, 0x20	; 32
    4022:	51 e4       	ldi	r21, 0x41	; 65
    4024:	c3 01       	movw	r24, r6
    4026:	b2 01       	movw	r22, r4
    4028:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    402c:	88 23       	and	r24, r24
    402e:	0c f0       	brlt	.+2      	; 0x4032 <CBOT_main+0x29c>
    4030:	89 c0       	rjmp	.+274    	; 0x4144 <CBOT_main+0x3ae>
					STEPPER_move_rn(STEPPER_BOTH, // Move a tad forward to get closer to the wall
    4032:	1f 92       	push	r1
    4034:	1f 92       	push	r1
    4036:	1f 92       	push	r1
    4038:	d1 e0       	ldi	r29, 0x01	; 1
    403a:	df 93       	push	r29
    403c:	c0 e9       	ldi	r28, 0x90	; 144
    403e:	cf 93       	push	r28
    4040:	1f 92       	push	r1
    4042:	1f 92       	push	r1
    4044:	1f 92       	push	r1
    4046:	1f 92       	push	r1
    4048:	81 2c       	mov	r8, r1
    404a:	a1 2c       	mov	r10, r1
    404c:	b1 2c       	mov	r11, r1
    404e:	c1 2c       	mov	r12, r1
    4050:	0f 2e       	mov	r0, r31
    4052:	f0 e9       	ldi	r31, 0x90	; 144
    4054:	ef 2e       	mov	r14, r31
    4056:	ff 24       	eor	r15, r15
    4058:	f3 94       	inc	r15
    405a:	f0 2d       	mov	r31, r0
    405c:	00 e0       	ldi	r16, 0x00	; 0
    405e:	10 e0       	ldi	r17, 0x00	; 0
    4060:	20 e0       	ldi	r18, 0x00	; 0
    4062:	30 e0       	ldi	r19, 0x00	; 0
    4064:	40 e0       	ldi	r20, 0x00	; 0
    4066:	62 e0       	ldi	r22, 0x02	; 2
    4068:	82 e0       	ldi	r24, 0x02	; 2
    406a:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
							STEPPER_FWD, 0, 400,	//Left
							STEPPER_FWD, 0, 400);	//Right
					go2ContAngle(45, 100); // Right 45 degree turn
    406e:	44 e6       	ldi	r20, 0x64	; 100
    4070:	50 e0       	ldi	r21, 0x00	; 0
    4072:	60 e0       	ldi	r22, 0x00	; 0
    4074:	70 e0       	ldi	r23, 0x00	; 0
    4076:	84 e3       	ldi	r24, 0x34	; 52
    4078:	92 e4       	ldi	r25, 0x42	; 66
    407a:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>

					frontIR = getFrontIR();
    407e:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <getFrontIR>
					if (frontIR < ICT){ // test if object or wall
						IsWall = IsWall++;
					}
					go2ContAngle(-90, 100); // Left 90 degree turn
    4082:	44 e6       	ldi	r20, 0x64	; 100
    4084:	50 e0       	ldi	r21, 0x00	; 0
    4086:	60 e0       	ldi	r22, 0x00	; 0
    4088:	70 e0       	ldi	r23, 0x00	; 0
    408a:	84 eb       	ldi	r24, 0xB4	; 180
    408c:	92 ec       	ldi	r25, 0xC2	; 194
    408e:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
					frontIR = getFrontIR();
    4092:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <getFrontIR>
					if (frontIR < ICT){  // test if object or wall
						IsWall = IsWall++;
					}
					go2ContAngle(45, 100); // Right 45 degree turn
    4096:	44 e6       	ldi	r20, 0x64	; 100
    4098:	50 e0       	ldi	r21, 0x00	; 0
    409a:	60 e0       	ldi	r22, 0x00	; 0
    409c:	70 e0       	ldi	r23, 0x00	; 0
    409e:	84 e3       	ldi	r24, 0x34	; 52
    40a0:	92 e4       	ldi	r25, 0x42	; 66
    40a2:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
					if (IsWall > 0){ // avoid object
						go2point(5,0);
					} else { // follow the wall
						LCD_clear();
    40a6:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
						LCD_printf("Forward,");
    40aa:	87 e3       	ldi	r24, 0x37	; 55
    40ac:	93 e0       	ldi	r25, 0x03	; 3
    40ae:	9f 93       	push	r25
    40b0:	8f 93       	push	r24
    40b2:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
						LCD_printf("\nthen Follow");
    40b6:	80 e4       	ldi	r24, 0x40	; 64
    40b8:	93 e0       	ldi	r25, 0x03	; 3
    40ba:	9f 93       	push	r25
    40bc:	8f 93       	push	r24
    40be:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>

						STEPPER_move_rn(STEPPER_BOTH,
    40c2:	1f 92       	push	r1
    40c4:	1f 92       	push	r1
    40c6:	1f 92       	push	r1
    40c8:	df 93       	push	r29
    40ca:	cf 93       	push	r28
    40cc:	1f 92       	push	r1
    40ce:	86 e9       	ldi	r24, 0x96	; 150
    40d0:	8f 93       	push	r24
    40d2:	1f 92       	push	r1
    40d4:	1f 92       	push	r1
    40d6:	06 e9       	ldi	r16, 0x96	; 150
    40d8:	10 e0       	ldi	r17, 0x00	; 0
    40da:	20 e0       	ldi	r18, 0x00	; 0
    40dc:	30 e0       	ldi	r19, 0x00	; 0
    40de:	40 e0       	ldi	r20, 0x00	; 0
    40e0:	62 e0       	ldi	r22, 0x02	; 2
    40e2:	82 e0       	ldi	r24, 0x02	; 2
    40e4:	0e 94 d6 06 	call	0xdac	; 0xdac <STEPPER_move>
								STEPPER_FWD, 150, 400,	//Left
								STEPPER_FWD, 150, 400);	//Right
						TMRSRVC_delay(500); // 0.5 sec delay
    40e8:	84 ef       	ldi	r24, 0xF4	; 244
    40ea:	91 e0       	ldi	r25, 0x01	; 1
    40ec:	0e 94 84 0a 	call	0x1508	; 0x1508 <TMRSRVC_delay>
						rightIR = getRightIR();
    40f0:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <getRightIR>
    40f4:	6b 01       	movw	r12, r22
    40f6:	7c 01       	movw	r14, r24
						leftIR = getLeftIR();
    40f8:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <getLeftIR>
    40fc:	9b 01       	movw	r18, r22
    40fe:	ac 01       	movw	r20, r24
						if (leftIR > rightIR){
    4100:	8d b7       	in	r24, 0x3d	; 61
    4102:	9e b7       	in	r25, 0x3e	; 62
    4104:	46 96       	adiw	r24, 0x16	; 22
    4106:	0f b6       	in	r0, 0x3f	; 63
    4108:	f8 94       	cli
    410a:	9e bf       	out	0x3e, r25	; 62
    410c:	0f be       	out	0x3f, r0	; 63
    410e:	8d bf       	out	0x3d, r24	; 61
    4110:	c7 01       	movw	r24, r14
    4112:	b6 01       	movw	r22, r12
    4114:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    4118:	88 23       	and	r24, r24
    411a:	54 f4       	brge	.+20     	; 0x4130 <CBOT_main+0x39a>
							//turn 90 degree right
							go2ContAngle(-90, 100);
    411c:	44 e6       	ldi	r20, 0x64	; 100
    411e:	50 e0       	ldi	r21, 0x00	; 0
    4120:	60 e0       	ldi	r22, 0x00	; 0
    4122:	70 e0       	ldi	r23, 0x00	; 0
    4124:	84 eb       	ldi	r24, 0xB4	; 180
    4126:	92 ec       	ldi	r25, 0xC2	; 194
    4128:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
							leftFollow();
    412c:	0e 94 40 1a 	call	0x3480	; 0x3480 <leftFollow>
						}else {
							//turn 90 degree left
							go2ContAngle(90, 100);
    4130:	44 e6       	ldi	r20, 0x64	; 100
    4132:	50 e0       	ldi	r21, 0x00	; 0
    4134:	60 e0       	ldi	r22, 0x00	; 0
    4136:	70 e0       	ldi	r23, 0x00	; 0
    4138:	84 eb       	ldi	r24, 0xB4	; 180
    413a:	92 e4       	ldi	r25, 0x42	; 66
    413c:	0e 94 76 17 	call	0x2eec	; 0x2eec <go2ContAngle>
							rightFollow();
    4140:	0e 94 38 18 	call	0x3070	; 0x3070 <rightFollow>
						}					

					} }else { // If sensors don't detect anything, random wanderer is engaged
						LCD_clear();
    4144:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
						LCD_printf("Random\n");
    4148:	8d e4       	ldi	r24, 0x4D	; 77
    414a:	93 e0       	ldi	r25, 0x03	; 3
    414c:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>
						LCD_printf("Wanderer\n");
    4150:	84 e5       	ldi	r24, 0x54	; 84
    4152:	93 e0       	ldi	r25, 0x03	; 3
    4154:	0e 94 e3 2b 	call	0x57c6	; 0x57c6 <puts>

						Random_Wanderer();
    4158:	0e 94 7c 15 	call	0x2af8	; 0x2af8 <Random_Wanderer>
    415c:	25 cf       	rjmp	.-438    	; 0x3fa8 <CBOT_main+0x212>
					}
				}


			}else if(ATTINY_get_SW_state(ATTINY_SW5)){
    415e:	82 e0       	ldi	r24, 0x02	; 2
    4160:	0e 94 e7 09 	call	0x13ce	; 0x13ce <ATTINY_get_SW_state>
    4164:	88 23       	and	r24, r24
    4166:	09 f4       	brne	.+2      	; 0x416a <CBOT_main+0x3d4>
    4168:	58 ce       	rjmp	.-848    	; 0x3e1a <CBOT_main+0x84>
    416a:	b1 2c       	mov	r11, r1
    416c:	32 c0       	rjmp	.+100    	; 0x41d2 <CBOT_main+0x43c>
				// While SW5 is not pressed...
				while(!ATTINY_get_SW_state(ATTINY_SW5)){
					LCD_clear();
    416e:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
					LCD_printf("( %d , %d )", cox, coy); // Displays the angle selection.
    4172:	1f 92       	push	r1
    4174:	1f 92       	push	r1
    4176:	2b 2d       	mov	r18, r11
    4178:	33 27       	eor	r19, r19
    417a:	27 fd       	sbrc	r18, 7
    417c:	30 95       	com	r19
    417e:	3f 93       	push	r19
    4180:	bf 92       	push	r11
    4182:	df 93       	push	r29
    4184:	cf 93       	push	r28
    4186:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
					LCD_printf("\nSW3 + | SW4 - \nSW5 To y");
    418a:	ff 92       	push	r15
    418c:	ef 92       	push	r14
    418e:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
					// If SW3 is pressed, the coordinate x is incremented.
					if(ATTINY_get_SW_state(ATTINY_SW3)){
    4192:	80 e0       	ldi	r24, 0x00	; 0
    4194:	0e 94 e7 09 	call	0x13ce	; 0x13ce <ATTINY_get_SW_state>
    4198:	2d b7       	in	r18, 0x3d	; 61
    419a:	3e b7       	in	r19, 0x3e	; 62
    419c:	28 5f       	subi	r18, 0xF8	; 248
    419e:	3f 4f       	sbci	r19, 0xFF	; 255
    41a0:	0f b6       	in	r0, 0x3f	; 63
    41a2:	f8 94       	cli
    41a4:	3e bf       	out	0x3e, r19	; 62
    41a6:	0f be       	out	0x3f, r0	; 63
    41a8:	2d bf       	out	0x3d, r18	; 61
    41aa:	88 23       	and	r24, r24
    41ac:	29 f0       	breq	.+10     	; 0x41b8 <CBOT_main+0x422>
						cox++;
    41ae:	b3 94       	inc	r11
						// If the x value is > 5, it goes back to -5.
						if (cox > 20){
    41b0:	34 e1       	ldi	r19, 0x14	; 20
    41b2:	3b 15       	cp	r19, r11
    41b4:	5c f0       	brlt	.+22     	; 0x41cc <CBOT_main+0x436>
    41b6:	0d c0       	rjmp	.+26     	; 0x41d2 <CBOT_main+0x43c>
							cox = -20;
						}
						// If SW4 is pressed, the coordinate x is decremented.
						}else if(ATTINY_get_SW_state(ATTINY_SW4)){
    41b8:	81 e0       	ldi	r24, 0x01	; 1
    41ba:	0e 94 e7 09 	call	0x13ce	; 0x13ce <ATTINY_get_SW_state>
    41be:	88 23       	and	r24, r24
    41c0:	41 f0       	breq	.+16     	; 0x41d2 <CBOT_main+0x43c>
						cox--;
    41c2:	ba 94       	dec	r11
						// If the x value is < -5, it goes back to 5.
						if(cox < -20){
    41c4:	8c ee       	ldi	r24, 0xEC	; 236
    41c6:	b8 16       	cp	r11, r24
    41c8:	1c f0       	brlt	.+6      	; 0x41d0 <CBOT_main+0x43a>
    41ca:	03 c0       	rjmp	.+6      	; 0x41d2 <CBOT_main+0x43c>
					// If SW3 is pressed, the coordinate x is incremented.
					if(ATTINY_get_SW_state(ATTINY_SW3)){
						cox++;
						// If the x value is > 5, it goes back to -5.
						if (cox > 20){
							cox = -20;
    41cc:	b9 2c       	mov	r11, r9
    41ce:	01 c0       	rjmp	.+2      	; 0x41d2 <CBOT_main+0x43c>
						// If SW4 is pressed, the coordinate x is decremented.
						}else if(ATTINY_get_SW_state(ATTINY_SW4)){
						cox--;
						// If the x value is < -5, it goes back to 5.
						if(cox < -20){
							cox = 20;
    41d0:	b8 2c       	mov	r11, r8
				}


			}else if(ATTINY_get_SW_state(ATTINY_SW5)){
				// While SW5 is not pressed...
				while(!ATTINY_get_SW_state(ATTINY_SW5)){
    41d2:	82 e0       	ldi	r24, 0x02	; 2
    41d4:	0e 94 e7 09 	call	0x13ce	; 0x13ce <ATTINY_get_SW_state>
    41d8:	88 23       	and	r24, r24
    41da:	49 f2       	breq	.-110    	; 0x416e <CBOT_main+0x3d8>
    41dc:	a1 2c       	mov	r10, r1
				}
				// After choosing the value of the coordinate x, the user must choose the value of the coordinate y:
				// While SW5 is not pressed...
				while(!ATTINY_get_SW_state(ATTINY_SW5)){
					LCD_clear();
					LCD_printf("( %d , %d )", cox, coy);
    41de:	cb 2c       	mov	r12, r11
    41e0:	dd 24       	eor	r13, r13
    41e2:	c7 fc       	sbrc	r12, 7
    41e4:	d0 94       	com	r13
    41e6:	32 c0       	rjmp	.+100    	; 0x424c <CBOT_main+0x4b6>
					}
				}
				// After choosing the value of the coordinate x, the user must choose the value of the coordinate y:
				// While SW5 is not pressed...
				while(!ATTINY_get_SW_state(ATTINY_SW5)){
					LCD_clear();
    41e8:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
					LCD_printf("( %d , %d )", cox, coy);
    41ec:	2a 2d       	mov	r18, r10
    41ee:	33 27       	eor	r19, r19
    41f0:	27 fd       	sbrc	r18, 7
    41f2:	30 95       	com	r19
    41f4:	3f 93       	push	r19
    41f6:	af 92       	push	r10
    41f8:	df 92       	push	r13
    41fa:	bf 92       	push	r11
    41fc:	df 93       	push	r29
    41fe:	cf 93       	push	r28
    4200:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
					LCD_printf("\nSW3 + | SW4 - \nSW5 Enter");
    4204:	1f 93       	push	r17
    4206:	0f 93       	push	r16
    4208:	0e 94 cf 2b 	call	0x579e	; 0x579e <printf>
					// If SW3 is pressed, the coordinate y is incremented.
					if(ATTINY_get_SW_state(ATTINY_SW3)){
    420c:	80 e0       	ldi	r24, 0x00	; 0
    420e:	0e 94 e7 09 	call	0x13ce	; 0x13ce <ATTINY_get_SW_state>
    4212:	2d b7       	in	r18, 0x3d	; 61
    4214:	3e b7       	in	r19, 0x3e	; 62
    4216:	28 5f       	subi	r18, 0xF8	; 248
    4218:	3f 4f       	sbci	r19, 0xFF	; 255
    421a:	0f b6       	in	r0, 0x3f	; 63
    421c:	f8 94       	cli
    421e:	3e bf       	out	0x3e, r19	; 62
    4220:	0f be       	out	0x3f, r0	; 63
    4222:	2d bf       	out	0x3d, r18	; 61
    4224:	88 23       	and	r24, r24
    4226:	29 f0       	breq	.+10     	; 0x4232 <CBOT_main+0x49c>
						coy++;
    4228:	a3 94       	inc	r10
						// If the x value is > 5, it goes back to -5.
						if (coy > 20){
    422a:	34 e1       	ldi	r19, 0x14	; 20
    422c:	3a 15       	cp	r19, r10
    422e:	5c f0       	brlt	.+22     	; 0x4246 <CBOT_main+0x4b0>
    4230:	0d c0       	rjmp	.+26     	; 0x424c <CBOT_main+0x4b6>
							coy = -20;
						}
						// If SW4 is pressed, the coordinate y is decremented.
						}else if(ATTINY_get_SW_state(ATTINY_SW4)){
    4232:	81 e0       	ldi	r24, 0x01	; 1
    4234:	0e 94 e7 09 	call	0x13ce	; 0x13ce <ATTINY_get_SW_state>
    4238:	88 23       	and	r24, r24
    423a:	41 f0       	breq	.+16     	; 0x424c <CBOT_main+0x4b6>
						coy--;
    423c:	aa 94       	dec	r10
						// If the x value is < -5, it goes back to 5
						if(coy < -20){
    423e:	8c ee       	ldi	r24, 0xEC	; 236
    4240:	a8 16       	cp	r10, r24
    4242:	1c f0       	brlt	.+6      	; 0x424a <CBOT_main+0x4b4>
    4244:	03 c0       	rjmp	.+6      	; 0x424c <CBOT_main+0x4b6>
					// If SW3 is pressed, the coordinate y is incremented.
					if(ATTINY_get_SW_state(ATTINY_SW3)){
						coy++;
						// If the x value is > 5, it goes back to -5.
						if (coy > 20){
							coy = -20;
    4246:	a9 2c       	mov	r10, r9
    4248:	01 c0       	rjmp	.+2      	; 0x424c <CBOT_main+0x4b6>
						// If SW4 is pressed, the coordinate y is decremented.
						}else if(ATTINY_get_SW_state(ATTINY_SW4)){
						coy--;
						// If the x value is < -5, it goes back to 5
						if(coy < -20){
							coy = 20;
    424a:	a8 2c       	mov	r10, r8
						}
					}
				}
				// After choosing the value of the coordinate x, the user must choose the value of the coordinate y:
				// While SW5 is not pressed...
				while(!ATTINY_get_SW_state(ATTINY_SW5)){
    424c:	82 e0       	ldi	r24, 0x02	; 2
    424e:	0e 94 e7 09 	call	0x13ce	; 0x13ce <ATTINY_get_SW_state>
    4252:	88 23       	and	r24, r24
    4254:	49 f2       	breq	.-110    	; 0x41e8 <CBOT_main+0x452>
							coy = 20;
						}
					}
				}
				// Calls go to goal point function.
				go2Goal(cox,coy);
    4256:	6a 2d       	mov	r22, r10
    4258:	8b 2d       	mov	r24, r11
    425a:	0e 94 e7 1d 	call	0x3bce	; 0x3bce <go2Goal>
				// Clears the variables up.
				cox = 0;
				coy = 0;
				LCD_clear();
    425e:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_clear>
    4262:	db cd       	rjmp	.-1098   	; 0x3e1a <CBOT_main+0x84>
				frontIR = getFrontIR();
				rightIR = getRightIR();
				leftIR = getLeftIR();
				if ((leftIR < ICT) && (rightIR < ICT)) { // near both walls so use center follow
					centerFollow();
				} else if (rightIR < ICT){ // Walls to the right so follows on the right side
    4264:	20 e0       	ldi	r18, 0x00	; 0
    4266:	30 e0       	ldi	r19, 0x00	; 0
    4268:	40 e2       	ldi	r20, 0x20	; 32
    426a:	51 e4       	ldi	r21, 0x41	; 65
    426c:	c5 01       	movw	r24, r10
    426e:	b4 01       	movw	r22, r8
    4270:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    4274:	88 23       	and	r24, r24
    4276:	0c f0       	brlt	.+2      	; 0x427a <CBOT_main+0x4e4>
    4278:	1c ce       	rjmp	.-968    	; 0x3eb2 <CBOT_main+0x11c>
    427a:	0f ce       	rjmp	.-994    	; 0x3e9a <CBOT_main+0x104>
				frontIR = getFrontIR();
				rightIR = getRightIR();
				leftIR = getLeftIR();
				if ((leftIR < ICT) && (rightIR < ICT)) { // near both walls so use center follow
					centerFollow();
				} else if (rightIR < ICT){ // Walls to the right so follows on the right side
    427c:	20 e0       	ldi	r18, 0x00	; 0
    427e:	30 e0       	ldi	r19, 0x00	; 0
    4280:	40 e2       	ldi	r20, 0x20	; 32
    4282:	51 e4       	ldi	r21, 0x41	; 65
    4284:	c5 01       	movw	r24, r10
    4286:	b4 01       	movw	r22, r8
    4288:	0e 94 af 21 	call	0x435e	; 0x435e <__cmpsf2>
    428c:	88 23       	and	r24, r24
    428e:	0c f0       	brlt	.+2      	; 0x4292 <CBOT_main+0x4fc>
    4290:	c3 ce       	rjmp	.-634    	; 0x4018 <CBOT_main+0x282>
    4292:	b6 ce       	rjmp	.-660    	; 0x4000 <CBOT_main+0x26a>

00004294 <__subsf3>:
    4294:	50 58       	subi	r21, 0x80	; 128

00004296 <__addsf3>:
    4296:	bb 27       	eor	r27, r27
    4298:	aa 27       	eor	r26, r26
    429a:	0e d0       	rcall	.+28     	; 0x42b8 <__addsf3x>
    429c:	9a c1       	rjmp	.+820    	; 0x45d2 <__fp_round>
    429e:	8b d1       	rcall	.+790    	; 0x45b6 <__fp_pscA>
    42a0:	30 f0       	brcs	.+12     	; 0x42ae <__addsf3+0x18>
    42a2:	90 d1       	rcall	.+800    	; 0x45c4 <__fp_pscB>
    42a4:	20 f0       	brcs	.+8      	; 0x42ae <__addsf3+0x18>
    42a6:	31 f4       	brne	.+12     	; 0x42b4 <__addsf3+0x1e>
    42a8:	9f 3f       	cpi	r25, 0xFF	; 255
    42aa:	11 f4       	brne	.+4      	; 0x42b0 <__addsf3+0x1a>
    42ac:	1e f4       	brtc	.+6      	; 0x42b4 <__addsf3+0x1e>
    42ae:	5b c1       	rjmp	.+694    	; 0x4566 <__fp_nan>
    42b0:	0e f4       	brtc	.+2      	; 0x42b4 <__addsf3+0x1e>
    42b2:	e0 95       	com	r30
    42b4:	e7 fb       	bst	r30, 7
    42b6:	51 c1       	rjmp	.+674    	; 0x455a <__fp_inf>

000042b8 <__addsf3x>:
    42b8:	e9 2f       	mov	r30, r25
    42ba:	9c d1       	rcall	.+824    	; 0x45f4 <__fp_split3>
    42bc:	80 f3       	brcs	.-32     	; 0x429e <__addsf3+0x8>
    42be:	ba 17       	cp	r27, r26
    42c0:	62 07       	cpc	r22, r18
    42c2:	73 07       	cpc	r23, r19
    42c4:	84 07       	cpc	r24, r20
    42c6:	95 07       	cpc	r25, r21
    42c8:	18 f0       	brcs	.+6      	; 0x42d0 <__addsf3x+0x18>
    42ca:	71 f4       	brne	.+28     	; 0x42e8 <__addsf3x+0x30>
    42cc:	9e f5       	brtc	.+102    	; 0x4334 <__addsf3x+0x7c>
    42ce:	b4 c1       	rjmp	.+872    	; 0x4638 <__fp_zero>
    42d0:	0e f4       	brtc	.+2      	; 0x42d4 <__addsf3x+0x1c>
    42d2:	e0 95       	com	r30
    42d4:	0b 2e       	mov	r0, r27
    42d6:	ba 2f       	mov	r27, r26
    42d8:	a0 2d       	mov	r26, r0
    42da:	0b 01       	movw	r0, r22
    42dc:	b9 01       	movw	r22, r18
    42de:	90 01       	movw	r18, r0
    42e0:	0c 01       	movw	r0, r24
    42e2:	ca 01       	movw	r24, r20
    42e4:	a0 01       	movw	r20, r0
    42e6:	11 24       	eor	r1, r1
    42e8:	ff 27       	eor	r31, r31
    42ea:	59 1b       	sub	r21, r25
    42ec:	99 f0       	breq	.+38     	; 0x4314 <__addsf3x+0x5c>
    42ee:	59 3f       	cpi	r21, 0xF9	; 249
    42f0:	50 f4       	brcc	.+20     	; 0x4306 <__addsf3x+0x4e>
    42f2:	50 3e       	cpi	r21, 0xE0	; 224
    42f4:	68 f1       	brcs	.+90     	; 0x4350 <__addsf3x+0x98>
    42f6:	1a 16       	cp	r1, r26
    42f8:	f0 40       	sbci	r31, 0x00	; 0
    42fa:	a2 2f       	mov	r26, r18
    42fc:	23 2f       	mov	r18, r19
    42fe:	34 2f       	mov	r19, r20
    4300:	44 27       	eor	r20, r20
    4302:	58 5f       	subi	r21, 0xF8	; 248
    4304:	f3 cf       	rjmp	.-26     	; 0x42ec <__addsf3x+0x34>
    4306:	46 95       	lsr	r20
    4308:	37 95       	ror	r19
    430a:	27 95       	ror	r18
    430c:	a7 95       	ror	r26
    430e:	f0 40       	sbci	r31, 0x00	; 0
    4310:	53 95       	inc	r21
    4312:	c9 f7       	brne	.-14     	; 0x4306 <__addsf3x+0x4e>
    4314:	7e f4       	brtc	.+30     	; 0x4334 <__addsf3x+0x7c>
    4316:	1f 16       	cp	r1, r31
    4318:	ba 0b       	sbc	r27, r26
    431a:	62 0b       	sbc	r22, r18
    431c:	73 0b       	sbc	r23, r19
    431e:	84 0b       	sbc	r24, r20
    4320:	ba f0       	brmi	.+46     	; 0x4350 <__addsf3x+0x98>
    4322:	91 50       	subi	r25, 0x01	; 1
    4324:	a1 f0       	breq	.+40     	; 0x434e <__addsf3x+0x96>
    4326:	ff 0f       	add	r31, r31
    4328:	bb 1f       	adc	r27, r27
    432a:	66 1f       	adc	r22, r22
    432c:	77 1f       	adc	r23, r23
    432e:	88 1f       	adc	r24, r24
    4330:	c2 f7       	brpl	.-16     	; 0x4322 <__addsf3x+0x6a>
    4332:	0e c0       	rjmp	.+28     	; 0x4350 <__addsf3x+0x98>
    4334:	ba 0f       	add	r27, r26
    4336:	62 1f       	adc	r22, r18
    4338:	73 1f       	adc	r23, r19
    433a:	84 1f       	adc	r24, r20
    433c:	48 f4       	brcc	.+18     	; 0x4350 <__addsf3x+0x98>
    433e:	87 95       	ror	r24
    4340:	77 95       	ror	r23
    4342:	67 95       	ror	r22
    4344:	b7 95       	ror	r27
    4346:	f7 95       	ror	r31
    4348:	9e 3f       	cpi	r25, 0xFE	; 254
    434a:	08 f0       	brcs	.+2      	; 0x434e <__addsf3x+0x96>
    434c:	b3 cf       	rjmp	.-154    	; 0x42b4 <__addsf3+0x1e>
    434e:	93 95       	inc	r25
    4350:	88 0f       	add	r24, r24
    4352:	08 f0       	brcs	.+2      	; 0x4356 <__addsf3x+0x9e>
    4354:	99 27       	eor	r25, r25
    4356:	ee 0f       	add	r30, r30
    4358:	97 95       	ror	r25
    435a:	87 95       	ror	r24
    435c:	08 95       	ret

0000435e <__cmpsf2>:
    435e:	d9 d0       	rcall	.+434    	; 0x4512 <__fp_cmp>
    4360:	08 f4       	brcc	.+2      	; 0x4364 <__cmpsf2+0x6>
    4362:	81 e0       	ldi	r24, 0x01	; 1
    4364:	08 95       	ret

00004366 <__divsf3>:
    4366:	0c d0       	rcall	.+24     	; 0x4380 <__divsf3x>
    4368:	34 c1       	rjmp	.+616    	; 0x45d2 <__fp_round>
    436a:	2c d1       	rcall	.+600    	; 0x45c4 <__fp_pscB>
    436c:	40 f0       	brcs	.+16     	; 0x437e <__divsf3+0x18>
    436e:	23 d1       	rcall	.+582    	; 0x45b6 <__fp_pscA>
    4370:	30 f0       	brcs	.+12     	; 0x437e <__divsf3+0x18>
    4372:	21 f4       	brne	.+8      	; 0x437c <__divsf3+0x16>
    4374:	5f 3f       	cpi	r21, 0xFF	; 255
    4376:	19 f0       	breq	.+6      	; 0x437e <__divsf3+0x18>
    4378:	f0 c0       	rjmp	.+480    	; 0x455a <__fp_inf>
    437a:	51 11       	cpse	r21, r1
    437c:	5e c1       	rjmp	.+700    	; 0x463a <__fp_szero>
    437e:	f3 c0       	rjmp	.+486    	; 0x4566 <__fp_nan>

00004380 <__divsf3x>:
    4380:	39 d1       	rcall	.+626    	; 0x45f4 <__fp_split3>
    4382:	98 f3       	brcs	.-26     	; 0x436a <__divsf3+0x4>

00004384 <__divsf3_pse>:
    4384:	99 23       	and	r25, r25
    4386:	c9 f3       	breq	.-14     	; 0x437a <__divsf3+0x14>
    4388:	55 23       	and	r21, r21
    438a:	b1 f3       	breq	.-20     	; 0x4378 <__divsf3+0x12>
    438c:	95 1b       	sub	r25, r21
    438e:	55 0b       	sbc	r21, r21
    4390:	bb 27       	eor	r27, r27
    4392:	aa 27       	eor	r26, r26
    4394:	62 17       	cp	r22, r18
    4396:	73 07       	cpc	r23, r19
    4398:	84 07       	cpc	r24, r20
    439a:	38 f0       	brcs	.+14     	; 0x43aa <__divsf3_pse+0x26>
    439c:	9f 5f       	subi	r25, 0xFF	; 255
    439e:	5f 4f       	sbci	r21, 0xFF	; 255
    43a0:	22 0f       	add	r18, r18
    43a2:	33 1f       	adc	r19, r19
    43a4:	44 1f       	adc	r20, r20
    43a6:	aa 1f       	adc	r26, r26
    43a8:	a9 f3       	breq	.-22     	; 0x4394 <__divsf3_pse+0x10>
    43aa:	33 d0       	rcall	.+102    	; 0x4412 <__divsf3_pse+0x8e>
    43ac:	0e 2e       	mov	r0, r30
    43ae:	3a f0       	brmi	.+14     	; 0x43be <__divsf3_pse+0x3a>
    43b0:	e0 e8       	ldi	r30, 0x80	; 128
    43b2:	30 d0       	rcall	.+96     	; 0x4414 <__divsf3_pse+0x90>
    43b4:	91 50       	subi	r25, 0x01	; 1
    43b6:	50 40       	sbci	r21, 0x00	; 0
    43b8:	e6 95       	lsr	r30
    43ba:	00 1c       	adc	r0, r0
    43bc:	ca f7       	brpl	.-14     	; 0x43b0 <__divsf3_pse+0x2c>
    43be:	29 d0       	rcall	.+82     	; 0x4412 <__divsf3_pse+0x8e>
    43c0:	fe 2f       	mov	r31, r30
    43c2:	27 d0       	rcall	.+78     	; 0x4412 <__divsf3_pse+0x8e>
    43c4:	66 0f       	add	r22, r22
    43c6:	77 1f       	adc	r23, r23
    43c8:	88 1f       	adc	r24, r24
    43ca:	bb 1f       	adc	r27, r27
    43cc:	26 17       	cp	r18, r22
    43ce:	37 07       	cpc	r19, r23
    43d0:	48 07       	cpc	r20, r24
    43d2:	ab 07       	cpc	r26, r27
    43d4:	b0 e8       	ldi	r27, 0x80	; 128
    43d6:	09 f0       	breq	.+2      	; 0x43da <__divsf3_pse+0x56>
    43d8:	bb 0b       	sbc	r27, r27
    43da:	80 2d       	mov	r24, r0
    43dc:	bf 01       	movw	r22, r30
    43de:	ff 27       	eor	r31, r31
    43e0:	93 58       	subi	r25, 0x83	; 131
    43e2:	5f 4f       	sbci	r21, 0xFF	; 255
    43e4:	2a f0       	brmi	.+10     	; 0x43f0 <__divsf3_pse+0x6c>
    43e6:	9e 3f       	cpi	r25, 0xFE	; 254
    43e8:	51 05       	cpc	r21, r1
    43ea:	68 f0       	brcs	.+26     	; 0x4406 <__divsf3_pse+0x82>
    43ec:	b6 c0       	rjmp	.+364    	; 0x455a <__fp_inf>
    43ee:	25 c1       	rjmp	.+586    	; 0x463a <__fp_szero>
    43f0:	5f 3f       	cpi	r21, 0xFF	; 255
    43f2:	ec f3       	brlt	.-6      	; 0x43ee <__divsf3_pse+0x6a>
    43f4:	98 3e       	cpi	r25, 0xE8	; 232
    43f6:	dc f3       	brlt	.-10     	; 0x43ee <__divsf3_pse+0x6a>
    43f8:	86 95       	lsr	r24
    43fa:	77 95       	ror	r23
    43fc:	67 95       	ror	r22
    43fe:	b7 95       	ror	r27
    4400:	f7 95       	ror	r31
    4402:	9f 5f       	subi	r25, 0xFF	; 255
    4404:	c9 f7       	brne	.-14     	; 0x43f8 <__divsf3_pse+0x74>
    4406:	88 0f       	add	r24, r24
    4408:	91 1d       	adc	r25, r1
    440a:	96 95       	lsr	r25
    440c:	87 95       	ror	r24
    440e:	97 f9       	bld	r25, 7
    4410:	08 95       	ret
    4412:	e1 e0       	ldi	r30, 0x01	; 1
    4414:	66 0f       	add	r22, r22
    4416:	77 1f       	adc	r23, r23
    4418:	88 1f       	adc	r24, r24
    441a:	bb 1f       	adc	r27, r27
    441c:	62 17       	cp	r22, r18
    441e:	73 07       	cpc	r23, r19
    4420:	84 07       	cpc	r24, r20
    4422:	ba 07       	cpc	r27, r26
    4424:	20 f0       	brcs	.+8      	; 0x442e <__divsf3_pse+0xaa>
    4426:	62 1b       	sub	r22, r18
    4428:	73 0b       	sbc	r23, r19
    442a:	84 0b       	sbc	r24, r20
    442c:	ba 0b       	sbc	r27, r26
    442e:	ee 1f       	adc	r30, r30
    4430:	88 f7       	brcc	.-30     	; 0x4414 <__divsf3_pse+0x90>
    4432:	e0 95       	com	r30
    4434:	08 95       	ret

00004436 <__fixsfsi>:
    4436:	04 d0       	rcall	.+8      	; 0x4440 <__fixunssfsi>
    4438:	68 94       	set
    443a:	b1 11       	cpse	r27, r1
    443c:	fe c0       	rjmp	.+508    	; 0x463a <__fp_szero>
    443e:	08 95       	ret

00004440 <__fixunssfsi>:
    4440:	e1 d0       	rcall	.+450    	; 0x4604 <__fp_splitA>
    4442:	88 f0       	brcs	.+34     	; 0x4466 <__fixunssfsi+0x26>
    4444:	9f 57       	subi	r25, 0x7F	; 127
    4446:	90 f0       	brcs	.+36     	; 0x446c <__fixunssfsi+0x2c>
    4448:	b9 2f       	mov	r27, r25
    444a:	99 27       	eor	r25, r25
    444c:	b7 51       	subi	r27, 0x17	; 23
    444e:	a0 f0       	brcs	.+40     	; 0x4478 <__fixunssfsi+0x38>
    4450:	d1 f0       	breq	.+52     	; 0x4486 <__fixunssfsi+0x46>
    4452:	66 0f       	add	r22, r22
    4454:	77 1f       	adc	r23, r23
    4456:	88 1f       	adc	r24, r24
    4458:	99 1f       	adc	r25, r25
    445a:	1a f0       	brmi	.+6      	; 0x4462 <__fixunssfsi+0x22>
    445c:	ba 95       	dec	r27
    445e:	c9 f7       	brne	.-14     	; 0x4452 <__fixunssfsi+0x12>
    4460:	12 c0       	rjmp	.+36     	; 0x4486 <__fixunssfsi+0x46>
    4462:	b1 30       	cpi	r27, 0x01	; 1
    4464:	81 f0       	breq	.+32     	; 0x4486 <__fixunssfsi+0x46>
    4466:	e8 d0       	rcall	.+464    	; 0x4638 <__fp_zero>
    4468:	b1 e0       	ldi	r27, 0x01	; 1
    446a:	08 95       	ret
    446c:	e5 c0       	rjmp	.+458    	; 0x4638 <__fp_zero>
    446e:	67 2f       	mov	r22, r23
    4470:	78 2f       	mov	r23, r24
    4472:	88 27       	eor	r24, r24
    4474:	b8 5f       	subi	r27, 0xF8	; 248
    4476:	39 f0       	breq	.+14     	; 0x4486 <__fixunssfsi+0x46>
    4478:	b9 3f       	cpi	r27, 0xF9	; 249
    447a:	cc f3       	brlt	.-14     	; 0x446e <__fixunssfsi+0x2e>
    447c:	86 95       	lsr	r24
    447e:	77 95       	ror	r23
    4480:	67 95       	ror	r22
    4482:	b3 95       	inc	r27
    4484:	d9 f7       	brne	.-10     	; 0x447c <__fixunssfsi+0x3c>
    4486:	3e f4       	brtc	.+14     	; 0x4496 <__fixunssfsi+0x56>
    4488:	90 95       	com	r25
    448a:	80 95       	com	r24
    448c:	70 95       	com	r23
    448e:	61 95       	neg	r22
    4490:	7f 4f       	sbci	r23, 0xFF	; 255
    4492:	8f 4f       	sbci	r24, 0xFF	; 255
    4494:	9f 4f       	sbci	r25, 0xFF	; 255
    4496:	08 95       	ret

00004498 <__floatunsisf>:
    4498:	e8 94       	clt
    449a:	09 c0       	rjmp	.+18     	; 0x44ae <__floatsisf+0x12>

0000449c <__floatsisf>:
    449c:	97 fb       	bst	r25, 7
    449e:	3e f4       	brtc	.+14     	; 0x44ae <__floatsisf+0x12>
    44a0:	90 95       	com	r25
    44a2:	80 95       	com	r24
    44a4:	70 95       	com	r23
    44a6:	61 95       	neg	r22
    44a8:	7f 4f       	sbci	r23, 0xFF	; 255
    44aa:	8f 4f       	sbci	r24, 0xFF	; 255
    44ac:	9f 4f       	sbci	r25, 0xFF	; 255
    44ae:	99 23       	and	r25, r25
    44b0:	a9 f0       	breq	.+42     	; 0x44dc <__floatsisf+0x40>
    44b2:	f9 2f       	mov	r31, r25
    44b4:	96 e9       	ldi	r25, 0x96	; 150
    44b6:	bb 27       	eor	r27, r27
    44b8:	93 95       	inc	r25
    44ba:	f6 95       	lsr	r31
    44bc:	87 95       	ror	r24
    44be:	77 95       	ror	r23
    44c0:	67 95       	ror	r22
    44c2:	b7 95       	ror	r27
    44c4:	f1 11       	cpse	r31, r1
    44c6:	f8 cf       	rjmp	.-16     	; 0x44b8 <__floatsisf+0x1c>
    44c8:	fa f4       	brpl	.+62     	; 0x4508 <__floatsisf+0x6c>
    44ca:	bb 0f       	add	r27, r27
    44cc:	11 f4       	brne	.+4      	; 0x44d2 <__floatsisf+0x36>
    44ce:	60 ff       	sbrs	r22, 0
    44d0:	1b c0       	rjmp	.+54     	; 0x4508 <__floatsisf+0x6c>
    44d2:	6f 5f       	subi	r22, 0xFF	; 255
    44d4:	7f 4f       	sbci	r23, 0xFF	; 255
    44d6:	8f 4f       	sbci	r24, 0xFF	; 255
    44d8:	9f 4f       	sbci	r25, 0xFF	; 255
    44da:	16 c0       	rjmp	.+44     	; 0x4508 <__floatsisf+0x6c>
    44dc:	88 23       	and	r24, r24
    44de:	11 f0       	breq	.+4      	; 0x44e4 <__floatsisf+0x48>
    44e0:	96 e9       	ldi	r25, 0x96	; 150
    44e2:	11 c0       	rjmp	.+34     	; 0x4506 <__floatsisf+0x6a>
    44e4:	77 23       	and	r23, r23
    44e6:	21 f0       	breq	.+8      	; 0x44f0 <__floatsisf+0x54>
    44e8:	9e e8       	ldi	r25, 0x8E	; 142
    44ea:	87 2f       	mov	r24, r23
    44ec:	76 2f       	mov	r23, r22
    44ee:	05 c0       	rjmp	.+10     	; 0x44fa <__floatsisf+0x5e>
    44f0:	66 23       	and	r22, r22
    44f2:	71 f0       	breq	.+28     	; 0x4510 <__floatsisf+0x74>
    44f4:	96 e8       	ldi	r25, 0x86	; 134
    44f6:	86 2f       	mov	r24, r22
    44f8:	70 e0       	ldi	r23, 0x00	; 0
    44fa:	60 e0       	ldi	r22, 0x00	; 0
    44fc:	2a f0       	brmi	.+10     	; 0x4508 <__floatsisf+0x6c>
    44fe:	9a 95       	dec	r25
    4500:	66 0f       	add	r22, r22
    4502:	77 1f       	adc	r23, r23
    4504:	88 1f       	adc	r24, r24
    4506:	da f7       	brpl	.-10     	; 0x44fe <__floatsisf+0x62>
    4508:	88 0f       	add	r24, r24
    450a:	96 95       	lsr	r25
    450c:	87 95       	ror	r24
    450e:	97 f9       	bld	r25, 7
    4510:	08 95       	ret

00004512 <__fp_cmp>:
    4512:	99 0f       	add	r25, r25
    4514:	00 08       	sbc	r0, r0
    4516:	55 0f       	add	r21, r21
    4518:	aa 0b       	sbc	r26, r26
    451a:	e0 e8       	ldi	r30, 0x80	; 128
    451c:	fe ef       	ldi	r31, 0xFE	; 254
    451e:	16 16       	cp	r1, r22
    4520:	17 06       	cpc	r1, r23
    4522:	e8 07       	cpc	r30, r24
    4524:	f9 07       	cpc	r31, r25
    4526:	c0 f0       	brcs	.+48     	; 0x4558 <__fp_cmp+0x46>
    4528:	12 16       	cp	r1, r18
    452a:	13 06       	cpc	r1, r19
    452c:	e4 07       	cpc	r30, r20
    452e:	f5 07       	cpc	r31, r21
    4530:	98 f0       	brcs	.+38     	; 0x4558 <__fp_cmp+0x46>
    4532:	62 1b       	sub	r22, r18
    4534:	73 0b       	sbc	r23, r19
    4536:	84 0b       	sbc	r24, r20
    4538:	95 0b       	sbc	r25, r21
    453a:	39 f4       	brne	.+14     	; 0x454a <__fp_cmp+0x38>
    453c:	0a 26       	eor	r0, r26
    453e:	61 f0       	breq	.+24     	; 0x4558 <__fp_cmp+0x46>
    4540:	23 2b       	or	r18, r19
    4542:	24 2b       	or	r18, r20
    4544:	25 2b       	or	r18, r21
    4546:	21 f4       	brne	.+8      	; 0x4550 <__fp_cmp+0x3e>
    4548:	08 95       	ret
    454a:	0a 26       	eor	r0, r26
    454c:	09 f4       	brne	.+2      	; 0x4550 <__fp_cmp+0x3e>
    454e:	a1 40       	sbci	r26, 0x01	; 1
    4550:	a6 95       	lsr	r26
    4552:	8f ef       	ldi	r24, 0xFF	; 255
    4554:	81 1d       	adc	r24, r1
    4556:	81 1d       	adc	r24, r1
    4558:	08 95       	ret

0000455a <__fp_inf>:
    455a:	97 f9       	bld	r25, 7
    455c:	9f 67       	ori	r25, 0x7F	; 127
    455e:	80 e8       	ldi	r24, 0x80	; 128
    4560:	70 e0       	ldi	r23, 0x00	; 0
    4562:	60 e0       	ldi	r22, 0x00	; 0
    4564:	08 95       	ret

00004566 <__fp_nan>:
    4566:	9f ef       	ldi	r25, 0xFF	; 255
    4568:	80 ec       	ldi	r24, 0xC0	; 192
    456a:	08 95       	ret

0000456c <__fp_powser>:
    456c:	df 93       	push	r29
    456e:	cf 93       	push	r28
    4570:	1f 93       	push	r17
    4572:	0f 93       	push	r16
    4574:	ff 92       	push	r15
    4576:	ef 92       	push	r14
    4578:	df 92       	push	r13
    457a:	7b 01       	movw	r14, r22
    457c:	8c 01       	movw	r16, r24
    457e:	68 94       	set
    4580:	05 c0       	rjmp	.+10     	; 0x458c <__fp_powser+0x20>
    4582:	da 2e       	mov	r13, r26
    4584:	ef 01       	movw	r28, r30
    4586:	76 d0       	rcall	.+236    	; 0x4674 <__mulsf3x>
    4588:	fe 01       	movw	r30, r28
    458a:	e8 94       	clt
    458c:	a5 91       	lpm	r26, Z+
    458e:	25 91       	lpm	r18, Z+
    4590:	35 91       	lpm	r19, Z+
    4592:	45 91       	lpm	r20, Z+
    4594:	55 91       	lpm	r21, Z+
    4596:	ae f3       	brts	.-22     	; 0x4582 <__fp_powser+0x16>
    4598:	ef 01       	movw	r28, r30
    459a:	8e de       	rcall	.-740    	; 0x42b8 <__addsf3x>
    459c:	fe 01       	movw	r30, r28
    459e:	97 01       	movw	r18, r14
    45a0:	a8 01       	movw	r20, r16
    45a2:	da 94       	dec	r13
    45a4:	79 f7       	brne	.-34     	; 0x4584 <__fp_powser+0x18>
    45a6:	df 90       	pop	r13
    45a8:	ef 90       	pop	r14
    45aa:	ff 90       	pop	r15
    45ac:	0f 91       	pop	r16
    45ae:	1f 91       	pop	r17
    45b0:	cf 91       	pop	r28
    45b2:	df 91       	pop	r29
    45b4:	08 95       	ret

000045b6 <__fp_pscA>:
    45b6:	00 24       	eor	r0, r0
    45b8:	0a 94       	dec	r0
    45ba:	16 16       	cp	r1, r22
    45bc:	17 06       	cpc	r1, r23
    45be:	18 06       	cpc	r1, r24
    45c0:	09 06       	cpc	r0, r25
    45c2:	08 95       	ret

000045c4 <__fp_pscB>:
    45c4:	00 24       	eor	r0, r0
    45c6:	0a 94       	dec	r0
    45c8:	12 16       	cp	r1, r18
    45ca:	13 06       	cpc	r1, r19
    45cc:	14 06       	cpc	r1, r20
    45ce:	05 06       	cpc	r0, r21
    45d0:	08 95       	ret

000045d2 <__fp_round>:
    45d2:	09 2e       	mov	r0, r25
    45d4:	03 94       	inc	r0
    45d6:	00 0c       	add	r0, r0
    45d8:	11 f4       	brne	.+4      	; 0x45de <__fp_round+0xc>
    45da:	88 23       	and	r24, r24
    45dc:	52 f0       	brmi	.+20     	; 0x45f2 <__fp_round+0x20>
    45de:	bb 0f       	add	r27, r27
    45e0:	40 f4       	brcc	.+16     	; 0x45f2 <__fp_round+0x20>
    45e2:	bf 2b       	or	r27, r31
    45e4:	11 f4       	brne	.+4      	; 0x45ea <__fp_round+0x18>
    45e6:	60 ff       	sbrs	r22, 0
    45e8:	04 c0       	rjmp	.+8      	; 0x45f2 <__fp_round+0x20>
    45ea:	6f 5f       	subi	r22, 0xFF	; 255
    45ec:	7f 4f       	sbci	r23, 0xFF	; 255
    45ee:	8f 4f       	sbci	r24, 0xFF	; 255
    45f0:	9f 4f       	sbci	r25, 0xFF	; 255
    45f2:	08 95       	ret

000045f4 <__fp_split3>:
    45f4:	57 fd       	sbrc	r21, 7
    45f6:	90 58       	subi	r25, 0x80	; 128
    45f8:	44 0f       	add	r20, r20
    45fa:	55 1f       	adc	r21, r21
    45fc:	59 f0       	breq	.+22     	; 0x4614 <__fp_splitA+0x10>
    45fe:	5f 3f       	cpi	r21, 0xFF	; 255
    4600:	71 f0       	breq	.+28     	; 0x461e <__fp_splitA+0x1a>
    4602:	47 95       	ror	r20

00004604 <__fp_splitA>:
    4604:	88 0f       	add	r24, r24
    4606:	97 fb       	bst	r25, 7
    4608:	99 1f       	adc	r25, r25
    460a:	61 f0       	breq	.+24     	; 0x4624 <__fp_splitA+0x20>
    460c:	9f 3f       	cpi	r25, 0xFF	; 255
    460e:	79 f0       	breq	.+30     	; 0x462e <__fp_splitA+0x2a>
    4610:	87 95       	ror	r24
    4612:	08 95       	ret
    4614:	12 16       	cp	r1, r18
    4616:	13 06       	cpc	r1, r19
    4618:	14 06       	cpc	r1, r20
    461a:	55 1f       	adc	r21, r21
    461c:	f2 cf       	rjmp	.-28     	; 0x4602 <__fp_split3+0xe>
    461e:	46 95       	lsr	r20
    4620:	f1 df       	rcall	.-30     	; 0x4604 <__fp_splitA>
    4622:	08 c0       	rjmp	.+16     	; 0x4634 <__fp_splitA+0x30>
    4624:	16 16       	cp	r1, r22
    4626:	17 06       	cpc	r1, r23
    4628:	18 06       	cpc	r1, r24
    462a:	99 1f       	adc	r25, r25
    462c:	f1 cf       	rjmp	.-30     	; 0x4610 <__fp_splitA+0xc>
    462e:	86 95       	lsr	r24
    4630:	71 05       	cpc	r23, r1
    4632:	61 05       	cpc	r22, r1
    4634:	08 94       	sec
    4636:	08 95       	ret

00004638 <__fp_zero>:
    4638:	e8 94       	clt

0000463a <__fp_szero>:
    463a:	bb 27       	eor	r27, r27
    463c:	66 27       	eor	r22, r22
    463e:	77 27       	eor	r23, r23
    4640:	cb 01       	movw	r24, r22
    4642:	97 f9       	bld	r25, 7
    4644:	08 95       	ret

00004646 <__gesf2>:
    4646:	65 df       	rcall	.-310    	; 0x4512 <__fp_cmp>
    4648:	08 f4       	brcc	.+2      	; 0x464c <__gesf2+0x6>
    464a:	8f ef       	ldi	r24, 0xFF	; 255
    464c:	08 95       	ret

0000464e <inverse>:
    464e:	9b 01       	movw	r18, r22
    4650:	ac 01       	movw	r20, r24
    4652:	60 e0       	ldi	r22, 0x00	; 0
    4654:	70 e0       	ldi	r23, 0x00	; 0
    4656:	80 e8       	ldi	r24, 0x80	; 128
    4658:	9f e3       	ldi	r25, 0x3F	; 63
    465a:	85 ce       	rjmp	.-758    	; 0x4366 <__divsf3>

0000465c <__mulsf3>:
    465c:	0b d0       	rcall	.+22     	; 0x4674 <__mulsf3x>
    465e:	b9 cf       	rjmp	.-142    	; 0x45d2 <__fp_round>
    4660:	aa df       	rcall	.-172    	; 0x45b6 <__fp_pscA>
    4662:	28 f0       	brcs	.+10     	; 0x466e <__mulsf3+0x12>
    4664:	af df       	rcall	.-162    	; 0x45c4 <__fp_pscB>
    4666:	18 f0       	brcs	.+6      	; 0x466e <__mulsf3+0x12>
    4668:	95 23       	and	r25, r21
    466a:	09 f0       	breq	.+2      	; 0x466e <__mulsf3+0x12>
    466c:	76 cf       	rjmp	.-276    	; 0x455a <__fp_inf>
    466e:	7b cf       	rjmp	.-266    	; 0x4566 <__fp_nan>
    4670:	11 24       	eor	r1, r1
    4672:	e3 cf       	rjmp	.-58     	; 0x463a <__fp_szero>

00004674 <__mulsf3x>:
    4674:	bf df       	rcall	.-130    	; 0x45f4 <__fp_split3>
    4676:	a0 f3       	brcs	.-24     	; 0x4660 <__mulsf3+0x4>

00004678 <__mulsf3_pse>:
    4678:	95 9f       	mul	r25, r21
    467a:	d1 f3       	breq	.-12     	; 0x4670 <__mulsf3+0x14>
    467c:	95 0f       	add	r25, r21
    467e:	50 e0       	ldi	r21, 0x00	; 0
    4680:	55 1f       	adc	r21, r21
    4682:	62 9f       	mul	r22, r18
    4684:	f0 01       	movw	r30, r0
    4686:	72 9f       	mul	r23, r18
    4688:	bb 27       	eor	r27, r27
    468a:	f0 0d       	add	r31, r0
    468c:	b1 1d       	adc	r27, r1
    468e:	63 9f       	mul	r22, r19
    4690:	aa 27       	eor	r26, r26
    4692:	f0 0d       	add	r31, r0
    4694:	b1 1d       	adc	r27, r1
    4696:	aa 1f       	adc	r26, r26
    4698:	64 9f       	mul	r22, r20
    469a:	66 27       	eor	r22, r22
    469c:	b0 0d       	add	r27, r0
    469e:	a1 1d       	adc	r26, r1
    46a0:	66 1f       	adc	r22, r22
    46a2:	82 9f       	mul	r24, r18
    46a4:	22 27       	eor	r18, r18
    46a6:	b0 0d       	add	r27, r0
    46a8:	a1 1d       	adc	r26, r1
    46aa:	62 1f       	adc	r22, r18
    46ac:	73 9f       	mul	r23, r19
    46ae:	b0 0d       	add	r27, r0
    46b0:	a1 1d       	adc	r26, r1
    46b2:	62 1f       	adc	r22, r18
    46b4:	83 9f       	mul	r24, r19
    46b6:	a0 0d       	add	r26, r0
    46b8:	61 1d       	adc	r22, r1
    46ba:	22 1f       	adc	r18, r18
    46bc:	74 9f       	mul	r23, r20
    46be:	33 27       	eor	r19, r19
    46c0:	a0 0d       	add	r26, r0
    46c2:	61 1d       	adc	r22, r1
    46c4:	23 1f       	adc	r18, r19
    46c6:	84 9f       	mul	r24, r20
    46c8:	60 0d       	add	r22, r0
    46ca:	21 1d       	adc	r18, r1
    46cc:	82 2f       	mov	r24, r18
    46ce:	76 2f       	mov	r23, r22
    46d0:	6a 2f       	mov	r22, r26
    46d2:	11 24       	eor	r1, r1
    46d4:	9f 57       	subi	r25, 0x7F	; 127
    46d6:	50 40       	sbci	r21, 0x00	; 0
    46d8:	8a f0       	brmi	.+34     	; 0x46fc <__mulsf3_pse+0x84>
    46da:	e1 f0       	breq	.+56     	; 0x4714 <__mulsf3_pse+0x9c>
    46dc:	88 23       	and	r24, r24
    46de:	4a f0       	brmi	.+18     	; 0x46f2 <__mulsf3_pse+0x7a>
    46e0:	ee 0f       	add	r30, r30
    46e2:	ff 1f       	adc	r31, r31
    46e4:	bb 1f       	adc	r27, r27
    46e6:	66 1f       	adc	r22, r22
    46e8:	77 1f       	adc	r23, r23
    46ea:	88 1f       	adc	r24, r24
    46ec:	91 50       	subi	r25, 0x01	; 1
    46ee:	50 40       	sbci	r21, 0x00	; 0
    46f0:	a9 f7       	brne	.-22     	; 0x46dc <__mulsf3_pse+0x64>
    46f2:	9e 3f       	cpi	r25, 0xFE	; 254
    46f4:	51 05       	cpc	r21, r1
    46f6:	70 f0       	brcs	.+28     	; 0x4714 <__mulsf3_pse+0x9c>
    46f8:	30 cf       	rjmp	.-416    	; 0x455a <__fp_inf>
    46fa:	9f cf       	rjmp	.-194    	; 0x463a <__fp_szero>
    46fc:	5f 3f       	cpi	r21, 0xFF	; 255
    46fe:	ec f3       	brlt	.-6      	; 0x46fa <__mulsf3_pse+0x82>
    4700:	98 3e       	cpi	r25, 0xE8	; 232
    4702:	dc f3       	brlt	.-10     	; 0x46fa <__mulsf3_pse+0x82>
    4704:	86 95       	lsr	r24
    4706:	77 95       	ror	r23
    4708:	67 95       	ror	r22
    470a:	b7 95       	ror	r27
    470c:	f7 95       	ror	r31
    470e:	e7 95       	ror	r30
    4710:	9f 5f       	subi	r25, 0xFF	; 255
    4712:	c1 f7       	brne	.-16     	; 0x4704 <__mulsf3_pse+0x8c>
    4714:	fe 2b       	or	r31, r30
    4716:	88 0f       	add	r24, r24
    4718:	91 1d       	adc	r25, r1
    471a:	96 95       	lsr	r25
    471c:	87 95       	ror	r24
    471e:	97 f9       	bld	r25, 7
    4720:	08 95       	ret

00004722 <__fp_mpack>:
    4722:	9f 3f       	cpi	r25, 0xFF	; 255
    4724:	31 f0       	breq	.+12     	; 0x4732 <__fp_mpack_finite+0xc>

00004726 <__fp_mpack_finite>:
    4726:	91 50       	subi	r25, 0x01	; 1
    4728:	20 f4       	brcc	.+8      	; 0x4732 <__fp_mpack_finite+0xc>
    472a:	87 95       	ror	r24
    472c:	77 95       	ror	r23
    472e:	67 95       	ror	r22
    4730:	b7 95       	ror	r27
    4732:	88 0f       	add	r24, r24
    4734:	91 1d       	adc	r25, r1
    4736:	96 95       	lsr	r25
    4738:	87 95       	ror	r24
    473a:	97 f9       	bld	r25, 7
    473c:	08 95       	ret

0000473e <vfprintf>:
    473e:	a3 e1       	ldi	r26, 0x13	; 19
    4740:	b0 e0       	ldi	r27, 0x00	; 0
    4742:	e5 ea       	ldi	r30, 0xA5	; 165
    4744:	f3 e2       	ldi	r31, 0x23	; 35
    4746:	0c 94 d0 28 	jmp	0x51a0	; 0x51a0 <__prologue_saves__>
    474a:	7c 01       	movw	r14, r24
    474c:	1b 01       	movw	r2, r22
    474e:	6a 01       	movw	r12, r20
    4750:	fc 01       	movw	r30, r24
    4752:	17 82       	std	Z+7, r1	; 0x07
    4754:	16 82       	std	Z+6, r1	; 0x06
    4756:	83 81       	ldd	r24, Z+3	; 0x03
    4758:	81 ff       	sbrs	r24, 1
    475a:	66 c3       	rjmp	.+1740   	; 0x4e28 <vfprintf+0x6ea>
    475c:	be 01       	movw	r22, r28
    475e:	6f 5f       	subi	r22, 0xFF	; 255
    4760:	7f 4f       	sbci	r23, 0xFF	; 255
    4762:	4b 01       	movw	r8, r22
    4764:	f7 01       	movw	r30, r14
    4766:	93 81       	ldd	r25, Z+3	; 0x03
    4768:	f1 01       	movw	r30, r2
    476a:	93 fd       	sbrc	r25, 3
    476c:	85 91       	lpm	r24, Z+
    476e:	93 ff       	sbrs	r25, 3
    4770:	81 91       	ld	r24, Z+
    4772:	1f 01       	movw	r2, r30
    4774:	88 23       	and	r24, r24
    4776:	09 f4       	brne	.+2      	; 0x477a <vfprintf+0x3c>
    4778:	53 c3       	rjmp	.+1702   	; 0x4e20 <vfprintf+0x6e2>
    477a:	85 32       	cpi	r24, 0x25	; 37
    477c:	39 f4       	brne	.+14     	; 0x478c <vfprintf+0x4e>
    477e:	93 fd       	sbrc	r25, 3
    4780:	85 91       	lpm	r24, Z+
    4782:	93 ff       	sbrs	r25, 3
    4784:	81 91       	ld	r24, Z+
    4786:	1f 01       	movw	r2, r30
    4788:	85 32       	cpi	r24, 0x25	; 37
    478a:	39 f4       	brne	.+14     	; 0x479a <vfprintf+0x5c>
    478c:	b7 01       	movw	r22, r14
    478e:	90 e0       	ldi	r25, 0x00	; 0
    4790:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4794:	56 01       	movw	r10, r12
    4796:	65 01       	movw	r12, r10
    4798:	e5 cf       	rjmp	.-54     	; 0x4764 <vfprintf+0x26>
    479a:	10 e0       	ldi	r17, 0x00	; 0
    479c:	51 2c       	mov	r5, r1
    479e:	20 e0       	ldi	r18, 0x00	; 0
    47a0:	20 32       	cpi	r18, 0x20	; 32
    47a2:	a0 f4       	brcc	.+40     	; 0x47cc <vfprintf+0x8e>
    47a4:	8b 32       	cpi	r24, 0x2B	; 43
    47a6:	69 f0       	breq	.+26     	; 0x47c2 <vfprintf+0x84>
    47a8:	30 f4       	brcc	.+12     	; 0x47b6 <vfprintf+0x78>
    47aa:	80 32       	cpi	r24, 0x20	; 32
    47ac:	59 f0       	breq	.+22     	; 0x47c4 <vfprintf+0x86>
    47ae:	83 32       	cpi	r24, 0x23	; 35
    47b0:	69 f4       	brne	.+26     	; 0x47cc <vfprintf+0x8e>
    47b2:	20 61       	ori	r18, 0x10	; 16
    47b4:	2c c0       	rjmp	.+88     	; 0x480e <vfprintf+0xd0>
    47b6:	8d 32       	cpi	r24, 0x2D	; 45
    47b8:	39 f0       	breq	.+14     	; 0x47c8 <vfprintf+0x8a>
    47ba:	80 33       	cpi	r24, 0x30	; 48
    47bc:	39 f4       	brne	.+14     	; 0x47cc <vfprintf+0x8e>
    47be:	21 60       	ori	r18, 0x01	; 1
    47c0:	26 c0       	rjmp	.+76     	; 0x480e <vfprintf+0xd0>
    47c2:	22 60       	ori	r18, 0x02	; 2
    47c4:	24 60       	ori	r18, 0x04	; 4
    47c6:	23 c0       	rjmp	.+70     	; 0x480e <vfprintf+0xd0>
    47c8:	28 60       	ori	r18, 0x08	; 8
    47ca:	21 c0       	rjmp	.+66     	; 0x480e <vfprintf+0xd0>
    47cc:	27 fd       	sbrc	r18, 7
    47ce:	27 c0       	rjmp	.+78     	; 0x481e <vfprintf+0xe0>
    47d0:	30 ed       	ldi	r19, 0xD0	; 208
    47d2:	38 0f       	add	r19, r24
    47d4:	3a 30       	cpi	r19, 0x0A	; 10
    47d6:	78 f4       	brcc	.+30     	; 0x47f6 <vfprintf+0xb8>
    47d8:	26 ff       	sbrs	r18, 6
    47da:	06 c0       	rjmp	.+12     	; 0x47e8 <vfprintf+0xaa>
    47dc:	fa e0       	ldi	r31, 0x0A	; 10
    47de:	1f 9f       	mul	r17, r31
    47e0:	30 0d       	add	r19, r0
    47e2:	11 24       	eor	r1, r1
    47e4:	13 2f       	mov	r17, r19
    47e6:	13 c0       	rjmp	.+38     	; 0x480e <vfprintf+0xd0>
    47e8:	6a e0       	ldi	r22, 0x0A	; 10
    47ea:	56 9e       	mul	r5, r22
    47ec:	30 0d       	add	r19, r0
    47ee:	11 24       	eor	r1, r1
    47f0:	53 2e       	mov	r5, r19
    47f2:	20 62       	ori	r18, 0x20	; 32
    47f4:	0c c0       	rjmp	.+24     	; 0x480e <vfprintf+0xd0>
    47f6:	8e 32       	cpi	r24, 0x2E	; 46
    47f8:	21 f4       	brne	.+8      	; 0x4802 <vfprintf+0xc4>
    47fa:	26 fd       	sbrc	r18, 6
    47fc:	11 c3       	rjmp	.+1570   	; 0x4e20 <vfprintf+0x6e2>
    47fe:	20 64       	ori	r18, 0x40	; 64
    4800:	06 c0       	rjmp	.+12     	; 0x480e <vfprintf+0xd0>
    4802:	8c 36       	cpi	r24, 0x6C	; 108
    4804:	11 f4       	brne	.+4      	; 0x480a <vfprintf+0xcc>
    4806:	20 68       	ori	r18, 0x80	; 128
    4808:	02 c0       	rjmp	.+4      	; 0x480e <vfprintf+0xd0>
    480a:	88 36       	cpi	r24, 0x68	; 104
    480c:	41 f4       	brne	.+16     	; 0x481e <vfprintf+0xe0>
    480e:	f1 01       	movw	r30, r2
    4810:	93 fd       	sbrc	r25, 3
    4812:	85 91       	lpm	r24, Z+
    4814:	93 ff       	sbrs	r25, 3
    4816:	81 91       	ld	r24, Z+
    4818:	1f 01       	movw	r2, r30
    481a:	81 11       	cpse	r24, r1
    481c:	c1 cf       	rjmp	.-126    	; 0x47a0 <vfprintf+0x62>
    481e:	9b eb       	ldi	r25, 0xBB	; 187
    4820:	98 0f       	add	r25, r24
    4822:	93 30       	cpi	r25, 0x03	; 3
    4824:	18 f4       	brcc	.+6      	; 0x482c <vfprintf+0xee>
    4826:	20 61       	ori	r18, 0x10	; 16
    4828:	80 5e       	subi	r24, 0xE0	; 224
    482a:	06 c0       	rjmp	.+12     	; 0x4838 <vfprintf+0xfa>
    482c:	9b e9       	ldi	r25, 0x9B	; 155
    482e:	98 0f       	add	r25, r24
    4830:	93 30       	cpi	r25, 0x03	; 3
    4832:	08 f0       	brcs	.+2      	; 0x4836 <vfprintf+0xf8>
    4834:	aa c1       	rjmp	.+852    	; 0x4b8a <vfprintf+0x44c>
    4836:	2f 7e       	andi	r18, 0xEF	; 239
    4838:	26 ff       	sbrs	r18, 6
    483a:	16 e0       	ldi	r17, 0x06	; 6
    483c:	2f 73       	andi	r18, 0x3F	; 63
    483e:	72 2e       	mov	r7, r18
    4840:	85 36       	cpi	r24, 0x65	; 101
    4842:	21 f4       	brne	.+8      	; 0x484c <vfprintf+0x10e>
    4844:	f2 2f       	mov	r31, r18
    4846:	f0 64       	ori	r31, 0x40	; 64
    4848:	7f 2e       	mov	r7, r31
    484a:	08 c0       	rjmp	.+16     	; 0x485c <vfprintf+0x11e>
    484c:	86 36       	cpi	r24, 0x66	; 102
    484e:	21 f4       	brne	.+8      	; 0x4858 <vfprintf+0x11a>
    4850:	62 2f       	mov	r22, r18
    4852:	60 68       	ori	r22, 0x80	; 128
    4854:	76 2e       	mov	r7, r22
    4856:	02 c0       	rjmp	.+4      	; 0x485c <vfprintf+0x11e>
    4858:	11 11       	cpse	r17, r1
    485a:	11 50       	subi	r17, 0x01	; 1
    485c:	77 fe       	sbrs	r7, 7
    485e:	07 c0       	rjmp	.+14     	; 0x486e <vfprintf+0x130>
    4860:	1c 33       	cpi	r17, 0x3C	; 60
    4862:	48 f4       	brcc	.+18     	; 0x4876 <vfprintf+0x138>
    4864:	44 24       	eor	r4, r4
    4866:	43 94       	inc	r4
    4868:	41 0e       	add	r4, r17
    486a:	27 e0       	ldi	r18, 0x07	; 7
    486c:	0b c0       	rjmp	.+22     	; 0x4884 <vfprintf+0x146>
    486e:	18 30       	cpi	r17, 0x08	; 8
    4870:	30 f4       	brcc	.+12     	; 0x487e <vfprintf+0x140>
    4872:	21 2f       	mov	r18, r17
    4874:	06 c0       	rjmp	.+12     	; 0x4882 <vfprintf+0x144>
    4876:	27 e0       	ldi	r18, 0x07	; 7
    4878:	4c e3       	ldi	r20, 0x3C	; 60
    487a:	44 2e       	mov	r4, r20
    487c:	03 c0       	rjmp	.+6      	; 0x4884 <vfprintf+0x146>
    487e:	27 e0       	ldi	r18, 0x07	; 7
    4880:	17 e0       	ldi	r17, 0x07	; 7
    4882:	41 2c       	mov	r4, r1
    4884:	56 01       	movw	r10, r12
    4886:	74 e0       	ldi	r23, 0x04	; 4
    4888:	a7 0e       	add	r10, r23
    488a:	b1 1c       	adc	r11, r1
    488c:	f6 01       	movw	r30, r12
    488e:	60 81       	ld	r22, Z
    4890:	71 81       	ldd	r23, Z+1	; 0x01
    4892:	82 81       	ldd	r24, Z+2	; 0x02
    4894:	93 81       	ldd	r25, Z+3	; 0x03
    4896:	04 2d       	mov	r16, r4
    4898:	a4 01       	movw	r20, r8
    489a:	0e 94 af 2a 	call	0x555e	; 0x555e <__ftoa_engine>
    489e:	6c 01       	movw	r12, r24
    48a0:	09 81       	ldd	r16, Y+1	; 0x01
    48a2:	00 ff       	sbrs	r16, 0
    48a4:	02 c0       	rjmp	.+4      	; 0x48aa <vfprintf+0x16c>
    48a6:	03 ff       	sbrs	r16, 3
    48a8:	06 c0       	rjmp	.+12     	; 0x48b6 <vfprintf+0x178>
    48aa:	71 fc       	sbrc	r7, 1
    48ac:	07 c0       	rjmp	.+14     	; 0x48bc <vfprintf+0x17e>
    48ae:	72 fc       	sbrc	r7, 2
    48b0:	08 c0       	rjmp	.+16     	; 0x48c2 <vfprintf+0x184>
    48b2:	61 2c       	mov	r6, r1
    48b4:	08 c0       	rjmp	.+16     	; 0x48c6 <vfprintf+0x188>
    48b6:	3d e2       	ldi	r19, 0x2D	; 45
    48b8:	63 2e       	mov	r6, r19
    48ba:	05 c0       	rjmp	.+10     	; 0x48c6 <vfprintf+0x188>
    48bc:	2b e2       	ldi	r18, 0x2B	; 43
    48be:	62 2e       	mov	r6, r18
    48c0:	02 c0       	rjmp	.+4      	; 0x48c6 <vfprintf+0x188>
    48c2:	90 e2       	ldi	r25, 0x20	; 32
    48c4:	69 2e       	mov	r6, r25
    48c6:	80 2f       	mov	r24, r16
    48c8:	8c 70       	andi	r24, 0x0C	; 12
    48ca:	99 f1       	breq	.+102    	; 0x4932 <vfprintf+0x1f4>
    48cc:	66 20       	and	r6, r6
    48ce:	11 f0       	breq	.+4      	; 0x48d4 <vfprintf+0x196>
    48d0:	84 e0       	ldi	r24, 0x04	; 4
    48d2:	01 c0       	rjmp	.+2      	; 0x48d6 <vfprintf+0x198>
    48d4:	83 e0       	ldi	r24, 0x03	; 3
    48d6:	85 15       	cp	r24, r5
    48d8:	10 f0       	brcs	.+4      	; 0x48de <vfprintf+0x1a0>
    48da:	51 2c       	mov	r5, r1
    48dc:	0b c0       	rjmp	.+22     	; 0x48f4 <vfprintf+0x1b6>
    48de:	58 1a       	sub	r5, r24
    48e0:	73 fc       	sbrc	r7, 3
    48e2:	08 c0       	rjmp	.+16     	; 0x48f4 <vfprintf+0x1b6>
    48e4:	b7 01       	movw	r22, r14
    48e6:	80 e2       	ldi	r24, 0x20	; 32
    48e8:	90 e0       	ldi	r25, 0x00	; 0
    48ea:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    48ee:	5a 94       	dec	r5
    48f0:	c9 f7       	brne	.-14     	; 0x48e4 <vfprintf+0x1a6>
    48f2:	f3 cf       	rjmp	.-26     	; 0x48da <vfprintf+0x19c>
    48f4:	66 20       	and	r6, r6
    48f6:	29 f0       	breq	.+10     	; 0x4902 <vfprintf+0x1c4>
    48f8:	b7 01       	movw	r22, r14
    48fa:	86 2d       	mov	r24, r6
    48fc:	90 e0       	ldi	r25, 0x00	; 0
    48fe:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4902:	03 fd       	sbrc	r16, 3
    4904:	03 c0       	rjmp	.+6      	; 0x490c <vfprintf+0x1ce>
    4906:	03 e6       	ldi	r16, 0x63	; 99
    4908:	15 e0       	ldi	r17, 0x05	; 5
    490a:	02 c0       	rjmp	.+4      	; 0x4910 <vfprintf+0x1d2>
    490c:	0f e5       	ldi	r16, 0x5F	; 95
    490e:	15 e0       	ldi	r17, 0x05	; 5
    4910:	f7 2d       	mov	r31, r7
    4912:	f0 71       	andi	r31, 0x10	; 16
    4914:	7f 2e       	mov	r7, r31
    4916:	f8 01       	movw	r30, r16
    4918:	84 91       	lpm	r24, Z
    491a:	88 23       	and	r24, r24
    491c:	09 f4       	brne	.+2      	; 0x4920 <vfprintf+0x1e2>
    491e:	76 c2       	rjmp	.+1260   	; 0x4e0c <vfprintf+0x6ce>
    4920:	71 10       	cpse	r7, r1
    4922:	80 52       	subi	r24, 0x20	; 32
    4924:	b7 01       	movw	r22, r14
    4926:	90 e0       	ldi	r25, 0x00	; 0
    4928:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    492c:	0f 5f       	subi	r16, 0xFF	; 255
    492e:	1f 4f       	sbci	r17, 0xFF	; 255
    4930:	f2 cf       	rjmp	.-28     	; 0x4916 <vfprintf+0x1d8>
    4932:	77 fe       	sbrs	r7, 7
    4934:	0f c0       	rjmp	.+30     	; 0x4954 <vfprintf+0x216>
    4936:	4c 0c       	add	r4, r12
    4938:	04 ff       	sbrs	r16, 4
    493a:	04 c0       	rjmp	.+8      	; 0x4944 <vfprintf+0x206>
    493c:	8a 81       	ldd	r24, Y+2	; 0x02
    493e:	81 33       	cpi	r24, 0x31	; 49
    4940:	09 f4       	brne	.+2      	; 0x4944 <vfprintf+0x206>
    4942:	4a 94       	dec	r4
    4944:	14 14       	cp	r1, r4
    4946:	74 f5       	brge	.+92     	; 0x49a4 <vfprintf+0x266>
    4948:	f8 e0       	ldi	r31, 0x08	; 8
    494a:	f4 15       	cp	r31, r4
    494c:	78 f5       	brcc	.+94     	; 0x49ac <vfprintf+0x26e>
    494e:	88 e0       	ldi	r24, 0x08	; 8
    4950:	48 2e       	mov	r4, r24
    4952:	2c c0       	rjmp	.+88     	; 0x49ac <vfprintf+0x26e>
    4954:	76 fc       	sbrc	r7, 6
    4956:	2a c0       	rjmp	.+84     	; 0x49ac <vfprintf+0x26e>
    4958:	81 2f       	mov	r24, r17
    495a:	90 e0       	ldi	r25, 0x00	; 0
    495c:	8c 15       	cp	r24, r12
    495e:	9d 05       	cpc	r25, r13
    4960:	9c f0       	brlt	.+38     	; 0x4988 <vfprintf+0x24a>
    4962:	6c ef       	ldi	r22, 0xFC	; 252
    4964:	c6 16       	cp	r12, r22
    4966:	6f ef       	ldi	r22, 0xFF	; 255
    4968:	d6 06       	cpc	r13, r22
    496a:	74 f0       	brlt	.+28     	; 0x4988 <vfprintf+0x24a>
    496c:	77 2d       	mov	r23, r7
    496e:	70 68       	ori	r23, 0x80	; 128
    4970:	77 2e       	mov	r7, r23
    4972:	0a c0       	rjmp	.+20     	; 0x4988 <vfprintf+0x24a>
    4974:	e2 e0       	ldi	r30, 0x02	; 2
    4976:	f0 e0       	ldi	r31, 0x00	; 0
    4978:	ec 0f       	add	r30, r28
    497a:	fd 1f       	adc	r31, r29
    497c:	e1 0f       	add	r30, r17
    497e:	f1 1d       	adc	r31, r1
    4980:	80 81       	ld	r24, Z
    4982:	80 33       	cpi	r24, 0x30	; 48
    4984:	19 f4       	brne	.+6      	; 0x498c <vfprintf+0x24e>
    4986:	11 50       	subi	r17, 0x01	; 1
    4988:	11 11       	cpse	r17, r1
    498a:	f4 cf       	rjmp	.-24     	; 0x4974 <vfprintf+0x236>
    498c:	77 fe       	sbrs	r7, 7
    498e:	0e c0       	rjmp	.+28     	; 0x49ac <vfprintf+0x26e>
    4990:	44 24       	eor	r4, r4
    4992:	43 94       	inc	r4
    4994:	41 0e       	add	r4, r17
    4996:	81 2f       	mov	r24, r17
    4998:	90 e0       	ldi	r25, 0x00	; 0
    499a:	c8 16       	cp	r12, r24
    499c:	d9 06       	cpc	r13, r25
    499e:	2c f4       	brge	.+10     	; 0x49aa <vfprintf+0x26c>
    49a0:	1c 19       	sub	r17, r12
    49a2:	04 c0       	rjmp	.+8      	; 0x49ac <vfprintf+0x26e>
    49a4:	44 24       	eor	r4, r4
    49a6:	43 94       	inc	r4
    49a8:	01 c0       	rjmp	.+2      	; 0x49ac <vfprintf+0x26e>
    49aa:	10 e0       	ldi	r17, 0x00	; 0
    49ac:	77 fe       	sbrs	r7, 7
    49ae:	07 c0       	rjmp	.+14     	; 0x49be <vfprintf+0x280>
    49b0:	1c 14       	cp	r1, r12
    49b2:	1d 04       	cpc	r1, r13
    49b4:	3c f4       	brge	.+14     	; 0x49c4 <vfprintf+0x286>
    49b6:	96 01       	movw	r18, r12
    49b8:	2f 5f       	subi	r18, 0xFF	; 255
    49ba:	3f 4f       	sbci	r19, 0xFF	; 255
    49bc:	05 c0       	rjmp	.+10     	; 0x49c8 <vfprintf+0x28a>
    49be:	25 e0       	ldi	r18, 0x05	; 5
    49c0:	30 e0       	ldi	r19, 0x00	; 0
    49c2:	02 c0       	rjmp	.+4      	; 0x49c8 <vfprintf+0x28a>
    49c4:	21 e0       	ldi	r18, 0x01	; 1
    49c6:	30 e0       	ldi	r19, 0x00	; 0
    49c8:	66 20       	and	r6, r6
    49ca:	11 f0       	breq	.+4      	; 0x49d0 <vfprintf+0x292>
    49cc:	2f 5f       	subi	r18, 0xFF	; 255
    49ce:	3f 4f       	sbci	r19, 0xFF	; 255
    49d0:	11 23       	and	r17, r17
    49d2:	31 f0       	breq	.+12     	; 0x49e0 <vfprintf+0x2a2>
    49d4:	41 2f       	mov	r20, r17
    49d6:	50 e0       	ldi	r21, 0x00	; 0
    49d8:	4f 5f       	subi	r20, 0xFF	; 255
    49da:	5f 4f       	sbci	r21, 0xFF	; 255
    49dc:	24 0f       	add	r18, r20
    49de:	35 1f       	adc	r19, r21
    49e0:	45 2d       	mov	r20, r5
    49e2:	50 e0       	ldi	r21, 0x00	; 0
    49e4:	24 17       	cp	r18, r20
    49e6:	35 07       	cpc	r19, r21
    49e8:	14 f4       	brge	.+4      	; 0x49ee <vfprintf+0x2b0>
    49ea:	52 1a       	sub	r5, r18
    49ec:	01 c0       	rjmp	.+2      	; 0x49f0 <vfprintf+0x2b2>
    49ee:	51 2c       	mov	r5, r1
    49f0:	87 2d       	mov	r24, r7
    49f2:	89 70       	andi	r24, 0x09	; 9
    49f4:	49 f4       	brne	.+18     	; 0x4a08 <vfprintf+0x2ca>
    49f6:	55 20       	and	r5, r5
    49f8:	39 f0       	breq	.+14     	; 0x4a08 <vfprintf+0x2ca>
    49fa:	b7 01       	movw	r22, r14
    49fc:	80 e2       	ldi	r24, 0x20	; 32
    49fe:	90 e0       	ldi	r25, 0x00	; 0
    4a00:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4a04:	5a 94       	dec	r5
    4a06:	f7 cf       	rjmp	.-18     	; 0x49f6 <vfprintf+0x2b8>
    4a08:	66 20       	and	r6, r6
    4a0a:	29 f0       	breq	.+10     	; 0x4a16 <vfprintf+0x2d8>
    4a0c:	b7 01       	movw	r22, r14
    4a0e:	86 2d       	mov	r24, r6
    4a10:	90 e0       	ldi	r25, 0x00	; 0
    4a12:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4a16:	73 fc       	sbrc	r7, 3
    4a18:	09 c0       	rjmp	.+18     	; 0x4a2c <vfprintf+0x2ee>
    4a1a:	55 20       	and	r5, r5
    4a1c:	39 f0       	breq	.+14     	; 0x4a2c <vfprintf+0x2ee>
    4a1e:	b7 01       	movw	r22, r14
    4a20:	80 e3       	ldi	r24, 0x30	; 48
    4a22:	90 e0       	ldi	r25, 0x00	; 0
    4a24:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4a28:	5a 94       	dec	r5
    4a2a:	f7 cf       	rjmp	.-18     	; 0x4a1a <vfprintf+0x2dc>
    4a2c:	77 fe       	sbrs	r7, 7
    4a2e:	5f c0       	rjmp	.+190    	; 0x4aee <vfprintf+0x3b0>
    4a30:	9c 2d       	mov	r25, r12
    4a32:	8d 2d       	mov	r24, r13
    4a34:	d7 fe       	sbrs	r13, 7
    4a36:	02 c0       	rjmp	.+4      	; 0x4a3c <vfprintf+0x2fe>
    4a38:	90 e0       	ldi	r25, 0x00	; 0
    4a3a:	80 e0       	ldi	r24, 0x00	; 0
    4a3c:	69 2e       	mov	r6, r25
    4a3e:	78 2e       	mov	r7, r24
    4a40:	40 e0       	ldi	r20, 0x00	; 0
    4a42:	50 e0       	ldi	r21, 0x00	; 0
    4a44:	c6 01       	movw	r24, r12
    4a46:	84 19       	sub	r24, r4
    4a48:	91 09       	sbc	r25, r1
    4a4a:	9d 87       	std	Y+13, r25	; 0x0d
    4a4c:	8c 87       	std	Y+12, r24	; 0x0c
    4a4e:	96 01       	movw	r18, r12
    4a50:	26 19       	sub	r18, r6
    4a52:	37 09       	sbc	r19, r7
    4a54:	28 0d       	add	r18, r8
    4a56:	39 1d       	adc	r19, r9
    4a58:	81 2f       	mov	r24, r17
    4a5a:	90 e0       	ldi	r25, 0x00	; 0
    4a5c:	ee 27       	eor	r30, r30
    4a5e:	ff 27       	eor	r31, r31
    4a60:	e8 1b       	sub	r30, r24
    4a62:	f9 0b       	sbc	r31, r25
    4a64:	ff 87       	std	Y+15, r31	; 0x0f
    4a66:	ee 87       	std	Y+14, r30	; 0x0e
    4a68:	ff ef       	ldi	r31, 0xFF	; 255
    4a6a:	6f 16       	cp	r6, r31
    4a6c:	7f 06       	cpc	r7, r31
    4a6e:	69 f4       	brne	.+26     	; 0x4a8a <vfprintf+0x34c>
    4a70:	b7 01       	movw	r22, r14
    4a72:	8e e2       	ldi	r24, 0x2E	; 46
    4a74:	90 e0       	ldi	r25, 0x00	; 0
    4a76:	2b 8b       	std	Y+19, r18	; 0x13
    4a78:	3a 8b       	std	Y+18, r19	; 0x12
    4a7a:	48 8b       	std	Y+16, r20	; 0x10
    4a7c:	59 8b       	std	Y+17, r21	; 0x11
    4a7e:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4a82:	59 89       	ldd	r21, Y+17	; 0x11
    4a84:	48 89       	ldd	r20, Y+16	; 0x10
    4a86:	3a 89       	ldd	r19, Y+18	; 0x12
    4a88:	2b 89       	ldd	r18, Y+19	; 0x13
    4a8a:	c6 14       	cp	r12, r6
    4a8c:	d7 04       	cpc	r13, r7
    4a8e:	54 f0       	brlt	.+20     	; 0x4aa4 <vfprintf+0x366>
    4a90:	6c 85       	ldd	r22, Y+12	; 0x0c
    4a92:	7d 85       	ldd	r23, Y+13	; 0x0d
    4a94:	66 15       	cp	r22, r6
    4a96:	77 05       	cpc	r23, r7
    4a98:	2c f4       	brge	.+10     	; 0x4aa4 <vfprintf+0x366>
    4a9a:	f9 01       	movw	r30, r18
    4a9c:	e4 0f       	add	r30, r20
    4a9e:	f5 1f       	adc	r31, r21
    4aa0:	81 81       	ldd	r24, Z+1	; 0x01
    4aa2:	01 c0       	rjmp	.+2      	; 0x4aa6 <vfprintf+0x368>
    4aa4:	80 e3       	ldi	r24, 0x30	; 48
    4aa6:	71 e0       	ldi	r23, 0x01	; 1
    4aa8:	67 1a       	sub	r6, r23
    4aaa:	71 08       	sbc	r7, r1
    4aac:	4f 5f       	subi	r20, 0xFF	; 255
    4aae:	5f 4f       	sbci	r21, 0xFF	; 255
    4ab0:	ee 85       	ldd	r30, Y+14	; 0x0e
    4ab2:	ff 85       	ldd	r31, Y+15	; 0x0f
    4ab4:	6e 16       	cp	r6, r30
    4ab6:	7f 06       	cpc	r7, r31
    4ab8:	6c f0       	brlt	.+26     	; 0x4ad4 <vfprintf+0x396>
    4aba:	b7 01       	movw	r22, r14
    4abc:	90 e0       	ldi	r25, 0x00	; 0
    4abe:	2b 8b       	std	Y+19, r18	; 0x13
    4ac0:	3a 8b       	std	Y+18, r19	; 0x12
    4ac2:	48 8b       	std	Y+16, r20	; 0x10
    4ac4:	59 8b       	std	Y+17, r21	; 0x11
    4ac6:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4aca:	2b 89       	ldd	r18, Y+19	; 0x13
    4acc:	3a 89       	ldd	r19, Y+18	; 0x12
    4ace:	48 89       	ldd	r20, Y+16	; 0x10
    4ad0:	59 89       	ldd	r21, Y+17	; 0x11
    4ad2:	ca cf       	rjmp	.-108    	; 0x4a68 <vfprintf+0x32a>
    4ad4:	6c 14       	cp	r6, r12
    4ad6:	7d 04       	cpc	r7, r13
    4ad8:	39 f4       	brne	.+14     	; 0x4ae8 <vfprintf+0x3aa>
    4ada:	9a 81       	ldd	r25, Y+2	; 0x02
    4adc:	96 33       	cpi	r25, 0x36	; 54
    4ade:	18 f4       	brcc	.+6      	; 0x4ae6 <vfprintf+0x3a8>
    4ae0:	95 33       	cpi	r25, 0x35	; 53
    4ae2:	11 f4       	brne	.+4      	; 0x4ae8 <vfprintf+0x3aa>
    4ae4:	04 ff       	sbrs	r16, 4
    4ae6:	81 e3       	ldi	r24, 0x31	; 49
    4ae8:	b7 01       	movw	r22, r14
    4aea:	90 e0       	ldi	r25, 0x00	; 0
    4aec:	4b c0       	rjmp	.+150    	; 0x4b84 <vfprintf+0x446>
    4aee:	8a 81       	ldd	r24, Y+2	; 0x02
    4af0:	81 33       	cpi	r24, 0x31	; 49
    4af2:	09 f0       	breq	.+2      	; 0x4af6 <vfprintf+0x3b8>
    4af4:	0f 7e       	andi	r16, 0xEF	; 239
    4af6:	b7 01       	movw	r22, r14
    4af8:	90 e0       	ldi	r25, 0x00	; 0
    4afa:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4afe:	11 11       	cpse	r17, r1
    4b00:	05 c0       	rjmp	.+10     	; 0x4b0c <vfprintf+0x3ce>
    4b02:	74 fe       	sbrs	r7, 4
    4b04:	18 c0       	rjmp	.+48     	; 0x4b36 <vfprintf+0x3f8>
    4b06:	85 e4       	ldi	r24, 0x45	; 69
    4b08:	90 e0       	ldi	r25, 0x00	; 0
    4b0a:	17 c0       	rjmp	.+46     	; 0x4b3a <vfprintf+0x3fc>
    4b0c:	b7 01       	movw	r22, r14
    4b0e:	8e e2       	ldi	r24, 0x2E	; 46
    4b10:	90 e0       	ldi	r25, 0x00	; 0
    4b12:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4b16:	82 e0       	ldi	r24, 0x02	; 2
    4b18:	66 24       	eor	r6, r6
    4b1a:	63 94       	inc	r6
    4b1c:	68 0e       	add	r6, r24
    4b1e:	f4 01       	movw	r30, r8
    4b20:	e8 0f       	add	r30, r24
    4b22:	f1 1d       	adc	r31, r1
    4b24:	80 81       	ld	r24, Z
    4b26:	b7 01       	movw	r22, r14
    4b28:	90 e0       	ldi	r25, 0x00	; 0
    4b2a:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4b2e:	11 50       	subi	r17, 0x01	; 1
    4b30:	41 f3       	breq	.-48     	; 0x4b02 <vfprintf+0x3c4>
    4b32:	86 2d       	mov	r24, r6
    4b34:	f1 cf       	rjmp	.-30     	; 0x4b18 <vfprintf+0x3da>
    4b36:	85 e6       	ldi	r24, 0x65	; 101
    4b38:	90 e0       	ldi	r25, 0x00	; 0
    4b3a:	b7 01       	movw	r22, r14
    4b3c:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4b40:	d7 fc       	sbrc	r13, 7
    4b42:	05 c0       	rjmp	.+10     	; 0x4b4e <vfprintf+0x410>
    4b44:	c1 14       	cp	r12, r1
    4b46:	d1 04       	cpc	r13, r1
    4b48:	39 f4       	brne	.+14     	; 0x4b58 <vfprintf+0x41a>
    4b4a:	04 ff       	sbrs	r16, 4
    4b4c:	05 c0       	rjmp	.+10     	; 0x4b58 <vfprintf+0x41a>
    4b4e:	d1 94       	neg	r13
    4b50:	c1 94       	neg	r12
    4b52:	d1 08       	sbc	r13, r1
    4b54:	8d e2       	ldi	r24, 0x2D	; 45
    4b56:	01 c0       	rjmp	.+2      	; 0x4b5a <vfprintf+0x41c>
    4b58:	8b e2       	ldi	r24, 0x2B	; 43
    4b5a:	b7 01       	movw	r22, r14
    4b5c:	90 e0       	ldi	r25, 0x00	; 0
    4b5e:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4b62:	80 e3       	ldi	r24, 0x30	; 48
    4b64:	6a e0       	ldi	r22, 0x0A	; 10
    4b66:	c6 16       	cp	r12, r22
    4b68:	d1 04       	cpc	r13, r1
    4b6a:	2c f0       	brlt	.+10     	; 0x4b76 <vfprintf+0x438>
    4b6c:	8f 5f       	subi	r24, 0xFF	; 255
    4b6e:	fa e0       	ldi	r31, 0x0A	; 10
    4b70:	cf 1a       	sub	r12, r31
    4b72:	d1 08       	sbc	r13, r1
    4b74:	f7 cf       	rjmp	.-18     	; 0x4b64 <vfprintf+0x426>
    4b76:	b7 01       	movw	r22, r14
    4b78:	90 e0       	ldi	r25, 0x00	; 0
    4b7a:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4b7e:	b7 01       	movw	r22, r14
    4b80:	c6 01       	movw	r24, r12
    4b82:	c0 96       	adiw	r24, 0x30	; 48
    4b84:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4b88:	41 c1       	rjmp	.+642    	; 0x4e0c <vfprintf+0x6ce>
    4b8a:	83 36       	cpi	r24, 0x63	; 99
    4b8c:	31 f0       	breq	.+12     	; 0x4b9a <vfprintf+0x45c>
    4b8e:	83 37       	cpi	r24, 0x73	; 115
    4b90:	79 f0       	breq	.+30     	; 0x4bb0 <vfprintf+0x472>
    4b92:	83 35       	cpi	r24, 0x53	; 83
    4b94:	09 f0       	breq	.+2      	; 0x4b98 <vfprintf+0x45a>
    4b96:	58 c0       	rjmp	.+176    	; 0x4c48 <vfprintf+0x50a>
    4b98:	21 c0       	rjmp	.+66     	; 0x4bdc <vfprintf+0x49e>
    4b9a:	56 01       	movw	r10, r12
    4b9c:	72 e0       	ldi	r23, 0x02	; 2
    4b9e:	a7 0e       	add	r10, r23
    4ba0:	b1 1c       	adc	r11, r1
    4ba2:	f6 01       	movw	r30, r12
    4ba4:	80 81       	ld	r24, Z
    4ba6:	89 83       	std	Y+1, r24	; 0x01
    4ba8:	01 e0       	ldi	r16, 0x01	; 1
    4baa:	10 e0       	ldi	r17, 0x00	; 0
    4bac:	64 01       	movw	r12, r8
    4bae:	14 c0       	rjmp	.+40     	; 0x4bd8 <vfprintf+0x49a>
    4bb0:	56 01       	movw	r10, r12
    4bb2:	f2 e0       	ldi	r31, 0x02	; 2
    4bb4:	af 0e       	add	r10, r31
    4bb6:	b1 1c       	adc	r11, r1
    4bb8:	f6 01       	movw	r30, r12
    4bba:	c0 80       	ld	r12, Z
    4bbc:	d1 80       	ldd	r13, Z+1	; 0x01
    4bbe:	26 ff       	sbrs	r18, 6
    4bc0:	03 c0       	rjmp	.+6      	; 0x4bc8 <vfprintf+0x48a>
    4bc2:	61 2f       	mov	r22, r17
    4bc4:	70 e0       	ldi	r23, 0x00	; 0
    4bc6:	02 c0       	rjmp	.+4      	; 0x4bcc <vfprintf+0x48e>
    4bc8:	6f ef       	ldi	r22, 0xFF	; 255
    4bca:	7f ef       	ldi	r23, 0xFF	; 255
    4bcc:	c6 01       	movw	r24, r12
    4bce:	2b 8b       	std	Y+19, r18	; 0x13
    4bd0:	0e 94 92 2b 	call	0x5724	; 0x5724 <strnlen>
    4bd4:	8c 01       	movw	r16, r24
    4bd6:	2b 89       	ldd	r18, Y+19	; 0x13
    4bd8:	2f 77       	andi	r18, 0x7F	; 127
    4bda:	15 c0       	rjmp	.+42     	; 0x4c06 <vfprintf+0x4c8>
    4bdc:	56 01       	movw	r10, r12
    4bde:	f2 e0       	ldi	r31, 0x02	; 2
    4be0:	af 0e       	add	r10, r31
    4be2:	b1 1c       	adc	r11, r1
    4be4:	f6 01       	movw	r30, r12
    4be6:	c0 80       	ld	r12, Z
    4be8:	d1 80       	ldd	r13, Z+1	; 0x01
    4bea:	26 ff       	sbrs	r18, 6
    4bec:	03 c0       	rjmp	.+6      	; 0x4bf4 <vfprintf+0x4b6>
    4bee:	61 2f       	mov	r22, r17
    4bf0:	70 e0       	ldi	r23, 0x00	; 0
    4bf2:	02 c0       	rjmp	.+4      	; 0x4bf8 <vfprintf+0x4ba>
    4bf4:	6f ef       	ldi	r22, 0xFF	; 255
    4bf6:	7f ef       	ldi	r23, 0xFF	; 255
    4bf8:	c6 01       	movw	r24, r12
    4bfa:	2b 8b       	std	Y+19, r18	; 0x13
    4bfc:	0e 94 87 2b 	call	0x570e	; 0x570e <strnlen_P>
    4c00:	8c 01       	movw	r16, r24
    4c02:	2b 89       	ldd	r18, Y+19	; 0x13
    4c04:	20 68       	ori	r18, 0x80	; 128
    4c06:	72 2e       	mov	r7, r18
    4c08:	23 fd       	sbrc	r18, 3
    4c0a:	1a c0       	rjmp	.+52     	; 0x4c40 <vfprintf+0x502>
    4c0c:	85 2d       	mov	r24, r5
    4c0e:	90 e0       	ldi	r25, 0x00	; 0
    4c10:	08 17       	cp	r16, r24
    4c12:	19 07       	cpc	r17, r25
    4c14:	a8 f4       	brcc	.+42     	; 0x4c40 <vfprintf+0x502>
    4c16:	b7 01       	movw	r22, r14
    4c18:	80 e2       	ldi	r24, 0x20	; 32
    4c1a:	90 e0       	ldi	r25, 0x00	; 0
    4c1c:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4c20:	5a 94       	dec	r5
    4c22:	f4 cf       	rjmp	.-24     	; 0x4c0c <vfprintf+0x4ce>
    4c24:	f6 01       	movw	r30, r12
    4c26:	77 fc       	sbrc	r7, 7
    4c28:	85 91       	lpm	r24, Z+
    4c2a:	77 fe       	sbrs	r7, 7
    4c2c:	81 91       	ld	r24, Z+
    4c2e:	6f 01       	movw	r12, r30
    4c30:	b7 01       	movw	r22, r14
    4c32:	90 e0       	ldi	r25, 0x00	; 0
    4c34:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4c38:	51 10       	cpse	r5, r1
    4c3a:	5a 94       	dec	r5
    4c3c:	01 50       	subi	r16, 0x01	; 1
    4c3e:	11 09       	sbc	r17, r1
    4c40:	01 15       	cp	r16, r1
    4c42:	11 05       	cpc	r17, r1
    4c44:	79 f7       	brne	.-34     	; 0x4c24 <vfprintf+0x4e6>
    4c46:	e2 c0       	rjmp	.+452    	; 0x4e0c <vfprintf+0x6ce>
    4c48:	84 36       	cpi	r24, 0x64	; 100
    4c4a:	11 f0       	breq	.+4      	; 0x4c50 <vfprintf+0x512>
    4c4c:	89 36       	cpi	r24, 0x69	; 105
    4c4e:	51 f5       	brne	.+84     	; 0x4ca4 <vfprintf+0x566>
    4c50:	56 01       	movw	r10, r12
    4c52:	27 ff       	sbrs	r18, 7
    4c54:	09 c0       	rjmp	.+18     	; 0x4c68 <vfprintf+0x52a>
    4c56:	f4 e0       	ldi	r31, 0x04	; 4
    4c58:	af 0e       	add	r10, r31
    4c5a:	b1 1c       	adc	r11, r1
    4c5c:	f6 01       	movw	r30, r12
    4c5e:	60 81       	ld	r22, Z
    4c60:	71 81       	ldd	r23, Z+1	; 0x01
    4c62:	82 81       	ldd	r24, Z+2	; 0x02
    4c64:	93 81       	ldd	r25, Z+3	; 0x03
    4c66:	0a c0       	rjmp	.+20     	; 0x4c7c <vfprintf+0x53e>
    4c68:	f2 e0       	ldi	r31, 0x02	; 2
    4c6a:	af 0e       	add	r10, r31
    4c6c:	b1 1c       	adc	r11, r1
    4c6e:	f6 01       	movw	r30, r12
    4c70:	60 81       	ld	r22, Z
    4c72:	71 81       	ldd	r23, Z+1	; 0x01
    4c74:	88 27       	eor	r24, r24
    4c76:	77 fd       	sbrc	r23, 7
    4c78:	80 95       	com	r24
    4c7a:	98 2f       	mov	r25, r24
    4c7c:	02 2f       	mov	r16, r18
    4c7e:	0f 76       	andi	r16, 0x6F	; 111
    4c80:	97 ff       	sbrs	r25, 7
    4c82:	08 c0       	rjmp	.+16     	; 0x4c94 <vfprintf+0x556>
    4c84:	90 95       	com	r25
    4c86:	80 95       	com	r24
    4c88:	70 95       	com	r23
    4c8a:	61 95       	neg	r22
    4c8c:	7f 4f       	sbci	r23, 0xFF	; 255
    4c8e:	8f 4f       	sbci	r24, 0xFF	; 255
    4c90:	9f 4f       	sbci	r25, 0xFF	; 255
    4c92:	00 68       	ori	r16, 0x80	; 128
    4c94:	2a e0       	ldi	r18, 0x0A	; 10
    4c96:	30 e0       	ldi	r19, 0x00	; 0
    4c98:	a4 01       	movw	r20, r8
    4c9a:	0e 94 10 2c 	call	0x5820	; 0x5820 <__ultoa_invert>
    4c9e:	c8 2e       	mov	r12, r24
    4ca0:	c8 18       	sub	r12, r8
    4ca2:	3e c0       	rjmp	.+124    	; 0x4d20 <vfprintf+0x5e2>
    4ca4:	02 2f       	mov	r16, r18
    4ca6:	85 37       	cpi	r24, 0x75	; 117
    4ca8:	21 f4       	brne	.+8      	; 0x4cb2 <vfprintf+0x574>
    4caa:	0f 7e       	andi	r16, 0xEF	; 239
    4cac:	2a e0       	ldi	r18, 0x0A	; 10
    4cae:	30 e0       	ldi	r19, 0x00	; 0
    4cb0:	1d c0       	rjmp	.+58     	; 0x4cec <vfprintf+0x5ae>
    4cb2:	09 7f       	andi	r16, 0xF9	; 249
    4cb4:	8f 36       	cpi	r24, 0x6F	; 111
    4cb6:	91 f0       	breq	.+36     	; 0x4cdc <vfprintf+0x59e>
    4cb8:	18 f4       	brcc	.+6      	; 0x4cc0 <vfprintf+0x582>
    4cba:	88 35       	cpi	r24, 0x58	; 88
    4cbc:	59 f0       	breq	.+22     	; 0x4cd4 <vfprintf+0x596>
    4cbe:	b0 c0       	rjmp	.+352    	; 0x4e20 <vfprintf+0x6e2>
    4cc0:	80 37       	cpi	r24, 0x70	; 112
    4cc2:	19 f0       	breq	.+6      	; 0x4cca <vfprintf+0x58c>
    4cc4:	88 37       	cpi	r24, 0x78	; 120
    4cc6:	11 f0       	breq	.+4      	; 0x4ccc <vfprintf+0x58e>
    4cc8:	ab c0       	rjmp	.+342    	; 0x4e20 <vfprintf+0x6e2>
    4cca:	00 61       	ori	r16, 0x10	; 16
    4ccc:	04 ff       	sbrs	r16, 4
    4cce:	09 c0       	rjmp	.+18     	; 0x4ce2 <vfprintf+0x5a4>
    4cd0:	04 60       	ori	r16, 0x04	; 4
    4cd2:	07 c0       	rjmp	.+14     	; 0x4ce2 <vfprintf+0x5a4>
    4cd4:	24 ff       	sbrs	r18, 4
    4cd6:	08 c0       	rjmp	.+16     	; 0x4ce8 <vfprintf+0x5aa>
    4cd8:	06 60       	ori	r16, 0x06	; 6
    4cda:	06 c0       	rjmp	.+12     	; 0x4ce8 <vfprintf+0x5aa>
    4cdc:	28 e0       	ldi	r18, 0x08	; 8
    4cde:	30 e0       	ldi	r19, 0x00	; 0
    4ce0:	05 c0       	rjmp	.+10     	; 0x4cec <vfprintf+0x5ae>
    4ce2:	20 e1       	ldi	r18, 0x10	; 16
    4ce4:	30 e0       	ldi	r19, 0x00	; 0
    4ce6:	02 c0       	rjmp	.+4      	; 0x4cec <vfprintf+0x5ae>
    4ce8:	20 e1       	ldi	r18, 0x10	; 16
    4cea:	32 e0       	ldi	r19, 0x02	; 2
    4cec:	56 01       	movw	r10, r12
    4cee:	07 ff       	sbrs	r16, 7
    4cf0:	09 c0       	rjmp	.+18     	; 0x4d04 <vfprintf+0x5c6>
    4cf2:	f4 e0       	ldi	r31, 0x04	; 4
    4cf4:	af 0e       	add	r10, r31
    4cf6:	b1 1c       	adc	r11, r1
    4cf8:	f6 01       	movw	r30, r12
    4cfa:	60 81       	ld	r22, Z
    4cfc:	71 81       	ldd	r23, Z+1	; 0x01
    4cfe:	82 81       	ldd	r24, Z+2	; 0x02
    4d00:	93 81       	ldd	r25, Z+3	; 0x03
    4d02:	08 c0       	rjmp	.+16     	; 0x4d14 <vfprintf+0x5d6>
    4d04:	f2 e0       	ldi	r31, 0x02	; 2
    4d06:	af 0e       	add	r10, r31
    4d08:	b1 1c       	adc	r11, r1
    4d0a:	f6 01       	movw	r30, r12
    4d0c:	60 81       	ld	r22, Z
    4d0e:	71 81       	ldd	r23, Z+1	; 0x01
    4d10:	80 e0       	ldi	r24, 0x00	; 0
    4d12:	90 e0       	ldi	r25, 0x00	; 0
    4d14:	a4 01       	movw	r20, r8
    4d16:	0e 94 10 2c 	call	0x5820	; 0x5820 <__ultoa_invert>
    4d1a:	c8 2e       	mov	r12, r24
    4d1c:	c8 18       	sub	r12, r8
    4d1e:	0f 77       	andi	r16, 0x7F	; 127
    4d20:	06 ff       	sbrs	r16, 6
    4d22:	0b c0       	rjmp	.+22     	; 0x4d3a <vfprintf+0x5fc>
    4d24:	20 2f       	mov	r18, r16
    4d26:	2e 7f       	andi	r18, 0xFE	; 254
    4d28:	c1 16       	cp	r12, r17
    4d2a:	50 f4       	brcc	.+20     	; 0x4d40 <vfprintf+0x602>
    4d2c:	04 ff       	sbrs	r16, 4
    4d2e:	0a c0       	rjmp	.+20     	; 0x4d44 <vfprintf+0x606>
    4d30:	02 fd       	sbrc	r16, 2
    4d32:	08 c0       	rjmp	.+16     	; 0x4d44 <vfprintf+0x606>
    4d34:	20 2f       	mov	r18, r16
    4d36:	2e 7e       	andi	r18, 0xEE	; 238
    4d38:	05 c0       	rjmp	.+10     	; 0x4d44 <vfprintf+0x606>
    4d3a:	dc 2c       	mov	r13, r12
    4d3c:	20 2f       	mov	r18, r16
    4d3e:	03 c0       	rjmp	.+6      	; 0x4d46 <vfprintf+0x608>
    4d40:	dc 2c       	mov	r13, r12
    4d42:	01 c0       	rjmp	.+2      	; 0x4d46 <vfprintf+0x608>
    4d44:	d1 2e       	mov	r13, r17
    4d46:	24 ff       	sbrs	r18, 4
    4d48:	0d c0       	rjmp	.+26     	; 0x4d64 <vfprintf+0x626>
    4d4a:	fe 01       	movw	r30, r28
    4d4c:	ec 0d       	add	r30, r12
    4d4e:	f1 1d       	adc	r31, r1
    4d50:	80 81       	ld	r24, Z
    4d52:	80 33       	cpi	r24, 0x30	; 48
    4d54:	11 f4       	brne	.+4      	; 0x4d5a <vfprintf+0x61c>
    4d56:	29 7e       	andi	r18, 0xE9	; 233
    4d58:	09 c0       	rjmp	.+18     	; 0x4d6c <vfprintf+0x62e>
    4d5a:	22 ff       	sbrs	r18, 2
    4d5c:	06 c0       	rjmp	.+12     	; 0x4d6a <vfprintf+0x62c>
    4d5e:	d3 94       	inc	r13
    4d60:	d3 94       	inc	r13
    4d62:	04 c0       	rjmp	.+8      	; 0x4d6c <vfprintf+0x62e>
    4d64:	82 2f       	mov	r24, r18
    4d66:	86 78       	andi	r24, 0x86	; 134
    4d68:	09 f0       	breq	.+2      	; 0x4d6c <vfprintf+0x62e>
    4d6a:	d3 94       	inc	r13
    4d6c:	23 fd       	sbrc	r18, 3
    4d6e:	13 c0       	rjmp	.+38     	; 0x4d96 <vfprintf+0x658>
    4d70:	20 ff       	sbrs	r18, 0
    4d72:	06 c0       	rjmp	.+12     	; 0x4d80 <vfprintf+0x642>
    4d74:	1c 2d       	mov	r17, r12
    4d76:	d5 14       	cp	r13, r5
    4d78:	18 f4       	brcc	.+6      	; 0x4d80 <vfprintf+0x642>
    4d7a:	15 0d       	add	r17, r5
    4d7c:	1d 19       	sub	r17, r13
    4d7e:	d5 2c       	mov	r13, r5
    4d80:	d5 14       	cp	r13, r5
    4d82:	68 f4       	brcc	.+26     	; 0x4d9e <vfprintf+0x660>
    4d84:	b7 01       	movw	r22, r14
    4d86:	80 e2       	ldi	r24, 0x20	; 32
    4d88:	90 e0       	ldi	r25, 0x00	; 0
    4d8a:	2b 8b       	std	Y+19, r18	; 0x13
    4d8c:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4d90:	d3 94       	inc	r13
    4d92:	2b 89       	ldd	r18, Y+19	; 0x13
    4d94:	f5 cf       	rjmp	.-22     	; 0x4d80 <vfprintf+0x642>
    4d96:	d5 14       	cp	r13, r5
    4d98:	10 f4       	brcc	.+4      	; 0x4d9e <vfprintf+0x660>
    4d9a:	5d 18       	sub	r5, r13
    4d9c:	01 c0       	rjmp	.+2      	; 0x4da0 <vfprintf+0x662>
    4d9e:	51 2c       	mov	r5, r1
    4da0:	24 ff       	sbrs	r18, 4
    4da2:	12 c0       	rjmp	.+36     	; 0x4dc8 <vfprintf+0x68a>
    4da4:	b7 01       	movw	r22, r14
    4da6:	80 e3       	ldi	r24, 0x30	; 48
    4da8:	90 e0       	ldi	r25, 0x00	; 0
    4daa:	2b 8b       	std	Y+19, r18	; 0x13
    4dac:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4db0:	2b 89       	ldd	r18, Y+19	; 0x13
    4db2:	22 ff       	sbrs	r18, 2
    4db4:	17 c0       	rjmp	.+46     	; 0x4de4 <vfprintf+0x6a6>
    4db6:	21 ff       	sbrs	r18, 1
    4db8:	03 c0       	rjmp	.+6      	; 0x4dc0 <vfprintf+0x682>
    4dba:	88 e5       	ldi	r24, 0x58	; 88
    4dbc:	90 e0       	ldi	r25, 0x00	; 0
    4dbe:	02 c0       	rjmp	.+4      	; 0x4dc4 <vfprintf+0x686>
    4dc0:	88 e7       	ldi	r24, 0x78	; 120
    4dc2:	90 e0       	ldi	r25, 0x00	; 0
    4dc4:	b7 01       	movw	r22, r14
    4dc6:	0c c0       	rjmp	.+24     	; 0x4de0 <vfprintf+0x6a2>
    4dc8:	82 2f       	mov	r24, r18
    4dca:	86 78       	andi	r24, 0x86	; 134
    4dcc:	59 f0       	breq	.+22     	; 0x4de4 <vfprintf+0x6a6>
    4dce:	21 fd       	sbrc	r18, 1
    4dd0:	02 c0       	rjmp	.+4      	; 0x4dd6 <vfprintf+0x698>
    4dd2:	80 e2       	ldi	r24, 0x20	; 32
    4dd4:	01 c0       	rjmp	.+2      	; 0x4dd8 <vfprintf+0x69a>
    4dd6:	8b e2       	ldi	r24, 0x2B	; 43
    4dd8:	27 fd       	sbrc	r18, 7
    4dda:	8d e2       	ldi	r24, 0x2D	; 45
    4ddc:	b7 01       	movw	r22, r14
    4dde:	90 e0       	ldi	r25, 0x00	; 0
    4de0:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4de4:	c1 16       	cp	r12, r17
    4de6:	38 f4       	brcc	.+14     	; 0x4df6 <vfprintf+0x6b8>
    4de8:	b7 01       	movw	r22, r14
    4dea:	80 e3       	ldi	r24, 0x30	; 48
    4dec:	90 e0       	ldi	r25, 0x00	; 0
    4dee:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4df2:	11 50       	subi	r17, 0x01	; 1
    4df4:	f7 cf       	rjmp	.-18     	; 0x4de4 <vfprintf+0x6a6>
    4df6:	ca 94       	dec	r12
    4df8:	f4 01       	movw	r30, r8
    4dfa:	ec 0d       	add	r30, r12
    4dfc:	f1 1d       	adc	r31, r1
    4dfe:	80 81       	ld	r24, Z
    4e00:	b7 01       	movw	r22, r14
    4e02:	90 e0       	ldi	r25, 0x00	; 0
    4e04:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4e08:	c1 10       	cpse	r12, r1
    4e0a:	f5 cf       	rjmp	.-22     	; 0x4df6 <vfprintf+0x6b8>
    4e0c:	55 20       	and	r5, r5
    4e0e:	09 f4       	brne	.+2      	; 0x4e12 <vfprintf+0x6d4>
    4e10:	c2 cc       	rjmp	.-1660   	; 0x4796 <vfprintf+0x58>
    4e12:	b7 01       	movw	r22, r14
    4e14:	80 e2       	ldi	r24, 0x20	; 32
    4e16:	90 e0       	ldi	r25, 0x00	; 0
    4e18:	0e 94 9d 2b 	call	0x573a	; 0x573a <fputc>
    4e1c:	5a 94       	dec	r5
    4e1e:	f6 cf       	rjmp	.-20     	; 0x4e0c <vfprintf+0x6ce>
    4e20:	f7 01       	movw	r30, r14
    4e22:	86 81       	ldd	r24, Z+6	; 0x06
    4e24:	97 81       	ldd	r25, Z+7	; 0x07
    4e26:	02 c0       	rjmp	.+4      	; 0x4e2c <vfprintf+0x6ee>
    4e28:	8f ef       	ldi	r24, 0xFF	; 255
    4e2a:	9f ef       	ldi	r25, 0xFF	; 255
    4e2c:	63 96       	adiw	r28, 0x13	; 19
    4e2e:	e2 e1       	ldi	r30, 0x12	; 18
    4e30:	0c 94 ec 28 	jmp	0x51d8	; 0x51d8 <__epilogue_restores__>

00004e34 <lrint>:
    4e34:	e7 db       	rcall	.-2098   	; 0x4604 <__fp_splitA>
    4e36:	a8 f1       	brcs	.+106    	; 0x4ea2 <lrint+0x6e>
    4e38:	9e 57       	subi	r25, 0x7E	; 126
    4e3a:	a8 f1       	brcs	.+106    	; 0x4ea6 <lrint+0x72>
    4e3c:	98 51       	subi	r25, 0x18	; 24
    4e3e:	60 f0       	brcs	.+24     	; 0x4e58 <lrint+0x24>
    4e40:	39 f1       	breq	.+78     	; 0x4e90 <lrint+0x5c>
    4e42:	98 30       	cpi	r25, 0x08	; 8
    4e44:	70 f5       	brcc	.+92     	; 0x4ea2 <lrint+0x6e>
    4e46:	09 2e       	mov	r0, r25
    4e48:	99 27       	eor	r25, r25
    4e4a:	66 0f       	add	r22, r22
    4e4c:	77 1f       	adc	r23, r23
    4e4e:	88 1f       	adc	r24, r24
    4e50:	99 1f       	adc	r25, r25
    4e52:	0a 94       	dec	r0
    4e54:	d1 f7       	brne	.-12     	; 0x4e4a <lrint+0x16>
    4e56:	1c c0       	rjmp	.+56     	; 0x4e90 <lrint+0x5c>
    4e58:	bb 27       	eor	r27, r27
    4e5a:	99 3f       	cpi	r25, 0xF9	; 249
    4e5c:	4c f4       	brge	.+18     	; 0x4e70 <lrint+0x3c>
    4e5e:	b1 11       	cpse	r27, r1
    4e60:	b1 e0       	ldi	r27, 0x01	; 1
    4e62:	b6 2b       	or	r27, r22
    4e64:	67 2f       	mov	r22, r23
    4e66:	78 2f       	mov	r23, r24
    4e68:	88 27       	eor	r24, r24
    4e6a:	98 5f       	subi	r25, 0xF8	; 248
    4e6c:	b1 f7       	brne	.-20     	; 0x4e5a <lrint+0x26>
    4e6e:	08 c0       	rjmp	.+16     	; 0x4e80 <lrint+0x4c>
    4e70:	86 95       	lsr	r24
    4e72:	77 95       	ror	r23
    4e74:	67 95       	ror	r22
    4e76:	b7 95       	ror	r27
    4e78:	08 f4       	brcc	.+2      	; 0x4e7c <lrint+0x48>
    4e7a:	b1 60       	ori	r27, 0x01	; 1
    4e7c:	93 95       	inc	r25
    4e7e:	c1 f7       	brne	.-16     	; 0x4e70 <lrint+0x3c>
    4e80:	bb 0f       	add	r27, r27
    4e82:	30 f4       	brcc	.+12     	; 0x4e90 <lrint+0x5c>
    4e84:	11 f4       	brne	.+4      	; 0x4e8a <lrint+0x56>
    4e86:	60 ff       	sbrs	r22, 0
    4e88:	03 c0       	rjmp	.+6      	; 0x4e90 <lrint+0x5c>
    4e8a:	6f 5f       	subi	r22, 0xFF	; 255
    4e8c:	7f 4f       	sbci	r23, 0xFF	; 255
    4e8e:	8f 4f       	sbci	r24, 0xFF	; 255
    4e90:	3e f4       	brtc	.+14     	; 0x4ea0 <lrint+0x6c>
    4e92:	90 95       	com	r25
    4e94:	80 95       	com	r24
    4e96:	70 95       	com	r23
    4e98:	61 95       	neg	r22
    4e9a:	7f 4f       	sbci	r23, 0xFF	; 255
    4e9c:	8f 4f       	sbci	r24, 0xFF	; 255
    4e9e:	9f 4f       	sbci	r25, 0xFF	; 255
    4ea0:	08 95       	ret
    4ea2:	68 94       	set
    4ea4:	ca cb       	rjmp	.-2156   	; 0x463a <__fp_szero>
    4ea6:	c8 cb       	rjmp	.-2160   	; 0x4638 <__fp_zero>

00004ea8 <pow>:
    4ea8:	fa 01       	movw	r30, r20
    4eaa:	ee 0f       	add	r30, r30
    4eac:	ff 1f       	adc	r31, r31
    4eae:	30 96       	adiw	r30, 0x00	; 0
    4eb0:	21 05       	cpc	r18, r1
    4eb2:	31 05       	cpc	r19, r1
    4eb4:	99 f1       	breq	.+102    	; 0x4f1c <pow+0x74>
    4eb6:	61 15       	cp	r22, r1
    4eb8:	71 05       	cpc	r23, r1
    4eba:	61 f4       	brne	.+24     	; 0x4ed4 <pow+0x2c>
    4ebc:	80 38       	cpi	r24, 0x80	; 128
    4ebe:	bf e3       	ldi	r27, 0x3F	; 63
    4ec0:	9b 07       	cpc	r25, r27
    4ec2:	49 f1       	breq	.+82     	; 0x4f16 <pow+0x6e>
    4ec4:	68 94       	set
    4ec6:	90 38       	cpi	r25, 0x80	; 128
    4ec8:	81 05       	cpc	r24, r1
    4eca:	61 f0       	breq	.+24     	; 0x4ee4 <pow+0x3c>
    4ecc:	80 38       	cpi	r24, 0x80	; 128
    4ece:	bf ef       	ldi	r27, 0xFF	; 255
    4ed0:	9b 07       	cpc	r25, r27
    4ed2:	41 f0       	breq	.+16     	; 0x4ee4 <pow+0x3c>
    4ed4:	99 23       	and	r25, r25
    4ed6:	42 f5       	brpl	.+80     	; 0x4f28 <pow+0x80>
    4ed8:	ff 3f       	cpi	r31, 0xFF	; 255
    4eda:	e1 05       	cpc	r30, r1
    4edc:	31 05       	cpc	r19, r1
    4ede:	21 05       	cpc	r18, r1
    4ee0:	11 f1       	breq	.+68     	; 0x4f26 <pow+0x7e>
    4ee2:	e8 94       	clt
    4ee4:	08 94       	sec
    4ee6:	e7 95       	ror	r30
    4ee8:	d9 01       	movw	r26, r18
    4eea:	aa 23       	and	r26, r26
    4eec:	29 f4       	brne	.+10     	; 0x4ef8 <pow+0x50>
    4eee:	ab 2f       	mov	r26, r27
    4ef0:	be 2f       	mov	r27, r30
    4ef2:	f8 5f       	subi	r31, 0xF8	; 248
    4ef4:	d0 f3       	brcs	.-12     	; 0x4eea <pow+0x42>
    4ef6:	10 c0       	rjmp	.+32     	; 0x4f18 <pow+0x70>
    4ef8:	ff 5f       	subi	r31, 0xFF	; 255
    4efa:	70 f4       	brcc	.+28     	; 0x4f18 <pow+0x70>
    4efc:	a6 95       	lsr	r26
    4efe:	e0 f7       	brcc	.-8      	; 0x4ef8 <pow+0x50>
    4f00:	f7 39       	cpi	r31, 0x97	; 151
    4f02:	50 f0       	brcs	.+20     	; 0x4f18 <pow+0x70>
    4f04:	19 f0       	breq	.+6      	; 0x4f0c <pow+0x64>
    4f06:	ff 3a       	cpi	r31, 0xAF	; 175
    4f08:	38 f4       	brcc	.+14     	; 0x4f18 <pow+0x70>
    4f0a:	9f 77       	andi	r25, 0x7F	; 127
    4f0c:	9f 93       	push	r25
    4f0e:	0c d0       	rcall	.+24     	; 0x4f28 <pow+0x80>
    4f10:	0f 90       	pop	r0
    4f12:	07 fc       	sbrc	r0, 7
    4f14:	90 58       	subi	r25, 0x80	; 128
    4f16:	08 95       	ret
    4f18:	3e f0       	brts	.+14     	; 0x4f28 <pow+0x80>
    4f1a:	25 cb       	rjmp	.-2486   	; 0x4566 <__fp_nan>
    4f1c:	60 e0       	ldi	r22, 0x00	; 0
    4f1e:	70 e0       	ldi	r23, 0x00	; 0
    4f20:	80 e8       	ldi	r24, 0x80	; 128
    4f22:	9f e3       	ldi	r25, 0x3F	; 63
    4f24:	08 95       	ret
    4f26:	4f e7       	ldi	r20, 0x7F	; 127
    4f28:	9f 77       	andi	r25, 0x7F	; 127
    4f2a:	5f 93       	push	r21
    4f2c:	4f 93       	push	r20
    4f2e:	3f 93       	push	r19
    4f30:	2f 93       	push	r18
    4f32:	72 d0       	rcall	.+228    	; 0x5018 <log>
    4f34:	2f 91       	pop	r18
    4f36:	3f 91       	pop	r19
    4f38:	4f 91       	pop	r20
    4f3a:	5f 91       	pop	r21
    4f3c:	8f db       	rcall	.-2274   	; 0x465c <__mulsf3>
    4f3e:	05 c0       	rjmp	.+10     	; 0x4f4a <exp>
    4f40:	19 f4       	brne	.+6      	; 0x4f48 <pow+0xa0>
    4f42:	0e f0       	brts	.+2      	; 0x4f46 <pow+0x9e>
    4f44:	0a cb       	rjmp	.-2540   	; 0x455a <__fp_inf>
    4f46:	78 cb       	rjmp	.-2320   	; 0x4638 <__fp_zero>
    4f48:	0e cb       	rjmp	.-2532   	; 0x4566 <__fp_nan>

00004f4a <exp>:
    4f4a:	5c db       	rcall	.-2376   	; 0x4604 <__fp_splitA>
    4f4c:	c8 f3       	brcs	.-14     	; 0x4f40 <pow+0x98>
    4f4e:	96 38       	cpi	r25, 0x86	; 134
    4f50:	c0 f7       	brcc	.-16     	; 0x4f42 <pow+0x9a>
    4f52:	07 f8       	bld	r0, 7
    4f54:	0f 92       	push	r0
    4f56:	e8 94       	clt
    4f58:	2b e3       	ldi	r18, 0x3B	; 59
    4f5a:	3a ea       	ldi	r19, 0xAA	; 170
    4f5c:	48 eb       	ldi	r20, 0xB8	; 184
    4f5e:	5f e7       	ldi	r21, 0x7F	; 127
    4f60:	8b db       	rcall	.-2282   	; 0x4678 <__mulsf3_pse>
    4f62:	0f 92       	push	r0
    4f64:	0f 92       	push	r0
    4f66:	0f 92       	push	r0
    4f68:	4d b7       	in	r20, 0x3d	; 61
    4f6a:	5e b7       	in	r21, 0x3e	; 62
    4f6c:	0f 92       	push	r0
    4f6e:	94 d0       	rcall	.+296    	; 0x5098 <modf>
    4f70:	e8 ec       	ldi	r30, 0xC8	; 200
    4f72:	f0 e0       	ldi	r31, 0x00	; 0
    4f74:	fb da       	rcall	.-2570   	; 0x456c <__fp_powser>
    4f76:	4f 91       	pop	r20
    4f78:	5f 91       	pop	r21
    4f7a:	ef 91       	pop	r30
    4f7c:	ff 91       	pop	r31
    4f7e:	e5 95       	asr	r30
    4f80:	ee 1f       	adc	r30, r30
    4f82:	ff 1f       	adc	r31, r31
    4f84:	49 f0       	breq	.+18     	; 0x4f98 <exp+0x4e>
    4f86:	fe 57       	subi	r31, 0x7E	; 126
    4f88:	e0 68       	ori	r30, 0x80	; 128
    4f8a:	44 27       	eor	r20, r20
    4f8c:	ee 0f       	add	r30, r30
    4f8e:	44 1f       	adc	r20, r20
    4f90:	fa 95       	dec	r31
    4f92:	e1 f7       	brne	.-8      	; 0x4f8c <exp+0x42>
    4f94:	41 95       	neg	r20
    4f96:	55 0b       	sbc	r21, r21
    4f98:	06 d0       	rcall	.+12     	; 0x4fa6 <ldexp>
    4f9a:	0f 90       	pop	r0
    4f9c:	07 fe       	sbrs	r0, 7
    4f9e:	57 cb       	rjmp	.-2386   	; 0x464e <inverse>
    4fa0:	08 95       	ret
    4fa2:	db ca       	rjmp	.-2634   	; 0x455a <__fp_inf>
    4fa4:	be cb       	rjmp	.-2180   	; 0x4722 <__fp_mpack>

00004fa6 <ldexp>:
    4fa6:	2e db       	rcall	.-2468   	; 0x4604 <__fp_splitA>
    4fa8:	e8 f3       	brcs	.-6      	; 0x4fa4 <exp+0x5a>
    4faa:	99 23       	and	r25, r25
    4fac:	d9 f3       	breq	.-10     	; 0x4fa4 <exp+0x5a>
    4fae:	94 0f       	add	r25, r20
    4fb0:	51 1d       	adc	r21, r1
    4fb2:	bb f3       	brvs	.-18     	; 0x4fa2 <exp+0x58>
    4fb4:	91 50       	subi	r25, 0x01	; 1
    4fb6:	50 40       	sbci	r21, 0x00	; 0
    4fb8:	94 f0       	brlt	.+36     	; 0x4fde <ldexp+0x38>
    4fba:	59 f0       	breq	.+22     	; 0x4fd2 <ldexp+0x2c>
    4fbc:	88 23       	and	r24, r24
    4fbe:	32 f0       	brmi	.+12     	; 0x4fcc <ldexp+0x26>
    4fc0:	66 0f       	add	r22, r22
    4fc2:	77 1f       	adc	r23, r23
    4fc4:	88 1f       	adc	r24, r24
    4fc6:	91 50       	subi	r25, 0x01	; 1
    4fc8:	50 40       	sbci	r21, 0x00	; 0
    4fca:	c1 f7       	brne	.-16     	; 0x4fbc <ldexp+0x16>
    4fcc:	9e 3f       	cpi	r25, 0xFE	; 254
    4fce:	51 05       	cpc	r21, r1
    4fd0:	44 f7       	brge	.-48     	; 0x4fa2 <exp+0x58>
    4fd2:	88 0f       	add	r24, r24
    4fd4:	91 1d       	adc	r25, r1
    4fd6:	96 95       	lsr	r25
    4fd8:	87 95       	ror	r24
    4fda:	97 f9       	bld	r25, 7
    4fdc:	08 95       	ret
    4fde:	5f 3f       	cpi	r21, 0xFF	; 255
    4fe0:	ac f0       	brlt	.+42     	; 0x500c <ldexp+0x66>
    4fe2:	98 3e       	cpi	r25, 0xE8	; 232
    4fe4:	9c f0       	brlt	.+38     	; 0x500c <ldexp+0x66>
    4fe6:	bb 27       	eor	r27, r27
    4fe8:	86 95       	lsr	r24
    4fea:	77 95       	ror	r23
    4fec:	67 95       	ror	r22
    4fee:	b7 95       	ror	r27
    4ff0:	08 f4       	brcc	.+2      	; 0x4ff4 <ldexp+0x4e>
    4ff2:	b1 60       	ori	r27, 0x01	; 1
    4ff4:	93 95       	inc	r25
    4ff6:	c1 f7       	brne	.-16     	; 0x4fe8 <ldexp+0x42>
    4ff8:	bb 0f       	add	r27, r27
    4ffa:	58 f7       	brcc	.-42     	; 0x4fd2 <ldexp+0x2c>
    4ffc:	11 f4       	brne	.+4      	; 0x5002 <ldexp+0x5c>
    4ffe:	60 ff       	sbrs	r22, 0
    5000:	e8 cf       	rjmp	.-48     	; 0x4fd2 <ldexp+0x2c>
    5002:	6f 5f       	subi	r22, 0xFF	; 255
    5004:	7f 4f       	sbci	r23, 0xFF	; 255
    5006:	8f 4f       	sbci	r24, 0xFF	; 255
    5008:	9f 4f       	sbci	r25, 0xFF	; 255
    500a:	e3 cf       	rjmp	.-58     	; 0x4fd2 <ldexp+0x2c>
    500c:	16 cb       	rjmp	.-2516   	; 0x463a <__fp_szero>
    500e:	0e f0       	brts	.+2      	; 0x5012 <ldexp+0x6c>
    5010:	88 cb       	rjmp	.-2288   	; 0x4722 <__fp_mpack>
    5012:	a9 ca       	rjmp	.-2734   	; 0x4566 <__fp_nan>
    5014:	68 94       	set
    5016:	a1 ca       	rjmp	.-2750   	; 0x455a <__fp_inf>

00005018 <log>:
    5018:	f5 da       	rcall	.-2582   	; 0x4604 <__fp_splitA>
    501a:	c8 f3       	brcs	.-14     	; 0x500e <ldexp+0x68>
    501c:	99 23       	and	r25, r25
    501e:	d1 f3       	breq	.-12     	; 0x5014 <ldexp+0x6e>
    5020:	c6 f3       	brts	.-16     	; 0x5012 <ldexp+0x6c>
    5022:	df 93       	push	r29
    5024:	cf 93       	push	r28
    5026:	1f 93       	push	r17
    5028:	0f 93       	push	r16
    502a:	ff 92       	push	r15
    502c:	c9 2f       	mov	r28, r25
    502e:	dd 27       	eor	r29, r29
    5030:	88 23       	and	r24, r24
    5032:	2a f0       	brmi	.+10     	; 0x503e <log+0x26>
    5034:	21 97       	sbiw	r28, 0x01	; 1
    5036:	66 0f       	add	r22, r22
    5038:	77 1f       	adc	r23, r23
    503a:	88 1f       	adc	r24, r24
    503c:	da f7       	brpl	.-10     	; 0x5034 <log+0x1c>
    503e:	20 e0       	ldi	r18, 0x00	; 0
    5040:	30 e0       	ldi	r19, 0x00	; 0
    5042:	40 e8       	ldi	r20, 0x80	; 128
    5044:	5f eb       	ldi	r21, 0xBF	; 191
    5046:	9f e3       	ldi	r25, 0x3F	; 63
    5048:	88 39       	cpi	r24, 0x98	; 152
    504a:	20 f0       	brcs	.+8      	; 0x5054 <log+0x3c>
    504c:	80 3e       	cpi	r24, 0xE0	; 224
    504e:	30 f0       	brcs	.+12     	; 0x505c <log+0x44>
    5050:	21 96       	adiw	r28, 0x01	; 1
    5052:	8f 77       	andi	r24, 0x7F	; 127
    5054:	20 d9       	rcall	.-3520   	; 0x4296 <__addsf3>
    5056:	e0 ef       	ldi	r30, 0xF0	; 240
    5058:	f0 e0       	ldi	r31, 0x00	; 0
    505a:	03 c0       	rjmp	.+6      	; 0x5062 <log+0x4a>
    505c:	1c d9       	rcall	.-3528   	; 0x4296 <__addsf3>
    505e:	ed e1       	ldi	r30, 0x1D	; 29
    5060:	f1 e0       	ldi	r31, 0x01	; 1
    5062:	84 da       	rcall	.-2808   	; 0x456c <__fp_powser>
    5064:	8b 01       	movw	r16, r22
    5066:	be 01       	movw	r22, r28
    5068:	ec 01       	movw	r28, r24
    506a:	fb 2e       	mov	r15, r27
    506c:	6f 57       	subi	r22, 0x7F	; 127
    506e:	71 09       	sbc	r23, r1
    5070:	75 95       	asr	r23
    5072:	77 1f       	adc	r23, r23
    5074:	88 0b       	sbc	r24, r24
    5076:	99 0b       	sbc	r25, r25
    5078:	11 da       	rcall	.-3038   	; 0x449c <__floatsisf>
    507a:	28 e1       	ldi	r18, 0x18	; 24
    507c:	32 e7       	ldi	r19, 0x72	; 114
    507e:	41 e3       	ldi	r20, 0x31	; 49
    5080:	5f e3       	ldi	r21, 0x3F	; 63
    5082:	f8 da       	rcall	.-2576   	; 0x4674 <__mulsf3x>
    5084:	af 2d       	mov	r26, r15
    5086:	98 01       	movw	r18, r16
    5088:	ae 01       	movw	r20, r28
    508a:	ff 90       	pop	r15
    508c:	0f 91       	pop	r16
    508e:	1f 91       	pop	r17
    5090:	cf 91       	pop	r28
    5092:	df 91       	pop	r29
    5094:	11 d9       	rcall	.-3550   	; 0x42b8 <__addsf3x>
    5096:	9d ca       	rjmp	.-2758   	; 0x45d2 <__fp_round>

00005098 <modf>:
    5098:	fa 01       	movw	r30, r20
    509a:	dc 01       	movw	r26, r24
    509c:	aa 0f       	add	r26, r26
    509e:	bb 1f       	adc	r27, r27
    50a0:	9b 01       	movw	r18, r22
    50a2:	ac 01       	movw	r20, r24
    50a4:	bf 57       	subi	r27, 0x7F	; 127
    50a6:	28 f4       	brcc	.+10     	; 0x50b2 <modf+0x1a>
    50a8:	22 27       	eor	r18, r18
    50aa:	33 27       	eor	r19, r19
    50ac:	44 27       	eor	r20, r20
    50ae:	50 78       	andi	r21, 0x80	; 128
    50b0:	1f c0       	rjmp	.+62     	; 0x50f0 <modf+0x58>
    50b2:	b7 51       	subi	r27, 0x17	; 23
    50b4:	88 f4       	brcc	.+34     	; 0x50d8 <modf+0x40>
    50b6:	ab 2f       	mov	r26, r27
    50b8:	00 24       	eor	r0, r0
    50ba:	46 95       	lsr	r20
    50bc:	37 95       	ror	r19
    50be:	27 95       	ror	r18
    50c0:	01 1c       	adc	r0, r1
    50c2:	a3 95       	inc	r26
    50c4:	d2 f3       	brmi	.-12     	; 0x50ba <modf+0x22>
    50c6:	00 20       	and	r0, r0
    50c8:	69 f0       	breq	.+26     	; 0x50e4 <modf+0x4c>
    50ca:	22 0f       	add	r18, r18
    50cc:	33 1f       	adc	r19, r19
    50ce:	44 1f       	adc	r20, r20
    50d0:	b3 95       	inc	r27
    50d2:	da f3       	brmi	.-10     	; 0x50ca <modf+0x32>
    50d4:	0d d0       	rcall	.+26     	; 0x50f0 <modf+0x58>
    50d6:	de c8       	rjmp	.-3652   	; 0x4294 <__subsf3>
    50d8:	61 30       	cpi	r22, 0x01	; 1
    50da:	71 05       	cpc	r23, r1
    50dc:	a0 e8       	ldi	r26, 0x80	; 128
    50de:	8a 07       	cpc	r24, r26
    50e0:	b9 46       	sbci	r27, 0x69	; 105
    50e2:	30 f4       	brcc	.+12     	; 0x50f0 <modf+0x58>
    50e4:	9b 01       	movw	r18, r22
    50e6:	ac 01       	movw	r20, r24
    50e8:	66 27       	eor	r22, r22
    50ea:	77 27       	eor	r23, r23
    50ec:	88 27       	eor	r24, r24
    50ee:	90 78       	andi	r25, 0x80	; 128
    50f0:	30 96       	adiw	r30, 0x00	; 0
    50f2:	21 f0       	breq	.+8      	; 0x50fc <modf+0x64>
    50f4:	20 83       	st	Z, r18
    50f6:	31 83       	std	Z+1, r19	; 0x01
    50f8:	42 83       	std	Z+2, r20	; 0x02
    50fa:	53 83       	std	Z+3, r21	; 0x03
    50fc:	08 95       	ret

000050fe <__mulsi3>:
    50fe:	db 01       	movw	r26, r22
    5100:	8f 93       	push	r24
    5102:	9f 93       	push	r25
    5104:	0e 94 c5 28 	call	0x518a	; 0x518a <__muluhisi3>
    5108:	bf 91       	pop	r27
    510a:	af 91       	pop	r26
    510c:	a2 9f       	mul	r26, r18
    510e:	80 0d       	add	r24, r0
    5110:	91 1d       	adc	r25, r1
    5112:	a3 9f       	mul	r26, r19
    5114:	90 0d       	add	r25, r0
    5116:	b2 9f       	mul	r27, r18
    5118:	90 0d       	add	r25, r0
    511a:	11 24       	eor	r1, r1
    511c:	08 95       	ret

0000511e <__divmodhi4>:
    511e:	97 fb       	bst	r25, 7
    5120:	07 2e       	mov	r0, r23
    5122:	16 f4       	brtc	.+4      	; 0x5128 <__divmodhi4+0xa>
    5124:	00 94       	com	r0
    5126:	07 d0       	rcall	.+14     	; 0x5136 <__divmodhi4_neg1>
    5128:	77 fd       	sbrc	r23, 7
    512a:	09 d0       	rcall	.+18     	; 0x513e <__divmodhi4_neg2>
    512c:	0e 94 07 29 	call	0x520e	; 0x520e <__udivmodhi4>
    5130:	07 fc       	sbrc	r0, 7
    5132:	05 d0       	rcall	.+10     	; 0x513e <__divmodhi4_neg2>
    5134:	3e f4       	brtc	.+14     	; 0x5144 <__divmodhi4_exit>

00005136 <__divmodhi4_neg1>:
    5136:	90 95       	com	r25
    5138:	81 95       	neg	r24
    513a:	9f 4f       	sbci	r25, 0xFF	; 255
    513c:	08 95       	ret

0000513e <__divmodhi4_neg2>:
    513e:	70 95       	com	r23
    5140:	61 95       	neg	r22
    5142:	7f 4f       	sbci	r23, 0xFF	; 255

00005144 <__divmodhi4_exit>:
    5144:	08 95       	ret

00005146 <__udivmodsi4>:
    5146:	a1 e2       	ldi	r26, 0x21	; 33
    5148:	1a 2e       	mov	r1, r26
    514a:	aa 1b       	sub	r26, r26
    514c:	bb 1b       	sub	r27, r27
    514e:	fd 01       	movw	r30, r26
    5150:	0d c0       	rjmp	.+26     	; 0x516c <__udivmodsi4_ep>

00005152 <__udivmodsi4_loop>:
    5152:	aa 1f       	adc	r26, r26
    5154:	bb 1f       	adc	r27, r27
    5156:	ee 1f       	adc	r30, r30
    5158:	ff 1f       	adc	r31, r31
    515a:	a2 17       	cp	r26, r18
    515c:	b3 07       	cpc	r27, r19
    515e:	e4 07       	cpc	r30, r20
    5160:	f5 07       	cpc	r31, r21
    5162:	20 f0       	brcs	.+8      	; 0x516c <__udivmodsi4_ep>
    5164:	a2 1b       	sub	r26, r18
    5166:	b3 0b       	sbc	r27, r19
    5168:	e4 0b       	sbc	r30, r20
    516a:	f5 0b       	sbc	r31, r21

0000516c <__udivmodsi4_ep>:
    516c:	66 1f       	adc	r22, r22
    516e:	77 1f       	adc	r23, r23
    5170:	88 1f       	adc	r24, r24
    5172:	99 1f       	adc	r25, r25
    5174:	1a 94       	dec	r1
    5176:	69 f7       	brne	.-38     	; 0x5152 <__udivmodsi4_loop>
    5178:	60 95       	com	r22
    517a:	70 95       	com	r23
    517c:	80 95       	com	r24
    517e:	90 95       	com	r25
    5180:	9b 01       	movw	r18, r22
    5182:	ac 01       	movw	r20, r24
    5184:	bd 01       	movw	r22, r26
    5186:	cf 01       	movw	r24, r30
    5188:	08 95       	ret

0000518a <__muluhisi3>:
    518a:	0e 94 1b 29 	call	0x5236	; 0x5236 <__umulhisi3>
    518e:	a5 9f       	mul	r26, r21
    5190:	90 0d       	add	r25, r0
    5192:	b4 9f       	mul	r27, r20
    5194:	90 0d       	add	r25, r0
    5196:	a4 9f       	mul	r26, r20
    5198:	80 0d       	add	r24, r0
    519a:	91 1d       	adc	r25, r1
    519c:	11 24       	eor	r1, r1
    519e:	08 95       	ret

000051a0 <__prologue_saves__>:
    51a0:	2f 92       	push	r2
    51a2:	3f 92       	push	r3
    51a4:	4f 92       	push	r4
    51a6:	5f 92       	push	r5
    51a8:	6f 92       	push	r6
    51aa:	7f 92       	push	r7
    51ac:	8f 92       	push	r8
    51ae:	9f 92       	push	r9
    51b0:	af 92       	push	r10
    51b2:	bf 92       	push	r11
    51b4:	cf 92       	push	r12
    51b6:	df 92       	push	r13
    51b8:	ef 92       	push	r14
    51ba:	ff 92       	push	r15
    51bc:	0f 93       	push	r16
    51be:	1f 93       	push	r17
    51c0:	cf 93       	push	r28
    51c2:	df 93       	push	r29
    51c4:	cd b7       	in	r28, 0x3d	; 61
    51c6:	de b7       	in	r29, 0x3e	; 62
    51c8:	ca 1b       	sub	r28, r26
    51ca:	db 0b       	sbc	r29, r27
    51cc:	0f b6       	in	r0, 0x3f	; 63
    51ce:	f8 94       	cli
    51d0:	de bf       	out	0x3e, r29	; 62
    51d2:	0f be       	out	0x3f, r0	; 63
    51d4:	cd bf       	out	0x3d, r28	; 61
    51d6:	09 94       	ijmp

000051d8 <__epilogue_restores__>:
    51d8:	2a 88       	ldd	r2, Y+18	; 0x12
    51da:	39 88       	ldd	r3, Y+17	; 0x11
    51dc:	48 88       	ldd	r4, Y+16	; 0x10
    51de:	5f 84       	ldd	r5, Y+15	; 0x0f
    51e0:	6e 84       	ldd	r6, Y+14	; 0x0e
    51e2:	7d 84       	ldd	r7, Y+13	; 0x0d
    51e4:	8c 84       	ldd	r8, Y+12	; 0x0c
    51e6:	9b 84       	ldd	r9, Y+11	; 0x0b
    51e8:	aa 84       	ldd	r10, Y+10	; 0x0a
    51ea:	b9 84       	ldd	r11, Y+9	; 0x09
    51ec:	c8 84       	ldd	r12, Y+8	; 0x08
    51ee:	df 80       	ldd	r13, Y+7	; 0x07
    51f0:	ee 80       	ldd	r14, Y+6	; 0x06
    51f2:	fd 80       	ldd	r15, Y+5	; 0x05
    51f4:	0c 81       	ldd	r16, Y+4	; 0x04
    51f6:	1b 81       	ldd	r17, Y+3	; 0x03
    51f8:	aa 81       	ldd	r26, Y+2	; 0x02
    51fa:	b9 81       	ldd	r27, Y+1	; 0x01
    51fc:	ce 0f       	add	r28, r30
    51fe:	d1 1d       	adc	r29, r1
    5200:	0f b6       	in	r0, 0x3f	; 63
    5202:	f8 94       	cli
    5204:	de bf       	out	0x3e, r29	; 62
    5206:	0f be       	out	0x3f, r0	; 63
    5208:	cd bf       	out	0x3d, r28	; 61
    520a:	ed 01       	movw	r28, r26
    520c:	08 95       	ret

0000520e <__udivmodhi4>:
    520e:	aa 1b       	sub	r26, r26
    5210:	bb 1b       	sub	r27, r27
    5212:	51 e1       	ldi	r21, 0x11	; 17
    5214:	07 c0       	rjmp	.+14     	; 0x5224 <__udivmodhi4_ep>

00005216 <__udivmodhi4_loop>:
    5216:	aa 1f       	adc	r26, r26
    5218:	bb 1f       	adc	r27, r27
    521a:	a6 17       	cp	r26, r22
    521c:	b7 07       	cpc	r27, r23
    521e:	10 f0       	brcs	.+4      	; 0x5224 <__udivmodhi4_ep>
    5220:	a6 1b       	sub	r26, r22
    5222:	b7 0b       	sbc	r27, r23

00005224 <__udivmodhi4_ep>:
    5224:	88 1f       	adc	r24, r24
    5226:	99 1f       	adc	r25, r25
    5228:	5a 95       	dec	r21
    522a:	a9 f7       	brne	.-22     	; 0x5216 <__udivmodhi4_loop>
    522c:	80 95       	com	r24
    522e:	90 95       	com	r25
    5230:	bc 01       	movw	r22, r24
    5232:	cd 01       	movw	r24, r26
    5234:	08 95       	ret

00005236 <__umulhisi3>:
    5236:	a2 9f       	mul	r26, r18
    5238:	b0 01       	movw	r22, r0
    523a:	b3 9f       	mul	r27, r19
    523c:	c0 01       	movw	r24, r0
    523e:	a3 9f       	mul	r26, r19
    5240:	70 0d       	add	r23, r0
    5242:	81 1d       	adc	r24, r1
    5244:	11 24       	eor	r1, r1
    5246:	91 1d       	adc	r25, r1
    5248:	b2 9f       	mul	r27, r18
    524a:	70 0d       	add	r23, r0
    524c:	81 1d       	adc	r24, r1
    524e:	11 24       	eor	r1, r1
    5250:	91 1d       	adc	r25, r1
    5252:	08 95       	ret

00005254 <malloc>:
    5254:	cf 93       	push	r28
    5256:	df 93       	push	r29
    5258:	82 30       	cpi	r24, 0x02	; 2
    525a:	91 05       	cpc	r25, r1
    525c:	10 f4       	brcc	.+4      	; 0x5262 <malloc+0xe>
    525e:	82 e0       	ldi	r24, 0x02	; 2
    5260:	90 e0       	ldi	r25, 0x00	; 0
    5262:	e0 91 90 04 	lds	r30, 0x0490
    5266:	f0 91 91 04 	lds	r31, 0x0491
    526a:	20 e0       	ldi	r18, 0x00	; 0
    526c:	30 e0       	ldi	r19, 0x00	; 0
    526e:	a0 e0       	ldi	r26, 0x00	; 0
    5270:	b0 e0       	ldi	r27, 0x00	; 0
    5272:	30 97       	sbiw	r30, 0x00	; 0
    5274:	39 f1       	breq	.+78     	; 0x52c4 <malloc+0x70>
    5276:	40 81       	ld	r20, Z
    5278:	51 81       	ldd	r21, Z+1	; 0x01
    527a:	48 17       	cp	r20, r24
    527c:	59 07       	cpc	r21, r25
    527e:	b8 f0       	brcs	.+46     	; 0x52ae <malloc+0x5a>
    5280:	48 17       	cp	r20, r24
    5282:	59 07       	cpc	r21, r25
    5284:	71 f4       	brne	.+28     	; 0x52a2 <malloc+0x4e>
    5286:	82 81       	ldd	r24, Z+2	; 0x02
    5288:	93 81       	ldd	r25, Z+3	; 0x03
    528a:	10 97       	sbiw	r26, 0x00	; 0
    528c:	29 f0       	breq	.+10     	; 0x5298 <malloc+0x44>
    528e:	13 96       	adiw	r26, 0x03	; 3
    5290:	9c 93       	st	X, r25
    5292:	8e 93       	st	-X, r24
    5294:	12 97       	sbiw	r26, 0x02	; 2
    5296:	2c c0       	rjmp	.+88     	; 0x52f0 <malloc+0x9c>
    5298:	90 93 91 04 	sts	0x0491, r25
    529c:	80 93 90 04 	sts	0x0490, r24
    52a0:	27 c0       	rjmp	.+78     	; 0x52f0 <malloc+0x9c>
    52a2:	21 15       	cp	r18, r1
    52a4:	31 05       	cpc	r19, r1
    52a6:	31 f0       	breq	.+12     	; 0x52b4 <malloc+0x60>
    52a8:	42 17       	cp	r20, r18
    52aa:	53 07       	cpc	r21, r19
    52ac:	18 f0       	brcs	.+6      	; 0x52b4 <malloc+0x60>
    52ae:	a9 01       	movw	r20, r18
    52b0:	db 01       	movw	r26, r22
    52b2:	01 c0       	rjmp	.+2      	; 0x52b6 <malloc+0x62>
    52b4:	ef 01       	movw	r28, r30
    52b6:	9a 01       	movw	r18, r20
    52b8:	bd 01       	movw	r22, r26
    52ba:	df 01       	movw	r26, r30
    52bc:	02 80       	ldd	r0, Z+2	; 0x02
    52be:	f3 81       	ldd	r31, Z+3	; 0x03
    52c0:	e0 2d       	mov	r30, r0
    52c2:	d7 cf       	rjmp	.-82     	; 0x5272 <malloc+0x1e>
    52c4:	21 15       	cp	r18, r1
    52c6:	31 05       	cpc	r19, r1
    52c8:	f9 f0       	breq	.+62     	; 0x5308 <malloc+0xb4>
    52ca:	28 1b       	sub	r18, r24
    52cc:	39 0b       	sbc	r19, r25
    52ce:	24 30       	cpi	r18, 0x04	; 4
    52d0:	31 05       	cpc	r19, r1
    52d2:	80 f4       	brcc	.+32     	; 0x52f4 <malloc+0xa0>
    52d4:	8a 81       	ldd	r24, Y+2	; 0x02
    52d6:	9b 81       	ldd	r25, Y+3	; 0x03
    52d8:	61 15       	cp	r22, r1
    52da:	71 05       	cpc	r23, r1
    52dc:	21 f0       	breq	.+8      	; 0x52e6 <malloc+0x92>
    52de:	fb 01       	movw	r30, r22
    52e0:	93 83       	std	Z+3, r25	; 0x03
    52e2:	82 83       	std	Z+2, r24	; 0x02
    52e4:	04 c0       	rjmp	.+8      	; 0x52ee <malloc+0x9a>
    52e6:	90 93 91 04 	sts	0x0491, r25
    52ea:	80 93 90 04 	sts	0x0490, r24
    52ee:	fe 01       	movw	r30, r28
    52f0:	32 96       	adiw	r30, 0x02	; 2
    52f2:	44 c0       	rjmp	.+136    	; 0x537c <malloc+0x128>
    52f4:	fe 01       	movw	r30, r28
    52f6:	e2 0f       	add	r30, r18
    52f8:	f3 1f       	adc	r31, r19
    52fa:	81 93       	st	Z+, r24
    52fc:	91 93       	st	Z+, r25
    52fe:	22 50       	subi	r18, 0x02	; 2
    5300:	31 09       	sbc	r19, r1
    5302:	39 83       	std	Y+1, r19	; 0x01
    5304:	28 83       	st	Y, r18
    5306:	3a c0       	rjmp	.+116    	; 0x537c <malloc+0x128>
    5308:	20 91 8e 04 	lds	r18, 0x048E
    530c:	30 91 8f 04 	lds	r19, 0x048F
    5310:	23 2b       	or	r18, r19
    5312:	41 f4       	brne	.+16     	; 0x5324 <malloc+0xd0>
    5314:	20 91 1f 01 	lds	r18, 0x011F
    5318:	30 91 20 01 	lds	r19, 0x0120
    531c:	30 93 8f 04 	sts	0x048F, r19
    5320:	20 93 8e 04 	sts	0x048E, r18
    5324:	20 91 1d 01 	lds	r18, 0x011D
    5328:	30 91 1e 01 	lds	r19, 0x011E
    532c:	21 15       	cp	r18, r1
    532e:	31 05       	cpc	r19, r1
    5330:	41 f4       	brne	.+16     	; 0x5342 <malloc+0xee>
    5332:	2d b7       	in	r18, 0x3d	; 61
    5334:	3e b7       	in	r19, 0x3e	; 62
    5336:	40 91 21 01 	lds	r20, 0x0121
    533a:	50 91 22 01 	lds	r21, 0x0122
    533e:	24 1b       	sub	r18, r20
    5340:	35 0b       	sbc	r19, r21
    5342:	e0 91 8e 04 	lds	r30, 0x048E
    5346:	f0 91 8f 04 	lds	r31, 0x048F
    534a:	e2 17       	cp	r30, r18
    534c:	f3 07       	cpc	r31, r19
    534e:	a0 f4       	brcc	.+40     	; 0x5378 <malloc+0x124>
    5350:	2e 1b       	sub	r18, r30
    5352:	3f 0b       	sbc	r19, r31
    5354:	28 17       	cp	r18, r24
    5356:	39 07       	cpc	r19, r25
    5358:	78 f0       	brcs	.+30     	; 0x5378 <malloc+0x124>
    535a:	ac 01       	movw	r20, r24
    535c:	4e 5f       	subi	r20, 0xFE	; 254
    535e:	5f 4f       	sbci	r21, 0xFF	; 255
    5360:	24 17       	cp	r18, r20
    5362:	35 07       	cpc	r19, r21
    5364:	48 f0       	brcs	.+18     	; 0x5378 <malloc+0x124>
    5366:	4e 0f       	add	r20, r30
    5368:	5f 1f       	adc	r21, r31
    536a:	50 93 8f 04 	sts	0x048F, r21
    536e:	40 93 8e 04 	sts	0x048E, r20
    5372:	81 93       	st	Z+, r24
    5374:	91 93       	st	Z+, r25
    5376:	02 c0       	rjmp	.+4      	; 0x537c <malloc+0x128>
    5378:	e0 e0       	ldi	r30, 0x00	; 0
    537a:	f0 e0       	ldi	r31, 0x00	; 0
    537c:	cf 01       	movw	r24, r30
    537e:	df 91       	pop	r29
    5380:	cf 91       	pop	r28
    5382:	08 95       	ret

00005384 <free>:
    5384:	cf 93       	push	r28
    5386:	df 93       	push	r29
    5388:	00 97       	sbiw	r24, 0x00	; 0
    538a:	09 f4       	brne	.+2      	; 0x538e <free+0xa>
    538c:	87 c0       	rjmp	.+270    	; 0x549c <free+0x118>
    538e:	fc 01       	movw	r30, r24
    5390:	32 97       	sbiw	r30, 0x02	; 2
    5392:	13 82       	std	Z+3, r1	; 0x03
    5394:	12 82       	std	Z+2, r1	; 0x02
    5396:	c0 91 90 04 	lds	r28, 0x0490
    539a:	d0 91 91 04 	lds	r29, 0x0491
    539e:	20 97       	sbiw	r28, 0x00	; 0
    53a0:	81 f4       	brne	.+32     	; 0x53c2 <free+0x3e>
    53a2:	20 81       	ld	r18, Z
    53a4:	31 81       	ldd	r19, Z+1	; 0x01
    53a6:	28 0f       	add	r18, r24
    53a8:	39 1f       	adc	r19, r25
    53aa:	80 91 8e 04 	lds	r24, 0x048E
    53ae:	90 91 8f 04 	lds	r25, 0x048F
    53b2:	82 17       	cp	r24, r18
    53b4:	93 07       	cpc	r25, r19
    53b6:	79 f5       	brne	.+94     	; 0x5416 <free+0x92>
    53b8:	f0 93 8f 04 	sts	0x048F, r31
    53bc:	e0 93 8e 04 	sts	0x048E, r30
    53c0:	6d c0       	rjmp	.+218    	; 0x549c <free+0x118>
    53c2:	de 01       	movw	r26, r28
    53c4:	20 e0       	ldi	r18, 0x00	; 0
    53c6:	30 e0       	ldi	r19, 0x00	; 0
    53c8:	ae 17       	cp	r26, r30
    53ca:	bf 07       	cpc	r27, r31
    53cc:	50 f4       	brcc	.+20     	; 0x53e2 <free+0x5e>
    53ce:	12 96       	adiw	r26, 0x02	; 2
    53d0:	4d 91       	ld	r20, X+
    53d2:	5c 91       	ld	r21, X
    53d4:	13 97       	sbiw	r26, 0x03	; 3
    53d6:	9d 01       	movw	r18, r26
    53d8:	41 15       	cp	r20, r1
    53da:	51 05       	cpc	r21, r1
    53dc:	09 f1       	breq	.+66     	; 0x5420 <free+0x9c>
    53de:	da 01       	movw	r26, r20
    53e0:	f3 cf       	rjmp	.-26     	; 0x53c8 <free+0x44>
    53e2:	b3 83       	std	Z+3, r27	; 0x03
    53e4:	a2 83       	std	Z+2, r26	; 0x02
    53e6:	40 81       	ld	r20, Z
    53e8:	51 81       	ldd	r21, Z+1	; 0x01
    53ea:	84 0f       	add	r24, r20
    53ec:	95 1f       	adc	r25, r21
    53ee:	8a 17       	cp	r24, r26
    53f0:	9b 07       	cpc	r25, r27
    53f2:	71 f4       	brne	.+28     	; 0x5410 <free+0x8c>
    53f4:	8d 91       	ld	r24, X+
    53f6:	9c 91       	ld	r25, X
    53f8:	11 97       	sbiw	r26, 0x01	; 1
    53fa:	84 0f       	add	r24, r20
    53fc:	95 1f       	adc	r25, r21
    53fe:	02 96       	adiw	r24, 0x02	; 2
    5400:	91 83       	std	Z+1, r25	; 0x01
    5402:	80 83       	st	Z, r24
    5404:	12 96       	adiw	r26, 0x02	; 2
    5406:	8d 91       	ld	r24, X+
    5408:	9c 91       	ld	r25, X
    540a:	13 97       	sbiw	r26, 0x03	; 3
    540c:	93 83       	std	Z+3, r25	; 0x03
    540e:	82 83       	std	Z+2, r24	; 0x02
    5410:	21 15       	cp	r18, r1
    5412:	31 05       	cpc	r19, r1
    5414:	29 f4       	brne	.+10     	; 0x5420 <free+0x9c>
    5416:	f0 93 91 04 	sts	0x0491, r31
    541a:	e0 93 90 04 	sts	0x0490, r30
    541e:	3e c0       	rjmp	.+124    	; 0x549c <free+0x118>
    5420:	d9 01       	movw	r26, r18
    5422:	13 96       	adiw	r26, 0x03	; 3
    5424:	fc 93       	st	X, r31
    5426:	ee 93       	st	-X, r30
    5428:	12 97       	sbiw	r26, 0x02	; 2
    542a:	4d 91       	ld	r20, X+
    542c:	5d 91       	ld	r21, X+
    542e:	a4 0f       	add	r26, r20
    5430:	b5 1f       	adc	r27, r21
    5432:	ea 17       	cp	r30, r26
    5434:	fb 07       	cpc	r31, r27
    5436:	79 f4       	brne	.+30     	; 0x5456 <free+0xd2>
    5438:	80 81       	ld	r24, Z
    543a:	91 81       	ldd	r25, Z+1	; 0x01
    543c:	84 0f       	add	r24, r20
    543e:	95 1f       	adc	r25, r21
    5440:	02 96       	adiw	r24, 0x02	; 2
    5442:	d9 01       	movw	r26, r18
    5444:	11 96       	adiw	r26, 0x01	; 1
    5446:	9c 93       	st	X, r25
    5448:	8e 93       	st	-X, r24
    544a:	82 81       	ldd	r24, Z+2	; 0x02
    544c:	93 81       	ldd	r25, Z+3	; 0x03
    544e:	13 96       	adiw	r26, 0x03	; 3
    5450:	9c 93       	st	X, r25
    5452:	8e 93       	st	-X, r24
    5454:	12 97       	sbiw	r26, 0x02	; 2
    5456:	e0 e0       	ldi	r30, 0x00	; 0
    5458:	f0 e0       	ldi	r31, 0x00	; 0
    545a:	8a 81       	ldd	r24, Y+2	; 0x02
    545c:	9b 81       	ldd	r25, Y+3	; 0x03
    545e:	00 97       	sbiw	r24, 0x00	; 0
    5460:	19 f0       	breq	.+6      	; 0x5468 <free+0xe4>
    5462:	fe 01       	movw	r30, r28
    5464:	ec 01       	movw	r28, r24
    5466:	f9 cf       	rjmp	.-14     	; 0x545a <free+0xd6>
    5468:	ce 01       	movw	r24, r28
    546a:	02 96       	adiw	r24, 0x02	; 2
    546c:	28 81       	ld	r18, Y
    546e:	39 81       	ldd	r19, Y+1	; 0x01
    5470:	82 0f       	add	r24, r18
    5472:	93 1f       	adc	r25, r19
    5474:	20 91 8e 04 	lds	r18, 0x048E
    5478:	30 91 8f 04 	lds	r19, 0x048F
    547c:	28 17       	cp	r18, r24
    547e:	39 07       	cpc	r19, r25
    5480:	69 f4       	brne	.+26     	; 0x549c <free+0x118>
    5482:	30 97       	sbiw	r30, 0x00	; 0
    5484:	29 f4       	brne	.+10     	; 0x5490 <free+0x10c>
    5486:	10 92 91 04 	sts	0x0491, r1
    548a:	10 92 90 04 	sts	0x0490, r1
    548e:	02 c0       	rjmp	.+4      	; 0x5494 <free+0x110>
    5490:	13 82       	std	Z+3, r1	; 0x03
    5492:	12 82       	std	Z+2, r1	; 0x02
    5494:	d0 93 8f 04 	sts	0x048F, r29
    5498:	c0 93 8e 04 	sts	0x048E, r28
    549c:	df 91       	pop	r29
    549e:	cf 91       	pop	r28
    54a0:	08 95       	ret

000054a2 <do_rand>:
    54a2:	8f 92       	push	r8
    54a4:	9f 92       	push	r9
    54a6:	af 92       	push	r10
    54a8:	bf 92       	push	r11
    54aa:	cf 92       	push	r12
    54ac:	df 92       	push	r13
    54ae:	ef 92       	push	r14
    54b0:	ff 92       	push	r15
    54b2:	cf 93       	push	r28
    54b4:	df 93       	push	r29
    54b6:	ec 01       	movw	r28, r24
    54b8:	68 81       	ld	r22, Y
    54ba:	79 81       	ldd	r23, Y+1	; 0x01
    54bc:	8a 81       	ldd	r24, Y+2	; 0x02
    54be:	9b 81       	ldd	r25, Y+3	; 0x03
    54c0:	61 15       	cp	r22, r1
    54c2:	71 05       	cpc	r23, r1
    54c4:	81 05       	cpc	r24, r1
    54c6:	91 05       	cpc	r25, r1
    54c8:	21 f4       	brne	.+8      	; 0x54d2 <do_rand+0x30>
    54ca:	64 e2       	ldi	r22, 0x24	; 36
    54cc:	79 ed       	ldi	r23, 0xD9	; 217
    54ce:	8b e5       	ldi	r24, 0x5B	; 91
    54d0:	97 e0       	ldi	r25, 0x07	; 7
    54d2:	2d e1       	ldi	r18, 0x1D	; 29
    54d4:	33 ef       	ldi	r19, 0xF3	; 243
    54d6:	41 e0       	ldi	r20, 0x01	; 1
    54d8:	50 e0       	ldi	r21, 0x00	; 0
    54da:	0e 94 6e 2c 	call	0x58dc	; 0x58dc <__divmodsi4>
    54de:	49 01       	movw	r8, r18
    54e0:	5a 01       	movw	r10, r20
    54e2:	9b 01       	movw	r18, r22
    54e4:	ac 01       	movw	r20, r24
    54e6:	a7 ea       	ldi	r26, 0xA7	; 167
    54e8:	b1 e4       	ldi	r27, 0x41	; 65
    54ea:	0e 94 c5 28 	call	0x518a	; 0x518a <__muluhisi3>
    54ee:	6b 01       	movw	r12, r22
    54f0:	7c 01       	movw	r14, r24
    54f2:	ac ee       	ldi	r26, 0xEC	; 236
    54f4:	b4 ef       	ldi	r27, 0xF4	; 244
    54f6:	a5 01       	movw	r20, r10
    54f8:	94 01       	movw	r18, r8
    54fa:	0e 94 90 2c 	call	0x5920	; 0x5920 <__mulohisi3>
    54fe:	c6 0e       	add	r12, r22
    5500:	d7 1e       	adc	r13, r23
    5502:	e8 1e       	adc	r14, r24
    5504:	f9 1e       	adc	r15, r25
    5506:	f7 fe       	sbrs	r15, 7
    5508:	06 c0       	rjmp	.+12     	; 0x5516 <do_rand+0x74>
    550a:	81 e0       	ldi	r24, 0x01	; 1
    550c:	c8 1a       	sub	r12, r24
    550e:	d1 08       	sbc	r13, r1
    5510:	e1 08       	sbc	r14, r1
    5512:	80 e8       	ldi	r24, 0x80	; 128
    5514:	f8 0a       	sbc	r15, r24
    5516:	c8 82       	st	Y, r12
    5518:	d9 82       	std	Y+1, r13	; 0x01
    551a:	ea 82       	std	Y+2, r14	; 0x02
    551c:	fb 82       	std	Y+3, r15	; 0x03
    551e:	c6 01       	movw	r24, r12
    5520:	9f 77       	andi	r25, 0x7F	; 127
    5522:	df 91       	pop	r29
    5524:	cf 91       	pop	r28
    5526:	ff 90       	pop	r15
    5528:	ef 90       	pop	r14
    552a:	df 90       	pop	r13
    552c:	cf 90       	pop	r12
    552e:	bf 90       	pop	r11
    5530:	af 90       	pop	r10
    5532:	9f 90       	pop	r9
    5534:	8f 90       	pop	r8
    5536:	08 95       	ret

00005538 <rand_r>:
    5538:	0e 94 51 2a 	call	0x54a2	; 0x54a2 <do_rand>
    553c:	08 95       	ret

0000553e <rand>:
    553e:	83 e2       	ldi	r24, 0x23	; 35
    5540:	91 e0       	ldi	r25, 0x01	; 1
    5542:	0e 94 51 2a 	call	0x54a2	; 0x54a2 <do_rand>
    5546:	08 95       	ret

00005548 <srand>:
    5548:	a0 e0       	ldi	r26, 0x00	; 0
    554a:	b0 e0       	ldi	r27, 0x00	; 0
    554c:	80 93 23 01 	sts	0x0123, r24
    5550:	90 93 24 01 	sts	0x0124, r25
    5554:	a0 93 25 01 	sts	0x0125, r26
    5558:	b0 93 26 01 	sts	0x0126, r27
    555c:	08 95       	ret

0000555e <__ftoa_engine>:
    555e:	28 30       	cpi	r18, 0x08	; 8
    5560:	08 f0       	brcs	.+2      	; 0x5564 <__ftoa_engine+0x6>
    5562:	27 e0       	ldi	r18, 0x07	; 7
    5564:	33 27       	eor	r19, r19
    5566:	da 01       	movw	r26, r20
    5568:	99 0f       	add	r25, r25
    556a:	31 1d       	adc	r19, r1
    556c:	87 fd       	sbrc	r24, 7
    556e:	91 60       	ori	r25, 0x01	; 1
    5570:	00 96       	adiw	r24, 0x00	; 0
    5572:	61 05       	cpc	r22, r1
    5574:	71 05       	cpc	r23, r1
    5576:	39 f4       	brne	.+14     	; 0x5586 <__ftoa_engine+0x28>
    5578:	32 60       	ori	r19, 0x02	; 2
    557a:	2e 5f       	subi	r18, 0xFE	; 254
    557c:	3d 93       	st	X+, r19
    557e:	30 e3       	ldi	r19, 0x30	; 48
    5580:	2a 95       	dec	r18
    5582:	e1 f7       	brne	.-8      	; 0x557c <__ftoa_engine+0x1e>
    5584:	08 95       	ret
    5586:	9f 3f       	cpi	r25, 0xFF	; 255
    5588:	30 f0       	brcs	.+12     	; 0x5596 <__ftoa_engine+0x38>
    558a:	80 38       	cpi	r24, 0x80	; 128
    558c:	71 05       	cpc	r23, r1
    558e:	61 05       	cpc	r22, r1
    5590:	09 f0       	breq	.+2      	; 0x5594 <__ftoa_engine+0x36>
    5592:	3c 5f       	subi	r19, 0xFC	; 252
    5594:	3c 5f       	subi	r19, 0xFC	; 252
    5596:	3d 93       	st	X+, r19
    5598:	91 30       	cpi	r25, 0x01	; 1
    559a:	08 f0       	brcs	.+2      	; 0x559e <__ftoa_engine+0x40>
    559c:	80 68       	ori	r24, 0x80	; 128
    559e:	91 1d       	adc	r25, r1
    55a0:	df 93       	push	r29
    55a2:	cf 93       	push	r28
    55a4:	1f 93       	push	r17
    55a6:	0f 93       	push	r16
    55a8:	ff 92       	push	r15
    55aa:	ef 92       	push	r14
    55ac:	19 2f       	mov	r17, r25
    55ae:	98 7f       	andi	r25, 0xF8	; 248
    55b0:	96 95       	lsr	r25
    55b2:	e9 2f       	mov	r30, r25
    55b4:	96 95       	lsr	r25
    55b6:	96 95       	lsr	r25
    55b8:	e9 0f       	add	r30, r25
    55ba:	ff 27       	eor	r31, r31
    55bc:	ef 53       	subi	r30, 0x3F	; 63
    55be:	fa 4f       	sbci	r31, 0xFA	; 250
    55c0:	99 27       	eor	r25, r25
    55c2:	33 27       	eor	r19, r19
    55c4:	ee 24       	eor	r14, r14
    55c6:	ff 24       	eor	r15, r15
    55c8:	a7 01       	movw	r20, r14
    55ca:	e7 01       	movw	r28, r14
    55cc:	05 90       	lpm	r0, Z+
    55ce:	08 94       	sec
    55d0:	07 94       	ror	r0
    55d2:	28 f4       	brcc	.+10     	; 0x55de <__ftoa_engine+0x80>
    55d4:	36 0f       	add	r19, r22
    55d6:	e7 1e       	adc	r14, r23
    55d8:	f8 1e       	adc	r15, r24
    55da:	49 1f       	adc	r20, r25
    55dc:	51 1d       	adc	r21, r1
    55de:	66 0f       	add	r22, r22
    55e0:	77 1f       	adc	r23, r23
    55e2:	88 1f       	adc	r24, r24
    55e4:	99 1f       	adc	r25, r25
    55e6:	06 94       	lsr	r0
    55e8:	a1 f7       	brne	.-24     	; 0x55d2 <__ftoa_engine+0x74>
    55ea:	05 90       	lpm	r0, Z+
    55ec:	07 94       	ror	r0
    55ee:	28 f4       	brcc	.+10     	; 0x55fa <__ftoa_engine+0x9c>
    55f0:	e7 0e       	add	r14, r23
    55f2:	f8 1e       	adc	r15, r24
    55f4:	49 1f       	adc	r20, r25
    55f6:	56 1f       	adc	r21, r22
    55f8:	c1 1d       	adc	r28, r1
    55fa:	77 0f       	add	r23, r23
    55fc:	88 1f       	adc	r24, r24
    55fe:	99 1f       	adc	r25, r25
    5600:	66 1f       	adc	r22, r22
    5602:	06 94       	lsr	r0
    5604:	a1 f7       	brne	.-24     	; 0x55ee <__ftoa_engine+0x90>
    5606:	05 90       	lpm	r0, Z+
    5608:	07 94       	ror	r0
    560a:	28 f4       	brcc	.+10     	; 0x5616 <__ftoa_engine+0xb8>
    560c:	f8 0e       	add	r15, r24
    560e:	49 1f       	adc	r20, r25
    5610:	56 1f       	adc	r21, r22
    5612:	c7 1f       	adc	r28, r23
    5614:	d1 1d       	adc	r29, r1
    5616:	88 0f       	add	r24, r24
    5618:	99 1f       	adc	r25, r25
    561a:	66 1f       	adc	r22, r22
    561c:	77 1f       	adc	r23, r23
    561e:	06 94       	lsr	r0
    5620:	a1 f7       	brne	.-24     	; 0x560a <__ftoa_engine+0xac>
    5622:	05 90       	lpm	r0, Z+
    5624:	07 94       	ror	r0
    5626:	20 f4       	brcc	.+8      	; 0x5630 <__ftoa_engine+0xd2>
    5628:	49 0f       	add	r20, r25
    562a:	56 1f       	adc	r21, r22
    562c:	c7 1f       	adc	r28, r23
    562e:	d8 1f       	adc	r29, r24
    5630:	99 0f       	add	r25, r25
    5632:	66 1f       	adc	r22, r22
    5634:	77 1f       	adc	r23, r23
    5636:	88 1f       	adc	r24, r24
    5638:	06 94       	lsr	r0
    563a:	a9 f7       	brne	.-22     	; 0x5626 <__ftoa_engine+0xc8>
    563c:	84 91       	lpm	r24, Z
    563e:	10 95       	com	r17
    5640:	17 70       	andi	r17, 0x07	; 7
    5642:	41 f0       	breq	.+16     	; 0x5654 <__ftoa_engine+0xf6>
    5644:	d6 95       	lsr	r29
    5646:	c7 95       	ror	r28
    5648:	57 95       	ror	r21
    564a:	47 95       	ror	r20
    564c:	f7 94       	ror	r15
    564e:	e7 94       	ror	r14
    5650:	1a 95       	dec	r17
    5652:	c1 f7       	brne	.-16     	; 0x5644 <__ftoa_engine+0xe6>
    5654:	e7 e6       	ldi	r30, 0x67	; 103
    5656:	f5 e0       	ldi	r31, 0x05	; 5
    5658:	68 94       	set
    565a:	15 90       	lpm	r1, Z+
    565c:	15 91       	lpm	r17, Z+
    565e:	35 91       	lpm	r19, Z+
    5660:	65 91       	lpm	r22, Z+
    5662:	95 91       	lpm	r25, Z+
    5664:	05 90       	lpm	r0, Z+
    5666:	7f e2       	ldi	r23, 0x2F	; 47
    5668:	73 95       	inc	r23
    566a:	e1 18       	sub	r14, r1
    566c:	f1 0a       	sbc	r15, r17
    566e:	43 0b       	sbc	r20, r19
    5670:	56 0b       	sbc	r21, r22
    5672:	c9 0b       	sbc	r28, r25
    5674:	d0 09       	sbc	r29, r0
    5676:	c0 f7       	brcc	.-16     	; 0x5668 <__ftoa_engine+0x10a>
    5678:	e1 0c       	add	r14, r1
    567a:	f1 1e       	adc	r15, r17
    567c:	43 1f       	adc	r20, r19
    567e:	56 1f       	adc	r21, r22
    5680:	c9 1f       	adc	r28, r25
    5682:	d0 1d       	adc	r29, r0
    5684:	7e f4       	brtc	.+30     	; 0x56a4 <__ftoa_engine+0x146>
    5686:	70 33       	cpi	r23, 0x30	; 48
    5688:	11 f4       	brne	.+4      	; 0x568e <__ftoa_engine+0x130>
    568a:	8a 95       	dec	r24
    568c:	e6 cf       	rjmp	.-52     	; 0x565a <__ftoa_engine+0xfc>
    568e:	e8 94       	clt
    5690:	01 50       	subi	r16, 0x01	; 1
    5692:	30 f0       	brcs	.+12     	; 0x56a0 <__ftoa_engine+0x142>
    5694:	08 0f       	add	r16, r24
    5696:	0a f4       	brpl	.+2      	; 0x569a <__ftoa_engine+0x13c>
    5698:	00 27       	eor	r16, r16
    569a:	02 17       	cp	r16, r18
    569c:	08 f4       	brcc	.+2      	; 0x56a0 <__ftoa_engine+0x142>
    569e:	20 2f       	mov	r18, r16
    56a0:	23 95       	inc	r18
    56a2:	02 2f       	mov	r16, r18
    56a4:	7a 33       	cpi	r23, 0x3A	; 58
    56a6:	28 f0       	brcs	.+10     	; 0x56b2 <__ftoa_engine+0x154>
    56a8:	79 e3       	ldi	r23, 0x39	; 57
    56aa:	7d 93       	st	X+, r23
    56ac:	2a 95       	dec	r18
    56ae:	e9 f7       	brne	.-6      	; 0x56aa <__ftoa_engine+0x14c>
    56b0:	10 c0       	rjmp	.+32     	; 0x56d2 <__ftoa_engine+0x174>
    56b2:	7d 93       	st	X+, r23
    56b4:	2a 95       	dec	r18
    56b6:	89 f6       	brne	.-94     	; 0x565a <__ftoa_engine+0xfc>
    56b8:	06 94       	lsr	r0
    56ba:	97 95       	ror	r25
    56bc:	67 95       	ror	r22
    56be:	37 95       	ror	r19
    56c0:	17 95       	ror	r17
    56c2:	17 94       	ror	r1
    56c4:	e1 18       	sub	r14, r1
    56c6:	f1 0a       	sbc	r15, r17
    56c8:	43 0b       	sbc	r20, r19
    56ca:	56 0b       	sbc	r21, r22
    56cc:	c9 0b       	sbc	r28, r25
    56ce:	d0 09       	sbc	r29, r0
    56d0:	98 f0       	brcs	.+38     	; 0x56f8 <__ftoa_engine+0x19a>
    56d2:	23 95       	inc	r18
    56d4:	7e 91       	ld	r23, -X
    56d6:	73 95       	inc	r23
    56d8:	7a 33       	cpi	r23, 0x3A	; 58
    56da:	08 f0       	brcs	.+2      	; 0x56de <__ftoa_engine+0x180>
    56dc:	70 e3       	ldi	r23, 0x30	; 48
    56de:	7c 93       	st	X, r23
    56e0:	20 13       	cpse	r18, r16
    56e2:	b8 f7       	brcc	.-18     	; 0x56d2 <__ftoa_engine+0x174>
    56e4:	7e 91       	ld	r23, -X
    56e6:	70 61       	ori	r23, 0x10	; 16
    56e8:	7d 93       	st	X+, r23
    56ea:	30 f0       	brcs	.+12     	; 0x56f8 <__ftoa_engine+0x19a>
    56ec:	83 95       	inc	r24
    56ee:	71 e3       	ldi	r23, 0x31	; 49
    56f0:	7d 93       	st	X+, r23
    56f2:	70 e3       	ldi	r23, 0x30	; 48
    56f4:	2a 95       	dec	r18
    56f6:	e1 f7       	brne	.-8      	; 0x56f0 <__ftoa_engine+0x192>
    56f8:	11 24       	eor	r1, r1
    56fa:	ef 90       	pop	r14
    56fc:	ff 90       	pop	r15
    56fe:	0f 91       	pop	r16
    5700:	1f 91       	pop	r17
    5702:	cf 91       	pop	r28
    5704:	df 91       	pop	r29
    5706:	99 27       	eor	r25, r25
    5708:	87 fd       	sbrc	r24, 7
    570a:	90 95       	com	r25
    570c:	08 95       	ret

0000570e <strnlen_P>:
    570e:	fc 01       	movw	r30, r24
    5710:	05 90       	lpm	r0, Z+
    5712:	61 50       	subi	r22, 0x01	; 1
    5714:	70 40       	sbci	r23, 0x00	; 0
    5716:	01 10       	cpse	r0, r1
    5718:	d8 f7       	brcc	.-10     	; 0x5710 <strnlen_P+0x2>
    571a:	80 95       	com	r24
    571c:	90 95       	com	r25
    571e:	8e 0f       	add	r24, r30
    5720:	9f 1f       	adc	r25, r31
    5722:	08 95       	ret

00005724 <strnlen>:
    5724:	fc 01       	movw	r30, r24
    5726:	61 50       	subi	r22, 0x01	; 1
    5728:	70 40       	sbci	r23, 0x00	; 0
    572a:	01 90       	ld	r0, Z+
    572c:	01 10       	cpse	r0, r1
    572e:	d8 f7       	brcc	.-10     	; 0x5726 <strnlen+0x2>
    5730:	80 95       	com	r24
    5732:	90 95       	com	r25
    5734:	8e 0f       	add	r24, r30
    5736:	9f 1f       	adc	r25, r31
    5738:	08 95       	ret

0000573a <fputc>:
    573a:	0f 93       	push	r16
    573c:	1f 93       	push	r17
    573e:	cf 93       	push	r28
    5740:	df 93       	push	r29
    5742:	18 2f       	mov	r17, r24
    5744:	09 2f       	mov	r16, r25
    5746:	eb 01       	movw	r28, r22
    5748:	8b 81       	ldd	r24, Y+3	; 0x03
    574a:	81 fd       	sbrc	r24, 1
    574c:	03 c0       	rjmp	.+6      	; 0x5754 <fputc+0x1a>
    574e:	8f ef       	ldi	r24, 0xFF	; 255
    5750:	9f ef       	ldi	r25, 0xFF	; 255
    5752:	20 c0       	rjmp	.+64     	; 0x5794 <fputc+0x5a>
    5754:	82 ff       	sbrs	r24, 2
    5756:	10 c0       	rjmp	.+32     	; 0x5778 <fputc+0x3e>
    5758:	4e 81       	ldd	r20, Y+6	; 0x06
    575a:	5f 81       	ldd	r21, Y+7	; 0x07
    575c:	2c 81       	ldd	r18, Y+4	; 0x04
    575e:	3d 81       	ldd	r19, Y+5	; 0x05
    5760:	42 17       	cp	r20, r18
    5762:	53 07       	cpc	r21, r19
    5764:	7c f4       	brge	.+30     	; 0x5784 <fputc+0x4a>
    5766:	e8 81       	ld	r30, Y
    5768:	f9 81       	ldd	r31, Y+1	; 0x01
    576a:	9f 01       	movw	r18, r30
    576c:	2f 5f       	subi	r18, 0xFF	; 255
    576e:	3f 4f       	sbci	r19, 0xFF	; 255
    5770:	39 83       	std	Y+1, r19	; 0x01
    5772:	28 83       	st	Y, r18
    5774:	10 83       	st	Z, r17
    5776:	06 c0       	rjmp	.+12     	; 0x5784 <fputc+0x4a>
    5778:	e8 85       	ldd	r30, Y+8	; 0x08
    577a:	f9 85       	ldd	r31, Y+9	; 0x09
    577c:	81 2f       	mov	r24, r17
    577e:	09 95       	icall
    5780:	89 2b       	or	r24, r25
    5782:	29 f7       	brne	.-54     	; 0x574e <fputc+0x14>
    5784:	2e 81       	ldd	r18, Y+6	; 0x06
    5786:	3f 81       	ldd	r19, Y+7	; 0x07
    5788:	2f 5f       	subi	r18, 0xFF	; 255
    578a:	3f 4f       	sbci	r19, 0xFF	; 255
    578c:	3f 83       	std	Y+7, r19	; 0x07
    578e:	2e 83       	std	Y+6, r18	; 0x06
    5790:	81 2f       	mov	r24, r17
    5792:	90 2f       	mov	r25, r16
    5794:	df 91       	pop	r29
    5796:	cf 91       	pop	r28
    5798:	1f 91       	pop	r17
    579a:	0f 91       	pop	r16
    579c:	08 95       	ret

0000579e <printf>:
    579e:	a0 e0       	ldi	r26, 0x00	; 0
    57a0:	b0 e0       	ldi	r27, 0x00	; 0
    57a2:	e5 ed       	ldi	r30, 0xD5	; 213
    57a4:	fb e2       	ldi	r31, 0x2B	; 43
    57a6:	0c 94 e0 28 	jmp	0x51c0	; 0x51c0 <__prologue_saves__+0x20>
    57aa:	fe 01       	movw	r30, r28
    57ac:	35 96       	adiw	r30, 0x05	; 5
    57ae:	61 91       	ld	r22, Z+
    57b0:	71 91       	ld	r23, Z+
    57b2:	af 01       	movw	r20, r30
    57b4:	80 91 94 04 	lds	r24, 0x0494
    57b8:	90 91 95 04 	lds	r25, 0x0495
    57bc:	0e 94 9f 23 	call	0x473e	; 0x473e <vfprintf>
    57c0:	e2 e0       	ldi	r30, 0x02	; 2
    57c2:	0c 94 fc 28 	jmp	0x51f8	; 0x51f8 <__epilogue_restores__+0x20>

000057c6 <puts>:
    57c6:	0f 93       	push	r16
    57c8:	1f 93       	push	r17
    57ca:	cf 93       	push	r28
    57cc:	df 93       	push	r29
    57ce:	e0 91 94 04 	lds	r30, 0x0494
    57d2:	f0 91 95 04 	lds	r31, 0x0495
    57d6:	23 81       	ldd	r18, Z+3	; 0x03
    57d8:	21 ff       	sbrs	r18, 1
    57da:	1b c0       	rjmp	.+54     	; 0x5812 <puts+0x4c>
    57dc:	ec 01       	movw	r28, r24
    57de:	00 e0       	ldi	r16, 0x00	; 0
    57e0:	10 e0       	ldi	r17, 0x00	; 0
    57e2:	89 91       	ld	r24, Y+
    57e4:	60 91 94 04 	lds	r22, 0x0494
    57e8:	70 91 95 04 	lds	r23, 0x0495
    57ec:	db 01       	movw	r26, r22
    57ee:	18 96       	adiw	r26, 0x08	; 8
    57f0:	ed 91       	ld	r30, X+
    57f2:	fc 91       	ld	r31, X
    57f4:	19 97       	sbiw	r26, 0x09	; 9
    57f6:	88 23       	and	r24, r24
    57f8:	31 f0       	breq	.+12     	; 0x5806 <puts+0x40>
    57fa:	09 95       	icall
    57fc:	89 2b       	or	r24, r25
    57fe:	89 f3       	breq	.-30     	; 0x57e2 <puts+0x1c>
    5800:	0f ef       	ldi	r16, 0xFF	; 255
    5802:	1f ef       	ldi	r17, 0xFF	; 255
    5804:	ee cf       	rjmp	.-36     	; 0x57e2 <puts+0x1c>
    5806:	8a e0       	ldi	r24, 0x0A	; 10
    5808:	09 95       	icall
    580a:	89 2b       	or	r24, r25
    580c:	11 f4       	brne	.+4      	; 0x5812 <puts+0x4c>
    580e:	c8 01       	movw	r24, r16
    5810:	02 c0       	rjmp	.+4      	; 0x5816 <puts+0x50>
    5812:	8f ef       	ldi	r24, 0xFF	; 255
    5814:	9f ef       	ldi	r25, 0xFF	; 255
    5816:	df 91       	pop	r29
    5818:	cf 91       	pop	r28
    581a:	1f 91       	pop	r17
    581c:	0f 91       	pop	r16
    581e:	08 95       	ret

00005820 <__ultoa_invert>:
    5820:	fa 01       	movw	r30, r20
    5822:	aa 27       	eor	r26, r26
    5824:	28 30       	cpi	r18, 0x08	; 8
    5826:	51 f1       	breq	.+84     	; 0x587c <__ultoa_invert+0x5c>
    5828:	20 31       	cpi	r18, 0x10	; 16
    582a:	81 f1       	breq	.+96     	; 0x588c <__ultoa_invert+0x6c>
    582c:	e8 94       	clt
    582e:	6f 93       	push	r22
    5830:	6e 7f       	andi	r22, 0xFE	; 254
    5832:	6e 5f       	subi	r22, 0xFE	; 254
    5834:	7f 4f       	sbci	r23, 0xFF	; 255
    5836:	8f 4f       	sbci	r24, 0xFF	; 255
    5838:	9f 4f       	sbci	r25, 0xFF	; 255
    583a:	af 4f       	sbci	r26, 0xFF	; 255
    583c:	b1 e0       	ldi	r27, 0x01	; 1
    583e:	3e d0       	rcall	.+124    	; 0x58bc <__ultoa_invert+0x9c>
    5840:	b4 e0       	ldi	r27, 0x04	; 4
    5842:	3c d0       	rcall	.+120    	; 0x58bc <__ultoa_invert+0x9c>
    5844:	67 0f       	add	r22, r23
    5846:	78 1f       	adc	r23, r24
    5848:	89 1f       	adc	r24, r25
    584a:	9a 1f       	adc	r25, r26
    584c:	a1 1d       	adc	r26, r1
    584e:	68 0f       	add	r22, r24
    5850:	79 1f       	adc	r23, r25
    5852:	8a 1f       	adc	r24, r26
    5854:	91 1d       	adc	r25, r1
    5856:	a1 1d       	adc	r26, r1
    5858:	6a 0f       	add	r22, r26
    585a:	71 1d       	adc	r23, r1
    585c:	81 1d       	adc	r24, r1
    585e:	91 1d       	adc	r25, r1
    5860:	a1 1d       	adc	r26, r1
    5862:	20 d0       	rcall	.+64     	; 0x58a4 <__ultoa_invert+0x84>
    5864:	09 f4       	brne	.+2      	; 0x5868 <__ultoa_invert+0x48>
    5866:	68 94       	set
    5868:	3f 91       	pop	r19
    586a:	2a e0       	ldi	r18, 0x0A	; 10
    586c:	26 9f       	mul	r18, r22
    586e:	11 24       	eor	r1, r1
    5870:	30 19       	sub	r19, r0
    5872:	30 5d       	subi	r19, 0xD0	; 208
    5874:	31 93       	st	Z+, r19
    5876:	de f6       	brtc	.-74     	; 0x582e <__ultoa_invert+0xe>
    5878:	cf 01       	movw	r24, r30
    587a:	08 95       	ret
    587c:	46 2f       	mov	r20, r22
    587e:	47 70       	andi	r20, 0x07	; 7
    5880:	40 5d       	subi	r20, 0xD0	; 208
    5882:	41 93       	st	Z+, r20
    5884:	b3 e0       	ldi	r27, 0x03	; 3
    5886:	0f d0       	rcall	.+30     	; 0x58a6 <__ultoa_invert+0x86>
    5888:	c9 f7       	brne	.-14     	; 0x587c <__ultoa_invert+0x5c>
    588a:	f6 cf       	rjmp	.-20     	; 0x5878 <__ultoa_invert+0x58>
    588c:	46 2f       	mov	r20, r22
    588e:	4f 70       	andi	r20, 0x0F	; 15
    5890:	40 5d       	subi	r20, 0xD0	; 208
    5892:	4a 33       	cpi	r20, 0x3A	; 58
    5894:	18 f0       	brcs	.+6      	; 0x589c <__ultoa_invert+0x7c>
    5896:	49 5d       	subi	r20, 0xD9	; 217
    5898:	31 fd       	sbrc	r19, 1
    589a:	40 52       	subi	r20, 0x20	; 32
    589c:	41 93       	st	Z+, r20
    589e:	02 d0       	rcall	.+4      	; 0x58a4 <__ultoa_invert+0x84>
    58a0:	a9 f7       	brne	.-22     	; 0x588c <__ultoa_invert+0x6c>
    58a2:	ea cf       	rjmp	.-44     	; 0x5878 <__ultoa_invert+0x58>
    58a4:	b4 e0       	ldi	r27, 0x04	; 4
    58a6:	a6 95       	lsr	r26
    58a8:	97 95       	ror	r25
    58aa:	87 95       	ror	r24
    58ac:	77 95       	ror	r23
    58ae:	67 95       	ror	r22
    58b0:	ba 95       	dec	r27
    58b2:	c9 f7       	brne	.-14     	; 0x58a6 <__ultoa_invert+0x86>
    58b4:	00 97       	sbiw	r24, 0x00	; 0
    58b6:	61 05       	cpc	r22, r1
    58b8:	71 05       	cpc	r23, r1
    58ba:	08 95       	ret
    58bc:	9b 01       	movw	r18, r22
    58be:	ac 01       	movw	r20, r24
    58c0:	0a 2e       	mov	r0, r26
    58c2:	06 94       	lsr	r0
    58c4:	57 95       	ror	r21
    58c6:	47 95       	ror	r20
    58c8:	37 95       	ror	r19
    58ca:	27 95       	ror	r18
    58cc:	ba 95       	dec	r27
    58ce:	c9 f7       	brne	.-14     	; 0x58c2 <__ultoa_invert+0xa2>
    58d0:	62 0f       	add	r22, r18
    58d2:	73 1f       	adc	r23, r19
    58d4:	84 1f       	adc	r24, r20
    58d6:	95 1f       	adc	r25, r21
    58d8:	a0 1d       	adc	r26, r0
    58da:	08 95       	ret

000058dc <__divmodsi4>:
    58dc:	05 2e       	mov	r0, r21
    58de:	97 fb       	bst	r25, 7
    58e0:	1e f4       	brtc	.+6      	; 0x58e8 <__divmodsi4+0xc>
    58e2:	00 94       	com	r0
    58e4:	0e 94 85 2c 	call	0x590a	; 0x590a <__negsi2>
    58e8:	57 fd       	sbrc	r21, 7
    58ea:	07 d0       	rcall	.+14     	; 0x58fa <__divmodsi4_neg2>
    58ec:	0e 94 a3 28 	call	0x5146	; 0x5146 <__udivmodsi4>
    58f0:	07 fc       	sbrc	r0, 7
    58f2:	03 d0       	rcall	.+6      	; 0x58fa <__divmodsi4_neg2>
    58f4:	4e f4       	brtc	.+18     	; 0x5908 <__divmodsi4_exit>
    58f6:	0c 94 85 2c 	jmp	0x590a	; 0x590a <__negsi2>

000058fa <__divmodsi4_neg2>:
    58fa:	50 95       	com	r21
    58fc:	40 95       	com	r20
    58fe:	30 95       	com	r19
    5900:	21 95       	neg	r18
    5902:	3f 4f       	sbci	r19, 0xFF	; 255
    5904:	4f 4f       	sbci	r20, 0xFF	; 255
    5906:	5f 4f       	sbci	r21, 0xFF	; 255

00005908 <__divmodsi4_exit>:
    5908:	08 95       	ret

0000590a <__negsi2>:
    590a:	90 95       	com	r25
    590c:	80 95       	com	r24
    590e:	70 95       	com	r23
    5910:	61 95       	neg	r22
    5912:	7f 4f       	sbci	r23, 0xFF	; 255
    5914:	8f 4f       	sbci	r24, 0xFF	; 255
    5916:	9f 4f       	sbci	r25, 0xFF	; 255
    5918:	08 95       	ret

0000591a <__mulshisi3>:
    591a:	b7 ff       	sbrs	r27, 7
    591c:	0c 94 c5 28 	jmp	0x518a	; 0x518a <__muluhisi3>

00005920 <__mulohisi3>:
    5920:	0e 94 c5 28 	call	0x518a	; 0x518a <__muluhisi3>
    5924:	82 1b       	sub	r24, r18
    5926:	93 0b       	sbc	r25, r19
    5928:	08 95       	ret

0000592a <_exit>:
    592a:	f8 94       	cli

0000592c <__stop_program>:
    592c:	ff cf       	rjmp	.-2      	; 0x592c <__stop_program>
