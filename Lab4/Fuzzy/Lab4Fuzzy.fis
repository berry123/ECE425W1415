[System]
Name='Lab4Fuzzy'
Type='mamdani'
Version=2.0
NumInputs=3
NumOutputs=2
NumRules=125
AndMethod='min'
OrMethod='max'
ImpMethod='prod'
AggMethod='max'
DefuzzMethod='centroid'

[Input1]
Name='ForwardSensor'
Range=[1 15]
NumMFs=5
MF1='Near':'trapmf',[0 0 3 5]
MF2='Close':'trimf',[3 5 7]
MF3='MidRange':'trimf',[5 7 9]
MF4='Far':'trimf',[7 9 12]
MF5='Distant':'trapmf',[9 12 15 15]

[Input2]
Name='RightSensor'
Range=[1 15]
NumMFs=5
MF1='Near':'trapmf',[0 0 3 5]
MF2='Close':'trimf',[3 5 7]
MF3='MidRange':'trimf',[5 7 9]
MF4='Far':'trimf',[7 9 12]
MF5='Distant':'trapmf',[9 12 15 15]

[Input3]
Name='LeftSensor'
Range=[1 15]
NumMFs=5
MF1='Near':'trapmf',[0 0 3 5]
MF2='Close':'trimf',[3 5 7]
MF3='MidRange':'trimf',[5 7 9]
MF4='Far':'trimf',[7 9 12]
MF5='Distant':'trapmf',[9 12 15 15]

[Output1]
Name='RightWheelSpeed'
Range=[-200 200]
NumMFs=7
MF1='(---)':'trapmf',[-200 -200 -180 -100]
MF2='(--)':'trimf',[-180 -100 -20]
MF3='(-)':'trimf',[-100 -20 0]
MF4='(0)':'trimf',[-20 0 20]
MF5='(+)':'trimf',[0 20 100]
MF6='(++)':'trimf',[20 100 180]
MF7='(++)':'trapmf',[100 180 200 200]

[Output2]
Name='LeftWheelSpeed'
Range=[-200 200]
NumMFs=7
MF1='(---)':'trapmf',[-200 -200 -180 -100]
MF2='(--)':'trimf',[-180 -100 -20]
MF3='(-)':'trimf',[-100 -20 0]
MF4='(0)':'trimf',[-20 0 20]
MF5='(+)':'trimf',[0 20 100]
MF6='(++)':'trimf',[20 100 180]
MF7='(++)':'trapmf',[100 180 200 200]

[Rules]
1 1 1, 2 2 (1) : 1
1 2 1, 3 2 (1) : 1
1 3 1, 3 2 (1) : 1
1 4 1, 3 2 (1) : 1
1 5 1, 3 2 (1) : 1
1 1 2, 2 3 (1) : 1
1 2 2, 2 2 (1) : 1
1 3 2, 2 3 (1) : 1
1 4 2, 2 3 (1) : 1
1 5 2, 2 3 (1) : 1
1 1 3, 2 3 (1) : 1
1 2 3, 3 2 (1) : 1
1 3 3, 3 3 (1) : 1
1 4 3, 2 6 (1) : 1
1 5 3, 2 6 (1) : 1
1 1 4, 2 3 (1) : 1
1 2 4, 3 2 (1) : 1
1 3 4, 6 2 (1) : 1
1 4 4, 4 4 (1) : 1
1 5 4, 2 6 (1) : 1
1 1 5, 2 3 (1) : 1
1 2 5, 3 2 (1) : 1
1 3 5, 6 2 (1) : 1
1 4 5, 6 2 (1) : 1
1 5 5, 4 4 (1) : 1
2 1 1, 2 2 (1) : 1
2 2 1, 3 2 (1) : 1
2 3 1, 3 2 (1) : 1
2 4 1, 3 2 (1) : 1
2 5 1, 3 2 (1) : 1
2 1 2, 2 3 (1) : 1
2 2 2, 3 3 (1) : 1
2 3 2, 2 4 (1) : 1
2 4 2, 2 4 (1) : 1
2 5 2, 2 4 (1) : 1
2 1 3, 2 3 (1) : 1
2 2 3, 4 2 (1) : 1
2 3 3, 4 4 (1) : 1
2 4 3, 2 6 (1) : 1
2 5 3, 2 6 (1) : 1
2 1 4, 2 3 (1) : 1
2 2 4, 4 2 (1) : 1
2 3 4, 6 2 (1) : 1
2 4 4, 4 4 (1) : 1
2 5 4, 2 6 (1) : 1
2 1 5, 2 3 (1) : 1
2 2 5, 4 2 (1) : 1
2 3 5, 6 2 (1) : 1
2 4 5, 6 2 (1) : 1
2 5 5, 4 4 (1) : 1
3 1 1, 6 6 (1) : 1
3 2 1, 5 6 (1) : 1
3 3 1, 5 6 (1) : 1
3 4 1, 5 6 (1) : 1
3 5 1, 5 6 (1) : 1
3 1 2, 6 5 (1) : 1
3 2 2, 6 6 (1) : 1
3 3 2, 4 6 (1) : 1
3 4 2, 4 6 (1) : 1
3 5 2, 4 6 (1) : 1
3 1 3, 6 5 (1) : 1
3 2 3, 6 4 (1) : 1
3 3 3, 6 6 (1) : 1
3 4 3, 5 6 (1) : 1
3 5 3, 5 6 (1) : 1
3 1 4, 6 5 (1) : 1
3 2 4, 6 4 (1) : 1
3 3 4, 6 5 (1) : 1
3 4 4, 6 6 (1) : 1
3 5 4, 5 6 (1) : 1
3 1 5, 6 5 (1) : 1
3 2 5, 6 4 (1) : 1
3 3 5, 6 5 (1) : 1
3 4 5, 6 5 (1) : 1
3 5 5, 6 6 (1) : 1
4 1 1, 7 7 (1) : 1
4 2 1, 6 7 (1) : 1
4 3 1, 5 7 (1) : 1
4 4 1, 5 7 (1) : 1
4 5 1, 5 7 (1) : 1
4 1 2, 7 6 (1) : 1
4 2 2, 7 7 (1) : 1
4 3 2, 6 7 (1) : 1
4 4 2, 6 7 (1) : 1
4 5 2, 6 7 (1) : 1
4 1 3, 7 5 (1) : 1
4 2 3, 7 6 (1) : 1
4 3 3, 7 7 (1) : 1
4 4 3, 6 7 (1) : 1
4 5 3, 6 7 (1) : 1
4 1 4, 7 5 (1) : 1
4 2 4, 7 6 (1) : 1
4 3 4, 7 6 (1) : 1
4 4 4, 7 7 (1) : 1
4 5 4, 7 7 (1) : 1
4 1 5, 7 5 (1) : 1
4 2 5, 7 6 (1) : 1
4 3 5, 7 6 (1) : 1
4 4 5, 7 7 (1) : 1
4 5 5, 7 7 (1) : 1
5 1 1, 7 7 (1) : 1
5 2 1, 6 7 (1) : 1
5 3 1, 5 7 (1) : 1
5 4 1, 5 7 (1) : 1
5 5 1, 5 7 (1) : 1
5 1 2, 7 6 (1) : 1
5 2 2, 7 7 (1) : 1
5 3 2, 6 7 (1) : 1
5 4 2, 6 7 (1) : 1
5 5 2, 6 7 (1) : 1
5 1 3, 7 5 (1) : 1
5 2 3, 7 6 (1) : 1
5 3 3, 7 7 (1) : 1
5 4 3, 6 7 (1) : 1
5 5 3, 7 7 (1) : 1
5 1 4, 7 5 (1) : 1
5 2 4, 7 6 (1) : 1
5 3 4, 7 6 (1) : 1
5 4 4, 7 7 (1) : 1
5 5 4, 7 7 (1) : 1
5 1 5, 7 5 (1) : 1
5 2 5, 7 6 (1) : 1
5 3 5, 7 7 (1) : 1
5 4 5, 7 7 (1) : 1
5 5 5, 7 7 (1) : 1
