
lab3demo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001da  00800100  00005566  000055fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005566  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000f8  008002da  008002da  000057d4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000057d4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00005830  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001788  00000000  00000000  00005908  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002d7  00000000  00000000  00007090  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000518  00000000  00000000  00007367  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000007c8  00000000  00000000  00007880  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000841  00000000  00000000  00008048  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002703  00000000  00000000  00008889  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  0000af8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 03 	jmp	0x690	; 0x690 <__ctors_end>
       4:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
       8:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
       c:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      10:	0c 94 af 0c 	jmp	0x195e	; 0x195e <__vector_4>
      14:	0c 94 d8 0c 	jmp	0x19b0	; 0x19b0 <__vector_5>
      18:	0c 94 01 0d 	jmp	0x1a02	; 0x1a02 <__vector_6>
      1c:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <__vector_7>
      20:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      24:	0c 94 90 0b 	jmp	0x1720	; 0x1720 <__vector_9>
      28:	0c 94 b9 0b 	jmp	0x1772	; 0x1772 <__vector_10>
      2c:	0c 94 e2 0b 	jmp	0x17c4	; 0x17c4 <__vector_11>
      30:	0c 94 5d 0c 	jmp	0x18ba	; 0x18ba <__vector_12>
      34:	0c 94 0b 0c 	jmp	0x1816	; 0x1816 <__vector_13>
      38:	0c 94 34 0c 	jmp	0x1868	; 0x1868 <__vector_14>
      3c:	0c 94 86 0c 	jmp	0x190c	; 0x190c <__vector_15>
      40:	0c 94 15 0b 	jmp	0x162a	; 0x162a <__vector_16>
      44:	0c 94 3e 0b 	jmp	0x167c	; 0x167c <__vector_17>
      48:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <__vector_18>
      4c:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      50:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      54:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      58:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      5c:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      60:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      64:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      68:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      6c:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      70:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      74:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      78:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__bad_interrupt>
      7c:	08 4a       	sbci	r16, 0xA8	; 168
      7e:	d7 3b       	cpi	r29, 0xB7	; 183
      80:	3b ce       	rjmp	.-906    	; 0xfffffcf8 <__eeprom_end+0xff7efcf8>
      82:	01 6e       	ori	r16, 0xE1	; 225
      84:	84 bc       	out	0x24, r8	; 36
      86:	bf fd       	.word	0xfdbf	; ????
      88:	c1 2f       	mov	r28, r17
      8a:	3d 6c       	ori	r19, 0xCD	; 205
      8c:	74 31       	cpi	r23, 0x14	; 20
      8e:	9a bd       	out	0x2a, r25	; 42
      90:	56 83       	std	Z+6, r21	; 0x06
      92:	3d da       	rcall	.-2950   	; 0xfffff50e <__eeprom_end+0xff7ef50e>
      94:	3d 00       	.word	0x003d	; ????
      96:	c7 7f       	andi	r28, 0xF7	; 247
      98:	11 be       	out	0x31, r1	; 49
      9a:	d9 e4       	ldi	r29, 0x49	; 73
      9c:	bb 4c       	sbci	r27, 0xCB	; 203
      9e:	3e 91       	ld	r19, -X
      a0:	6b aa       	std	Y+51, r6	; 0x33
      a2:	aa be       	out	0x3a, r10	; 58
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	3f 00       	.word	0x003f	; ????
      aa:	7e 09       	sbc	r23, r14
      ac:	81 09       	sbc	r24, r1
      ae:	84 09       	sbc	r24, r4
      b0:	87 09       	sbc	r24, r7
      b2:	90 09       	sbc	r25, r0
      b4:	8a 09       	sbc	r24, r10
      b6:	8d 09       	sbc	r24, r13
      b8:	93 09       	sbc	r25, r3
      ba:	96 09       	sbc	r25, r6
      bc:	99 09       	sbc	r25, r9
      be:	9c 09       	sbc	r25, r12
      c0:	9f 09       	sbc	r25, r15
      c2:	a2 09       	sbc	r26, r2
      c4:	a5 09       	sbc	r26, r5
      c6:	a8 09       	sbc	r26, r8
      c8:	ab 09       	sbc	r26, r11
      ca:	ae 09       	sbc	r26, r14
      cc:	b1 09       	sbc	r27, r1
      ce:	b4 09       	sbc	r27, r4
      d0:	c5 09       	sbc	r28, r5
      d2:	c8 09       	sbc	r28, r8
      d4:	cb 09       	sbc	r28, r11
      d6:	ce 09       	sbc	r28, r14
      d8:	d7 09       	sbc	r29, r7
      da:	d1 09       	sbc	r29, r1
      dc:	d4 09       	sbc	r29, r4
      de:	da 09       	sbc	r29, r10
      e0:	dd 09       	sbc	r29, r13
      e2:	e0 09       	sbc	r30, r0
      e4:	e3 09       	sbc	r30, r3
      e6:	e6 09       	sbc	r30, r6
      e8:	e9 09       	sbc	r30, r9
      ea:	ec 09       	sbc	r30, r12
      ec:	ef 09       	sbc	r30, r15
      ee:	f2 09       	sbc	r31, r2
      f0:	f5 09       	sbc	r31, r5
      f2:	f8 09       	sbc	r31, r8
      f4:	fb 09       	sbc	r31, r11
      f6:	07 63       	ori	r16, 0x37	; 55
      f8:	42 36       	cpi	r20, 0x62	; 98
      fa:	b7 9b       	sbis	0x16, 7	; 22
      fc:	d8 a7       	std	Y+40, r29	; 0x28
      fe:	1a 39       	cpi	r17, 0x9A	; 154
     100:	68 56       	subi	r22, 0x68	; 104
     102:	18 ae       	std	Y+56, r1	; 0x38
     104:	ba ab       	std	Y+50, r27	; 0x32
     106:	55 8c       	ldd	r5, Z+29	; 0x1d
     108:	1d 3c       	cpi	r17, 0xCD	; 205
     10a:	b7 cc       	rjmp	.-1682   	; 0xfffffa7a <__eeprom_end+0xff7efa7a>
     10c:	57 63       	ori	r21, 0x37	; 55
     10e:	bd 6d       	ori	r27, 0xDD	; 221
     110:	ed fd       	.word	0xfded	; ????
     112:	75 3e       	cpi	r23, 0xE5	; 229
     114:	f6 17       	cp	r31, r22
     116:	72 31       	cpi	r23, 0x12	; 18
     118:	bf 00       	.word	0x00bf	; ????
     11a:	00 00       	nop
     11c:	80 3f       	cpi	r24, 0xF0	; 240
     11e:	08 00       	.word	0x0008	; ????
     120:	00 00       	nop
     122:	be 92       	st	-X, r11
     124:	24 49       	sbci	r18, 0x94	; 148
     126:	12 3e       	cpi	r17, 0xE2	; 226
     128:	ab aa       	std	Y+51, r10	; 0x33
     12a:	aa 2a       	or	r10, r26
     12c:	be cd       	rjmp	.-1156   	; 0xfffffcaa <__eeprom_end+0xff7efcaa>
     12e:	cc cc       	rjmp	.-1640   	; 0xfffffac8 <__eeprom_end+0xff7efac8>
     130:	4c 3e       	cpi	r20, 0xEC	; 236
     132:	00 00       	nop
     134:	00 80       	ld	r0, Z
     136:	be ab       	std	Y+54, r27	; 0x36
     138:	aa aa       	std	Y+50, r10	; 0x32
     13a:	aa 3e       	cpi	r26, 0xEA	; 234
     13c:	00 00       	nop
     13e:	00 00       	nop
     140:	bf 00       	.word	0x00bf	; ????
     142:	00 00       	nop
     144:	80 3f       	cpi	r24, 0xF0	; 240
     146:	00 00       	nop
     148:	00 00       	nop
     14a:	00 08       	sbc	r0, r0
     14c:	41 78       	andi	r20, 0x81	; 129
     14e:	d3 bb       	out	0x13, r29	; 19
     150:	43 87       	std	Z+11, r20	; 0x0b
     152:	d1 13       	cpse	r29, r17
     154:	3d 19       	sub	r19, r13
     156:	0e 3c       	cpi	r16, 0xCE	; 206
     158:	c3 bd       	out	0x23, r28	; 35
     15a:	42 82       	std	Z+2, r4	; 0x02
     15c:	ad 2b       	or	r26, r29
     15e:	3e 68       	ori	r19, 0x8E	; 142
     160:	ec 82       	std	Y+4, r14	; 0x04
     162:	76 be       	out	0x36, r7	; 54
     164:	d9 8f       	std	Y+25, r29	; 0x19
     166:	e1 a9       	ldd	r30, Z+49	; 0x31
     168:	3e 4c       	sbci	r19, 0xCE	; 206
     16a:	80 ef       	ldi	r24, 0xF0	; 240
     16c:	ff be       	out	0x3f, r15	; 63
     16e:	01 c4       	rjmp	.+2050   	; 0x972 <LCD_set_PGC_addr+0x2c>
     170:	ff 7f       	andi	r31, 0xFF	; 255
     172:	3f 00       	.word	0x003f	; ????
     174:	00 00       	nop
	...

00000178 <__trampolines_end>:
     178:	16 05       	cpc	r17, r6
     17a:	01 00       	.word	0x0001	; ????
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	00 00       	nop
     182:	fa 00       	.word	0x00fa	; ????
     184:	00 00       	nop
     186:	e0 00       	.word	0x00e0	; ????
     188:	e0 00       	.word	0x00e0	; ????
     18a:	28 fe       	.word	0xfe28	; ????
     18c:	28 fe       	.word	0xfe28	; ????
     18e:	28 24       	eor	r2, r8
     190:	54 fe       	sbrs	r5, 4
     192:	54 48       	sbci	r21, 0x84	; 132
     194:	c4 c8       	rjmp	.-3704   	; 0xfffff31e <__eeprom_end+0xff7ef31e>
     196:	10 26       	eor	r1, r16
     198:	46 6c       	ori	r20, 0xC6	; 198
     19a:	92 aa       	std	Z+50, r9	; 0x32
     19c:	44 a0       	ldd	r4, Z+36	; 0x24
     19e:	00 a0       	ldd	r0, Z+32	; 0x20
     1a0:	c0 00       	.word	0x00c0	; ????
     1a2:	00 00       	nop
     1a4:	38 44       	sbci	r19, 0x48	; 72
     1a6:	82 00       	.word	0x0082	; ????
     1a8:	00 82       	st	Z, r0
     1aa:	44 38       	cpi	r20, 0x84	; 132
     1ac:	00 28       	or	r0, r0
     1ae:	10 7c       	andi	r17, 0xC0	; 192
     1b0:	10 28       	or	r1, r0
     1b2:	10 10       	cpse	r1, r0
     1b4:	7c 10       	cpse	r7, r12
     1b6:	10 00       	.word	0x0010	; ????
     1b8:	0a 0c       	add	r0, r10
     1ba:	00 00       	nop
     1bc:	10 10       	cpse	r1, r0
     1be:	10 10       	cpse	r1, r0
     1c0:	10 00       	.word	0x0010	; ????
     1c2:	06 06       	cpc	r0, r22
     1c4:	00 00       	nop
     1c6:	04 08       	sbc	r0, r4
     1c8:	10 20       	and	r1, r0
     1ca:	40 7c       	andi	r20, 0xC0	; 192
     1cc:	8a 92       	st	-Y, r8
     1ce:	a2 7c       	andi	r26, 0xC2	; 194
     1d0:	00 42       	sbci	r16, 0x20	; 32
     1d2:	fe 02       	muls	r31, r30
     1d4:	00 42       	sbci	r16, 0x20	; 32
     1d6:	86 8a       	std	Z+22, r8	; 0x16
     1d8:	92 62       	ori	r25, 0x22	; 34
     1da:	84 82       	std	Z+4, r8	; 0x04
     1dc:	a2 d2       	rcall	.+1348   	; 0x722 <ADC_sample+0x38>
     1de:	8c 18       	sub	r8, r12
     1e0:	28 48       	sbci	r18, 0x88	; 136
     1e2:	fe 08       	sbc	r15, r14
     1e4:	e4 a2       	std	Z+36, r14	; 0x24
     1e6:	a2 a2       	std	Z+34, r10	; 0x22
     1e8:	9c 3c       	cpi	r25, 0xCC	; 204
     1ea:	52 92       	st	-Z, r5
     1ec:	92 0c       	add	r9, r2
     1ee:	80 8e       	std	Z+24, r8	; 0x18
     1f0:	90 a0       	ldd	r9, Z+32	; 0x20
     1f2:	c0 6c       	ori	r28, 0xC0	; 192
     1f4:	92 92       	st	-Z, r9
     1f6:	92 6c       	ori	r25, 0xC2	; 194
     1f8:	60 92 92 94 	sts	0x9492, r6
     1fc:	78 00       	.word	0x0078	; ????
     1fe:	6c 6c       	ori	r22, 0xCC	; 204
     200:	00 00       	nop
     202:	00 6a       	ori	r16, 0xA0	; 160
     204:	6c 00       	.word	0x006c	; ????
     206:	00 10       	cpse	r0, r0
     208:	28 44       	sbci	r18, 0x48	; 72
     20a:	82 00       	.word	0x0082	; ????
     20c:	28 28       	or	r2, r8
     20e:	28 28       	or	r2, r8
     210:	28 00       	.word	0x0028	; ????
     212:	82 44       	sbci	r24, 0x42	; 66
     214:	28 10       	cpse	r2, r8
     216:	40 80       	ld	r4, Z
     218:	8a 90       	ld	r8, -Y
     21a:	60 4c       	sbci	r22, 0xC0	; 192
     21c:	92 9e       	mul	r9, r18
     21e:	82 7c       	andi	r24, 0xC2	; 194
     220:	7e 88       	ldd	r7, Y+22	; 0x16
     222:	88 88       	ldd	r8, Y+16	; 0x10
     224:	7e fe       	.word	0xfe7e	; ????
     226:	92 92       	st	-Z, r9
     228:	92 6c       	ori	r25, 0xC2	; 194
     22a:	7c 82       	std	Y+4, r7	; 0x04
     22c:	82 82       	std	Z+2, r8	; 0x02
     22e:	44 fe       	sbrs	r4, 4
     230:	82 82       	std	Z+2, r8	; 0x02
     232:	44 38       	cpi	r20, 0x84	; 132
     234:	fe 92       	st	-X, r15
     236:	92 92       	st	-Z, r9
     238:	82 fe       	sbrs	r8, 2
     23a:	90 90 90 80 	lds	r9, 0x8090
     23e:	7c 82       	std	Y+4, r7	; 0x04
     240:	92 92       	st	-Z, r9
     242:	5e fe       	.word	0xfe5e	; ????
     244:	10 10       	cpse	r1, r0
     246:	10 fe       	sbrs	r1, 0
     248:	00 82       	st	Z, r0
     24a:	fe 82       	std	Y+6, r15	; 0x06
     24c:	00 04       	cpc	r0, r0
     24e:	02 82       	std	Z+2, r0	; 0x02
     250:	fc 80       	ldd	r15, Y+4	; 0x04
     252:	fe 10       	cpse	r15, r14
     254:	28 44       	sbci	r18, 0x48	; 72
     256:	82 fe       	sbrs	r8, 2
     258:	02 02       	muls	r16, r18
     25a:	02 02       	muls	r16, r18
     25c:	fe 40       	sbci	r31, 0x0E	; 14
     25e:	30 40       	sbci	r19, 0x00	; 0
     260:	fe fe       	.word	0xfefe	; ????
     262:	20 10       	cpse	r2, r0
     264:	08 fe       	.word	0xfe08	; ????
     266:	7c 82       	std	Y+4, r7	; 0x04
     268:	82 82       	std	Z+2, r8	; 0x02
     26a:	7c fe       	.word	0xfe7c	; ????
     26c:	90 90 90 60 	lds	r9, 0x6090
     270:	7c 82       	std	Y+4, r7	; 0x04
     272:	8a 84       	ldd	r8, Y+10	; 0x0a
     274:	7a fe       	.word	0xfe7a	; ????
     276:	90 98       	cbi	0x12, 0	; 18
     278:	94 62       	ori	r25, 0x24	; 36
     27a:	62 92       	st	-Z, r6
     27c:	92 92       	st	-Z, r9
     27e:	8c 80       	ldd	r8, Y+4	; 0x04
     280:	80 fe       	sbrs	r8, 0
     282:	80 80       	ld	r8, Z
     284:	fc 02       	muls	r31, r28
     286:	02 02       	muls	r16, r18
     288:	fc f8       	.word	0xf8fc	; ????
     28a:	04 02       	muls	r16, r20
     28c:	04 f8       	bld	r0, 4
     28e:	fc 02       	muls	r31, r28
     290:	1c 02       	muls	r17, r28
     292:	fc c6       	rjmp	.+3576   	; 0x108c <STEPPER_set_mode+0x1a>
     294:	28 10       	cpse	r2, r8
     296:	28 c6       	rjmp	.+3152   	; 0xee8 <STEPPER_move+0x10e>
     298:	e0 10       	cpse	r14, r0
     29a:	0e 10       	cpse	r0, r14
     29c:	e0 86       	std	Z+8, r14	; 0x08
     29e:	8a 92       	st	-Y, r8
     2a0:	a2 c2       	rjmp	.+1348   	; 0x7e6 <LCD_clear+0x2c>
     2a2:	00 fe       	sbrs	r0, 0
     2a4:	82 82       	std	Z+2, r8	; 0x02
     2a6:	00 40       	sbci	r16, 0x00	; 0
     2a8:	20 10       	cpse	r2, r0
     2aa:	08 04       	cpc	r0, r8
     2ac:	00 82       	st	Z, r0
     2ae:	82 fe       	sbrs	r8, 2
     2b0:	00 20       	and	r0, r0
     2b2:	40 80       	ld	r4, Z
     2b4:	40 20       	and	r4, r0
     2b6:	02 02       	muls	r16, r18
     2b8:	02 02       	muls	r16, r18
     2ba:	02 00       	.word	0x0002	; ????
     2bc:	80 40       	sbci	r24, 0x00	; 0
     2be:	20 00       	.word	0x0020	; ????
     2c0:	04 2a       	or	r0, r20
     2c2:	2a 2a       	or	r2, r26
     2c4:	1e fe       	.word	0xfe1e	; ????
     2c6:	12 22       	and	r1, r18
     2c8:	22 1c       	adc	r2, r2
     2ca:	1c 22       	and	r1, r28
     2cc:	22 22       	and	r2, r18
     2ce:	04 1c       	adc	r0, r4
     2d0:	22 22       	and	r2, r18
     2d2:	12 fe       	sbrs	r1, 2
     2d4:	1c 2a       	or	r1, r28
     2d6:	2a 2a       	or	r2, r26
     2d8:	18 10       	cpse	r1, r8
     2da:	7e 90       	ld	r7, -X
     2dc:	80 40       	sbci	r24, 0x00	; 0
     2de:	30 4a       	sbci	r19, 0xA0	; 160
     2e0:	4a 4a       	sbci	r20, 0xAA	; 170
     2e2:	7c fe       	.word	0xfe7c	; ????
     2e4:	10 20       	and	r1, r0
     2e6:	20 1e       	adc	r2, r16
     2e8:	00 22       	and	r0, r16
     2ea:	be 02       	muls	r27, r30
     2ec:	00 04       	cpc	r0, r0
     2ee:	02 22       	and	r0, r18
     2f0:	bc 00       	.word	0x00bc	; ????
     2f2:	fe 08       	sbc	r15, r14
     2f4:	14 22       	and	r1, r20
     2f6:	00 00       	nop
     2f8:	82 fe       	sbrs	r8, 2
     2fa:	02 00       	.word	0x0002	; ????
     2fc:	3e 20       	and	r3, r14
     2fe:	18 20       	and	r1, r8
     300:	1e 3e       	cpi	r17, 0xEE	; 238
     302:	10 20       	and	r1, r0
     304:	20 1e       	adc	r2, r16
     306:	1c 22       	and	r1, r28
     308:	22 22       	and	r2, r18
     30a:	1c 3e       	cpi	r17, 0xEC	; 236
     30c:	28 28       	or	r2, r8
     30e:	28 10       	cpse	r2, r8
     310:	10 28       	or	r1, r0
     312:	28 18       	sub	r2, r8
     314:	3e 3e       	cpi	r19, 0xEE	; 238
     316:	10 20       	and	r1, r0
     318:	20 10       	cpse	r2, r0
     31a:	12 2a       	or	r1, r18
     31c:	2a 2a       	or	r2, r26
     31e:	04 20       	and	r0, r4
     320:	fc 22       	and	r15, r28
     322:	02 04       	cpc	r0, r2
     324:	3c 02       	muls	r19, r28
     326:	02 04       	cpc	r0, r2
     328:	3e 38       	cpi	r19, 0x8E	; 142
     32a:	04 02       	muls	r16, r20
     32c:	04 38       	cpi	r16, 0x84	; 132
     32e:	3c 02       	muls	r19, r28
     330:	0c 02       	muls	r16, r28
     332:	3c 22       	and	r3, r28
     334:	14 08       	sbc	r1, r4
     336:	14 22       	and	r1, r20
     338:	30 0a       	sbc	r3, r16
     33a:	0a 0a       	sbc	r0, r26
     33c:	3c 22       	and	r3, r28
     33e:	26 2a       	or	r2, r22
     340:	32 22       	and	r3, r18
     342:	00 10       	cpse	r0, r0
     344:	6c 82       	std	Y+4, r6	; 0x04
     346:	00 00       	nop
     348:	00 fe       	sbrs	r0, 0
     34a:	00 00       	nop
     34c:	00 82       	st	Z, r0
     34e:	6c 10       	cpse	r6, r12
     350:	00 08       	sbc	r0, r0
     352:	10 10       	cpse	r1, r0
     354:	08 10       	cpse	r0, r8
     356:	00 00       	nop
     358:	00 00       	nop
     35a:	00 7f       	andi	r16, 0xF0	; 240
     35c:	81 81       	ldd	r24, Z+1	; 0x01
     35e:	81 7f       	andi	r24, 0xF1	; 241
     360:	7f 83       	std	Y+7, r23	; 0x07
     362:	83 83       	std	Z+3, r24	; 0x03
     364:	7f 7f       	andi	r23, 0xFF	; 255
     366:	87 87       	std	Z+15, r24	; 0x0f
     368:	87 7f       	andi	r24, 0xF7	; 247
     36a:	7f 8f       	std	Y+31, r23	; 0x1f
     36c:	8f 8f       	std	Y+31, r24	; 0x1f
     36e:	7f 7f       	andi	r23, 0xFF	; 255
     370:	9f 9f       	mul	r25, r31
     372:	9f 7f       	andi	r25, 0xFF	; 255
     374:	7f bf       	out	0x3f, r23	; 63
     376:	bf bf       	out	0x3f, r27	; 63
     378:	7f 7f       	andi	r23, 0xFF	; 255
     37a:	ff ff       	.word	0xffff	; ????
     37c:	ff 7f       	andi	r31, 0xFF	; 255
     37e:	20 40       	sbci	r18, 0x00	; 0
     380:	ff 40       	sbci	r31, 0x0F	; 15
     382:	20 62       	ori	r18, 0x20	; 32
     384:	15 17       	cp	r17, r21
     386:	15 65       	ori	r17, 0x55	; 85
     388:	00 fb       	bst	r16, 0
     38a:	fb 00       	.word	0x00fb	; ????
	...

0000038d <CEENBoT_Inc_logo_bitmap>:
     38d:	00 00 00 00 00 c0 ff 03 00 e0 ff 07 00 f0 ff 0f     ................
     39d:	00 f8 ff 1f 00 78 00 1e 00 78 00 1e 00 78 00 1e     .....x...x...x..
     3ad:	00 78 00 1e 00 78 00 1e 00 78 00 1e 00 78 00 1e     .x...x...x...x..
     3bd:	00 78 00 1e 00 78 00 1e 00 00 00 00 00 00 00 00     .x...x..........
     3cd:	00 80 ff 03 00 e0 ff 07 00 f0 ff 0f 00 f8 ff 1f     ................
     3dd:	00 f8 3c 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     ..<..x<..x<..x<.
     3ed:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     3fd:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     40d:	00 00 00 00 00 e0 ff 03 00 f0 ff 07 00 f8 ff 0f     ................
     41d:	00 f8 ff 1f 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .....x<..x<..x<.
     42d:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x<..x<..x<..x<.
     43d:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 00 00 00     .x<..x<..x<.....
     44d:	00 00 00 00 00 f8 ff 03 00 f8 ff 0f 00 f8 ff 1f     ................
     45d:	00 f8 ff 1f 00 00 00 1e 00 00 00 1e 00 00 80 1f     ................
     46d:	00 00 f0 1f 00 00 ff 0f 00 e0 ff 07 00 f0 ff 00     ................
     47d:	00 f8 0f 00 00 f8 00 00 00 78 00 00 00 78 00 00     .........x...x..
     48d:	00 f8 ff 1f 00 f8 ff 1f 00 f0 ff 1f 00 e0 ff 1f     ................
	...
     4a5:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     4b5:	00 78 00 1e 00 78 3c 1e 00 78 3c 1e 00 78 3c 1e     .x...x<..x<..x<.
     4c5:	00 78 3c 1e 00 78 3c 1e 00 78 3c 1e 00 f8 7e 1f     .x<..x<..x<...~.
     4d5:	00 f8 ff 1f 00 f0 ff 0f 00 e0 e7 03 00 00 00 00     ................
     4e5:	00 00 00 38 00 ee ff 6c 00 2a 80 45 00 3a 00 47     ...8...l.*.E.:.G
     4f5:	fc 03 ff 6c fc 83 ff 39 00 de ff 0b 7c d0 81 0b     ...l...9....|...
     505:	fc d0 81 0b c0 d0 81 0b fc d0 81 0b 7c de ff 0b     ............|...
     515:	00 82 ff 39 70 02 ff 6c f8 3a 00 47 dc 2a 80 45     ...9p..l.:.G.*.E
     525:	cc ee ff 6c cc 00 00 38 00 00 00 00 0c 00 00 1e     ...l...8........
     535:	0c 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     545:	00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f 00 f8 ff 1f     ................
     555:	00 00 00 1e 00 00 00 1e 00 00 00 1e 00 00 00 1e     ................
     565:	00 00 00 5e 00 00 00 40 00 00 00 7c 00 00 00 40     ...^...@...|...@
     575:	00 00 00 40 00 00 00 7c 00 00 00 30 00 00 00 10     ...@...|...0....
     585:	00 00 00 30 00 00 00 7c                             ...0...|

0000058d <__c.2161>:
     58d:	6e 61 6e 00                                         nan.

00000591 <__c.2159>:
     591:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     5a1:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     5b1:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     5c1:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     5d1:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     5e1:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     5f1:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     601:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     611:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     621:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     631:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     641:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     651:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     661:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     671:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     681:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000690 <__ctors_end>:
     690:	11 24       	eor	r1, r1
     692:	1f be       	out	0x3f, r1	; 63
     694:	cf ef       	ldi	r28, 0xFF	; 255
     696:	d8 e0       	ldi	r29, 0x08	; 8
     698:	de bf       	out	0x3e, r29	; 62
     69a:	cd bf       	out	0x3d, r28	; 61

0000069c <__do_copy_data>:
     69c:	12 e0       	ldi	r17, 0x02	; 2
     69e:	a0 e0       	ldi	r26, 0x00	; 0
     6a0:	b1 e0       	ldi	r27, 0x01	; 1
     6a2:	e6 e6       	ldi	r30, 0x66	; 102
     6a4:	f5 e5       	ldi	r31, 0x55	; 85
     6a6:	02 c0       	rjmp	.+4      	; 0x6ac <__do_copy_data+0x10>
     6a8:	05 90       	lpm	r0, Z+
     6aa:	0d 92       	st	X+, r0
     6ac:	aa 3d       	cpi	r26, 0xDA	; 218
     6ae:	b1 07       	cpc	r27, r17
     6b0:	d9 f7       	brne	.-10     	; 0x6a8 <__do_copy_data+0xc>

000006b2 <__do_clear_bss>:
     6b2:	23 e0       	ldi	r18, 0x03	; 3
     6b4:	aa ed       	ldi	r26, 0xDA	; 218
     6b6:	b2 e0       	ldi	r27, 0x02	; 2
     6b8:	01 c0       	rjmp	.+2      	; 0x6bc <.do_clear_bss_start>

000006ba <.do_clear_bss_loop>:
     6ba:	1d 92       	st	X+, r1

000006bc <.do_clear_bss_start>:
     6bc:	a2 3d       	cpi	r26, 0xD2	; 210
     6be:	b2 07       	cpc	r27, r18
     6c0:	e1 f7       	brne	.-8      	; 0x6ba <.do_clear_bss_loop>
     6c2:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <main>
     6c6:	0c 94 b1 2a 	jmp	0x5562	; 0x5562 <_exit>

000006ca <__bad_interrupt>:
     6ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006ce <ADC_open>:
     6ce:	8f e0       	ldi	r24, 0x0F	; 15
     6d0:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     6d4:	88 23       	and	r24, r24
     6d6:	31 f4       	brne	.+12     	; 0x6e4 <ADC_open+0x16>
     6d8:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <__ADC_init>
     6dc:	8f e0       	ldi	r24, 0x0F	; 15
     6de:	61 e0       	ldi	r22, 0x01	; 1
     6e0:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
     6e4:	8f e0       	ldi	r24, 0x0F	; 15
     6e6:	91 e0       	ldi	r25, 0x01	; 1
     6e8:	08 95       	ret

000006ea <ADC_sample>:
     6ea:	8f e0       	ldi	r24, 0x0F	; 15
     6ec:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     6f0:	81 30       	cpi	r24, 0x01	; 1
     6f2:	19 f0       	breq	.+6      	; 0x6fa <ADC_sample+0x10>
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	13 c0       	rjmp	.+38     	; 0x720 <ADC_sample+0x36>
     6fa:	80 91 7a 00 	lds	r24, 0x007A
     6fe:	80 64       	ori	r24, 0x40	; 64
     700:	80 93 7a 00 	sts	0x007A, r24
     704:	80 91 7a 00 	lds	r24, 0x007A
     708:	86 fd       	sbrc	r24, 6
     70a:	fc cf       	rjmp	.-8      	; 0x704 <ADC_sample+0x1a>
     70c:	30 91 78 00 	lds	r19, 0x0078
     710:	20 91 79 00 	lds	r18, 0x0079
     714:	92 2f       	mov	r25, r18
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	23 2f       	mov	r18, r19
     71a:	30 e0       	ldi	r19, 0x00	; 0
     71c:	28 2b       	or	r18, r24
     71e:	39 2b       	or	r19, r25
     720:	c9 01       	movw	r24, r18
     722:	08 95       	ret

00000724 <ADC_set_channel>:
     724:	58 2f       	mov	r21, r24
     726:	80 91 00 01 	lds	r24, 0x0100
     72a:	88 30       	cpi	r24, 0x08	; 8
     72c:	d8 f4       	brcc	.+54     	; 0x764 <ADC_set_channel+0x40>
     72e:	40 91 7e 00 	lds	r20, 0x007E
     732:	21 e0       	ldi	r18, 0x01	; 1
     734:	30 e0       	ldi	r19, 0x00	; 0
     736:	b9 01       	movw	r22, r18
     738:	02 c0       	rjmp	.+4      	; 0x73e <ADC_set_channel+0x1a>
     73a:	66 0f       	add	r22, r22
     73c:	77 1f       	adc	r23, r23
     73e:	8a 95       	dec	r24
     740:	e2 f7       	brpl	.-8      	; 0x73a <ADC_set_channel+0x16>
     742:	cb 01       	movw	r24, r22
     744:	80 95       	com	r24
     746:	84 23       	and	r24, r20
     748:	80 93 7e 00 	sts	0x007E, r24
     74c:	80 91 7e 00 	lds	r24, 0x007E
     750:	05 2e       	mov	r0, r21
     752:	02 c0       	rjmp	.+4      	; 0x758 <ADC_set_channel+0x34>
     754:	22 0f       	add	r18, r18
     756:	33 1f       	adc	r19, r19
     758:	0a 94       	dec	r0
     75a:	e2 f7       	brpl	.-8      	; 0x754 <ADC_set_channel+0x30>
     75c:	82 2b       	or	r24, r18
     75e:	80 93 7e 00 	sts	0x007E, r24
     762:	0d c0       	rjmp	.+26     	; 0x77e <ADC_set_channel+0x5a>
     764:	20 91 7e 00 	lds	r18, 0x007E
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	05 2e       	mov	r0, r21
     76e:	02 c0       	rjmp	.+4      	; 0x774 <ADC_set_channel+0x50>
     770:	88 0f       	add	r24, r24
     772:	99 1f       	adc	r25, r25
     774:	0a 94       	dec	r0
     776:	e2 f7       	brpl	.-8      	; 0x770 <ADC_set_channel+0x4c>
     778:	28 2b       	or	r18, r24
     77a:	20 93 7e 00 	sts	0x007E, r18
     77e:	50 93 00 01 	sts	0x0100, r21
     782:	80 91 7c 00 	lds	r24, 0x007C
     786:	5f 71       	andi	r21, 0x1F	; 31
     788:	80 7e       	andi	r24, 0xE0	; 224
     78a:	85 2b       	or	r24, r21
     78c:	80 93 7c 00 	sts	0x007C, r24
     790:	08 95       	ret

00000792 <ADC_set_VREF>:
     792:	ec e7       	ldi	r30, 0x7C	; 124
     794:	f0 e0       	ldi	r31, 0x00	; 0
     796:	90 81       	ld	r25, Z
     798:	82 95       	swap	r24
     79a:	88 0f       	add	r24, r24
     79c:	88 0f       	add	r24, r24
     79e:	80 7c       	andi	r24, 0xC0	; 192
     7a0:	9f 73       	andi	r25, 0x3F	; 63
     7a2:	98 2b       	or	r25, r24
     7a4:	90 83       	st	Z, r25
     7a6:	08 95       	ret

000007a8 <main>:
     7a8:	0e 94 13 0b 	call	0x1626	; 0x1626 <CBOT_ISR_init>
     7ac:	0e 94 05 0b 	call	0x160a	; 0x160a <CBOT_init>
     7b0:	0e 94 8a 1d 	call	0x3b14	; 0x3b14 <CBOT_main>
     7b4:	80 e0       	ldi	r24, 0x00	; 0
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	08 95       	ret

000007ba <LCD_clear>:
     7ba:	0f 93       	push	r16
     7bc:	1f 93       	push	r17
     7be:	80 e4       	ldi	r24, 0x40	; 64
     7c0:	60 e0       	ldi	r22, 0x00	; 0
     7c2:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     7c6:	00 e0       	ldi	r16, 0x00	; 0
     7c8:	80 2f       	mov	r24, r16
     7ca:	60 e0       	ldi	r22, 0x00	; 0
     7cc:	0e 94 a3 04 	call	0x946	; 0x946 <LCD_set_PGC_addr>
     7d0:	10 e0       	ldi	r17, 0x00	; 0
     7d2:	80 e0       	ldi	r24, 0x00	; 0
     7d4:	61 e0       	ldi	r22, 0x01	; 1
     7d6:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     7da:	1f 5f       	subi	r17, 0xFF	; 255
     7dc:	10 38       	cpi	r17, 0x80	; 128
     7de:	c9 f7       	brne	.-14     	; 0x7d2 <LCD_clear+0x18>
     7e0:	0f 5f       	subi	r16, 0xFF	; 255
     7e2:	04 30       	cpi	r16, 0x04	; 4
     7e4:	89 f7       	brne	.-30     	; 0x7c8 <LCD_clear+0xe>
     7e6:	83 e0       	ldi	r24, 0x03	; 3
     7e8:	60 e0       	ldi	r22, 0x00	; 0
     7ea:	0e 94 9c 04 	call	0x938	; 0x938 <LCD_set_next_PGC>
     7ee:	1f 91       	pop	r17
     7f0:	0f 91       	pop	r16
     7f2:	08 95       	ret

000007f4 <LCD_open>:
     7f4:	0f 93       	push	r16
     7f6:	1f 93       	push	r17
     7f8:	82 e0       	ldi	r24, 0x02	; 2
     7fa:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     7fe:	88 23       	and	r24, r24
     800:	11 f4       	brne	.+4      	; 0x806 <LCD_open+0x12>
     802:	82 e0       	ldi	r24, 0x02	; 2
     804:	06 c0       	rjmp	.+12     	; 0x812 <LCD_open+0x1e>
     806:	81 e0       	ldi	r24, 0x01	; 1
     808:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     80c:	88 23       	and	r24, r24
     80e:	19 f4       	brne	.+6      	; 0x816 <LCD_open+0x22>
     810:	81 e0       	ldi	r24, 0x01	; 1
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	6d c0       	rjmp	.+218    	; 0x8f0 <LCD_open+0xfc>
     816:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <__LCD_init>
     81a:	85 e0       	ldi	r24, 0x05	; 5
     81c:	61 e0       	ldi	r22, 0x01	; 1
     81e:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
     822:	8e ea       	ldi	r24, 0xAE	; 174
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     82a:	82 ea       	ldi	r24, 0xA2	; 162
     82c:	60 e0       	ldi	r22, 0x00	; 0
     82e:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     832:	80 ea       	ldi	r24, 0xA0	; 160
     834:	60 e0       	ldi	r22, 0x00	; 0
     836:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     83a:	00 e5       	ldi	r16, 0x50	; 80
     83c:	13 ec       	ldi	r17, 0xC3	; 195
     83e:	c8 01       	movw	r24, r16
     840:	01 97       	sbiw	r24, 0x01	; 1
     842:	f1 f7       	brne	.-4      	; 0x840 <LCD_open+0x4c>
     844:	80 ec       	ldi	r24, 0xC0	; 192
     846:	60 e0       	ldi	r22, 0x00	; 0
     848:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     84c:	8f e2       	ldi	r24, 0x2F	; 47
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     854:	81 e8       	ldi	r24, 0x81	; 129
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     85c:	86 e1       	ldi	r24, 0x16	; 22
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     864:	82 e2       	ldi	r24, 0x22	; 34
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     86c:	c8 01       	movw	r24, r16
     86e:	01 97       	sbiw	r24, 0x01	; 1
     870:	f1 f7       	brne	.-4      	; 0x86e <LCD_open+0x7a>
     872:	8f ea       	ldi	r24, 0xAF	; 175
     874:	60 e0       	ldi	r22, 0x00	; 0
     876:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     87a:	86 ea       	ldi	r24, 0xA6	; 166
     87c:	60 e0       	ldi	r22, 0x00	; 0
     87e:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     882:	85 ea       	ldi	r24, 0xA5	; 165
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     88a:	80 e0       	ldi	r24, 0x00	; 0
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	28 e8       	ldi	r18, 0x88	; 136
     890:	33 e1       	ldi	r19, 0x13	; 19
     892:	f9 01       	movw	r30, r18
     894:	31 97       	sbiw	r30, 0x01	; 1
     896:	f1 f7       	brne	.-4      	; 0x894 <LCD_open+0xa0>
     898:	01 96       	adiw	r24, 0x01	; 1
     89a:	43 e0       	ldi	r20, 0x03	; 3
     89c:	88 3e       	cpi	r24, 0xE8	; 232
     89e:	94 07       	cpc	r25, r20
     8a0:	c1 f7       	brne	.-16     	; 0x892 <LCD_open+0x9e>
     8a2:	83 eb       	ldi	r24, 0xB3	; 179
     8a4:	60 e0       	ldi	r22, 0x00	; 0
     8a6:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     8aa:	80 e4       	ldi	r24, 0x40	; 64
     8ac:	60 e0       	ldi	r22, 0x00	; 0
     8ae:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     8b2:	83 e0       	ldi	r24, 0x03	; 3
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	0e 94 a3 04 	call	0x946	; 0x946 <LCD_set_PGC_addr>
     8ba:	83 e0       	ldi	r24, 0x03	; 3
     8bc:	60 e0       	ldi	r22, 0x00	; 0
     8be:	0e 94 9c 04 	call	0x938	; 0x938 <LCD_set_next_PGC>
     8c2:	10 92 a3 03 	sts	0x03A3, r1
     8c6:	10 92 a5 03 	sts	0x03A5, r1
     8ca:	10 92 a4 03 	sts	0x03A4, r1
     8ce:	8f e0       	ldi	r24, 0x0F	; 15
     8d0:	91 e0       	ldi	r25, 0x01	; 1
     8d2:	90 93 cf 03 	sts	0x03CF, r25
     8d6:	80 93 ce 03 	sts	0x03CE, r24
     8da:	88 e1       	ldi	r24, 0x18	; 24
     8dc:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <LCD_set_backlight>
     8e0:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
     8e4:	84 ea       	ldi	r24, 0xA4	; 164
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     8ec:	85 e0       	ldi	r24, 0x05	; 5
     8ee:	91 e0       	ldi	r25, 0x01	; 1
     8f0:	1f 91       	pop	r17
     8f2:	0f 91       	pop	r16
     8f4:	08 95       	ret

000008f6 <LCD_set_backlight>:
     8f6:	1f 93       	push	r17
     8f8:	18 2f       	mov	r17, r24
     8fa:	85 e0       	ldi	r24, 0x05	; 5
     8fc:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     900:	81 30       	cpi	r24, 0x01	; 1
     902:	c1 f4       	brne	.+48     	; 0x934 <__stack+0x35>
     904:	87 e0       	ldi	r24, 0x07	; 7
     906:	0e 94 d7 04 	call	0x9ae	; 0x9ae <SPI_set_slave_addr>
     90a:	82 e0       	ldi	r24, 0x02	; 2
     90c:	6a e0       	ldi	r22, 0x0A	; 10
     90e:	0e 94 28 05 	call	0xa50	; 0xa50 <SPI_transmit>
     912:	82 e0       	ldi	r24, 0x02	; 2
     914:	61 eb       	ldi	r22, 0xB1	; 177
     916:	0e 94 28 05 	call	0xa50	; 0xa50 <SPI_transmit>
     91a:	61 2f       	mov	r22, r17
     91c:	11 32       	cpi	r17, 0x21	; 33
     91e:	08 f0       	brcs	.+2      	; 0x922 <__stack+0x23>
     920:	60 e2       	ldi	r22, 0x20	; 32
     922:	82 e0       	ldi	r24, 0x02	; 2
     924:	0e 94 28 05 	call	0xa50	; 0xa50 <SPI_transmit>
     928:	89 ee       	ldi	r24, 0xE9	; 233
     92a:	8a 95       	dec	r24
     92c:	f1 f7       	brne	.-4      	; 0x92a <__stack+0x2b>
     92e:	87 e0       	ldi	r24, 0x07	; 7
     930:	0e 94 d7 04 	call	0x9ae	; 0x9ae <SPI_set_slave_addr>
     934:	1f 91       	pop	r17
     936:	08 95       	ret

00000938 <LCD_set_next_PGC>:
     938:	83 70       	andi	r24, 0x03	; 3
     93a:	6f 77       	andi	r22, 0x7F	; 127
     93c:	60 93 a1 03 	sts	0x03A1, r22
     940:	80 93 a2 03 	sts	0x03A2, r24
     944:	08 95       	ret

00000946 <LCD_set_PGC_addr>:
     946:	0f 93       	push	r16
     948:	1f 93       	push	r17
     94a:	06 2f       	mov	r16, r22
     94c:	16 2f       	mov	r17, r22
     94e:	1f 77       	andi	r17, 0x7F	; 127
     950:	83 70       	andi	r24, 0x03	; 3
     952:	80 6b       	ori	r24, 0xB0	; 176
     954:	60 e0       	ldi	r22, 0x00	; 0
     956:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     95a:	12 95       	swap	r17
     95c:	1f 70       	andi	r17, 0x0F	; 15
     95e:	81 2f       	mov	r24, r17
     960:	80 61       	ori	r24, 0x10	; 16
     962:	60 e0       	ldi	r22, 0x00	; 0
     964:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     968:	80 2f       	mov	r24, r16
     96a:	8f 70       	andi	r24, 0x0F	; 15
     96c:	60 e0       	ldi	r22, 0x00	; 0
     96e:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
     972:	1f 91       	pop	r17
     974:	0f 91       	pop	r16
     976:	08 95       	ret

00000978 <LCD_write>:
     978:	0f 93       	push	r16
     97a:	1f 93       	push	r17
     97c:	08 2f       	mov	r16, r24
     97e:	16 2f       	mov	r17, r22
     980:	85 e0       	ldi	r24, 0x05	; 5
     982:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     986:	81 30       	cpi	r24, 0x01	; 1
     988:	79 f4       	brne	.+30     	; 0x9a8 <LCD_write+0x30>
     98a:	11 23       	and	r17, r17
     98c:	19 f0       	breq	.+6      	; 0x994 <LCD_write+0x1c>
     98e:	11 30       	cpi	r17, 0x01	; 1
     990:	21 f4       	brne	.+8      	; 0x99a <LCD_write+0x22>
     992:	02 c0       	rjmp	.+4      	; 0x998 <LCD_write+0x20>
     994:	2b 98       	cbi	0x05, 3	; 5
     996:	01 c0       	rjmp	.+2      	; 0x99a <LCD_write+0x22>
     998:	2b 9a       	sbi	0x05, 3	; 5
     99a:	86 e0       	ldi	r24, 0x06	; 6
     99c:	8a 95       	dec	r24
     99e:	f1 f7       	brne	.-4      	; 0x99c <LCD_write+0x24>
     9a0:	80 e0       	ldi	r24, 0x00	; 0
     9a2:	60 2f       	mov	r22, r16
     9a4:	0e 94 28 05 	call	0xa50	; 0xa50 <SPI_transmit>
     9a8:	1f 91       	pop	r17
     9aa:	0f 91       	pop	r16
     9ac:	08 95       	ret

000009ae <SPI_set_slave_addr>:
     9ae:	1f 93       	push	r17
     9b0:	18 2f       	mov	r17, r24
     9b2:	82 e0       	ldi	r24, 0x02	; 2
     9b4:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     9b8:	81 30       	cpi	r24, 0x01	; 1
     9ba:	09 f0       	breq	.+2      	; 0x9be <SPI_set_slave_addr+0x10>
     9bc:	47 c0       	rjmp	.+142    	; 0xa4c <SPI_set_slave_addr+0x9e>
     9be:	91 2f       	mov	r25, r17
     9c0:	97 70       	andi	r25, 0x07	; 7
     9c2:	80 91 a6 03 	lds	r24, 0x03A6
     9c6:	98 17       	cp	r25, r24
     9c8:	09 f4       	brne	.+2      	; 0x9cc <SPI_set_slave_addr+0x1e>
     9ca:	40 c0       	rjmp	.+128    	; 0xa4c <SPI_set_slave_addr+0x9e>
     9cc:	90 93 a6 03 	sts	0x03A6, r25
     9d0:	85 b1       	in	r24, 0x05	; 5
     9d2:	88 7f       	andi	r24, 0xF8	; 248
     9d4:	89 2b       	or	r24, r25
     9d6:	85 b9       	out	0x05, r24	; 5
     9d8:	93 30       	cpi	r25, 0x03	; 3
     9da:	11 f1       	breq	.+68     	; 0xa20 <SPI_set_slave_addr+0x72>
     9dc:	94 30       	cpi	r25, 0x04	; 4
     9de:	28 f4       	brcc	.+10     	; 0x9ea <SPI_set_slave_addr+0x3c>
     9e0:	91 30       	cpi	r25, 0x01	; 1
     9e2:	51 f0       	breq	.+20     	; 0x9f8 <SPI_set_slave_addr+0x4a>
     9e4:	92 30       	cpi	r25, 0x02	; 2
     9e6:	90 f4       	brcc	.+36     	; 0xa0c <SPI_set_slave_addr+0x5e>
     9e8:	0c c0       	rjmp	.+24     	; 0xa02 <SPI_set_slave_addr+0x54>
     9ea:	95 30       	cpi	r25, 0x05	; 5
     9ec:	19 f1       	breq	.+70     	; 0xa34 <SPI_set_slave_addr+0x86>
     9ee:	95 30       	cpi	r25, 0x05	; 5
     9f0:	e0 f0       	brcs	.+56     	; 0xa2a <SPI_set_slave_addr+0x7c>
     9f2:	96 30       	cpi	r25, 0x06	; 6
     9f4:	21 f5       	brne	.+72     	; 0xa3e <SPI_set_slave_addr+0x90>
     9f6:	0f c0       	rjmp	.+30     	; 0xa16 <SPI_set_slave_addr+0x68>
     9f8:	e0 91 2c 03 	lds	r30, 0x032C
     9fc:	f0 91 2d 03 	lds	r31, 0x032D
     a00:	22 c0       	rjmp	.+68     	; 0xa46 <SPI_set_slave_addr+0x98>
     a02:	e0 91 2a 03 	lds	r30, 0x032A
     a06:	f0 91 2b 03 	lds	r31, 0x032B
     a0a:	1d c0       	rjmp	.+58     	; 0xa46 <SPI_set_slave_addr+0x98>
     a0c:	e0 91 2e 03 	lds	r30, 0x032E
     a10:	f0 91 2f 03 	lds	r31, 0x032F
     a14:	18 c0       	rjmp	.+48     	; 0xa46 <SPI_set_slave_addr+0x98>
     a16:	e0 91 36 03 	lds	r30, 0x0336
     a1a:	f0 91 37 03 	lds	r31, 0x0337
     a1e:	13 c0       	rjmp	.+38     	; 0xa46 <SPI_set_slave_addr+0x98>
     a20:	e0 91 30 03 	lds	r30, 0x0330
     a24:	f0 91 31 03 	lds	r31, 0x0331
     a28:	0e c0       	rjmp	.+28     	; 0xa46 <SPI_set_slave_addr+0x98>
     a2a:	e0 91 32 03 	lds	r30, 0x0332
     a2e:	f0 91 33 03 	lds	r31, 0x0333
     a32:	09 c0       	rjmp	.+18     	; 0xa46 <SPI_set_slave_addr+0x98>
     a34:	e0 91 34 03 	lds	r30, 0x0334
     a38:	f0 91 35 03 	lds	r31, 0x0335
     a3c:	04 c0       	rjmp	.+8      	; 0xa46 <SPI_set_slave_addr+0x98>
     a3e:	e0 91 38 03 	lds	r30, 0x0338
     a42:	f0 91 39 03 	lds	r31, 0x0339
     a46:	30 97       	sbiw	r30, 0x00	; 0
     a48:	09 f0       	breq	.+2      	; 0xa4c <SPI_set_slave_addr+0x9e>
     a4a:	09 95       	icall
     a4c:	1f 91       	pop	r17
     a4e:	08 95       	ret

00000a50 <SPI_transmit>:
     a50:	1f 93       	push	r17
     a52:	16 2f       	mov	r17, r22
     a54:	0e 94 d7 04 	call	0x9ae	; 0x9ae <SPI_set_slave_addr>
     a58:	82 e0       	ldi	r24, 0x02	; 2
     a5a:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     a5e:	81 30       	cpi	r24, 0x01	; 1
     a60:	21 f4       	brne	.+8      	; 0xa6a <SPI_transmit+0x1a>
     a62:	1e bd       	out	0x2e, r17	; 46
     a64:	0d b4       	in	r0, 0x2d	; 45
     a66:	07 fe       	sbrs	r0, 7
     a68:	fd cf       	rjmp	.-6      	; 0xa64 <SPI_transmit+0x14>
     a6a:	1f 91       	pop	r17
     a6c:	08 95       	ret

00000a6e <__SPKR_set_up_freq_LUT>:
     a6e:	0f 93       	push	r16
     a70:	1f 93       	push	r17
     a72:	cf 93       	push	r28
     a74:	df 93       	push	r29
     a76:	80 e2       	ldi	r24, 0x20	; 32
     a78:	91 e0       	ldi	r25, 0x01	; 1
     a7a:	0e 94 73 27 	call	0x4ee6	; 0x4ee6 <malloc>
     a7e:	9c 01       	movw	r18, r24
     a80:	90 93 49 03 	sts	0x0349, r25
     a84:	80 93 48 03 	sts	0x0348, r24
     a88:	89 2b       	or	r24, r25
     a8a:	11 f4       	brne	.+4      	; 0xa90 <__SPKR_set_up_freq_LUT+0x22>
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	39 c0       	rjmp	.+114    	; 0xb02 <__SPKR_set_up_freq_LUT+0x94>
     a90:	89 01       	movw	r16, r18
     a92:	c0 e0       	ldi	r28, 0x00	; 0
     a94:	d0 e0       	ldi	r29, 0x00	; 0
     a96:	be 01       	movw	r22, r28
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	0e 94 49 20 	call	0x4092	; 0x4092 <__floatunsisf>
     aa0:	20 e0       	ldi	r18, 0x00	; 0
     aa2:	30 e0       	ldi	r19, 0x00	; 0
     aa4:	40 ea       	ldi	r20, 0xA0	; 160
     aa6:	51 e4       	ldi	r21, 0x41	; 65
     aa8:	0e 94 b0 1f 	call	0x3f60	; 0x3f60 <__divsf3>
     aac:	27 ef       	ldi	r18, 0xF7	; 247
     aae:	35 e7       	ldi	r19, 0x75	; 117
     ab0:	40 e0       	ldi	r20, 0x00	; 0
     ab2:	5f e3       	ldi	r21, 0x3F	; 63
     ab4:	0e 94 2b 21 	call	0x4256	; 0x4256 <__mulsf3>
     ab8:	9b 01       	movw	r18, r22
     aba:	ac 01       	movw	r20, r24
     abc:	60 e0       	ldi	r22, 0x00	; 0
     abe:	70 e0       	ldi	r23, 0x00	; 0
     ac0:	80 e2       	ldi	r24, 0x20	; 32
     ac2:	91 e4       	ldi	r25, 0x41	; 65
     ac4:	0e 94 9d 25 	call	0x4b3a	; 0x4b3a <pow>
     ac8:	9b 01       	movw	r18, r22
     aca:	ac 01       	movw	r20, r24
     acc:	ca 01       	movw	r24, r20
     ace:	b9 01       	movw	r22, r18
     ad0:	2d ec       	ldi	r18, 0xCD	; 205
     ad2:	3c ec       	ldi	r19, 0xCC	; 204
     ad4:	42 e8       	ldi	r20, 0x82	; 130
     ad6:	51 e4       	ldi	r21, 0x41	; 65
     ad8:	0e 94 2b 21 	call	0x4256	; 0x4256 <__mulsf3>
     adc:	0e 94 63 25 	call	0x4ac6	; 0x4ac6 <lrint>
     ae0:	2a e0       	ldi	r18, 0x0A	; 10
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	40 e0       	ldi	r20, 0x00	; 0
     ae6:	50 e0       	ldi	r21, 0x00	; 0
     ae8:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__mulsi3>
     aec:	f8 01       	movw	r30, r16
     aee:	61 93       	st	Z+, r22
     af0:	71 93       	st	Z+, r23
     af2:	81 93       	st	Z+, r24
     af4:	91 93       	st	Z+, r25
     af6:	8f 01       	movw	r16, r30
     af8:	21 96       	adiw	r28, 0x01	; 1
     afa:	c8 34       	cpi	r28, 0x48	; 72
     afc:	d1 05       	cpc	r29, r1
     afe:	59 f6       	brne	.-106    	; 0xa96 <__SPKR_set_up_freq_LUT+0x28>
     b00:	81 e0       	ldi	r24, 0x01	; 1
     b02:	df 91       	pop	r29
     b04:	cf 91       	pop	r28
     b06:	1f 91       	pop	r17
     b08:	0f 91       	pop	r16
     b0a:	08 95       	ret

00000b0c <__SPKR_open_beep_mode>:
     b0c:	8a e0       	ldi	r24, 0x0A	; 10
     b0e:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     b12:	88 23       	and	r24, r24
     b14:	71 f4       	brne	.+28     	; 0xb32 <__SPKR_open_beep_mode+0x26>
     b16:	10 92 45 03 	sts	0x0345, r1
     b1a:	10 92 44 03 	sts	0x0344, r1
     b1e:	81 e0       	ldi	r24, 0x01	; 1
     b20:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__SPKR_init>
     b24:	81 e0       	ldi	r24, 0x01	; 1
     b26:	80 93 3b 03 	sts	0x033B, r24
     b2a:	8a e0       	ldi	r24, 0x0A	; 10
     b2c:	61 e0       	ldi	r22, 0x01	; 1
     b2e:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
     b32:	8a e0       	ldi	r24, 0x0A	; 10
     b34:	91 e0       	ldi	r25, 0x01	; 1
     b36:	08 95       	ret

00000b38 <__SPKR_open_tone_mode>:
     b38:	1f 93       	push	r17
     b3a:	8b e0       	ldi	r24, 0x0B	; 11
     b3c:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     b40:	88 23       	and	r24, r24
     b42:	11 f0       	breq	.+4      	; 0xb48 <__SPKR_open_tone_mode+0x10>
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	21 c0       	rjmp	.+66     	; 0xb8a <__SPKR_open_tone_mode+0x52>
     b48:	89 e0       	ldi	r24, 0x09	; 9
     b4a:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     b4e:	88 23       	and	r24, r24
     b50:	d9 f4       	brne	.+54     	; 0xb88 <__SPKR_open_tone_mode+0x50>
     b52:	0e 94 37 05 	call	0xa6e	; 0xa6e <__SPKR_set_up_freq_LUT>
     b56:	18 2f       	mov	r17, r24
     b58:	81 30       	cpi	r24, 0x01	; 1
     b5a:	b1 f4       	brne	.+44     	; 0xb88 <__SPKR_open_tone_mode+0x50>
     b5c:	10 92 3c 03 	sts	0x033C, r1
     b60:	10 92 3d 03 	sts	0x033D, r1
     b64:	10 92 3e 03 	sts	0x033E, r1
     b68:	10 92 3f 03 	sts	0x033F, r1
     b6c:	8d e0       	ldi	r24, 0x0D	; 13
     b6e:	61 ed       	ldi	r22, 0xD1	; 209
     b70:	7e e0       	ldi	r23, 0x0E	; 14
     b72:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <ISR_attach>
     b76:	82 e0       	ldi	r24, 0x02	; 2
     b78:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__SPKR_init>
     b7c:	10 93 3a 03 	sts	0x033A, r17
     b80:	89 e0       	ldi	r24, 0x09	; 9
     b82:	61 e0       	ldi	r22, 0x01	; 1
     b84:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
     b88:	91 e0       	ldi	r25, 0x01	; 1
     b8a:	89 e0       	ldi	r24, 0x09	; 9
     b8c:	1f 91       	pop	r17
     b8e:	08 95       	ret

00000b90 <SPKR_open>:
     b90:	81 30       	cpi	r24, 0x01	; 1
     b92:	29 f0       	breq	.+10     	; 0xb9e <SPKR_open+0xe>
     b94:	82 30       	cpi	r24, 0x02	; 2
     b96:	31 f0       	breq	.+12     	; 0xba4 <SPKR_open+0x14>
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	89 e0       	ldi	r24, 0x09	; 9
     b9c:	08 95       	ret
     b9e:	0e 94 86 05 	call	0xb0c	; 0xb0c <__SPKR_open_beep_mode>
     ba2:	08 95       	ret
     ba4:	0e 94 9c 05 	call	0xb38	; 0xb38 <__SPKR_open_tone_mode>
     ba8:	08 95       	ret

00000baa <SPKR_play_beep>:
     baa:	8f 92       	push	r8
     bac:	9f 92       	push	r9
     bae:	af 92       	push	r10
     bb0:	bf 92       	push	r11
     bb2:	cf 92       	push	r12
     bb4:	df 92       	push	r13
     bb6:	ef 92       	push	r14
     bb8:	ff 92       	push	r15
     bba:	0f 93       	push	r16
     bbc:	1f 93       	push	r17
     bbe:	cf 93       	push	r28
     bc0:	df 93       	push	r29
     bc2:	4b 01       	movw	r8, r22
     bc4:	5c 01       	movw	r10, r24
     bc6:	ea 01       	movw	r28, r20
     bc8:	b9 01       	movw	r22, r18
     bca:	21 15       	cp	r18, r1
     bcc:	31 05       	cpc	r19, r1
     bce:	39 f1       	breq	.+78     	; 0xc1e <SPKR_play_beep+0x74>
     bd0:	9e 01       	movw	r18, r28
     bd2:	44 27       	eor	r20, r20
     bd4:	37 fd       	sbrc	r19, 7
     bd6:	40 95       	com	r20
     bd8:	54 2f       	mov	r21, r20
     bda:	65 36       	cpi	r22, 0x65	; 101
     bdc:	71 05       	cpc	r23, r1
     bde:	10 f0       	brcs	.+4      	; 0xbe4 <SPKR_play_beep+0x3a>
     be0:	64 e6       	ldi	r22, 0x64	; 100
     be2:	70 e0       	ldi	r23, 0x00	; 0
     be4:	80 e0       	ldi	r24, 0x00	; 0
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__mulsi3>
     bec:	24 e6       	ldi	r18, 0x64	; 100
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	40 e0       	ldi	r20, 0x00	; 0
     bf2:	50 e0       	ldi	r21, 0x00	; 0
     bf4:	0e 94 ec 26 	call	0x4dd8	; 0x4dd8 <__udivmodsi4>
     bf8:	79 01       	movw	r14, r18
     bfa:	8a 01       	movw	r16, r20
     bfc:	c5 01       	movw	r24, r10
     bfe:	b4 01       	movw	r22, r8
     c00:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <SPKR_beep>
     c04:	c7 01       	movw	r24, r14
     c06:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
     c0a:	60 e0       	ldi	r22, 0x00	; 0
     c0c:	70 e0       	ldi	r23, 0x00	; 0
     c0e:	80 e0       	ldi	r24, 0x00	; 0
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <SPKR_beep>
     c16:	ce 01       	movw	r24, r28
     c18:	8e 19       	sub	r24, r14
     c1a:	9f 09       	sbc	r25, r15
     c1c:	04 c0       	rjmp	.+8      	; 0xc26 <SPKR_play_beep+0x7c>
     c1e:	41 15       	cp	r20, r1
     c20:	51 05       	cpc	r21, r1
     c22:	19 f0       	breq	.+6      	; 0xc2a <SPKR_play_beep+0x80>
     c24:	ca 01       	movw	r24, r20
     c26:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
     c2a:	df 91       	pop	r29
     c2c:	cf 91       	pop	r28
     c2e:	1f 91       	pop	r17
     c30:	0f 91       	pop	r16
     c32:	ff 90       	pop	r15
     c34:	ef 90       	pop	r14
     c36:	df 90       	pop	r13
     c38:	cf 90       	pop	r12
     c3a:	bf 90       	pop	r11
     c3c:	af 90       	pop	r10
     c3e:	9f 90       	pop	r9
     c40:	8f 90       	pop	r8
     c42:	08 95       	ret

00000c44 <STEPPER_close>:
     c44:	87 e0       	ldi	r24, 0x07	; 7
     c46:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
     c4a:	81 30       	cpi	r24, 0x01	; 1
     c4c:	41 f4       	brne	.+16     	; 0xc5e <STEPPER_close+0x1a>
     c4e:	80 93 8b 03 	sts	0x038B, r24
     c52:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__STEPPER_close>
     c56:	87 e0       	ldi	r24, 0x07	; 7
     c58:	60 e0       	ldi	r22, 0x00	; 0
     c5a:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
     c5e:	08 95       	ret

00000c60 <STEPPER_stepmode>:
     c60:	2f 92       	push	r2
     c62:	3f 92       	push	r3
     c64:	4f 92       	push	r4
     c66:	5f 92       	push	r5
     c68:	6f 92       	push	r6
     c6a:	7f 92       	push	r7
     c6c:	8f 92       	push	r8
     c6e:	9f 92       	push	r9
     c70:	af 92       	push	r10
     c72:	bf 92       	push	r11
     c74:	cf 92       	push	r12
     c76:	df 92       	push	r13
     c78:	ef 92       	push	r14
     c7a:	ff 92       	push	r15
     c7c:	0f 93       	push	r16
     c7e:	1f 93       	push	r17
     c80:	df 93       	push	r29
     c82:	cf 93       	push	r28
     c84:	cd b7       	in	r28, 0x3d	; 61
     c86:	de b7       	in	r29, 0x3e	; 62
     c88:	58 2e       	mov	r5, r24
     c8a:	96 2e       	mov	r9, r22
     c8c:	44 2e       	mov	r4, r20
     c8e:	39 01       	movw	r6, r18
     c90:	3c 2c       	mov	r3, r12
     c92:	c9 8c       	ldd	r12, Y+25	; 0x19
     c94:	da 8c       	ldd	r13, Y+26	; 0x1a
     c96:	2b 8c       	ldd	r2, Y+27	; 0x1b
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	68 17       	cp	r22, r24
     c9c:	39 f1       	breq	.+78     	; 0xcec <STEPPER_stepmode+0x8c>
     c9e:	68 17       	cp	r22, r24
     ca0:	28 f0       	brcs	.+10     	; 0xcac <STEPPER_stepmode+0x4c>
     ca2:	92 e0       	ldi	r25, 0x02	; 2
     ca4:	69 17       	cp	r22, r25
     ca6:	09 f0       	breq	.+2      	; 0xcaa <STEPPER_stepmode+0x4a>
     ca8:	85 c0       	rjmp	.+266    	; 0xdb4 <STEPPER_stepmode+0x154>
     caa:	49 c0       	rjmp	.+146    	; 0xd3e <STEPPER_stepmode+0xde>
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	61 e0       	ldi	r22, 0x01	; 1
     cb0:	0e 94 39 08 	call	0x1072	; 0x1072 <STEPPER_set_mode>
     cb4:	80 e0       	ldi	r24, 0x00	; 0
     cb6:	b7 01       	movw	r22, r14
     cb8:	0e 94 02 08 	call	0x1004	; 0x1004 <STEPPER_set_accel>
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	64 2d       	mov	r22, r4
     cc0:	a3 01       	movw	r20, r6
     cc2:	98 01       	movw	r18, r16
     cc4:	03 2d       	mov	r16, r3
     cc6:	ee 24       	eor	r14, r14
     cc8:	e3 94       	inc	r14
     cca:	ec e8       	ldi	r30, 0x8C	; 140
     ccc:	ce 2e       	mov	r12, r30
     cce:	e3 e0       	ldi	r30, 0x03	; 3
     cd0:	de 2e       	mov	r13, r30
     cd2:	0e 94 70 08 	call	0x10e0	; 0x10e0 <STEPPER_step>
     cd6:	55 20       	and	r5, r5
     cd8:	09 f0       	breq	.+2      	; 0xcdc <STEPPER_stepmode+0x7c>
     cda:	6c c0       	rjmp	.+216    	; 0xdb4 <STEPPER_stepmode+0x154>
     cdc:	00 d0       	rcall	.+0      	; 0xcde <STEPPER_stepmode+0x7e>
     cde:	0f 92       	push	r0
     ce0:	ed b7       	in	r30, 0x3d	; 61
     ce2:	fe b7       	in	r31, 0x3e	; 62
     ce4:	11 82       	std	Z+1, r1	; 0x01
     ce6:	b3 82       	std	Z+3, r11	; 0x03
     ce8:	a2 82       	std	Z+2, r10	; 0x02
     cea:	23 c0       	rjmp	.+70     	; 0xd32 <STEPPER_stepmode+0xd2>
     cec:	81 e0       	ldi	r24, 0x01	; 1
     cee:	61 e0       	ldi	r22, 0x01	; 1
     cf0:	0e 94 39 08 	call	0x1072	; 0x1072 <STEPPER_set_mode>
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	b6 01       	movw	r22, r12
     cf8:	0e 94 02 08 	call	0x1004	; 0x1004 <STEPPER_set_accel>
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	68 2d       	mov	r22, r8
     d00:	4d 89       	ldd	r20, Y+21	; 0x15
     d02:	5e 89       	ldd	r21, Y+22	; 0x16
     d04:	2f 89       	ldd	r18, Y+23	; 0x17
     d06:	38 8d       	ldd	r19, Y+24	; 0x18
     d08:	02 2d       	mov	r16, r2
     d0a:	ee 24       	eor	r14, r14
     d0c:	e3 94       	inc	r14
     d0e:	7c e8       	ldi	r23, 0x8C	; 140
     d10:	c7 2e       	mov	r12, r23
     d12:	73 e0       	ldi	r23, 0x03	; 3
     d14:	d7 2e       	mov	r13, r23
     d16:	0e 94 70 08 	call	0x10e0	; 0x10e0 <STEPPER_step>
     d1a:	55 20       	and	r5, r5
     d1c:	09 f0       	breq	.+2      	; 0xd20 <STEPPER_stepmode+0xc0>
     d1e:	4a c0       	rjmp	.+148    	; 0xdb4 <STEPPER_stepmode+0x154>
     d20:	00 d0       	rcall	.+0      	; 0xd22 <STEPPER_stepmode+0xc2>
     d22:	0f 92       	push	r0
     d24:	ed b7       	in	r30, 0x3d	; 61
     d26:	fe b7       	in	r31, 0x3e	; 62
     d28:	91 82       	std	Z+1, r9	; 0x01
     d2a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     d2c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     d2e:	93 83       	std	Z+3, r25	; 0x03
     d30:	82 83       	std	Z+2, r24	; 0x02
     d32:	0e 94 21 09 	call	0x1242	; 0x1242 <STEPPER_wait_and_then>
     d36:	0f 90       	pop	r0
     d38:	0f 90       	pop	r0
     d3a:	0f 90       	pop	r0
     d3c:	3b c0       	rjmp	.+118    	; 0xdb4 <STEPPER_stepmode+0x154>
     d3e:	82 e0       	ldi	r24, 0x02	; 2
     d40:	61 e0       	ldi	r22, 0x01	; 1
     d42:	0e 94 39 08 	call	0x1072	; 0x1072 <STEPPER_set_mode>
     d46:	80 e0       	ldi	r24, 0x00	; 0
     d48:	b7 01       	movw	r22, r14
     d4a:	0e 94 02 08 	call	0x1004	; 0x1004 <STEPPER_set_accel>
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	b6 01       	movw	r22, r12
     d52:	0e 94 02 08 	call	0x1004	; 0x1004 <STEPPER_set_accel>
     d56:	80 e0       	ldi	r24, 0x00	; 0
     d58:	64 2d       	mov	r22, r4
     d5a:	a3 01       	movw	r20, r6
     d5c:	98 01       	movw	r18, r16
     d5e:	03 2d       	mov	r16, r3
     d60:	ee 24       	eor	r14, r14
     d62:	e3 94       	inc	r14
     d64:	9c e8       	ldi	r25, 0x8C	; 140
     d66:	c9 2e       	mov	r12, r25
     d68:	93 e0       	ldi	r25, 0x03	; 3
     d6a:	d9 2e       	mov	r13, r25
     d6c:	0e 94 70 08 	call	0x10e0	; 0x10e0 <STEPPER_step>
     d70:	81 e0       	ldi	r24, 0x01	; 1
     d72:	68 2d       	mov	r22, r8
     d74:	4d 89       	ldd	r20, Y+21	; 0x15
     d76:	5e 89       	ldd	r21, Y+22	; 0x16
     d78:	2f 89       	ldd	r18, Y+23	; 0x17
     d7a:	38 8d       	ldd	r19, Y+24	; 0x18
     d7c:	02 2d       	mov	r16, r2
     d7e:	0e 94 70 08 	call	0x10e0	; 0x10e0 <STEPPER_step>
     d82:	55 20       	and	r5, r5
     d84:	b9 f4       	brne	.+46     	; 0xdb4 <STEPPER_stepmode+0x154>
     d86:	00 d0       	rcall	.+0      	; 0xd88 <STEPPER_stepmode+0x128>
     d88:	00 d0       	rcall	.+0      	; 0xd8a <STEPPER_stepmode+0x12a>
     d8a:	0f 92       	push	r0
     d8c:	ad b7       	in	r26, 0x3d	; 61
     d8e:	be b7       	in	r27, 0x3e	; 62
     d90:	11 96       	adiw	r26, 0x01	; 1
     d92:	ed b7       	in	r30, 0x3d	; 61
     d94:	fe b7       	in	r31, 0x3e	; 62
     d96:	91 82       	std	Z+1, r9	; 0x01
     d98:	fd 01       	movw	r30, r26
     d9a:	b2 82       	std	Z+2, r11	; 0x02
     d9c:	a1 82       	std	Z+1, r10	; 0x01
     d9e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     da0:	9d 8d       	ldd	r25, Y+29	; 0x1d
     da2:	94 83       	std	Z+4, r25	; 0x04
     da4:	83 83       	std	Z+3, r24	; 0x03
     da6:	0e 94 21 09 	call	0x1242	; 0x1242 <STEPPER_wait_and_then>
     daa:	0f 90       	pop	r0
     dac:	0f 90       	pop	r0
     dae:	0f 90       	pop	r0
     db0:	0f 90       	pop	r0
     db2:	0f 90       	pop	r0
     db4:	cf 91       	pop	r28
     db6:	df 91       	pop	r29
     db8:	1f 91       	pop	r17
     dba:	0f 91       	pop	r16
     dbc:	ff 90       	pop	r15
     dbe:	ef 90       	pop	r14
     dc0:	df 90       	pop	r13
     dc2:	cf 90       	pop	r12
     dc4:	bf 90       	pop	r11
     dc6:	af 90       	pop	r10
     dc8:	9f 90       	pop	r9
     dca:	8f 90       	pop	r8
     dcc:	7f 90       	pop	r7
     dce:	6f 90       	pop	r6
     dd0:	5f 90       	pop	r5
     dd2:	4f 90       	pop	r4
     dd4:	3f 90       	pop	r3
     dd6:	2f 90       	pop	r2
     dd8:	08 95       	ret

00000dda <STEPPER_move>:
     dda:	6f 92       	push	r6
     ddc:	7f 92       	push	r7
     dde:	8f 92       	push	r8
     de0:	9f 92       	push	r9
     de2:	af 92       	push	r10
     de4:	bf 92       	push	r11
     de6:	cf 92       	push	r12
     de8:	df 92       	push	r13
     dea:	ef 92       	push	r14
     dec:	ff 92       	push	r15
     dee:	0f 93       	push	r16
     df0:	1f 93       	push	r17
     df2:	df 93       	push	r29
     df4:	cf 93       	push	r28
     df6:	cd b7       	in	r28, 0x3d	; 61
     df8:	de b7       	in	r29, 0x3e	; 62
     dfa:	94 2e       	mov	r9, r20
     dfc:	7c 2d       	mov	r23, r12
     dfe:	d5 01       	movw	r26, r10
     e00:	49 89       	ldd	r20, Y+17	; 0x11
     e02:	5a 89       	ldd	r21, Y+18	; 0x12
     e04:	ab 88       	ldd	r10, Y+19	; 0x13
     e06:	bc 88       	ldd	r11, Y+20	; 0x14
     e08:	cd 88       	ldd	r12, Y+21	; 0x15
     e0a:	de 88       	ldd	r13, Y+22	; 0x16
     e0c:	9f 89       	ldd	r25, Y+23	; 0x17
     e0e:	81 30       	cpi	r24, 0x01	; 1
     e10:	09 f4       	brne	.+2      	; 0xe14 <STEPPER_move+0x3a>
     e12:	57 c0       	rjmp	.+174    	; 0xec2 <STEPPER_move+0xe8>
     e14:	81 30       	cpi	r24, 0x01	; 1
     e16:	b8 f1       	brcs	.+110    	; 0xe86 <STEPPER_move+0xac>
     e18:	82 30       	cpi	r24, 0x02	; 2
     e1a:	09 f0       	breq	.+2      	; 0xe1e <STEPPER_move+0x44>
     e1c:	76 c0       	rjmp	.+236    	; 0xf0a <STEPPER_move+0x130>
     e1e:	61 30       	cpi	r22, 0x01	; 1
     e20:	91 f0       	breq	.+36     	; 0xe46 <STEPPER_move+0x6c>
     e22:	61 30       	cpi	r22, 0x01	; 1
     e24:	20 f0       	brcs	.+8      	; 0xe2e <STEPPER_move+0x54>
     e26:	62 30       	cpi	r22, 0x02	; 2
     e28:	09 f0       	breq	.+2      	; 0xe2c <STEPPER_move+0x52>
     e2a:	6f c0       	rjmp	.+222    	; 0xf0a <STEPPER_move+0x130>
     e2c:	15 c0       	rjmp	.+42     	; 0xe58 <STEPPER_move+0x7e>
     e2e:	80 e0       	ldi	r24, 0x00	; 0
     e30:	60 e0       	ldi	r22, 0x00	; 0
     e32:	0e 94 39 08 	call	0x1072	; 0x1072 <STEPPER_set_mode>
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	b7 01       	movw	r22, r14
     e3a:	0e 94 02 08 	call	0x1004	; 0x1004 <STEPPER_set_accel>
     e3e:	80 e0       	ldi	r24, 0x00	; 0
     e40:	69 2d       	mov	r22, r9
     e42:	a8 01       	movw	r20, r16
     e44:	1d c0       	rjmp	.+58     	; 0xe80 <STEPPER_move+0xa6>
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	0e 94 39 08 	call	0x1072	; 0x1072 <STEPPER_set_mode>
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	b6 01       	movw	r22, r12
     e52:	0e 94 02 08 	call	0x1004	; 0x1004 <STEPPER_set_accel>
     e56:	11 c0       	rjmp	.+34     	; 0xe7a <STEPPER_move+0xa0>
     e58:	82 e0       	ldi	r24, 0x02	; 2
     e5a:	60 e0       	ldi	r22, 0x00	; 0
     e5c:	0e 94 39 08 	call	0x1072	; 0x1072 <STEPPER_set_mode>
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	b7 01       	movw	r22, r14
     e64:	0e 94 02 08 	call	0x1004	; 0x1004 <STEPPER_set_accel>
     e68:	81 e0       	ldi	r24, 0x01	; 1
     e6a:	b6 01       	movw	r22, r12
     e6c:	0e 94 02 08 	call	0x1004	; 0x1004 <STEPPER_set_accel>
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	69 2d       	mov	r22, r9
     e74:	a8 01       	movw	r20, r16
     e76:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_run>
     e7a:	81 e0       	ldi	r24, 0x01	; 1
     e7c:	68 2d       	mov	r22, r8
     e7e:	a5 01       	movw	r20, r10
     e80:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <STEPPER_run>
     e84:	42 c0       	rjmp	.+132    	; 0xf0a <STEPPER_move+0x130>
     e86:	ed b7       	in	r30, 0x3d	; 61
     e88:	fe b7       	in	r31, 0x3e	; 62
     e8a:	39 97       	sbiw	r30, 0x09	; 9
     e8c:	0f b6       	in	r0, 0x3f	; 63
     e8e:	f8 94       	cli
     e90:	fe bf       	out	0x3e, r31	; 62
     e92:	0f be       	out	0x3f, r0	; 63
     e94:	ed bf       	out	0x3d, r30	; 61
     e96:	6d b6       	in	r6, 0x3d	; 61
     e98:	7e b6       	in	r7, 0x3e	; 62
     e9a:	08 94       	sec
     e9c:	61 1c       	adc	r6, r1
     e9e:	71 1c       	adc	r7, r1
     ea0:	52 83       	std	Z+2, r21	; 0x02
     ea2:	41 83       	std	Z+1, r20	; 0x01
     ea4:	f3 01       	movw	r30, r6
     ea6:	b3 82       	std	Z+3, r11	; 0x03
     ea8:	a2 82       	std	Z+2, r10	; 0x02
     eaa:	d5 82       	std	Z+5, r13	; 0x05
     eac:	c4 82       	std	Z+4, r12	; 0x04
     eae:	96 83       	std	Z+6, r25	; 0x06
     eb0:	88 8d       	ldd	r24, Y+24	; 0x18
     eb2:	99 8d       	ldd	r25, Y+25	; 0x19
     eb4:	90 87       	std	Z+8, r25	; 0x08
     eb6:	87 83       	std	Z+7, r24	; 0x07
     eb8:	80 e0       	ldi	r24, 0x00	; 0
     eba:	49 2d       	mov	r20, r9
     ebc:	c7 2e       	mov	r12, r23
     ebe:	5d 01       	movw	r10, r26
     ec0:	1a c0       	rjmp	.+52     	; 0xef6 <STEPPER_move+0x11c>
     ec2:	ed b7       	in	r30, 0x3d	; 61
     ec4:	fe b7       	in	r31, 0x3e	; 62
     ec6:	39 97       	sbiw	r30, 0x09	; 9
     ec8:	0f b6       	in	r0, 0x3f	; 63
     eca:	f8 94       	cli
     ecc:	fe bf       	out	0x3e, r31	; 62
     ece:	0f be       	out	0x3f, r0	; 63
     ed0:	ed bf       	out	0x3d, r30	; 61
     ed2:	ad b7       	in	r26, 0x3d	; 61
     ed4:	be b7       	in	r27, 0x3e	; 62
     ed6:	11 96       	adiw	r26, 0x01	; 1
     ed8:	52 83       	std	Z+2, r21	; 0x02
     eda:	41 83       	std	Z+1, r20	; 0x01
     edc:	fd 01       	movw	r30, r26
     ede:	b3 82       	std	Z+3, r11	; 0x03
     ee0:	a2 82       	std	Z+2, r10	; 0x02
     ee2:	d5 82       	std	Z+5, r13	; 0x05
     ee4:	c4 82       	std	Z+4, r12	; 0x04
     ee6:	96 83       	std	Z+6, r25	; 0x06
     ee8:	10 86       	std	Z+8, r1	; 0x08
     eea:	17 82       	std	Z+7, r1	; 0x07
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	49 2d       	mov	r20, r9
     ef0:	c7 2e       	mov	r12, r23
     ef2:	aa 24       	eor	r10, r10
     ef4:	bb 24       	eor	r11, r11
     ef6:	0e 94 30 06 	call	0xc60	; 0xc60 <STEPPER_stepmode>
     efa:	8d b7       	in	r24, 0x3d	; 61
     efc:	9e b7       	in	r25, 0x3e	; 62
     efe:	09 96       	adiw	r24, 0x09	; 9
     f00:	0f b6       	in	r0, 0x3f	; 63
     f02:	f8 94       	cli
     f04:	9e bf       	out	0x3e, r25	; 62
     f06:	0f be       	out	0x3f, r0	; 63
     f08:	8d bf       	out	0x3d, r24	; 61
     f0a:	cf 91       	pop	r28
     f0c:	df 91       	pop	r29
     f0e:	1f 91       	pop	r17
     f10:	0f 91       	pop	r16
     f12:	ff 90       	pop	r15
     f14:	ef 90       	pop	r14
     f16:	df 90       	pop	r13
     f18:	cf 90       	pop	r12
     f1a:	bf 90       	pop	r11
     f1c:	af 90       	pop	r10
     f1e:	9f 90       	pop	r9
     f20:	8f 90       	pop	r8
     f22:	7f 90       	pop	r7
     f24:	6f 90       	pop	r6
     f26:	08 95       	ret

00000f28 <STEPPER_open>:
     f28:	0e 94 b4 0f 	call	0x1f68	; 0x1f68 <__STEPPER_init>
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	80 93 8b 03 	sts	0x038B, r24
     f32:	e5 e5       	ldi	r30, 0x55	; 85
     f34:	f3 e0       	ldi	r31, 0x03	; 3
     f36:	11 92       	st	Z+, r1
     f38:	11 92       	st	Z+, r1
     f3a:	11 82       	std	Z+1, r1	; 0x01
     f3c:	10 82       	st	Z, r1
     f3e:	32 96       	adiw	r30, 0x02	; 2
     f40:	11 82       	std	Z+1, r1	; 0x01
     f42:	10 82       	st	Z, r1
     f44:	32 96       	adiw	r30, 0x02	; 2
     f46:	11 82       	std	Z+1, r1	; 0x01
     f48:	10 82       	st	Z, r1
     f4a:	32 96       	adiw	r30, 0x02	; 2
     f4c:	11 82       	std	Z+1, r1	; 0x01
     f4e:	10 82       	st	Z, r1
     f50:	32 96       	adiw	r30, 0x02	; 2
     f52:	11 82       	std	Z+1, r1	; 0x01
     f54:	10 82       	st	Z, r1
     f56:	32 96       	adiw	r30, 0x02	; 2
     f58:	11 82       	std	Z+1, r1	; 0x01
     f5a:	10 82       	st	Z, r1
     f5c:	32 96       	adiw	r30, 0x02	; 2
     f5e:	11 82       	std	Z+1, r1	; 0x01
     f60:	10 82       	st	Z, r1
     f62:	32 96       	adiw	r30, 0x02	; 2
     f64:	11 82       	std	Z+1, r1	; 0x01
     f66:	10 82       	st	Z, r1
     f68:	32 96       	adiw	r30, 0x02	; 2
     f6a:	11 82       	std	Z+1, r1	; 0x01
     f6c:	10 82       	st	Z, r1
     f6e:	32 96       	adiw	r30, 0x02	; 2
     f70:	11 82       	std	Z+1, r1	; 0x01
     f72:	10 82       	st	Z, r1
     f74:	32 96       	adiw	r30, 0x02	; 2
     f76:	11 82       	std	Z+1, r1	; 0x01
     f78:	10 82       	st	Z, r1
     f7a:	32 96       	adiw	r30, 0x02	; 2
     f7c:	11 82       	std	Z+1, r1	; 0x01
     f7e:	10 82       	st	Z, r1
     f80:	36 96       	adiw	r30, 0x06	; 6
     f82:	11 92       	st	Z+, r1
     f84:	11 92       	st	Z+, r1
     f86:	11 92       	st	Z+, r1
     f88:	10 82       	st	Z, r1
     f8a:	32 96       	adiw	r30, 0x02	; 2
     f8c:	11 92       	st	Z+, r1
     f8e:	11 92       	st	Z+, r1
     f90:	11 92       	st	Z+, r1
     f92:	11 92       	st	Z+, r1
     f94:	11 92       	st	Z+, r1
     f96:	11 92       	st	Z+, r1
     f98:	11 92       	st	Z+, r1
     f9a:	11 82       	std	Z+1, r1	; 0x01
     f9c:	10 82       	st	Z, r1
     f9e:	32 96       	adiw	r30, 0x02	; 2
     fa0:	11 82       	std	Z+1, r1	; 0x01
     fa2:	10 82       	st	Z, r1
     fa4:	32 96       	adiw	r30, 0x02	; 2
     fa6:	11 82       	std	Z+1, r1	; 0x01
     fa8:	10 82       	st	Z, r1
     faa:	32 96       	adiw	r30, 0x02	; 2
     fac:	11 82       	std	Z+1, r1	; 0x01
     fae:	10 82       	st	Z, r1
     fb0:	76 97       	sbiw	r30, 0x16	; 22
     fb2:	11 82       	std	Z+1, r1	; 0x01
     fb4:	10 82       	st	Z, r1
     fb6:	32 96       	adiw	r30, 0x02	; 2
     fb8:	11 82       	std	Z+1, r1	; 0x01
     fba:	10 82       	st	Z, r1
     fbc:	10 92 8a 03 	sts	0x038A, r1
     fc0:	10 92 89 03 	sts	0x0389, r1
     fc4:	10 92 8b 03 	sts	0x038B, r1
     fc8:	87 e0       	ldi	r24, 0x07	; 7
     fca:	61 e0       	ldi	r22, 0x01	; 1
     fcc:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
     fd0:	87 e0       	ldi	r24, 0x07	; 7
     fd2:	91 e0       	ldi	r25, 0x01	; 1
     fd4:	08 95       	ret

00000fd6 <STEPPER_run>:
     fd6:	ef 92       	push	r14
     fd8:	ff 92       	push	r15
     fda:	0f 93       	push	r16
     fdc:	1f 93       	push	r17
     fde:	18 2f       	mov	r17, r24
     fe0:	06 2f       	mov	r16, r22
     fe2:	7a 01       	movw	r14, r20
     fe4:	60 e0       	ldi	r22, 0x00	; 0
     fe6:	0e 94 39 08 	call	0x1072	; 0x1072 <STEPPER_set_mode>
     fea:	81 2f       	mov	r24, r17
     fec:	60 2f       	mov	r22, r16
     fee:	0e 94 24 08 	call	0x1048	; 0x1048 <STEPPER_set_dir>
     ff2:	81 2f       	mov	r24, r17
     ff4:	b7 01       	movw	r22, r14
     ff6:	0e 94 4e 08 	call	0x109c	; 0x109c <STEPPER_set_speed>
     ffa:	1f 91       	pop	r17
     ffc:	0f 91       	pop	r16
     ffe:	ff 90       	pop	r15
    1000:	ef 90       	pop	r14
    1002:	08 95       	ret

00001004 <STEPPER_set_accel>:
    1004:	48 2f       	mov	r20, r24
    1006:	81 e0       	ldi	r24, 0x01	; 1
    1008:	80 93 8b 03 	sts	0x038B, r24
    100c:	cb 01       	movw	r24, r22
    100e:	23 e0       	ldi	r18, 0x03	; 3
    1010:	69 3e       	cpi	r22, 0xE9	; 233
    1012:	72 07       	cpc	r23, r18
    1014:	10 f0       	brcs	.+4      	; 0x101a <STEPPER_set_accel+0x16>
    1016:	88 ee       	ldi	r24, 0xE8	; 232
    1018:	93 e0       	ldi	r25, 0x03	; 3
    101a:	41 30       	cpi	r20, 0x01	; 1
    101c:	71 f0       	breq	.+28     	; 0x103a <STEPPER_set_accel+0x36>
    101e:	41 30       	cpi	r20, 0x01	; 1
    1020:	18 f0       	brcs	.+6      	; 0x1028 <STEPPER_set_accel+0x24>
    1022:	42 30       	cpi	r20, 0x02	; 2
    1024:	71 f4       	brne	.+28     	; 0x1042 <STEPPER_set_accel+0x3e>
    1026:	05 c0       	rjmp	.+10     	; 0x1032 <STEPPER_set_accel+0x2e>
    1028:	90 93 60 03 	sts	0x0360, r25
    102c:	80 93 5f 03 	sts	0x035F, r24
    1030:	08 c0       	rjmp	.+16     	; 0x1042 <STEPPER_set_accel+0x3e>
    1032:	90 93 60 03 	sts	0x0360, r25
    1036:	80 93 5f 03 	sts	0x035F, r24
    103a:	90 93 62 03 	sts	0x0362, r25
    103e:	80 93 61 03 	sts	0x0361, r24
    1042:	10 92 8b 03 	sts	0x038B, r1
    1046:	08 95       	ret

00001048 <STEPPER_set_dir>:
    1048:	98 2f       	mov	r25, r24
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	80 93 8b 03 	sts	0x038B, r24
    1050:	91 30       	cpi	r25, 0x01	; 1
    1052:	51 f0       	breq	.+20     	; 0x1068 <STEPPER_set_dir+0x20>
    1054:	91 30       	cpi	r25, 0x01	; 1
    1056:	18 f0       	brcs	.+6      	; 0x105e <STEPPER_set_dir+0x16>
    1058:	92 30       	cpi	r25, 0x02	; 2
    105a:	41 f4       	brne	.+16     	; 0x106c <STEPPER_set_dir+0x24>
    105c:	03 c0       	rjmp	.+6      	; 0x1064 <STEPPER_set_dir+0x1c>
    105e:	60 93 78 03 	sts	0x0378, r22
    1062:	04 c0       	rjmp	.+8      	; 0x106c <STEPPER_set_dir+0x24>
    1064:	60 93 78 03 	sts	0x0378, r22
    1068:	60 93 79 03 	sts	0x0379, r22
    106c:	10 92 8b 03 	sts	0x038B, r1
    1070:	08 95       	ret

00001072 <STEPPER_set_mode>:
    1072:	98 2f       	mov	r25, r24
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	80 93 8b 03 	sts	0x038B, r24
    107a:	91 30       	cpi	r25, 0x01	; 1
    107c:	51 f0       	breq	.+20     	; 0x1092 <STEPPER_set_mode+0x20>
    107e:	91 30       	cpi	r25, 0x01	; 1
    1080:	18 f0       	brcs	.+6      	; 0x1088 <STEPPER_set_mode+0x16>
    1082:	92 30       	cpi	r25, 0x02	; 2
    1084:	41 f4       	brne	.+16     	; 0x1096 <STEPPER_set_mode+0x24>
    1086:	03 c0       	rjmp	.+6      	; 0x108e <STEPPER_set_mode+0x1c>
    1088:	60 93 55 03 	sts	0x0355, r22
    108c:	04 c0       	rjmp	.+8      	; 0x1096 <STEPPER_set_mode+0x24>
    108e:	60 93 55 03 	sts	0x0355, r22
    1092:	60 93 56 03 	sts	0x0356, r22
    1096:	10 92 8b 03 	sts	0x038B, r1
    109a:	08 95       	ret

0000109c <STEPPER_set_speed>:
    109c:	48 2f       	mov	r20, r24
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	80 93 8b 03 	sts	0x038B, r24
    10a4:	cb 01       	movw	r24, r22
    10a6:	21 e0       	ldi	r18, 0x01	; 1
    10a8:	61 39       	cpi	r22, 0x91	; 145
    10aa:	72 07       	cpc	r23, r18
    10ac:	10 f0       	brcs	.+4      	; 0x10b2 <STEPPER_set_speed+0x16>
    10ae:	80 e9       	ldi	r24, 0x90	; 144
    10b0:	91 e0       	ldi	r25, 0x01	; 1
    10b2:	41 30       	cpi	r20, 0x01	; 1
    10b4:	71 f0       	breq	.+28     	; 0x10d2 <STEPPER_set_speed+0x36>
    10b6:	41 30       	cpi	r20, 0x01	; 1
    10b8:	18 f0       	brcs	.+6      	; 0x10c0 <STEPPER_set_speed+0x24>
    10ba:	42 30       	cpi	r20, 0x02	; 2
    10bc:	71 f4       	brne	.+28     	; 0x10da <STEPPER_set_speed+0x3e>
    10be:	05 c0       	rjmp	.+10     	; 0x10ca <STEPPER_set_speed+0x2e>
    10c0:	90 93 58 03 	sts	0x0358, r25
    10c4:	80 93 57 03 	sts	0x0357, r24
    10c8:	08 c0       	rjmp	.+16     	; 0x10da <STEPPER_set_speed+0x3e>
    10ca:	90 93 58 03 	sts	0x0358, r25
    10ce:	80 93 57 03 	sts	0x0357, r24
    10d2:	90 93 5a 03 	sts	0x035A, r25
    10d6:	80 93 59 03 	sts	0x0359, r24
    10da:	10 92 8b 03 	sts	0x038B, r1
    10de:	08 95       	ret

000010e0 <STEPPER_step>:
    10e0:	8f 92       	push	r8
    10e2:	9f 92       	push	r9
    10e4:	af 92       	push	r10
    10e6:	bf 92       	push	r11
    10e8:	cf 92       	push	r12
    10ea:	df 92       	push	r13
    10ec:	ef 92       	push	r14
    10ee:	ff 92       	push	r15
    10f0:	0f 93       	push	r16
    10f2:	1f 93       	push	r17
    10f4:	cf 93       	push	r28
    10f6:	df 93       	push	r29
    10f8:	18 2f       	mov	r17, r24
    10fa:	f6 2e       	mov	r15, r22
    10fc:	5a 01       	movw	r10, r20
    10fe:	49 01       	movw	r8, r18
    1100:	e6 01       	movw	r28, r12
    1102:	61 e0       	ldi	r22, 0x01	; 1
    1104:	0e 94 39 08 	call	0x1072	; 0x1072 <STEPPER_set_mode>
    1108:	81 2f       	mov	r24, r17
    110a:	b5 01       	movw	r22, r10
    110c:	a4 01       	movw	r20, r8
    110e:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <STEPPER_setup_decels>
    1112:	81 2f       	mov	r24, r17
    1114:	6f 2d       	mov	r22, r15
    1116:	0e 94 24 08 	call	0x1048	; 0x1048 <STEPPER_set_dir>
    111a:	81 2f       	mov	r24, r17
    111c:	60 2f       	mov	r22, r16
    111e:	0e 94 d9 0f 	call	0x1fb2	; 0x1fb2 <STEPPER_set_stop_mode>
    1122:	81 2f       	mov	r24, r17
    1124:	b5 01       	movw	r22, r10
    1126:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <STEPPER_set_steps>
    112a:	c1 14       	cp	r12, r1
    112c:	d1 04       	cpc	r13, r1
    112e:	99 f0       	breq	.+38     	; 0x1156 <STEPPER_step+0x76>
    1130:	11 30       	cpi	r17, 0x01	; 1
    1132:	49 f0       	breq	.+18     	; 0x1146 <STEPPER_step+0x66>
    1134:	11 30       	cpi	r17, 0x01	; 1
    1136:	18 f0       	brcs	.+6      	; 0x113e <STEPPER_step+0x5e>
    1138:	12 30       	cpi	r17, 0x02	; 2
    113a:	69 f4       	brne	.+26     	; 0x1156 <STEPPER_step+0x76>
    113c:	06 c0       	rjmp	.+12     	; 0x114a <STEPPER_step+0x6a>
    113e:	18 82       	st	Y, r1
    1140:	10 92 87 03 	sts	0x0387, r1
    1144:	08 c0       	rjmp	.+16     	; 0x1156 <STEPPER_step+0x76>
    1146:	19 82       	std	Y+1, r1	; 0x01
    1148:	04 c0       	rjmp	.+8      	; 0x1152 <STEPPER_step+0x72>
    114a:	18 82       	st	Y, r1
    114c:	19 82       	std	Y+1, r1	; 0x01
    114e:	10 92 87 03 	sts	0x0387, r1
    1152:	10 92 88 03 	sts	0x0388, r1
    1156:	d0 93 8a 03 	sts	0x038A, r29
    115a:	c0 93 89 03 	sts	0x0389, r28
    115e:	ee 20       	and	r14, r14
    1160:	b9 f5       	brne	.+110    	; 0x11d0 <STEPPER_step+0xf0>
    1162:	8a ed       	ldi	r24, 0xDA	; 218
    1164:	92 e0       	ldi	r25, 0x02	; 2
    1166:	90 93 8a 03 	sts	0x038A, r25
    116a:	80 93 89 03 	sts	0x0389, r24
    116e:	81 2f       	mov	r24, r17
    1170:	b4 01       	movw	r22, r8
    1172:	0e 94 4e 08 	call	0x109c	; 0x109c <STEPPER_set_speed>
    1176:	81 2f       	mov	r24, r17
    1178:	0e 94 9f 0f 	call	0x1f3e	; 0x1f3e <STEPPER_go>
    117c:	11 30       	cpi	r17, 0x01	; 1
    117e:	71 f0       	breq	.+28     	; 0x119c <STEPPER_step+0xbc>
    1180:	11 30       	cpi	r17, 0x01	; 1
    1182:	18 f0       	brcs	.+6      	; 0x118a <STEPPER_step+0xaa>
    1184:	12 30       	cpi	r17, 0x02	; 2
    1186:	59 f5       	brne	.+86     	; 0x11de <STEPPER_step+0xfe>
    1188:	12 c0       	rjmp	.+36     	; 0x11ae <STEPPER_step+0xce>
    118a:	10 92 da 02 	sts	0x02DA, r1
    118e:	10 92 87 03 	sts	0x0387, r1
    1192:	80 91 da 02 	lds	r24, 0x02DA
    1196:	88 23       	and	r24, r24
    1198:	e1 f3       	breq	.-8      	; 0x1192 <STEPPER_step+0xb2>
    119a:	21 c0       	rjmp	.+66     	; 0x11de <STEPPER_step+0xfe>
    119c:	10 92 db 02 	sts	0x02DB, r1
    11a0:	10 92 88 03 	sts	0x0388, r1
    11a4:	80 91 db 02 	lds	r24, 0x02DB
    11a8:	88 23       	and	r24, r24
    11aa:	e1 f3       	breq	.-8      	; 0x11a4 <STEPPER_step+0xc4>
    11ac:	18 c0       	rjmp	.+48     	; 0x11de <STEPPER_step+0xfe>
    11ae:	10 92 da 02 	sts	0x02DA, r1
    11b2:	10 92 db 02 	sts	0x02DB, r1
    11b6:	10 92 87 03 	sts	0x0387, r1
    11ba:	10 92 88 03 	sts	0x0388, r1
    11be:	80 91 da 02 	lds	r24, 0x02DA
    11c2:	88 23       	and	r24, r24
    11c4:	e1 f3       	breq	.-8      	; 0x11be <STEPPER_step+0xde>
    11c6:	80 91 db 02 	lds	r24, 0x02DB
    11ca:	88 23       	and	r24, r24
    11cc:	c1 f3       	breq	.-16     	; 0x11be <STEPPER_step+0xde>
    11ce:	07 c0       	rjmp	.+14     	; 0x11de <STEPPER_step+0xfe>
    11d0:	81 2f       	mov	r24, r17
    11d2:	b4 01       	movw	r22, r8
    11d4:	0e 94 4e 08 	call	0x109c	; 0x109c <STEPPER_set_speed>
    11d8:	81 2f       	mov	r24, r17
    11da:	0e 94 9f 0f 	call	0x1f3e	; 0x1f3e <STEPPER_go>
    11de:	df 91       	pop	r29
    11e0:	cf 91       	pop	r28
    11e2:	1f 91       	pop	r17
    11e4:	0f 91       	pop	r16
    11e6:	ff 90       	pop	r15
    11e8:	ef 90       	pop	r14
    11ea:	df 90       	pop	r13
    11ec:	cf 90       	pop	r12
    11ee:	bf 90       	pop	r11
    11f0:	af 90       	pop	r10
    11f2:	9f 90       	pop	r9
    11f4:	8f 90       	pop	r8
    11f6:	08 95       	ret

000011f8 <STEPPER_stop>:
    11f8:	0f 93       	push	r16
    11fa:	1f 93       	push	r17
    11fc:	18 2f       	mov	r17, r24
    11fe:	06 2f       	mov	r16, r22
    1200:	66 23       	and	r22, r22
    1202:	49 f4       	brne	.+18     	; 0x1216 <STEPPER_stop+0x1e>
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	0e 94 4e 08 	call	0x109c	; 0x109c <STEPPER_set_speed>
    120c:	81 2f       	mov	r24, r17
    120e:	60 e0       	ldi	r22, 0x00	; 0
    1210:	70 e0       	ldi	r23, 0x00	; 0
    1212:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <STEPPER_set_steps>
    1216:	81 e0       	ldi	r24, 0x01	; 1
    1218:	80 93 8b 03 	sts	0x038B, r24
    121c:	11 30       	cpi	r17, 0x01	; 1
    121e:	51 f0       	breq	.+20     	; 0x1234 <STEPPER_stop+0x3c>
    1220:	11 30       	cpi	r17, 0x01	; 1
    1222:	18 f0       	brcs	.+6      	; 0x122a <STEPPER_stop+0x32>
    1224:	12 30       	cpi	r17, 0x02	; 2
    1226:	41 f4       	brne	.+16     	; 0x1238 <STEPPER_stop+0x40>
    1228:	03 c0       	rjmp	.+6      	; 0x1230 <STEPPER_stop+0x38>
    122a:	00 93 73 03 	sts	0x0373, r16
    122e:	04 c0       	rjmp	.+8      	; 0x1238 <STEPPER_stop+0x40>
    1230:	00 93 73 03 	sts	0x0373, r16
    1234:	00 93 74 03 	sts	0x0374, r16
    1238:	10 92 8b 03 	sts	0x038B, r1
    123c:	1f 91       	pop	r17
    123e:	0f 91       	pop	r16
    1240:	08 95       	ret

00001242 <STEPPER_wait_and_then>:
    1242:	cf 92       	push	r12
    1244:	df 92       	push	r13
    1246:	ef 92       	push	r14
    1248:	ff 92       	push	r15
    124a:	0f 93       	push	r16
    124c:	1f 93       	push	r17
    124e:	df 93       	push	r29
    1250:	cf 93       	push	r28
    1252:	cd b7       	in	r28, 0x3d	; 61
    1254:	de b7       	in	r29, 0x3e	; 62
    1256:	8b 85       	ldd	r24, Y+11	; 0x0b
    1258:	81 30       	cpi	r24, 0x01	; 1
    125a:	61 f0       	breq	.+24     	; 0x1274 <STEPPER_wait_and_then+0x32>
    125c:	81 30       	cpi	r24, 0x01	; 1
    125e:	18 f0       	brcs	.+6      	; 0x1266 <STEPPER_wait_and_then+0x24>
    1260:	82 30       	cpi	r24, 0x02	; 2
    1262:	a1 f5       	brne	.+104    	; 0x12cc <STEPPER_wait_and_then+0x8a>
    1264:	11 c0       	rjmp	.+34     	; 0x1288 <STEPPER_wait_and_then+0x46>
    1266:	ec 85       	ldd	r30, Y+12	; 0x0c
    1268:	fd 85       	ldd	r31, Y+13	; 0x0d
    126a:	80 91 8c 03 	lds	r24, 0x038C
    126e:	88 23       	and	r24, r24
    1270:	e1 f3       	breq	.-8      	; 0x126a <STEPPER_wait_and_then+0x28>
    1272:	06 c0       	rjmp	.+12     	; 0x1280 <STEPPER_wait_and_then+0x3e>
    1274:	ec 85       	ldd	r30, Y+12	; 0x0c
    1276:	fd 85       	ldd	r31, Y+13	; 0x0d
    1278:	80 91 8d 03 	lds	r24, 0x038D
    127c:	88 23       	and	r24, r24
    127e:	e1 f3       	breq	.-8      	; 0x1278 <STEPPER_wait_and_then+0x36>
    1280:	30 97       	sbiw	r30, 0x00	; 0
    1282:	21 f1       	breq	.+72     	; 0x12cc <STEPPER_wait_and_then+0x8a>
    1284:	09 95       	icall
    1286:	22 c0       	rjmp	.+68     	; 0x12cc <STEPPER_wait_and_then+0x8a>
    1288:	cc 84       	ldd	r12, Y+12	; 0x0c
    128a:	dd 84       	ldd	r13, Y+13	; 0x0d
    128c:	ee 84       	ldd	r14, Y+14	; 0x0e
    128e:	ff 84       	ldd	r15, Y+15	; 0x0f
    1290:	00 e0       	ldi	r16, 0x00	; 0
    1292:	10 e0       	ldi	r17, 0x00	; 0
    1294:	00 23       	and	r16, r16
    1296:	51 f4       	brne	.+20     	; 0x12ac <STEPPER_wait_and_then+0x6a>
    1298:	80 91 8c 03 	lds	r24, 0x038C
    129c:	88 23       	and	r24, r24
    129e:	31 f0       	breq	.+12     	; 0x12ac <STEPPER_wait_and_then+0x6a>
    12a0:	c1 14       	cp	r12, r1
    12a2:	d1 04       	cpc	r13, r1
    12a4:	11 f0       	breq	.+4      	; 0x12aa <STEPPER_wait_and_then+0x68>
    12a6:	f6 01       	movw	r30, r12
    12a8:	09 95       	icall
    12aa:	01 e0       	ldi	r16, 0x01	; 1
    12ac:	11 23       	and	r17, r17
    12ae:	51 f4       	brne	.+20     	; 0x12c4 <STEPPER_wait_and_then+0x82>
    12b0:	80 91 8d 03 	lds	r24, 0x038D
    12b4:	88 23       	and	r24, r24
    12b6:	31 f0       	breq	.+12     	; 0x12c4 <STEPPER_wait_and_then+0x82>
    12b8:	e1 14       	cp	r14, r1
    12ba:	f1 04       	cpc	r15, r1
    12bc:	11 f0       	breq	.+4      	; 0x12c2 <STEPPER_wait_and_then+0x80>
    12be:	f7 01       	movw	r30, r14
    12c0:	09 95       	icall
    12c2:	11 e0       	ldi	r17, 0x01	; 1
    12c4:	00 23       	and	r16, r16
    12c6:	31 f3       	breq	.-52     	; 0x1294 <STEPPER_wait_and_then+0x52>
    12c8:	11 23       	and	r17, r17
    12ca:	21 f3       	breq	.-56     	; 0x1294 <STEPPER_wait_and_then+0x52>
    12cc:	cf 91       	pop	r28
    12ce:	df 91       	pop	r29
    12d0:	1f 91       	pop	r17
    12d2:	0f 91       	pop	r16
    12d4:	ff 90       	pop	r15
    12d6:	ef 90       	pop	r14
    12d8:	df 90       	pop	r13
    12da:	cf 90       	pop	r12
    12dc:	08 95       	ret

000012de <SYS_get_state>:
    12de:	e8 2f       	mov	r30, r24
    12e0:	f0 e0       	ldi	r31, 0x00	; 0
    12e2:	e3 31       	cpi	r30, 0x13	; 19
    12e4:	f1 05       	cpc	r31, r1
    12e6:	40 f4       	brcc	.+16     	; 0x12f8 <SYS_get_state+0x1a>
    12e8:	eb 5a       	subi	r30, 0xAB	; 171
    12ea:	ff 4f       	sbci	r31, 0xFF	; 255
    12ec:	ee 0f       	add	r30, r30
    12ee:	ff 1f       	adc	r31, r31
    12f0:	05 90       	lpm	r0, Z+
    12f2:	f4 91       	lpm	r31, Z
    12f4:	e0 2d       	mov	r30, r0
    12f6:	09 94       	ijmp
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	08 95       	ret
    12fc:	80 91 8e 03 	lds	r24, 0x038E
    1300:	08 95       	ret
    1302:	80 91 8f 03 	lds	r24, 0x038F
    1306:	08 95       	ret
    1308:	80 91 90 03 	lds	r24, 0x0390
    130c:	08 95       	ret
    130e:	80 91 91 03 	lds	r24, 0x0391
    1312:	08 95       	ret
    1314:	80 91 92 03 	lds	r24, 0x0392
    1318:	08 95       	ret
    131a:	80 91 94 03 	lds	r24, 0x0394
    131e:	08 95       	ret
    1320:	80 91 93 03 	lds	r24, 0x0393
    1324:	08 95       	ret
    1326:	80 91 95 03 	lds	r24, 0x0395
    132a:	08 95       	ret
    132c:	80 91 96 03 	lds	r24, 0x0396
    1330:	08 95       	ret
    1332:	80 91 97 03 	lds	r24, 0x0397
    1336:	08 95       	ret
    1338:	80 91 98 03 	lds	r24, 0x0398
    133c:	08 95       	ret
    133e:	80 91 99 03 	lds	r24, 0x0399
    1342:	08 95       	ret
    1344:	80 91 9a 03 	lds	r24, 0x039A
    1348:	08 95       	ret
    134a:	80 91 9b 03 	lds	r24, 0x039B
    134e:	08 95       	ret
    1350:	80 91 9c 03 	lds	r24, 0x039C
    1354:	08 95       	ret
    1356:	80 91 9d 03 	lds	r24, 0x039D
    135a:	08 95       	ret
    135c:	80 91 9e 03 	lds	r24, 0x039E
    1360:	08 95       	ret
    1362:	80 91 9f 03 	lds	r24, 0x039F
    1366:	08 95       	ret
    1368:	80 91 a0 03 	lds	r24, 0x03A0
    136c:	08 95       	ret

0000136e <SYS_set_state>:
    136e:	e8 2f       	mov	r30, r24
    1370:	f0 e0       	ldi	r31, 0x00	; 0
    1372:	e3 31       	cpi	r30, 0x13	; 19
    1374:	f1 05       	cpc	r31, r1
    1376:	08 f0       	brcs	.+2      	; 0x137a <SYS_set_state+0xc>
    1378:	40 c0       	rjmp	.+128    	; 0x13fa <SYS_set_state+0x8c>
    137a:	e8 59       	subi	r30, 0x98	; 152
    137c:	ff 4f       	sbci	r31, 0xFF	; 255
    137e:	ee 0f       	add	r30, r30
    1380:	ff 1f       	adc	r31, r31
    1382:	05 90       	lpm	r0, Z+
    1384:	f4 91       	lpm	r31, Z
    1386:	e0 2d       	mov	r30, r0
    1388:	09 94       	ijmp
    138a:	60 93 8e 03 	sts	0x038E, r22
    138e:	08 95       	ret
    1390:	60 93 8f 03 	sts	0x038F, r22
    1394:	08 95       	ret
    1396:	60 93 90 03 	sts	0x0390, r22
    139a:	08 95       	ret
    139c:	60 93 91 03 	sts	0x0391, r22
    13a0:	08 95       	ret
    13a2:	60 93 92 03 	sts	0x0392, r22
    13a6:	08 95       	ret
    13a8:	60 93 94 03 	sts	0x0394, r22
    13ac:	08 95       	ret
    13ae:	60 93 93 03 	sts	0x0393, r22
    13b2:	08 95       	ret
    13b4:	60 93 95 03 	sts	0x0395, r22
    13b8:	08 95       	ret
    13ba:	60 93 96 03 	sts	0x0396, r22
    13be:	08 95       	ret
    13c0:	60 93 97 03 	sts	0x0397, r22
    13c4:	08 95       	ret
    13c6:	60 93 98 03 	sts	0x0398, r22
    13ca:	08 95       	ret
    13cc:	60 93 99 03 	sts	0x0399, r22
    13d0:	08 95       	ret
    13d2:	60 93 9a 03 	sts	0x039A, r22
    13d6:	08 95       	ret
    13d8:	60 93 9b 03 	sts	0x039B, r22
    13dc:	08 95       	ret
    13de:	60 93 9c 03 	sts	0x039C, r22
    13e2:	08 95       	ret
    13e4:	60 93 9d 03 	sts	0x039D, r22
    13e8:	08 95       	ret
    13ea:	60 93 9e 03 	sts	0x039E, r22
    13ee:	08 95       	ret
    13f0:	60 93 9f 03 	sts	0x039F, r22
    13f4:	08 95       	ret
    13f6:	60 93 9e 03 	sts	0x039E, r22
    13fa:	08 95       	ret

000013fc <ATTINY_get_SW_state>:
    13fc:	1f 93       	push	r17
    13fe:	cf 93       	push	r28
    1400:	df 93       	push	r29
    1402:	18 2f       	mov	r17, r24
    1404:	80 91 dd 02 	lds	r24, 0x02DD
    1408:	88 23       	and	r24, r24
    140a:	41 f0       	breq	.+16     	; 0x141c <ATTINY_get_SW_state+0x20>
    140c:	80 91 e7 02 	lds	r24, 0x02E7
    1410:	88 23       	and	r24, r24
    1412:	99 f0       	breq	.+38     	; 0x143a <ATTINY_get_SW_state+0x3e>
    1414:	10 92 dd 02 	sts	0x02DD, r1
    1418:	10 92 e7 02 	sts	0x02E7, r1
    141c:	0e 94 4e 10 	call	0x209c	; 0x209c <ATTINY_get_sensors>
    1420:	80 93 dc 02 	sts	0x02DC, r24
    1424:	81 ee       	ldi	r24, 0xE1	; 225
    1426:	92 e0       	ldi	r25, 0x02	; 2
    1428:	61 e0       	ldi	r22, 0x01	; 1
    142a:	40 e0       	ldi	r20, 0x00	; 0
    142c:	22 e3       	ldi	r18, 0x32	; 50
    142e:	30 e0       	ldi	r19, 0x00	; 0
    1430:	0e 94 bc 0a 	call	0x1578	; 0x1578 <TMRSRVC_new>
    1434:	81 e0       	ldi	r24, 0x01	; 1
    1436:	80 93 dd 02 	sts	0x02DD, r24
    143a:	90 91 dc 02 	lds	r25, 0x02DC
    143e:	a1 2f       	mov	r26, r17
    1440:	b0 e0       	ldi	r27, 0x00	; 0
    1442:	ed 01       	movw	r28, r26
    1444:	c7 5f       	subi	r28, 0xF7	; 247
    1446:	de 4f       	sbci	r29, 0xFE	; 254
    1448:	88 81       	ld	r24, Y
    144a:	88 23       	and	r24, r24
    144c:	69 f0       	breq	.+26     	; 0x1468 <ATTINY_get_SW_state+0x6c>
    144e:	fd 01       	movw	r30, r26
    1450:	e4 5f       	subi	r30, 0xF4	; 244
    1452:	fe 4f       	sbci	r31, 0xFE	; 254
    1454:	80 81       	ld	r24, Z
    1456:	98 23       	and	r25, r24
    1458:	c1 f0       	breq	.+48     	; 0x148a <ATTINY_get_SW_state+0x8e>
    145a:	fd 01       	movw	r30, r26
    145c:	e2 52       	subi	r30, 0x22	; 34
    145e:	fd 4f       	sbci	r31, 0xFD	; 253
    1460:	81 e0       	ldi	r24, 0x01	; 1
    1462:	80 83       	st	Z, r24
    1464:	18 82       	st	Y, r1
    1466:	11 c0       	rjmp	.+34     	; 0x148a <ATTINY_get_SW_state+0x8e>
    1468:	fd 01       	movw	r30, r26
    146a:	e2 52       	subi	r30, 0x22	; 34
    146c:	fd 4f       	sbci	r31, 0xFD	; 253
    146e:	80 81       	ld	r24, Z
    1470:	81 11       	cpse	r24, r1
    1472:	10 82       	st	Z, r1
    1474:	fd 01       	movw	r30, r26
    1476:	e4 5f       	subi	r30, 0xF4	; 244
    1478:	fe 4f       	sbci	r31, 0xFE	; 254
    147a:	80 81       	ld	r24, Z
    147c:	98 23       	and	r25, r24
    147e:	29 f4       	brne	.+10     	; 0x148a <ATTINY_get_SW_state+0x8e>
    1480:	fd 01       	movw	r30, r26
    1482:	e7 5f       	subi	r30, 0xF7	; 247
    1484:	fe 4f       	sbci	r31, 0xFE	; 254
    1486:	81 e0       	ldi	r24, 0x01	; 1
    1488:	80 83       	st	Z, r24
    148a:	a2 52       	subi	r26, 0x22	; 34
    148c:	bd 4f       	sbci	r27, 0xFD	; 253
    148e:	8c 91       	ld	r24, X
    1490:	df 91       	pop	r29
    1492:	cf 91       	pop	r28
    1494:	1f 91       	pop	r17
    1496:	08 95       	ret

00001498 <ATTINY_open>:
    1498:	82 e0       	ldi	r24, 0x02	; 2
    149a:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    149e:	88 23       	and	r24, r24
    14a0:	19 f4       	brne	.+6      	; 0x14a8 <ATTINY_open+0x10>
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	82 e0       	ldi	r24, 0x02	; 2
    14a6:	08 95       	ret
    14a8:	10 92 bc 03 	sts	0x03BC, r1
    14ac:	10 92 bb 03 	sts	0x03BB, r1
    14b0:	10 92 be 03 	sts	0x03BE, r1
    14b4:	10 92 bd 03 	sts	0x03BD, r1
    14b8:	10 92 c0 03 	sts	0x03C0, r1
    14bc:	10 92 bf 03 	sts	0x03BF, r1
    14c0:	10 92 c2 03 	sts	0x03C2, r1
    14c4:	10 92 c1 03 	sts	0x03C1, r1
    14c8:	10 92 c4 03 	sts	0x03C4, r1
    14cc:	10 92 c3 03 	sts	0x03C3, r1
    14d0:	80 e9       	ldi	r24, 0x90	; 144
    14d2:	91 e0       	ldi	r25, 0x01	; 1
    14d4:	90 93 a8 03 	sts	0x03A8, r25
    14d8:	80 93 a7 03 	sts	0x03A7, r24
    14dc:	90 93 aa 03 	sts	0x03AA, r25
    14e0:	80 93 a9 03 	sts	0x03A9, r24
    14e4:	90 93 ac 03 	sts	0x03AC, r25
    14e8:	80 93 ab 03 	sts	0x03AB, r24
    14ec:	90 93 ae 03 	sts	0x03AE, r25
    14f0:	80 93 ad 03 	sts	0x03AD, r24
    14f4:	90 93 b0 03 	sts	0x03B0, r25
    14f8:	80 93 af 03 	sts	0x03AF, r24
    14fc:	84 e3       	ldi	r24, 0x34	; 52
    14fe:	98 e0       	ldi	r25, 0x08	; 8
    1500:	90 93 b2 03 	sts	0x03B2, r25
    1504:	80 93 b1 03 	sts	0x03B1, r24
    1508:	90 93 b4 03 	sts	0x03B4, r25
    150c:	80 93 b3 03 	sts	0x03B3, r24
    1510:	90 93 b6 03 	sts	0x03B6, r25
    1514:	80 93 b5 03 	sts	0x03B5, r24
    1518:	90 93 b8 03 	sts	0x03B8, r25
    151c:	80 93 b7 03 	sts	0x03B7, r24
    1520:	90 93 ba 03 	sts	0x03BA, r25
    1524:	80 93 b9 03 	sts	0x03B9, r24
    1528:	81 e0       	ldi	r24, 0x01	; 1
    152a:	61 e0       	ldi	r22, 0x01	; 1
    152c:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
    1530:	91 e0       	ldi	r25, 0x01	; 1
    1532:	81 e0       	ldi	r24, 0x01	; 1
    1534:	08 95       	ret

00001536 <TMRSRVC_delay>:
    1536:	df 93       	push	r29
    1538:	cf 93       	push	r28
    153a:	cd b7       	in	r28, 0x3d	; 61
    153c:	de b7       	in	r29, 0x3e	; 62
    153e:	29 97       	sbiw	r28, 0x09	; 9
    1540:	0f b6       	in	r0, 0x3f	; 63
    1542:	f8 94       	cli
    1544:	de bf       	out	0x3e, r29	; 62
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	cd bf       	out	0x3d, r28	; 61
    154a:	9c 01       	movw	r18, r24
    154c:	ce 01       	movw	r24, r28
    154e:	01 96       	adiw	r24, 0x01	; 1
    1550:	61 e0       	ldi	r22, 0x01	; 1
    1552:	40 e0       	ldi	r20, 0x00	; 0
    1554:	0e 94 bc 0a 	call	0x1578	; 0x1578 <TMRSRVC_new>
    1558:	98 2f       	mov	r25, r24
    155a:	88 23       	and	r24, r24
    155c:	19 f4       	brne	.+6      	; 0x1564 <TMRSRVC_delay+0x2e>
    155e:	8f 81       	ldd	r24, Y+7	; 0x07
    1560:	88 23       	and	r24, r24
    1562:	e9 f3       	breq	.-6      	; 0x155e <TMRSRVC_delay+0x28>
    1564:	89 2f       	mov	r24, r25
    1566:	29 96       	adiw	r28, 0x09	; 9
    1568:	0f b6       	in	r0, 0x3f	; 63
    156a:	f8 94       	cli
    156c:	de bf       	out	0x3e, r29	; 62
    156e:	0f be       	out	0x3f, r0	; 63
    1570:	cd bf       	out	0x3d, r28	; 61
    1572:	cf 91       	pop	r28
    1574:	df 91       	pop	r29
    1576:	08 95       	ret

00001578 <TMRSRVC_new>:
    1578:	ef 92       	push	r14
    157a:	ff 92       	push	r15
    157c:	0f 93       	push	r16
    157e:	1f 93       	push	r17
    1580:	cf 93       	push	r28
    1582:	df 93       	push	r29
    1584:	ec 01       	movw	r28, r24
    1586:	f6 2e       	mov	r15, r22
    1588:	e4 2e       	mov	r14, r20
    158a:	89 01       	movw	r16, r18
    158c:	88 e0       	ldi	r24, 0x08	; 8
    158e:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    1592:	81 30       	cpi	r24, 0x01	; 1
    1594:	11 f0       	breq	.+4      	; 0x159a <TMRSRVC_new+0x22>
    1596:	81 e0       	ldi	r24, 0x01	; 1
    1598:	26 c0       	rjmp	.+76     	; 0x15e6 <TMRSRVC_new+0x6e>
    159a:	84 e0       	ldi	r24, 0x04	; 4
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	0e 94 73 27 	call	0x4ee6	; 0x4ee6 <malloc>
    15a2:	fc 01       	movw	r30, r24
    15a4:	00 97       	sbiw	r24, 0x00	; 0
    15a6:	11 f4       	brne	.+4      	; 0x15ac <TMRSRVC_new+0x34>
    15a8:	82 e0       	ldi	r24, 0x02	; 2
    15aa:	1d c0       	rjmp	.+58     	; 0x15e6 <TMRSRVC_new+0x6e>
    15ac:	f9 82       	std	Y+1, r15	; 0x01
    15ae:	f0 fc       	sbrc	r15, 0
    15b0:	1e 82       	std	Y+6, r1	; 0x06
    15b2:	81 e0       	ldi	r24, 0x01	; 1
    15b4:	e8 16       	cp	r14, r24
    15b6:	19 f4       	brne	.+6      	; 0x15be <TMRSRVC_new+0x46>
    15b8:	89 81       	ldd	r24, Y+1	; 0x01
    15ba:	84 60       	ori	r24, 0x04	; 4
    15bc:	89 83       	std	Y+1, r24	; 0x01
    15be:	89 81       	ldd	r24, Y+1	; 0x01
    15c0:	88 60       	ori	r24, 0x08	; 8
    15c2:	89 83       	std	Y+1, r24	; 0x01
    15c4:	1b 83       	std	Y+3, r17	; 0x03
    15c6:	0a 83       	std	Y+2, r16	; 0x02
    15c8:	1d 83       	std	Y+5, r17	; 0x05
    15ca:	0c 83       	std	Y+4, r16	; 0x04
    15cc:	d1 83       	std	Z+1, r29	; 0x01
    15ce:	c0 83       	st	Z, r28
    15d0:	13 82       	std	Z+3, r1	; 0x03
    15d2:	12 82       	std	Z+2, r1	; 0x02
    15d4:	81 e0       	ldi	r24, 0x01	; 1
    15d6:	80 93 4a 03 	sts	0x034A, r24
    15da:	cf 01       	movw	r24, r30
    15dc:	0e 94 7f 10 	call	0x20fe	; 0x20fe <TMRSRVC_insert>
    15e0:	10 92 4a 03 	sts	0x034A, r1
    15e4:	80 e0       	ldi	r24, 0x00	; 0
    15e6:	df 91       	pop	r29
    15e8:	cf 91       	pop	r28
    15ea:	1f 91       	pop	r17
    15ec:	0f 91       	pop	r16
    15ee:	ff 90       	pop	r15
    15f0:	ef 90       	pop	r14
    15f2:	08 95       	ret

000015f4 <__ADC_init>:
    15f4:	8f e1       	ldi	r24, 0x1F	; 31
    15f6:	80 93 7c 00 	sts	0x007C, r24
    15fa:	ea e7       	ldi	r30, 0x7A	; 122
    15fc:	f0 e0       	ldi	r31, 0x00	; 0
    15fe:	87 e0       	ldi	r24, 0x07	; 7
    1600:	80 83       	st	Z, r24
    1602:	80 81       	ld	r24, Z
    1604:	80 68       	ori	r24, 0x80	; 128
    1606:	80 83       	st	Z, r24
    1608:	08 95       	ret

0000160a <CBOT_init>:
    160a:	0e 94 2b 10 	call	0x2056	; 0x2056 <SYS_init>
    160e:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <ATMEGA_open>
    1612:	0e 94 67 0d 	call	0x1ace	; 0x1ace <ISR_open>
    1616:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <TMRSRVC_open>
    161a:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <SPI_open>
    161e:	0e 94 4c 0a 	call	0x1498	; 0x1498 <ATTINY_open>
    1622:	78 94       	sei
    1624:	08 95       	ret

00001626 <CBOT_ISR_init>:
    1626:	00 00       	nop
    1628:	08 95       	ret

0000162a <__vector_16>:
    162a:	1f 92       	push	r1
    162c:	0f 92       	push	r0
    162e:	0f b6       	in	r0, 0x3f	; 63
    1630:	0f 92       	push	r0
    1632:	11 24       	eor	r1, r1
    1634:	2f 93       	push	r18
    1636:	3f 93       	push	r19
    1638:	4f 93       	push	r20
    163a:	5f 93       	push	r21
    163c:	6f 93       	push	r22
    163e:	7f 93       	push	r23
    1640:	8f 93       	push	r24
    1642:	9f 93       	push	r25
    1644:	af 93       	push	r26
    1646:	bf 93       	push	r27
    1648:	ef 93       	push	r30
    164a:	ff 93       	push	r31
    164c:	e0 91 0a 03 	lds	r30, 0x030A
    1650:	f0 91 0b 03 	lds	r31, 0x030B
    1654:	30 97       	sbiw	r30, 0x00	; 0
    1656:	09 f0       	breq	.+2      	; 0x165a <__vector_16+0x30>
    1658:	09 95       	icall
    165a:	ff 91       	pop	r31
    165c:	ef 91       	pop	r30
    165e:	bf 91       	pop	r27
    1660:	af 91       	pop	r26
    1662:	9f 91       	pop	r25
    1664:	8f 91       	pop	r24
    1666:	7f 91       	pop	r23
    1668:	6f 91       	pop	r22
    166a:	5f 91       	pop	r21
    166c:	4f 91       	pop	r20
    166e:	3f 91       	pop	r19
    1670:	2f 91       	pop	r18
    1672:	0f 90       	pop	r0
    1674:	0f be       	out	0x3f, r0	; 63
    1676:	0f 90       	pop	r0
    1678:	1f 90       	pop	r1
    167a:	18 95       	reti

0000167c <__vector_17>:
    167c:	1f 92       	push	r1
    167e:	0f 92       	push	r0
    1680:	0f b6       	in	r0, 0x3f	; 63
    1682:	0f 92       	push	r0
    1684:	11 24       	eor	r1, r1
    1686:	2f 93       	push	r18
    1688:	3f 93       	push	r19
    168a:	4f 93       	push	r20
    168c:	5f 93       	push	r21
    168e:	6f 93       	push	r22
    1690:	7f 93       	push	r23
    1692:	8f 93       	push	r24
    1694:	9f 93       	push	r25
    1696:	af 93       	push	r26
    1698:	bf 93       	push	r27
    169a:	ef 93       	push	r30
    169c:	ff 93       	push	r31
    169e:	e0 91 0c 03 	lds	r30, 0x030C
    16a2:	f0 91 0d 03 	lds	r31, 0x030D
    16a6:	30 97       	sbiw	r30, 0x00	; 0
    16a8:	09 f0       	breq	.+2      	; 0x16ac <__vector_17+0x30>
    16aa:	09 95       	icall
    16ac:	ff 91       	pop	r31
    16ae:	ef 91       	pop	r30
    16b0:	bf 91       	pop	r27
    16b2:	af 91       	pop	r26
    16b4:	9f 91       	pop	r25
    16b6:	8f 91       	pop	r24
    16b8:	7f 91       	pop	r23
    16ba:	6f 91       	pop	r22
    16bc:	5f 91       	pop	r21
    16be:	4f 91       	pop	r20
    16c0:	3f 91       	pop	r19
    16c2:	2f 91       	pop	r18
    16c4:	0f 90       	pop	r0
    16c6:	0f be       	out	0x3f, r0	; 63
    16c8:	0f 90       	pop	r0
    16ca:	1f 90       	pop	r1
    16cc:	18 95       	reti

000016ce <__vector_18>:
    16ce:	1f 92       	push	r1
    16d0:	0f 92       	push	r0
    16d2:	0f b6       	in	r0, 0x3f	; 63
    16d4:	0f 92       	push	r0
    16d6:	11 24       	eor	r1, r1
    16d8:	2f 93       	push	r18
    16da:	3f 93       	push	r19
    16dc:	4f 93       	push	r20
    16de:	5f 93       	push	r21
    16e0:	6f 93       	push	r22
    16e2:	7f 93       	push	r23
    16e4:	8f 93       	push	r24
    16e6:	9f 93       	push	r25
    16e8:	af 93       	push	r26
    16ea:	bf 93       	push	r27
    16ec:	ef 93       	push	r30
    16ee:	ff 93       	push	r31
    16f0:	e0 91 0e 03 	lds	r30, 0x030E
    16f4:	f0 91 0f 03 	lds	r31, 0x030F
    16f8:	30 97       	sbiw	r30, 0x00	; 0
    16fa:	09 f0       	breq	.+2      	; 0x16fe <__vector_18+0x30>
    16fc:	09 95       	icall
    16fe:	ff 91       	pop	r31
    1700:	ef 91       	pop	r30
    1702:	bf 91       	pop	r27
    1704:	af 91       	pop	r26
    1706:	9f 91       	pop	r25
    1708:	8f 91       	pop	r24
    170a:	7f 91       	pop	r23
    170c:	6f 91       	pop	r22
    170e:	5f 91       	pop	r21
    1710:	4f 91       	pop	r20
    1712:	3f 91       	pop	r19
    1714:	2f 91       	pop	r18
    1716:	0f 90       	pop	r0
    1718:	0f be       	out	0x3f, r0	; 63
    171a:	0f 90       	pop	r0
    171c:	1f 90       	pop	r1
    171e:	18 95       	reti

00001720 <__vector_9>:
    1720:	1f 92       	push	r1
    1722:	0f 92       	push	r0
    1724:	0f b6       	in	r0, 0x3f	; 63
    1726:	0f 92       	push	r0
    1728:	11 24       	eor	r1, r1
    172a:	2f 93       	push	r18
    172c:	3f 93       	push	r19
    172e:	4f 93       	push	r20
    1730:	5f 93       	push	r21
    1732:	6f 93       	push	r22
    1734:	7f 93       	push	r23
    1736:	8f 93       	push	r24
    1738:	9f 93       	push	r25
    173a:	af 93       	push	r26
    173c:	bf 93       	push	r27
    173e:	ef 93       	push	r30
    1740:	ff 93       	push	r31
    1742:	e0 91 fc 02 	lds	r30, 0x02FC
    1746:	f0 91 fd 02 	lds	r31, 0x02FD
    174a:	30 97       	sbiw	r30, 0x00	; 0
    174c:	09 f0       	breq	.+2      	; 0x1750 <__vector_9+0x30>
    174e:	09 95       	icall
    1750:	ff 91       	pop	r31
    1752:	ef 91       	pop	r30
    1754:	bf 91       	pop	r27
    1756:	af 91       	pop	r26
    1758:	9f 91       	pop	r25
    175a:	8f 91       	pop	r24
    175c:	7f 91       	pop	r23
    175e:	6f 91       	pop	r22
    1760:	5f 91       	pop	r21
    1762:	4f 91       	pop	r20
    1764:	3f 91       	pop	r19
    1766:	2f 91       	pop	r18
    1768:	0f 90       	pop	r0
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	0f 90       	pop	r0
    176e:	1f 90       	pop	r1
    1770:	18 95       	reti

00001772 <__vector_10>:
    1772:	1f 92       	push	r1
    1774:	0f 92       	push	r0
    1776:	0f b6       	in	r0, 0x3f	; 63
    1778:	0f 92       	push	r0
    177a:	11 24       	eor	r1, r1
    177c:	2f 93       	push	r18
    177e:	3f 93       	push	r19
    1780:	4f 93       	push	r20
    1782:	5f 93       	push	r21
    1784:	6f 93       	push	r22
    1786:	7f 93       	push	r23
    1788:	8f 93       	push	r24
    178a:	9f 93       	push	r25
    178c:	af 93       	push	r26
    178e:	bf 93       	push	r27
    1790:	ef 93       	push	r30
    1792:	ff 93       	push	r31
    1794:	e0 91 fe 02 	lds	r30, 0x02FE
    1798:	f0 91 ff 02 	lds	r31, 0x02FF
    179c:	30 97       	sbiw	r30, 0x00	; 0
    179e:	09 f0       	breq	.+2      	; 0x17a2 <__vector_10+0x30>
    17a0:	09 95       	icall
    17a2:	ff 91       	pop	r31
    17a4:	ef 91       	pop	r30
    17a6:	bf 91       	pop	r27
    17a8:	af 91       	pop	r26
    17aa:	9f 91       	pop	r25
    17ac:	8f 91       	pop	r24
    17ae:	7f 91       	pop	r23
    17b0:	6f 91       	pop	r22
    17b2:	5f 91       	pop	r21
    17b4:	4f 91       	pop	r20
    17b6:	3f 91       	pop	r19
    17b8:	2f 91       	pop	r18
    17ba:	0f 90       	pop	r0
    17bc:	0f be       	out	0x3f, r0	; 63
    17be:	0f 90       	pop	r0
    17c0:	1f 90       	pop	r1
    17c2:	18 95       	reti

000017c4 <__vector_11>:
    17c4:	1f 92       	push	r1
    17c6:	0f 92       	push	r0
    17c8:	0f b6       	in	r0, 0x3f	; 63
    17ca:	0f 92       	push	r0
    17cc:	11 24       	eor	r1, r1
    17ce:	2f 93       	push	r18
    17d0:	3f 93       	push	r19
    17d2:	4f 93       	push	r20
    17d4:	5f 93       	push	r21
    17d6:	6f 93       	push	r22
    17d8:	7f 93       	push	r23
    17da:	8f 93       	push	r24
    17dc:	9f 93       	push	r25
    17de:	af 93       	push	r26
    17e0:	bf 93       	push	r27
    17e2:	ef 93       	push	r30
    17e4:	ff 93       	push	r31
    17e6:	e0 91 00 03 	lds	r30, 0x0300
    17ea:	f0 91 01 03 	lds	r31, 0x0301
    17ee:	30 97       	sbiw	r30, 0x00	; 0
    17f0:	09 f0       	breq	.+2      	; 0x17f4 <__vector_11+0x30>
    17f2:	09 95       	icall
    17f4:	ff 91       	pop	r31
    17f6:	ef 91       	pop	r30
    17f8:	bf 91       	pop	r27
    17fa:	af 91       	pop	r26
    17fc:	9f 91       	pop	r25
    17fe:	8f 91       	pop	r24
    1800:	7f 91       	pop	r23
    1802:	6f 91       	pop	r22
    1804:	5f 91       	pop	r21
    1806:	4f 91       	pop	r20
    1808:	3f 91       	pop	r19
    180a:	2f 91       	pop	r18
    180c:	0f 90       	pop	r0
    180e:	0f be       	out	0x3f, r0	; 63
    1810:	0f 90       	pop	r0
    1812:	1f 90       	pop	r1
    1814:	18 95       	reti

00001816 <__vector_13>:
    1816:	1f 92       	push	r1
    1818:	0f 92       	push	r0
    181a:	0f b6       	in	r0, 0x3f	; 63
    181c:	0f 92       	push	r0
    181e:	11 24       	eor	r1, r1
    1820:	2f 93       	push	r18
    1822:	3f 93       	push	r19
    1824:	4f 93       	push	r20
    1826:	5f 93       	push	r21
    1828:	6f 93       	push	r22
    182a:	7f 93       	push	r23
    182c:	8f 93       	push	r24
    182e:	9f 93       	push	r25
    1830:	af 93       	push	r26
    1832:	bf 93       	push	r27
    1834:	ef 93       	push	r30
    1836:	ff 93       	push	r31
    1838:	e0 91 04 03 	lds	r30, 0x0304
    183c:	f0 91 05 03 	lds	r31, 0x0305
    1840:	30 97       	sbiw	r30, 0x00	; 0
    1842:	09 f0       	breq	.+2      	; 0x1846 <__vector_13+0x30>
    1844:	09 95       	icall
    1846:	ff 91       	pop	r31
    1848:	ef 91       	pop	r30
    184a:	bf 91       	pop	r27
    184c:	af 91       	pop	r26
    184e:	9f 91       	pop	r25
    1850:	8f 91       	pop	r24
    1852:	7f 91       	pop	r23
    1854:	6f 91       	pop	r22
    1856:	5f 91       	pop	r21
    1858:	4f 91       	pop	r20
    185a:	3f 91       	pop	r19
    185c:	2f 91       	pop	r18
    185e:	0f 90       	pop	r0
    1860:	0f be       	out	0x3f, r0	; 63
    1862:	0f 90       	pop	r0
    1864:	1f 90       	pop	r1
    1866:	18 95       	reti

00001868 <__vector_14>:
    1868:	1f 92       	push	r1
    186a:	0f 92       	push	r0
    186c:	0f b6       	in	r0, 0x3f	; 63
    186e:	0f 92       	push	r0
    1870:	11 24       	eor	r1, r1
    1872:	2f 93       	push	r18
    1874:	3f 93       	push	r19
    1876:	4f 93       	push	r20
    1878:	5f 93       	push	r21
    187a:	6f 93       	push	r22
    187c:	7f 93       	push	r23
    187e:	8f 93       	push	r24
    1880:	9f 93       	push	r25
    1882:	af 93       	push	r26
    1884:	bf 93       	push	r27
    1886:	ef 93       	push	r30
    1888:	ff 93       	push	r31
    188a:	e0 91 06 03 	lds	r30, 0x0306
    188e:	f0 91 07 03 	lds	r31, 0x0307
    1892:	30 97       	sbiw	r30, 0x00	; 0
    1894:	09 f0       	breq	.+2      	; 0x1898 <__vector_14+0x30>
    1896:	09 95       	icall
    1898:	ff 91       	pop	r31
    189a:	ef 91       	pop	r30
    189c:	bf 91       	pop	r27
    189e:	af 91       	pop	r26
    18a0:	9f 91       	pop	r25
    18a2:	8f 91       	pop	r24
    18a4:	7f 91       	pop	r23
    18a6:	6f 91       	pop	r22
    18a8:	5f 91       	pop	r21
    18aa:	4f 91       	pop	r20
    18ac:	3f 91       	pop	r19
    18ae:	2f 91       	pop	r18
    18b0:	0f 90       	pop	r0
    18b2:	0f be       	out	0x3f, r0	; 63
    18b4:	0f 90       	pop	r0
    18b6:	1f 90       	pop	r1
    18b8:	18 95       	reti

000018ba <__vector_12>:
    18ba:	1f 92       	push	r1
    18bc:	0f 92       	push	r0
    18be:	0f b6       	in	r0, 0x3f	; 63
    18c0:	0f 92       	push	r0
    18c2:	11 24       	eor	r1, r1
    18c4:	2f 93       	push	r18
    18c6:	3f 93       	push	r19
    18c8:	4f 93       	push	r20
    18ca:	5f 93       	push	r21
    18cc:	6f 93       	push	r22
    18ce:	7f 93       	push	r23
    18d0:	8f 93       	push	r24
    18d2:	9f 93       	push	r25
    18d4:	af 93       	push	r26
    18d6:	bf 93       	push	r27
    18d8:	ef 93       	push	r30
    18da:	ff 93       	push	r31
    18dc:	e0 91 02 03 	lds	r30, 0x0302
    18e0:	f0 91 03 03 	lds	r31, 0x0303
    18e4:	30 97       	sbiw	r30, 0x00	; 0
    18e6:	09 f0       	breq	.+2      	; 0x18ea <__vector_12+0x30>
    18e8:	09 95       	icall
    18ea:	ff 91       	pop	r31
    18ec:	ef 91       	pop	r30
    18ee:	bf 91       	pop	r27
    18f0:	af 91       	pop	r26
    18f2:	9f 91       	pop	r25
    18f4:	8f 91       	pop	r24
    18f6:	7f 91       	pop	r23
    18f8:	6f 91       	pop	r22
    18fa:	5f 91       	pop	r21
    18fc:	4f 91       	pop	r20
    18fe:	3f 91       	pop	r19
    1900:	2f 91       	pop	r18
    1902:	0f 90       	pop	r0
    1904:	0f be       	out	0x3f, r0	; 63
    1906:	0f 90       	pop	r0
    1908:	1f 90       	pop	r1
    190a:	18 95       	reti

0000190c <__vector_15>:
    190c:	1f 92       	push	r1
    190e:	0f 92       	push	r0
    1910:	0f b6       	in	r0, 0x3f	; 63
    1912:	0f 92       	push	r0
    1914:	11 24       	eor	r1, r1
    1916:	2f 93       	push	r18
    1918:	3f 93       	push	r19
    191a:	4f 93       	push	r20
    191c:	5f 93       	push	r21
    191e:	6f 93       	push	r22
    1920:	7f 93       	push	r23
    1922:	8f 93       	push	r24
    1924:	9f 93       	push	r25
    1926:	af 93       	push	r26
    1928:	bf 93       	push	r27
    192a:	ef 93       	push	r30
    192c:	ff 93       	push	r31
    192e:	e0 91 08 03 	lds	r30, 0x0308
    1932:	f0 91 09 03 	lds	r31, 0x0309
    1936:	30 97       	sbiw	r30, 0x00	; 0
    1938:	09 f0       	breq	.+2      	; 0x193c <__vector_15+0x30>
    193a:	09 95       	icall
    193c:	ff 91       	pop	r31
    193e:	ef 91       	pop	r30
    1940:	bf 91       	pop	r27
    1942:	af 91       	pop	r26
    1944:	9f 91       	pop	r25
    1946:	8f 91       	pop	r24
    1948:	7f 91       	pop	r23
    194a:	6f 91       	pop	r22
    194c:	5f 91       	pop	r21
    194e:	4f 91       	pop	r20
    1950:	3f 91       	pop	r19
    1952:	2f 91       	pop	r18
    1954:	0f 90       	pop	r0
    1956:	0f be       	out	0x3f, r0	; 63
    1958:	0f 90       	pop	r0
    195a:	1f 90       	pop	r1
    195c:	18 95       	reti

0000195e <__vector_4>:
    195e:	1f 92       	push	r1
    1960:	0f 92       	push	r0
    1962:	0f b6       	in	r0, 0x3f	; 63
    1964:	0f 92       	push	r0
    1966:	11 24       	eor	r1, r1
    1968:	2f 93       	push	r18
    196a:	3f 93       	push	r19
    196c:	4f 93       	push	r20
    196e:	5f 93       	push	r21
    1970:	6f 93       	push	r22
    1972:	7f 93       	push	r23
    1974:	8f 93       	push	r24
    1976:	9f 93       	push	r25
    1978:	af 93       	push	r26
    197a:	bf 93       	push	r27
    197c:	ef 93       	push	r30
    197e:	ff 93       	push	r31
    1980:	e0 91 f2 02 	lds	r30, 0x02F2
    1984:	f0 91 f3 02 	lds	r31, 0x02F3
    1988:	30 97       	sbiw	r30, 0x00	; 0
    198a:	09 f0       	breq	.+2      	; 0x198e <__vector_4+0x30>
    198c:	09 95       	icall
    198e:	ff 91       	pop	r31
    1990:	ef 91       	pop	r30
    1992:	bf 91       	pop	r27
    1994:	af 91       	pop	r26
    1996:	9f 91       	pop	r25
    1998:	8f 91       	pop	r24
    199a:	7f 91       	pop	r23
    199c:	6f 91       	pop	r22
    199e:	5f 91       	pop	r21
    19a0:	4f 91       	pop	r20
    19a2:	3f 91       	pop	r19
    19a4:	2f 91       	pop	r18
    19a6:	0f 90       	pop	r0
    19a8:	0f be       	out	0x3f, r0	; 63
    19aa:	0f 90       	pop	r0
    19ac:	1f 90       	pop	r1
    19ae:	18 95       	reti

000019b0 <__vector_5>:
    19b0:	1f 92       	push	r1
    19b2:	0f 92       	push	r0
    19b4:	0f b6       	in	r0, 0x3f	; 63
    19b6:	0f 92       	push	r0
    19b8:	11 24       	eor	r1, r1
    19ba:	2f 93       	push	r18
    19bc:	3f 93       	push	r19
    19be:	4f 93       	push	r20
    19c0:	5f 93       	push	r21
    19c2:	6f 93       	push	r22
    19c4:	7f 93       	push	r23
    19c6:	8f 93       	push	r24
    19c8:	9f 93       	push	r25
    19ca:	af 93       	push	r26
    19cc:	bf 93       	push	r27
    19ce:	ef 93       	push	r30
    19d0:	ff 93       	push	r31
    19d2:	e0 91 f4 02 	lds	r30, 0x02F4
    19d6:	f0 91 f5 02 	lds	r31, 0x02F5
    19da:	30 97       	sbiw	r30, 0x00	; 0
    19dc:	09 f0       	breq	.+2      	; 0x19e0 <__vector_5+0x30>
    19de:	09 95       	icall
    19e0:	ff 91       	pop	r31
    19e2:	ef 91       	pop	r30
    19e4:	bf 91       	pop	r27
    19e6:	af 91       	pop	r26
    19e8:	9f 91       	pop	r25
    19ea:	8f 91       	pop	r24
    19ec:	7f 91       	pop	r23
    19ee:	6f 91       	pop	r22
    19f0:	5f 91       	pop	r21
    19f2:	4f 91       	pop	r20
    19f4:	3f 91       	pop	r19
    19f6:	2f 91       	pop	r18
    19f8:	0f 90       	pop	r0
    19fa:	0f be       	out	0x3f, r0	; 63
    19fc:	0f 90       	pop	r0
    19fe:	1f 90       	pop	r1
    1a00:	18 95       	reti

00001a02 <__vector_6>:
    1a02:	1f 92       	push	r1
    1a04:	0f 92       	push	r0
    1a06:	0f b6       	in	r0, 0x3f	; 63
    1a08:	0f 92       	push	r0
    1a0a:	11 24       	eor	r1, r1
    1a0c:	2f 93       	push	r18
    1a0e:	3f 93       	push	r19
    1a10:	4f 93       	push	r20
    1a12:	5f 93       	push	r21
    1a14:	6f 93       	push	r22
    1a16:	7f 93       	push	r23
    1a18:	8f 93       	push	r24
    1a1a:	9f 93       	push	r25
    1a1c:	af 93       	push	r26
    1a1e:	bf 93       	push	r27
    1a20:	ef 93       	push	r30
    1a22:	ff 93       	push	r31
    1a24:	e0 91 f6 02 	lds	r30, 0x02F6
    1a28:	f0 91 f7 02 	lds	r31, 0x02F7
    1a2c:	30 97       	sbiw	r30, 0x00	; 0
    1a2e:	09 f0       	breq	.+2      	; 0x1a32 <__vector_6+0x30>
    1a30:	09 95       	icall
    1a32:	ff 91       	pop	r31
    1a34:	ef 91       	pop	r30
    1a36:	bf 91       	pop	r27
    1a38:	af 91       	pop	r26
    1a3a:	9f 91       	pop	r25
    1a3c:	8f 91       	pop	r24
    1a3e:	7f 91       	pop	r23
    1a40:	6f 91       	pop	r22
    1a42:	5f 91       	pop	r21
    1a44:	4f 91       	pop	r20
    1a46:	3f 91       	pop	r19
    1a48:	2f 91       	pop	r18
    1a4a:	0f 90       	pop	r0
    1a4c:	0f be       	out	0x3f, r0	; 63
    1a4e:	0f 90       	pop	r0
    1a50:	1f 90       	pop	r1
    1a52:	18 95       	reti

00001a54 <__vector_7>:
    1a54:	1f 92       	push	r1
    1a56:	0f 92       	push	r0
    1a58:	0f b6       	in	r0, 0x3f	; 63
    1a5a:	0f 92       	push	r0
    1a5c:	11 24       	eor	r1, r1
    1a5e:	2f 93       	push	r18
    1a60:	3f 93       	push	r19
    1a62:	4f 93       	push	r20
    1a64:	5f 93       	push	r21
    1a66:	6f 93       	push	r22
    1a68:	7f 93       	push	r23
    1a6a:	8f 93       	push	r24
    1a6c:	9f 93       	push	r25
    1a6e:	af 93       	push	r26
    1a70:	bf 93       	push	r27
    1a72:	ef 93       	push	r30
    1a74:	ff 93       	push	r31
    1a76:	e0 91 f8 02 	lds	r30, 0x02F8
    1a7a:	f0 91 f9 02 	lds	r31, 0x02F9
    1a7e:	30 97       	sbiw	r30, 0x00	; 0
    1a80:	09 f0       	breq	.+2      	; 0x1a84 <__vector_7+0x30>
    1a82:	09 95       	icall
    1a84:	ff 91       	pop	r31
    1a86:	ef 91       	pop	r30
    1a88:	bf 91       	pop	r27
    1a8a:	af 91       	pop	r26
    1a8c:	9f 91       	pop	r25
    1a8e:	8f 91       	pop	r24
    1a90:	7f 91       	pop	r23
    1a92:	6f 91       	pop	r22
    1a94:	5f 91       	pop	r21
    1a96:	4f 91       	pop	r20
    1a98:	3f 91       	pop	r19
    1a9a:	2f 91       	pop	r18
    1a9c:	0f 90       	pop	r0
    1a9e:	0f be       	out	0x3f, r0	; 63
    1aa0:	0f 90       	pop	r0
    1aa2:	1f 90       	pop	r1
    1aa4:	18 95       	reti

00001aa6 <ISR_attach>:
    1aa6:	e8 2f       	mov	r30, r24
    1aa8:	80 32       	cpi	r24, 0x20	; 32
    1aaa:	68 f4       	brcc	.+26     	; 0x1ac6 <ISR_attach+0x20>
    1aac:	80 51       	subi	r24, 0x10	; 16
    1aae:	83 30       	cpi	r24, 0x03	; 3
    1ab0:	50 f0       	brcs	.+20     	; 0x1ac6 <ISR_attach+0x20>
    1ab2:	f0 e0       	ldi	r31, 0x00	; 0
    1ab4:	ee 0f       	add	r30, r30
    1ab6:	ff 1f       	adc	r31, r31
    1ab8:	e6 51       	subi	r30, 0x16	; 22
    1aba:	fd 4f       	sbci	r31, 0xFD	; 253
    1abc:	20 81       	ld	r18, Z
    1abe:	31 81       	ldd	r19, Z+1	; 0x01
    1ac0:	71 83       	std	Z+1, r23	; 0x01
    1ac2:	60 83       	st	Z, r22
    1ac4:	02 c0       	rjmp	.+4      	; 0x1aca <ISR_attach+0x24>
    1ac6:	20 e0       	ldi	r18, 0x00	; 0
    1ac8:	30 e0       	ldi	r19, 0x00	; 0
    1aca:	c9 01       	movw	r24, r18
    1acc:	08 95       	ret

00001ace <ISR_open>:
    1ace:	80 e1       	ldi	r24, 0x10	; 16
    1ad0:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    1ad4:	88 23       	and	r24, r24
    1ad6:	61 f4       	brne	.+24     	; 0x1af0 <ISR_open+0x22>
    1ad8:	ea ee       	ldi	r30, 0xEA	; 234
    1ada:	f2 e0       	ldi	r31, 0x02	; 2
    1adc:	11 92       	st	Z+, r1
    1ade:	11 92       	st	Z+, r1
    1ae0:	83 e0       	ldi	r24, 0x03	; 3
    1ae2:	ea 32       	cpi	r30, 0x2A	; 42
    1ae4:	f8 07       	cpc	r31, r24
    1ae6:	d1 f7       	brne	.-12     	; 0x1adc <ISR_open+0xe>
    1ae8:	80 e1       	ldi	r24, 0x10	; 16
    1aea:	61 e0       	ldi	r22, 0x01	; 1
    1aec:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
    1af0:	80 e1       	ldi	r24, 0x10	; 16
    1af2:	91 e0       	ldi	r25, 0x01	; 1
    1af4:	08 95       	ret

00001af6 <__LCD_init>:
    1af6:	23 9a       	sbi	0x04, 3	; 4
    1af8:	08 95       	ret

00001afa <__LCD_putchar>:
    1afa:	ff 92       	push	r15
    1afc:	0f 93       	push	r16
    1afe:	1f 93       	push	r17
    1b00:	cf 93       	push	r28
    1b02:	df 93       	push	r29
    1b04:	f8 2e       	mov	r15, r24
    1b06:	8a e0       	ldi	r24, 0x0A	; 10
    1b08:	f8 16       	cp	r15, r24
    1b0a:	b1 f0       	breq	.+44     	; 0x1b38 <__LCD_putchar+0x3e>
    1b0c:	8f 15       	cp	r24, r15
    1b0e:	48 f0       	brcs	.+18     	; 0x1b22 <__LCD_putchar+0x28>
    1b10:	e8 e0       	ldi	r30, 0x08	; 8
    1b12:	fe 16       	cp	r15, r30
    1b14:	b9 f1       	breq	.+110    	; 0x1b84 <__LCD_putchar+0x8a>
    1b16:	ef 15       	cp	r30, r15
    1b18:	38 f1       	brcs	.+78     	; 0x1b68 <__LCD_putchar+0x6e>
    1b1a:	f7 e0       	ldi	r31, 0x07	; 7
    1b1c:	ff 16       	cp	r15, r31
    1b1e:	51 f4       	brne	.+20     	; 0x1b34 <__LCD_putchar+0x3a>
    1b20:	3b c0       	rjmp	.+118    	; 0x1b98 <__LCD_putchar+0x9e>
    1b22:	8d e0       	ldi	r24, 0x0D	; 13
    1b24:	f8 16       	cp	r15, r24
    1b26:	59 f0       	breq	.+22     	; 0x1b3e <__LCD_putchar+0x44>
    1b28:	eb e1       	ldi	r30, 0x1B	; 27
    1b2a:	fe 16       	cp	r15, r30
    1b2c:	89 f0       	breq	.+34     	; 0x1b50 <__LCD_putchar+0x56>
    1b2e:	fc e0       	ldi	r31, 0x0C	; 12
    1b30:	ff 16       	cp	r15, r31
    1b32:	41 f0       	breq	.+16     	; 0x1b44 <__LCD_putchar+0x4a>
    1b34:	01 e0       	ldi	r16, 0x01	; 1
    1b36:	41 c0       	rjmp	.+130    	; 0x1bba <__LCD_putchar+0xc0>
    1b38:	10 92 a1 03 	sts	0x03A1, r1
    1b3c:	03 c0       	rjmp	.+6      	; 0x1b44 <__LCD_putchar+0x4a>
    1b3e:	10 92 a1 03 	sts	0x03A1, r1
    1b42:	3a c0       	rjmp	.+116    	; 0x1bb8 <__LCD_putchar+0xbe>
    1b44:	80 91 a2 03 	lds	r24, 0x03A2
    1b48:	81 50       	subi	r24, 0x01	; 1
    1b4a:	80 93 a2 03 	sts	0x03A2, r24
    1b4e:	34 c0       	rjmp	.+104    	; 0x1bb8 <__LCD_putchar+0xbe>
    1b50:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
    1b54:	14 c0       	rjmp	.+40     	; 0x1b7e <__LCD_putchar+0x84>
    1b56:	80 e0       	ldi	r24, 0x00	; 0
    1b58:	61 e0       	ldi	r22, 0x01	; 1
    1b5a:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
    1b5e:	80 91 a1 03 	lds	r24, 0x03A1
    1b62:	8f 5f       	subi	r24, 0xFF	; 255
    1b64:	80 93 a1 03 	sts	0x03A1, r24
    1b68:	80 91 a1 03 	lds	r24, 0x03A1
    1b6c:	87 ff       	sbrs	r24, 7
    1b6e:	f3 cf       	rjmp	.-26     	; 0x1b56 <__LCD_putchar+0x5c>
    1b70:	10 92 a1 03 	sts	0x03A1, r1
    1b74:	80 91 a2 03 	lds	r24, 0x03A2
    1b78:	81 50       	subi	r24, 0x01	; 1
    1b7a:	80 93 a2 03 	sts	0x03A2, r24
    1b7e:	00 e0       	ldi	r16, 0x00	; 0
    1b80:	11 e0       	ldi	r17, 0x01	; 1
    1b82:	1c c0       	rjmp	.+56     	; 0x1bbc <__LCD_putchar+0xc2>
    1b84:	80 91 a1 03 	lds	r24, 0x03A1
    1b88:	88 23       	and	r24, r24
    1b8a:	b1 f0       	breq	.+44     	; 0x1bb8 <__LCD_putchar+0xbe>
    1b8c:	80 91 a1 03 	lds	r24, 0x03A1
    1b90:	86 50       	subi	r24, 0x06	; 6
    1b92:	80 93 a1 03 	sts	0x03A1, r24
    1b96:	10 c0       	rjmp	.+32     	; 0x1bb8 <__LCD_putchar+0xbe>
    1b98:	81 e0       	ldi	r24, 0x01	; 1
    1b9a:	0e 94 c8 05 	call	0xb90	; 0xb90 <SPKR_open>
    1b9e:	64 ef       	ldi	r22, 0xF4	; 244
    1ba0:	71 e0       	ldi	r23, 0x01	; 1
    1ba2:	80 e0       	ldi	r24, 0x00	; 0
    1ba4:	90 e0       	ldi	r25, 0x00	; 0
    1ba6:	4d e7       	ldi	r20, 0x7D	; 125
    1ba8:	50 e0       	ldi	r21, 0x00	; 0
    1baa:	24 e6       	ldi	r18, 0x64	; 100
    1bac:	30 e0       	ldi	r19, 0x00	; 0
    1bae:	0e 94 d5 05 	call	0xbaa	; 0xbaa <SPKR_play_beep>
    1bb2:	81 e0       	ldi	r24, 0x01	; 1
    1bb4:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <SPKR_close>
    1bb8:	00 e0       	ldi	r16, 0x00	; 0
    1bba:	10 e0       	ldi	r17, 0x00	; 0
    1bbc:	80 91 a2 03 	lds	r24, 0x03A2
    1bc0:	60 91 a1 03 	lds	r22, 0x03A1
    1bc4:	0e 94 a3 04 	call	0x946	; 0x946 <LCD_set_PGC_addr>
    1bc8:	00 23       	and	r16, r16
    1bca:	51 f1       	breq	.+84     	; 0x1c20 <__LCD_putchar+0x126>
    1bcc:	85 e0       	ldi	r24, 0x05	; 5
    1bce:	f8 9e       	mul	r15, r24
    1bd0:	c0 01       	movw	r24, r0
    1bd2:	11 24       	eor	r1, r1
    1bd4:	ec 01       	movw	r28, r24
    1bd6:	c5 52       	subi	r28, 0x25	; 37
    1bd8:	df 4f       	sbci	r29, 0xFF	; 255
    1bda:	8c 01       	movw	r16, r24
    1bdc:	00 52       	subi	r16, 0x20	; 32
    1bde:	1f 4f       	sbci	r17, 0xFF	; 255
    1be0:	fe 01       	movw	r30, r28
    1be2:	84 91       	lpm	r24, Z
    1be4:	61 e0       	ldi	r22, 0x01	; 1
    1be6:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
    1bea:	21 96       	adiw	r28, 0x01	; 1
    1bec:	c0 17       	cp	r28, r16
    1bee:	d1 07       	cpc	r29, r17
    1bf0:	b9 f7       	brne	.-18     	; 0x1be0 <__LCD_putchar+0xe6>
    1bf2:	80 e0       	ldi	r24, 0x00	; 0
    1bf4:	61 e0       	ldi	r22, 0x01	; 1
    1bf6:	0e 94 bc 04 	call	0x978	; 0x978 <LCD_write>
    1bfa:	80 91 a1 03 	lds	r24, 0x03A1
    1bfe:	8a 5f       	subi	r24, 0xFA	; 250
    1c00:	80 93 a1 03 	sts	0x03A1, r24
    1c04:	80 91 a1 03 	lds	r24, 0x03A1
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	8c 37       	cpi	r24, 0x7C	; 124
    1c0c:	91 05       	cpc	r25, r1
    1c0e:	3c f0       	brlt	.+14     	; 0x1c1e <__LCD_putchar+0x124>
    1c10:	10 92 a1 03 	sts	0x03A1, r1
    1c14:	80 91 a2 03 	lds	r24, 0x03A2
    1c18:	81 50       	subi	r24, 0x01	; 1
    1c1a:	80 93 a2 03 	sts	0x03A2, r24
    1c1e:	11 e0       	ldi	r17, 0x01	; 1
    1c20:	80 91 a2 03 	lds	r24, 0x03A2
    1c24:	83 70       	andi	r24, 0x03	; 3
    1c26:	80 93 a2 03 	sts	0x03A2, r24
    1c2a:	11 30       	cpi	r17, 0x01	; 1
    1c2c:	59 f4       	brne	.+22     	; 0x1c44 <__LCD_putchar+0x14a>
    1c2e:	80 91 a3 03 	lds	r24, 0x03A3
    1c32:	81 30       	cpi	r24, 0x01	; 1
    1c34:	39 f4       	brne	.+14     	; 0x1c44 <__LCD_putchar+0x14a>
    1c36:	e0 91 a4 03 	lds	r30, 0x03A4
    1c3a:	f0 91 a5 03 	lds	r31, 0x03A5
    1c3e:	30 97       	sbiw	r30, 0x00	; 0
    1c40:	09 f0       	breq	.+2      	; 0x1c44 <__LCD_putchar+0x14a>
    1c42:	09 95       	icall
    1c44:	80 e0       	ldi	r24, 0x00	; 0
    1c46:	90 e0       	ldi	r25, 0x00	; 0
    1c48:	df 91       	pop	r29
    1c4a:	cf 91       	pop	r28
    1c4c:	1f 91       	pop	r17
    1c4e:	0f 91       	pop	r16
    1c50:	ff 90       	pop	r15
    1c52:	08 95       	ret

00001c54 <ATMEGA_open>:
    1c54:	80 e0       	ldi	r24, 0x00	; 0
    1c56:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    1c5a:	88 23       	and	r24, r24
    1c5c:	51 f4       	brne	.+20     	; 0x1c72 <ATMEGA_open+0x1e>
    1c5e:	f8 94       	cli
    1c60:	0e 94 22 11 	call	0x2244	; 0x2244 <__ATMEGA_init>
    1c64:	81 e0       	ldi	r24, 0x01	; 1
    1c66:	0e 94 3c 0e 	call	0x1c78	; 0x1c78 <ATMEGA_set_clk_mode>
    1c6a:	80 e0       	ldi	r24, 0x00	; 0
    1c6c:	61 e0       	ldi	r22, 0x01	; 1
    1c6e:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
    1c72:	80 e0       	ldi	r24, 0x00	; 0
    1c74:	91 e0       	ldi	r25, 0x01	; 1
    1c76:	08 95       	ret

00001c78 <ATMEGA_set_clk_mode>:
    1c78:	81 30       	cpi	r24, 0x01	; 1
    1c7a:	49 f0       	breq	.+18     	; 0x1c8e <ATMEGA_set_clk_mode+0x16>
    1c7c:	f8 94       	cli
    1c7e:	81 30       	cpi	r24, 0x01	; 1
    1c80:	20 f1       	brcs	.+72     	; 0x1cca <ATMEGA_set_clk_mode+0x52>
    1c82:	82 30       	cpi	r24, 0x02	; 2
    1c84:	b1 f0       	breq	.+44     	; 0x1cb2 <ATMEGA_set_clk_mode+0x3a>
    1c86:	83 30       	cpi	r24, 0x03	; 3
    1c88:	09 f0       	breq	.+2      	; 0x1c8c <ATMEGA_set_clk_mode+0x14>
    1c8a:	45 c0       	rjmp	.+138    	; 0x1d16 <ATMEGA_set_clk_mode+0x9e>
    1c8c:	17 c0       	rjmp	.+46     	; 0x1cbc <ATMEGA_set_clk_mode+0x44>
    1c8e:	2c 9a       	sbi	0x05, 4	; 5
    1c90:	80 e8       	ldi	r24, 0x80	; 128
    1c92:	80 93 61 00 	sts	0x0061, r24
    1c96:	10 92 61 00 	sts	0x0061, r1
    1c9a:	80 e0       	ldi	r24, 0x00	; 0
    1c9c:	90 e0       	ldi	r25, 0x00	; 0
    1c9e:	00 00       	nop
    1ca0:	01 96       	adiw	r24, 0x01	; 1
    1ca2:	88 32       	cpi	r24, 0x28	; 40
    1ca4:	91 05       	cpc	r25, r1
    1ca6:	d9 f7       	brne	.-10     	; 0x1c9e <ATMEGA_set_clk_mode+0x26>
    1ca8:	10 92 68 00 	sts	0x0068, r1
    1cac:	10 92 6b 00 	sts	0x006B, r1
    1cb0:	08 95       	ret
    1cb2:	80 e8       	ldi	r24, 0x80	; 128
    1cb4:	80 93 61 00 	sts	0x0061, r24
    1cb8:	83 e0       	ldi	r24, 0x03	; 3
    1cba:	04 c0       	rjmp	.+8      	; 0x1cc4 <ATMEGA_set_clk_mode+0x4c>
    1cbc:	80 e8       	ldi	r24, 0x80	; 128
    1cbe:	80 93 61 00 	sts	0x0061, r24
    1cc2:	88 e0       	ldi	r24, 0x08	; 8
    1cc4:	80 93 61 00 	sts	0x0061, r24
    1cc8:	28 c0       	rjmp	.+80     	; 0x1d1a <ATMEGA_set_clk_mode+0xa2>
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	00 00       	nop
    1cd0:	01 96       	adiw	r24, 0x01	; 1
    1cd2:	2d e6       	ldi	r18, 0x6D	; 109
    1cd4:	80 36       	cpi	r24, 0x60	; 96
    1cd6:	92 07       	cpc	r25, r18
    1cd8:	d1 f7       	brne	.-12     	; 0x1cce <ATMEGA_set_clk_mode+0x56>
    1cda:	2c 98       	cbi	0x05, 4	; 5
    1cdc:	80 e0       	ldi	r24, 0x00	; 0
    1cde:	90 e0       	ldi	r25, 0x00	; 0
    1ce0:	00 00       	nop
    1ce2:	01 96       	adiw	r24, 0x01	; 1
    1ce4:	2d e6       	ldi	r18, 0x6D	; 109
    1ce6:	80 36       	cpi	r24, 0x60	; 96
    1ce8:	92 07       	cpc	r25, r18
    1cea:	d1 f7       	brne	.-12     	; 0x1ce0 <ATMEGA_set_clk_mode+0x68>
    1cec:	10 92 7a 00 	sts	0x007A, r1
    1cf0:	8f ef       	ldi	r24, 0xFF	; 255
    1cf2:	80 93 64 00 	sts	0x0064, r24
    1cf6:	80 91 68 00 	lds	r24, 0x0068
    1cfa:	81 60       	ori	r24, 0x01	; 1
    1cfc:	80 93 68 00 	sts	0x0068, r24
    1d00:	80 91 6b 00 	lds	r24, 0x006B
    1d04:	84 60       	ori	r24, 0x04	; 4
    1d06:	80 93 6b 00 	sts	0x006B, r24
    1d0a:	78 94       	sei
    1d0c:	83 b7       	in	r24, 0x33	; 51
    1d0e:	81 60       	ori	r24, 0x01	; 1
    1d10:	83 bf       	out	0x33, r24	; 51
    1d12:	88 95       	sleep
    1d14:	08 95       	ret
    1d16:	82 30       	cpi	r24, 0x02	; 2
    1d18:	08 f0       	brcs	.+2      	; 0x1d1c <ATMEGA_set_clk_mode+0xa4>
    1d1a:	78 94       	sei
    1d1c:	08 95       	ret

00001d1e <SPI_open>:
    1d1e:	0f 93       	push	r16
    1d20:	1f 93       	push	r17
    1d22:	0e 94 4e 11 	call	0x229c	; 0x229c <__SPI_init>
    1d26:	80 e0       	ldi	r24, 0x00	; 0
    1d28:	6d e3       	ldi	r22, 0x3D	; 61
    1d2a:	71 e1       	ldi	r23, 0x11	; 17
    1d2c:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <SPI_set_config_func>
    1d30:	81 e0       	ldi	r24, 0x01	; 1
    1d32:	65 e3       	ldi	r22, 0x35	; 53
    1d34:	71 e1       	ldi	r23, 0x11	; 17
    1d36:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <SPI_set_config_func>
    1d3a:	82 e0       	ldi	r24, 0x02	; 2
    1d3c:	6d e2       	ldi	r22, 0x2D	; 45
    1d3e:	71 e1       	ldi	r23, 0x11	; 17
    1d40:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <SPI_set_config_func>
    1d44:	86 e0       	ldi	r24, 0x06	; 6
    1d46:	65 e4       	ldi	r22, 0x45	; 69
    1d48:	71 e1       	ldi	r23, 0x11	; 17
    1d4a:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <SPI_set_config_func>
    1d4e:	05 e2       	ldi	r16, 0x25	; 37
    1d50:	11 e1       	ldi	r17, 0x11	; 17
    1d52:	83 e0       	ldi	r24, 0x03	; 3
    1d54:	b8 01       	movw	r22, r16
    1d56:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <SPI_set_config_func>
    1d5a:	84 e0       	ldi	r24, 0x04	; 4
    1d5c:	b8 01       	movw	r22, r16
    1d5e:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <SPI_set_config_func>
    1d62:	85 e0       	ldi	r24, 0x05	; 5
    1d64:	b8 01       	movw	r22, r16
    1d66:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <SPI_set_config_func>
    1d6a:	87 e0       	ldi	r24, 0x07	; 7
    1d6c:	b8 01       	movw	r22, r16
    1d6e:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <SPI_set_config_func>
    1d72:	82 e0       	ldi	r24, 0x02	; 2
    1d74:	61 e0       	ldi	r22, 0x01	; 1
    1d76:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
    1d7a:	8f ef       	ldi	r24, 0xFF	; 255
    1d7c:	80 93 a6 03 	sts	0x03A6, r24
    1d80:	87 e0       	ldi	r24, 0x07	; 7
    1d82:	0e 94 d7 04 	call	0x9ae	; 0x9ae <SPI_set_slave_addr>
    1d86:	82 e0       	ldi	r24, 0x02	; 2
    1d88:	91 e0       	ldi	r25, 0x01	; 1
    1d8a:	1f 91       	pop	r17
    1d8c:	0f 91       	pop	r16
    1d8e:	08 95       	ret

00001d90 <SPI_set_config_func>:
    1d90:	e8 2f       	mov	r30, r24
    1d92:	f0 e0       	ldi	r31, 0x00	; 0
    1d94:	ee 0f       	add	r30, r30
    1d96:	ff 1f       	adc	r31, r31
    1d98:	e6 5d       	subi	r30, 0xD6	; 214
    1d9a:	fc 4f       	sbci	r31, 0xFC	; 252
    1d9c:	71 83       	std	Z+1, r23	; 0x01
    1d9e:	60 83       	st	Z, r22
    1da0:	08 95       	ret

00001da2 <__SPKR_TIMER1_COMPA_vect>:
    1da2:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <SPKR_clk>
    1da6:	08 95       	ret

00001da8 <SPKR_beep>:
    1da8:	9b 01       	movw	r18, r22
    1daa:	ac 01       	movw	r20, r24
    1dac:	80 91 3b 03 	lds	r24, 0x033B
    1db0:	88 23       	and	r24, r24
    1db2:	81 f0       	breq	.+32     	; 0x1dd4 <SPKR_beep+0x2c>
    1db4:	da 01       	movw	r26, r20
    1db6:	c9 01       	movw	r24, r18
    1db8:	88 0f       	add	r24, r24
    1dba:	99 1f       	adc	r25, r25
    1dbc:	aa 1f       	adc	r26, r26
    1dbe:	bb 1f       	adc	r27, r27
    1dc0:	90 93 47 03 	sts	0x0347, r25
    1dc4:	80 93 46 03 	sts	0x0346, r24
    1dc8:	21 15       	cp	r18, r1
    1dca:	31 05       	cpc	r19, r1
    1dcc:	41 05       	cpc	r20, r1
    1dce:	51 05       	cpc	r21, r1
    1dd0:	09 f4       	brne	.+2      	; 0x1dd4 <SPKR_beep+0x2c>
    1dd2:	5f 98       	cbi	0x0b, 7	; 11
    1dd4:	08 95       	ret

00001dd6 <SPKR_clk>:
    1dd6:	80 91 3c 03 	lds	r24, 0x033C
    1dda:	90 91 3d 03 	lds	r25, 0x033D
    1dde:	a0 91 3e 03 	lds	r26, 0x033E
    1de2:	b0 91 3f 03 	lds	r27, 0x033F
    1de6:	20 91 40 03 	lds	r18, 0x0340
    1dea:	30 91 41 03 	lds	r19, 0x0341
    1dee:	40 91 42 03 	lds	r20, 0x0342
    1df2:	50 91 43 03 	lds	r21, 0x0343
    1df6:	28 0f       	add	r18, r24
    1df8:	39 1f       	adc	r19, r25
    1dfa:	4a 1f       	adc	r20, r26
    1dfc:	5b 1f       	adc	r21, r27
    1dfe:	20 93 3c 03 	sts	0x033C, r18
    1e02:	30 93 3d 03 	sts	0x033D, r19
    1e06:	40 93 3e 03 	sts	0x033E, r20
    1e0a:	50 93 3f 03 	sts	0x033F, r21
    1e0e:	80 91 3c 03 	lds	r24, 0x033C
    1e12:	90 91 3d 03 	lds	r25, 0x033D
    1e16:	a0 91 3e 03 	lds	r26, 0x033E
    1e1a:	b0 91 3f 03 	lds	r27, 0x033F
    1e1e:	88 51       	subi	r24, 0x18	; 24
    1e20:	96 4f       	sbci	r25, 0xF6	; 246
    1e22:	a0 40       	sbci	r26, 0x00	; 0
    1e24:	b0 40       	sbci	r27, 0x00	; 0
    1e26:	bc f0       	brlt	.+46     	; 0x1e56 <SPKR_clk+0x80>
    1e28:	8b b1       	in	r24, 0x0b	; 11
    1e2a:	80 58       	subi	r24, 0x80	; 128
    1e2c:	8b b9       	out	0x0b, r24	; 11
    1e2e:	80 91 3c 03 	lds	r24, 0x033C
    1e32:	90 91 3d 03 	lds	r25, 0x033D
    1e36:	a0 91 3e 03 	lds	r26, 0x033E
    1e3a:	b0 91 3f 03 	lds	r27, 0x033F
    1e3e:	88 51       	subi	r24, 0x18	; 24
    1e40:	96 4f       	sbci	r25, 0xF6	; 246
    1e42:	a0 40       	sbci	r26, 0x00	; 0
    1e44:	b0 40       	sbci	r27, 0x00	; 0
    1e46:	80 93 3c 03 	sts	0x033C, r24
    1e4a:	90 93 3d 03 	sts	0x033D, r25
    1e4e:	a0 93 3e 03 	sts	0x033E, r26
    1e52:	b0 93 3f 03 	sts	0x033F, r27
    1e56:	08 95       	ret

00001e58 <__SPKR_close_beep_mode>:
    1e58:	8a e0       	ldi	r24, 0x0A	; 10
    1e5a:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    1e5e:	81 30       	cpi	r24, 0x01	; 1
    1e60:	41 f4       	brne	.+16     	; 0x1e72 <__SPKR_close_beep_mode+0x1a>
    1e62:	0e 94 67 11 	call	0x22ce	; 0x22ce <__SPKR_close>
    1e66:	10 92 3b 03 	sts	0x033B, r1
    1e6a:	8a e0       	ldi	r24, 0x0A	; 10
    1e6c:	60 e0       	ldi	r22, 0x00	; 0
    1e6e:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
    1e72:	08 95       	ret

00001e74 <__SPKR_close_tone_mode>:
    1e74:	89 e0       	ldi	r24, 0x09	; 9
    1e76:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    1e7a:	81 30       	cpi	r24, 0x01	; 1
    1e7c:	d9 f4       	brne	.+54     	; 0x1eb4 <__SPKR_close_tone_mode+0x40>
    1e7e:	80 91 3a 03 	lds	r24, 0x033A
    1e82:	88 23       	and	r24, r24
    1e84:	11 f0       	breq	.+4      	; 0x1e8a <__SPKR_close_tone_mode+0x16>
    1e86:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <__SPKR_stop>
    1e8a:	82 e0       	ldi	r24, 0x02	; 2
    1e8c:	0e 94 67 11 	call	0x22ce	; 0x22ce <__SPKR_close>
    1e90:	80 91 48 03 	lds	r24, 0x0348
    1e94:	90 91 49 03 	lds	r25, 0x0349
    1e98:	00 97       	sbiw	r24, 0x00	; 0
    1e9a:	31 f0       	breq	.+12     	; 0x1ea8 <__SPKR_close_tone_mode+0x34>
    1e9c:	0e 94 0b 28 	call	0x5016	; 0x5016 <free>
    1ea0:	10 92 49 03 	sts	0x0349, r1
    1ea4:	10 92 48 03 	sts	0x0348, r1
    1ea8:	10 92 3a 03 	sts	0x033A, r1
    1eac:	89 e0       	ldi	r24, 0x09	; 9
    1eae:	60 e0       	ldi	r22, 0x00	; 0
    1eb0:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
    1eb4:	08 95       	ret

00001eb6 <SPKR_close>:
    1eb6:	81 30       	cpi	r24, 0x01	; 1
    1eb8:	29 f0       	breq	.+10     	; 0x1ec4 <SPKR_close+0xe>
    1eba:	82 30       	cpi	r24, 0x02	; 2
    1ebc:	29 f4       	brne	.+10     	; 0x1ec8 <SPKR_close+0x12>
    1ebe:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <__SPKR_close_tone_mode>
    1ec2:	08 95       	ret
    1ec4:	0e 94 2c 0f 	call	0x1e58	; 0x1e58 <__SPKR_close_beep_mode>
    1ec8:	08 95       	ret

00001eca <__SPKR_init>:
    1eca:	98 2f       	mov	r25, r24
    1ecc:	80 91 3a 03 	lds	r24, 0x033A
    1ed0:	88 23       	and	r24, r24
    1ed2:	31 f4       	brne	.+12     	; 0x1ee0 <__SPKR_init+0x16>
    1ed4:	80 91 3b 03 	lds	r24, 0x033B
    1ed8:	88 23       	and	r24, r24
    1eda:	11 f4       	brne	.+4      	; 0x1ee0 <__SPKR_init+0x16>
    1edc:	57 9a       	sbi	0x0a, 7	; 10
    1ede:	5f 98       	cbi	0x0b, 7	; 11
    1ee0:	80 91 3a 03 	lds	r24, 0x033A
    1ee4:	88 23       	and	r24, r24
    1ee6:	d1 f4       	brne	.+52     	; 0x1f1c <__SPKR_init+0x52>
    1ee8:	92 30       	cpi	r25, 0x02	; 2
    1eea:	c1 f4       	brne	.+48     	; 0x1f1c <__SPKR_init+0x52>
    1eec:	10 92 80 00 	sts	0x0080, r1
    1ef0:	10 92 81 00 	sts	0x0081, r1
    1ef4:	80 91 81 00 	lds	r24, 0x0081
    1ef8:	88 60       	ori	r24, 0x08	; 8
    1efa:	80 93 81 00 	sts	0x0081, r24
    1efe:	80 91 81 00 	lds	r24, 0x0081
    1f02:	81 60       	ori	r24, 0x01	; 1
    1f04:	80 93 81 00 	sts	0x0081, r24
    1f08:	10 92 85 00 	sts	0x0085, r1
    1f0c:	10 92 84 00 	sts	0x0084, r1
    1f10:	81 e0       	ldi	r24, 0x01	; 1
    1f12:	80 93 89 00 	sts	0x0089, r24
    1f16:	80 e9       	ldi	r24, 0x90	; 144
    1f18:	80 93 88 00 	sts	0x0088, r24
    1f1c:	08 95       	ret

00001f1e <__SPKR_stop>:
    1f1e:	ef e6       	ldi	r30, 0x6F	; 111
    1f20:	f0 e0       	ldi	r31, 0x00	; 0
    1f22:	80 81       	ld	r24, Z
    1f24:	8d 7f       	andi	r24, 0xFD	; 253
    1f26:	80 83       	st	Z, r24
    1f28:	08 95       	ret

00001f2a <__STEPPER_close>:
    1f2a:	88 b1       	in	r24, 0x08	; 8
    1f2c:	83 70       	andi	r24, 0x03	; 3
    1f2e:	88 b9       	out	0x08, r24	; 8
    1f30:	3a 98       	cbi	0x07, 2	; 7
    1f32:	3b 98       	cbi	0x07, 3	; 7
    1f34:	3c 98       	cbi	0x07, 4	; 7
    1f36:	3d 98       	cbi	0x07, 5	; 7
    1f38:	3e 98       	cbi	0x07, 6	; 7
    1f3a:	3f 98       	cbi	0x07, 7	; 7
    1f3c:	08 95       	ret

00001f3e <STEPPER_go>:
    1f3e:	98 2f       	mov	r25, r24
    1f40:	81 e0       	ldi	r24, 0x01	; 1
    1f42:	80 93 8b 03 	sts	0x038B, r24
    1f46:	91 30       	cpi	r25, 0x01	; 1
    1f48:	51 f0       	breq	.+20     	; 0x1f5e <STEPPER_go+0x20>
    1f4a:	91 30       	cpi	r25, 0x01	; 1
    1f4c:	18 f0       	brcs	.+6      	; 0x1f54 <STEPPER_go+0x16>
    1f4e:	92 30       	cpi	r25, 0x02	; 2
    1f50:	41 f4       	brne	.+16     	; 0x1f62 <STEPPER_go+0x24>
    1f52:	03 c0       	rjmp	.+6      	; 0x1f5a <STEPPER_go+0x1c>
    1f54:	10 92 73 03 	sts	0x0373, r1
    1f58:	04 c0       	rjmp	.+8      	; 0x1f62 <STEPPER_go+0x24>
    1f5a:	10 92 73 03 	sts	0x0373, r1
    1f5e:	10 92 74 03 	sts	0x0374, r1
    1f62:	10 92 8b 03 	sts	0x038B, r1
    1f66:	08 95       	ret

00001f68 <__STEPPER_init>:
    1f68:	3a 9a       	sbi	0x07, 2	; 7
    1f6a:	3b 9a       	sbi	0x07, 3	; 7
    1f6c:	3c 9a       	sbi	0x07, 4	; 7
    1f6e:	3d 9a       	sbi	0x07, 5	; 7
    1f70:	3e 9a       	sbi	0x07, 6	; 7
    1f72:	3f 9a       	sbi	0x07, 7	; 7
    1f74:	88 b1       	in	r24, 0x08	; 8
    1f76:	83 70       	andi	r24, 0x03	; 3
    1f78:	88 b9       	out	0x08, r24	; 8
    1f7a:	08 95       	ret

00001f7c <STEPPER_set_steps>:
    1f7c:	98 2f       	mov	r25, r24
    1f7e:	81 e0       	ldi	r24, 0x01	; 1
    1f80:	80 93 8b 03 	sts	0x038B, r24
    1f84:	91 30       	cpi	r25, 0x01	; 1
    1f86:	71 f0       	breq	.+28     	; 0x1fa4 <STEPPER_set_steps+0x28>
    1f88:	91 30       	cpi	r25, 0x01	; 1
    1f8a:	18 f0       	brcs	.+6      	; 0x1f92 <STEPPER_set_steps+0x16>
    1f8c:	92 30       	cpi	r25, 0x02	; 2
    1f8e:	71 f4       	brne	.+28     	; 0x1fac <STEPPER_set_steps+0x30>
    1f90:	05 c0       	rjmp	.+10     	; 0x1f9c <STEPPER_set_steps+0x20>
    1f92:	70 93 68 03 	sts	0x0368, r23
    1f96:	60 93 67 03 	sts	0x0367, r22
    1f9a:	08 c0       	rjmp	.+16     	; 0x1fac <STEPPER_set_steps+0x30>
    1f9c:	70 93 68 03 	sts	0x0368, r23
    1fa0:	60 93 67 03 	sts	0x0367, r22
    1fa4:	70 93 6a 03 	sts	0x036A, r23
    1fa8:	60 93 69 03 	sts	0x0369, r22
    1fac:	10 92 8b 03 	sts	0x038B, r1
    1fb0:	08 95       	ret

00001fb2 <STEPPER_set_stop_mode>:
    1fb2:	98 2f       	mov	r25, r24
    1fb4:	81 e0       	ldi	r24, 0x01	; 1
    1fb6:	80 93 8b 03 	sts	0x038B, r24
    1fba:	91 30       	cpi	r25, 0x01	; 1
    1fbc:	51 f0       	breq	.+20     	; 0x1fd2 <STEPPER_set_stop_mode+0x20>
    1fbe:	91 30       	cpi	r25, 0x01	; 1
    1fc0:	18 f0       	brcs	.+6      	; 0x1fc8 <STEPPER_set_stop_mode+0x16>
    1fc2:	92 30       	cpi	r25, 0x02	; 2
    1fc4:	41 f4       	brne	.+16     	; 0x1fd6 <STEPPER_set_stop_mode+0x24>
    1fc6:	03 c0       	rjmp	.+6      	; 0x1fce <STEPPER_set_stop_mode+0x1c>
    1fc8:	60 93 75 03 	sts	0x0375, r22
    1fcc:	04 c0       	rjmp	.+8      	; 0x1fd6 <STEPPER_set_stop_mode+0x24>
    1fce:	60 93 75 03 	sts	0x0375, r22
    1fd2:	60 93 76 03 	sts	0x0376, r22
    1fd6:	10 92 8b 03 	sts	0x038B, r1
    1fda:	08 95       	ret

00001fdc <STEPPER_setup_decels>:
    1fdc:	0f 93       	push	r16
    1fde:	1f 93       	push	r17
    1fe0:	cf 93       	push	r28
    1fe2:	df 93       	push	r29
    1fe4:	eb 01       	movw	r28, r22
    1fe6:	8a 01       	movw	r16, r20
    1fe8:	81 30       	cpi	r24, 0x01	; 1
    1fea:	01 f1       	breq	.+64     	; 0x202c <STEPPER_setup_decels+0x50>
    1fec:	81 30       	cpi	r24, 0x01	; 1
    1fee:	18 f0       	brcs	.+6      	; 0x1ff6 <STEPPER_setup_decels+0x1a>
    1ff0:	82 30       	cpi	r24, 0x02	; 2
    1ff2:	61 f5       	brne	.+88     	; 0x204c <STEPPER_setup_decels+0x70>
    1ff4:	0d c0       	rjmp	.+26     	; 0x2010 <STEPPER_setup_decels+0x34>
    1ff6:	80 91 5f 03 	lds	r24, 0x035F
    1ffa:	90 91 60 03 	lds	r25, 0x0360
    1ffe:	89 2b       	or	r24, r25
    2000:	11 f0       	breq	.+4      	; 0x2006 <STEPPER_setup_decels+0x2a>
    2002:	80 e0       	ldi	r24, 0x00	; 0
    2004:	1a c0       	rjmp	.+52     	; 0x203a <STEPPER_setup_decels+0x5e>
    2006:	10 92 6c 03 	sts	0x036C, r1
    200a:	10 92 6b 03 	sts	0x036B, r1
    200e:	1e c0       	rjmp	.+60     	; 0x204c <STEPPER_setup_decels+0x70>
    2010:	80 91 5f 03 	lds	r24, 0x035F
    2014:	90 91 60 03 	lds	r25, 0x0360
    2018:	89 2b       	or	r24, r25
    201a:	21 f0       	breq	.+8      	; 0x2024 <STEPPER_setup_decels+0x48>
    201c:	80 e0       	ldi	r24, 0x00	; 0
    201e:	0e 94 83 11 	call	0x2306	; 0x2306 <STEPPER_set_decel_step_values>
    2022:	04 c0       	rjmp	.+8      	; 0x202c <STEPPER_setup_decels+0x50>
    2024:	10 92 6c 03 	sts	0x036C, r1
    2028:	10 92 6b 03 	sts	0x036B, r1
    202c:	80 91 61 03 	lds	r24, 0x0361
    2030:	90 91 62 03 	lds	r25, 0x0362
    2034:	89 2b       	or	r24, r25
    2036:	31 f0       	breq	.+12     	; 0x2044 <STEPPER_setup_decels+0x68>
    2038:	81 e0       	ldi	r24, 0x01	; 1
    203a:	be 01       	movw	r22, r28
    203c:	a8 01       	movw	r20, r16
    203e:	0e 94 83 11 	call	0x2306	; 0x2306 <STEPPER_set_decel_step_values>
    2042:	04 c0       	rjmp	.+8      	; 0x204c <STEPPER_setup_decels+0x70>
    2044:	10 92 6e 03 	sts	0x036E, r1
    2048:	10 92 6d 03 	sts	0x036D, r1
    204c:	df 91       	pop	r29
    204e:	cf 91       	pop	r28
    2050:	1f 91       	pop	r17
    2052:	0f 91       	pop	r16
    2054:	08 95       	ret

00002056 <SYS_init>:
    2056:	10 92 8e 03 	sts	0x038E, r1
    205a:	10 92 8f 03 	sts	0x038F, r1
    205e:	10 92 93 03 	sts	0x0393, r1
    2062:	10 92 90 03 	sts	0x0390, r1
    2066:	10 92 92 03 	sts	0x0392, r1
    206a:	10 92 94 03 	sts	0x0394, r1
    206e:	10 92 95 03 	sts	0x0395, r1
    2072:	10 92 96 03 	sts	0x0396, r1
    2076:	10 92 97 03 	sts	0x0397, r1
    207a:	10 92 98 03 	sts	0x0398, r1
    207e:	10 92 99 03 	sts	0x0399, r1
    2082:	10 92 9a 03 	sts	0x039A, r1
    2086:	10 92 9b 03 	sts	0x039B, r1
    208a:	10 92 9c 03 	sts	0x039C, r1
    208e:	10 92 9d 03 	sts	0x039D, r1
    2092:	10 92 9e 03 	sts	0x039E, r1
    2096:	10 92 9f 03 	sts	0x039F, r1
    209a:	08 95       	ret

0000209c <ATTINY_get_sensors>:
    209c:	0f 93       	push	r16
    209e:	1f 93       	push	r17
    20a0:	81 e0       	ldi	r24, 0x01	; 1
    20a2:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    20a6:	81 30       	cpi	r24, 0x01	; 1
    20a8:	11 f0       	breq	.+4      	; 0x20ae <ATTINY_get_sensors+0x12>
    20aa:	00 e0       	ldi	r16, 0x00	; 0
    20ac:	24 c0       	rjmp	.+72     	; 0x20f6 <ATTINY_get_sensors+0x5a>
    20ae:	87 e0       	ldi	r24, 0x07	; 7
    20b0:	0e 94 d7 04 	call	0x9ae	; 0x9ae <SPI_set_slave_addr>
    20b4:	82 e0       	ldi	r24, 0x02	; 2
    20b6:	6a e0       	ldi	r22, 0x0A	; 10
    20b8:	0e 94 28 05 	call	0xa50	; 0xa50 <SPI_transmit>
    20bc:	82 e0       	ldi	r24, 0x02	; 2
    20be:	62 eb       	ldi	r22, 0xB2	; 178
    20c0:	0e 94 28 05 	call	0xa50	; 0xa50 <SPI_transmit>
    20c4:	18 ec       	ldi	r17, 0xC8	; 200
    20c6:	81 2f       	mov	r24, r17
    20c8:	8a 95       	dec	r24
    20ca:	f1 f7       	brne	.-4      	; 0x20c8 <ATTINY_get_sensors+0x2c>
    20cc:	82 e0       	ldi	r24, 0x02	; 2
    20ce:	60 e0       	ldi	r22, 0x00	; 0
    20d0:	0e 94 55 11 	call	0x22aa	; 0x22aa <SPI_receive>
    20d4:	08 2f       	mov	r16, r24
    20d6:	81 2f       	mov	r24, r17
    20d8:	8a 95       	dec	r24
    20da:	f1 f7       	brne	.-4      	; 0x20d8 <ATTINY_get_sensors+0x3c>
    20dc:	82 e0       	ldi	r24, 0x02	; 2
    20de:	60 e0       	ldi	r22, 0x00	; 0
    20e0:	0e 94 55 11 	call	0x22aa	; 0x22aa <SPI_receive>
    20e4:	1a 95       	dec	r17
    20e6:	f1 f7       	brne	.-4      	; 0x20e4 <ATTINY_get_sensors+0x48>
    20e8:	87 e0       	ldi	r24, 0x07	; 7
    20ea:	0e 94 d7 04 	call	0x9ae	; 0x9ae <SPI_set_slave_addr>
    20ee:	88 e8       	ldi	r24, 0x88	; 136
    20f0:	93 e1       	ldi	r25, 0x13	; 19
    20f2:	01 97       	sbiw	r24, 0x01	; 1
    20f4:	f1 f7       	brne	.-4      	; 0x20f2 <ATTINY_get_sensors+0x56>
    20f6:	80 2f       	mov	r24, r16
    20f8:	1f 91       	pop	r17
    20fa:	0f 91       	pop	r16
    20fc:	08 95       	ret

000020fe <TMRSRVC_insert>:
    20fe:	cf 92       	push	r12
    2100:	df 92       	push	r13
    2102:	ef 92       	push	r14
    2104:	ff 92       	push	r15
    2106:	0f 93       	push	r16
    2108:	1f 93       	push	r17
    210a:	cf 93       	push	r28
    210c:	df 93       	push	r29
    210e:	ec 01       	movw	r28, r24
    2110:	80 91 c5 03 	lds	r24, 0x03C5
    2114:	88 23       	and	r24, r24
    2116:	39 f4       	brne	.+14     	; 0x2126 <TMRSRVC_insert+0x28>
    2118:	d0 93 c7 03 	sts	0x03C7, r29
    211c:	c0 93 c6 03 	sts	0x03C6, r28
    2120:	0e 94 0d 11 	call	0x221a	; 0x221a <TMRSRVC_start>
    2124:	47 c0       	rjmp	.+142    	; 0x21b4 <TMRSRVC_insert+0xb6>
    2126:	c0 90 c6 03 	lds	r12, 0x03C6
    212a:	d0 90 c7 03 	lds	r13, 0x03C7
    212e:	00 e0       	ldi	r16, 0x00	; 0
    2130:	10 e0       	ldi	r17, 0x00	; 0
    2132:	ee 24       	eor	r14, r14
    2134:	ff 24       	eor	r15, r15
    2136:	37 c0       	rjmp	.+110    	; 0x21a6 <TMRSRVC_insert+0xa8>
    2138:	a8 81       	ld	r26, Y
    213a:	b9 81       	ldd	r27, Y+1	; 0x01
    213c:	fd 01       	movw	r30, r26
    213e:	64 81       	ldd	r22, Z+4	; 0x04
    2140:	75 81       	ldd	r23, Z+5	; 0x05
    2142:	f6 01       	movw	r30, r12
    2144:	40 81       	ld	r20, Z
    2146:	51 81       	ldd	r21, Z+1	; 0x01
    2148:	fa 01       	movw	r30, r20
    214a:	84 81       	ldd	r24, Z+4	; 0x04
    214c:	95 81       	ldd	r25, Z+5	; 0x05
    214e:	9b 01       	movw	r18, r22
    2150:	28 1b       	sub	r18, r24
    2152:	39 0b       	sbc	r19, r25
    2154:	37 ff       	sbrs	r19, 7
    2156:	0f c0       	rjmp	.+30     	; 0x2176 <TMRSRVC_insert+0x78>
    2158:	86 1b       	sub	r24, r22
    215a:	97 0b       	sbc	r25, r23
    215c:	95 83       	std	Z+5, r25	; 0x05
    215e:	84 83       	std	Z+4, r24	; 0x04
    2160:	db 82       	std	Y+3, r13	; 0x03
    2162:	ca 82       	std	Y+2, r12	; 0x02
    2164:	01 2b       	or	r16, r17
    2166:	29 f4       	brne	.+10     	; 0x2172 <TMRSRVC_insert+0x74>
    2168:	d0 93 c7 03 	sts	0x03C7, r29
    216c:	c0 93 c6 03 	sts	0x03C6, r28
    2170:	21 c0       	rjmp	.+66     	; 0x21b4 <TMRSRVC_insert+0xb6>
    2172:	f7 01       	movw	r30, r14
    2174:	0c c0       	rjmp	.+24     	; 0x218e <TMRSRVC_insert+0x90>
    2176:	f6 01       	movw	r30, r12
    2178:	82 81       	ldd	r24, Z+2	; 0x02
    217a:	93 81       	ldd	r25, Z+3	; 0x03
    217c:	21 15       	cp	r18, r1
    217e:	31 05       	cpc	r19, r1
    2180:	49 f4       	brne	.+18     	; 0x2194 <TMRSRVC_insert+0x96>
    2182:	fd 01       	movw	r30, r26
    2184:	15 82       	std	Z+5, r1	; 0x05
    2186:	14 82       	std	Z+4, r1	; 0x04
    2188:	9b 83       	std	Y+3, r25	; 0x03
    218a:	8a 83       	std	Y+2, r24	; 0x02
    218c:	f6 01       	movw	r30, r12
    218e:	d3 83       	std	Z+3, r29	; 0x03
    2190:	c2 83       	std	Z+2, r28	; 0x02
    2192:	10 c0       	rjmp	.+32     	; 0x21b4 <TMRSRVC_insert+0xb6>
    2194:	fd 01       	movw	r30, r26
    2196:	35 83       	std	Z+5, r19	; 0x05
    2198:	24 83       	std	Z+4, r18	; 0x04
    219a:	00 97       	sbiw	r24, 0x00	; 0
    219c:	b9 f3       	breq	.-18     	; 0x218c <TMRSRVC_insert+0x8e>
    219e:	0f 5f       	subi	r16, 0xFF	; 255
    21a0:	1f 4f       	sbci	r17, 0xFF	; 255
    21a2:	76 01       	movw	r14, r12
    21a4:	6c 01       	movw	r12, r24
    21a6:	80 91 c5 03 	lds	r24, 0x03C5
    21aa:	90 e0       	ldi	r25, 0x00	; 0
    21ac:	08 17       	cp	r16, r24
    21ae:	19 07       	cpc	r17, r25
    21b0:	18 f2       	brcs	.-122    	; 0x2138 <TMRSRVC_insert+0x3a>
    21b2:	ec cf       	rjmp	.-40     	; 0x218c <TMRSRVC_insert+0x8e>
    21b4:	80 91 c5 03 	lds	r24, 0x03C5
    21b8:	8f 5f       	subi	r24, 0xFF	; 255
    21ba:	80 93 c5 03 	sts	0x03C5, r24
    21be:	df 91       	pop	r29
    21c0:	cf 91       	pop	r28
    21c2:	1f 91       	pop	r17
    21c4:	0f 91       	pop	r16
    21c6:	ff 90       	pop	r15
    21c8:	ef 90       	pop	r14
    21ca:	df 90       	pop	r13
    21cc:	cf 90       	pop	r12
    21ce:	08 95       	ret

000021d0 <TMRSRVC_open>:
    21d0:	88 e0       	ldi	r24, 0x08	; 8
    21d2:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    21d6:	88 23       	and	r24, r24
    21d8:	b9 f4       	brne	.+46     	; 0x2208 <TMRSRVC_open+0x38>
    21da:	10 92 c5 03 	sts	0x03C5, r1
    21de:	10 92 c7 03 	sts	0x03C7, r1
    21e2:	10 92 c6 03 	sts	0x03C6, r1
    21e6:	10 92 4a 03 	sts	0x034A, r1
    21ea:	10 92 4b 03 	sts	0x034B, r1
    21ee:	80 e1       	ldi	r24, 0x10	; 16
    21f0:	60 ef       	ldi	r22, 0xF0	; 240
    21f2:	71 e1       	ldi	r23, 0x11	; 17
    21f4:	0e 94 11 11 	call	0x2222	; 0x2222 <__ISR_attach>
    21f8:	0e 94 f7 11 	call	0x23ee	; 0x23ee <__TMRSRVC_init>
    21fc:	0e 94 07 11 	call	0x220e	; 0x220e <__TMRSRVC_start>
    2200:	88 e0       	ldi	r24, 0x08	; 8
    2202:	61 e0       	ldi	r22, 0x01	; 1
    2204:	0e 94 b7 09 	call	0x136e	; 0x136e <SYS_set_state>
    2208:	88 e0       	ldi	r24, 0x08	; 8
    220a:	91 e0       	ldi	r25, 0x01	; 1
    220c:	08 95       	ret

0000220e <__TMRSRVC_start>:
    220e:	ee e6       	ldi	r30, 0x6E	; 110
    2210:	f0 e0       	ldi	r31, 0x00	; 0
    2212:	80 81       	ld	r24, Z
    2214:	82 60       	ori	r24, 0x02	; 2
    2216:	80 83       	st	Z, r24
    2218:	08 95       	ret

0000221a <TMRSRVC_start>:
    221a:	81 e0       	ldi	r24, 0x01	; 1
    221c:	80 93 4b 03 	sts	0x034B, r24
    2220:	08 95       	ret

00002222 <__ISR_attach>:
    2222:	80 32       	cpi	r24, 0x20	; 32
    2224:	18 f0       	brcs	.+6      	; 0x222c <__ISR_attach+0xa>
    2226:	20 e0       	ldi	r18, 0x00	; 0
    2228:	30 e0       	ldi	r19, 0x00	; 0
    222a:	0a c0       	rjmp	.+20     	; 0x2240 <__ISR_attach+0x1e>
    222c:	e8 2f       	mov	r30, r24
    222e:	f0 e0       	ldi	r31, 0x00	; 0
    2230:	ee 0f       	add	r30, r30
    2232:	ff 1f       	adc	r31, r31
    2234:	e6 51       	subi	r30, 0x16	; 22
    2236:	fd 4f       	sbci	r31, 0xFD	; 253
    2238:	20 81       	ld	r18, Z
    223a:	31 81       	ldd	r19, Z+1	; 0x01
    223c:	71 83       	std	Z+1, r23	; 0x01
    223e:	60 83       	st	Z, r22
    2240:	c9 01       	movw	r24, r18
    2242:	08 95       	ret

00002244 <__ATMEGA_init>:
    2244:	24 9a       	sbi	0x04, 4	; 4
    2246:	2c 9a       	sbi	0x05, 4	; 5
    2248:	08 95       	ret

0000224a <SPI_default_config>:
    224a:	83 e5       	ldi	r24, 0x53	; 83
    224c:	8c bd       	out	0x2c, r24	; 44
    224e:	81 e0       	ldi	r24, 0x01	; 1
    2250:	8d bd       	out	0x2d, r24	; 45
    2252:	8d e0       	ldi	r24, 0x0D	; 13
    2254:	8a 95       	dec	r24
    2256:	f1 f7       	brne	.-4      	; 0x2254 <SPI_default_config+0xa>
    2258:	08 95       	ret

0000225a <SPI_ATtiny0_config>:
    225a:	83 e5       	ldi	r24, 0x53	; 83
    225c:	8c bd       	out	0x2c, r24	; 44
    225e:	1d bc       	out	0x2d, r1	; 45
    2260:	84 ef       	ldi	r24, 0xF4	; 244
    2262:	91 e0       	ldi	r25, 0x01	; 1
    2264:	01 97       	sbiw	r24, 0x01	; 1
    2266:	f1 f7       	brne	.-4      	; 0x2264 <SPI_ATtiny0_config+0xa>
    2268:	08 95       	ret

0000226a <SPI_PSXC_config>:
    226a:	8f e7       	ldi	r24, 0x7F	; 127
    226c:	8c bd       	out	0x2c, r24	; 44
    226e:	1d bc       	out	0x2d, r1	; 45
    2270:	84 ef       	ldi	r24, 0xF4	; 244
    2272:	91 e0       	ldi	r25, 0x01	; 1
    2274:	01 97       	sbiw	r24, 0x01	; 1
    2276:	f1 f7       	brne	.-4      	; 0x2274 <SPI_PSXC_config+0xa>
    2278:	08 95       	ret

0000227a <SPI_LCD_config>:
    227a:	83 e5       	ldi	r24, 0x53	; 83
    227c:	8c bd       	out	0x2c, r24	; 44
    227e:	81 e0       	ldi	r24, 0x01	; 1
    2280:	8d bd       	out	0x2d, r24	; 45
    2282:	8d e0       	ldi	r24, 0x0D	; 13
    2284:	8a 95       	dec	r24
    2286:	f1 f7       	brne	.-4      	; 0x2284 <SPI_LCD_config+0xa>
    2288:	08 95       	ret

0000228a <SPI_FLASH_config>:
    228a:	83 e5       	ldi	r24, 0x53	; 83
    228c:	8c bd       	out	0x2c, r24	; 44
    228e:	81 e0       	ldi	r24, 0x01	; 1
    2290:	8d bd       	out	0x2d, r24	; 45
    2292:	84 ef       	ldi	r24, 0xF4	; 244
    2294:	91 e0       	ldi	r25, 0x01	; 1
    2296:	01 97       	sbiw	r24, 0x01	; 1
    2298:	f1 f7       	brne	.-4      	; 0x2296 <SPI_FLASH_config+0xc>
    229a:	08 95       	ret

0000229c <__SPI_init>:
    229c:	25 9a       	sbi	0x04, 5	; 4
    229e:	26 98       	cbi	0x04, 6	; 4
    22a0:	27 9a       	sbi	0x04, 7	; 4
    22a2:	20 9a       	sbi	0x04, 0	; 4
    22a4:	21 9a       	sbi	0x04, 1	; 4
    22a6:	22 9a       	sbi	0x04, 2	; 4
    22a8:	08 95       	ret

000022aa <SPI_receive>:
    22aa:	1f 93       	push	r17
    22ac:	16 2f       	mov	r17, r22
    22ae:	0e 94 d7 04 	call	0x9ae	; 0x9ae <SPI_set_slave_addr>
    22b2:	82 e0       	ldi	r24, 0x02	; 2
    22b4:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    22b8:	81 30       	cpi	r24, 0x01	; 1
    22ba:	11 f0       	breq	.+4      	; 0x22c0 <SPI_receive+0x16>
    22bc:	80 e0       	ldi	r24, 0x00	; 0
    22be:	05 c0       	rjmp	.+10     	; 0x22ca <SPI_receive+0x20>
    22c0:	1e bd       	out	0x2e, r17	; 46
    22c2:	0d b4       	in	r0, 0x2d	; 45
    22c4:	07 fe       	sbrs	r0, 7
    22c6:	fd cf       	rjmp	.-6      	; 0x22c2 <SPI_receive+0x18>
    22c8:	8e b5       	in	r24, 0x2e	; 46
    22ca:	1f 91       	pop	r17
    22cc:	08 95       	ret

000022ce <__SPKR_close>:
    22ce:	82 30       	cpi	r24, 0x02	; 2
    22d0:	29 f4       	brne	.+10     	; 0x22dc <__SPKR_close+0xe>
    22d2:	80 91 81 00 	lds	r24, 0x0081
    22d6:	8e 7f       	andi	r24, 0xFE	; 254
    22d8:	80 93 81 00 	sts	0x0081, r24
    22dc:	80 91 3a 03 	lds	r24, 0x033A
    22e0:	81 30       	cpi	r24, 0x01	; 1
    22e2:	31 f4       	brne	.+12     	; 0x22f0 <__SPKR_close+0x22>
    22e4:	80 91 3b 03 	lds	r24, 0x033B
    22e8:	81 30       	cpi	r24, 0x01	; 1
    22ea:	11 f4       	brne	.+4      	; 0x22f0 <__SPKR_close+0x22>
    22ec:	00 00       	nop
    22ee:	08 95       	ret
    22f0:	80 91 3a 03 	lds	r24, 0x033A
    22f4:	81 30       	cpi	r24, 0x01	; 1
    22f6:	21 f0       	breq	.+8      	; 0x2300 <__SPKR_close+0x32>
    22f8:	80 91 3b 03 	lds	r24, 0x033B
    22fc:	81 30       	cpi	r24, 0x01	; 1
    22fe:	11 f4       	brne	.+4      	; 0x2304 <__SPKR_close+0x36>
    2300:	5f 98       	cbi	0x0b, 7	; 11
    2302:	57 98       	cbi	0x0a, 7	; 10
    2304:	08 95       	ret

00002306 <STEPPER_set_decel_step_values>:
    2306:	ef 92       	push	r14
    2308:	ff 92       	push	r15
    230a:	0f 93       	push	r16
    230c:	1f 93       	push	r17
    230e:	cf 93       	push	r28
    2310:	df 93       	push	r29
    2312:	eb 01       	movw	r28, r22
    2314:	88 23       	and	r24, r24
    2316:	21 f0       	breq	.+8      	; 0x2320 <STEPPER_set_decel_step_values+0x1a>
    2318:	81 30       	cpi	r24, 0x01	; 1
    231a:	09 f0       	breq	.+2      	; 0x231e <STEPPER_set_decel_step_values+0x18>
    231c:	5a c0       	rjmp	.+180    	; 0x23d2 <STEPPER_set_decel_step_values+0xcc>
    231e:	2d c0       	rjmp	.+90     	; 0x237a <STEPPER_set_decel_step_values+0x74>
    2320:	9a 01       	movw	r18, r20
    2322:	40 e0       	ldi	r20, 0x00	; 0
    2324:	50 e0       	ldi	r21, 0x00	; 0
    2326:	ca 01       	movw	r24, r20
    2328:	b9 01       	movw	r22, r18
    232a:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__mulsi3>
    232e:	20 91 5f 03 	lds	r18, 0x035F
    2332:	30 91 60 03 	lds	r19, 0x0360
    2336:	22 0f       	add	r18, r18
    2338:	33 1f       	adc	r19, r19
    233a:	40 e0       	ldi	r20, 0x00	; 0
    233c:	50 e0       	ldi	r21, 0x00	; 0
    233e:	0e 94 ec 26 	call	0x4dd8	; 0x4dd8 <__udivmodsi4>
    2342:	79 01       	movw	r14, r18
    2344:	8a 01       	movw	r16, r20
    2346:	a8 01       	movw	r20, r16
    2348:	97 01       	movw	r18, r14
    234a:	22 0f       	add	r18, r18
    234c:	33 1f       	adc	r19, r19
    234e:	44 1f       	adc	r20, r20
    2350:	55 1f       	adc	r21, r21
    2352:	ce 01       	movw	r24, r28
    2354:	a0 e0       	ldi	r26, 0x00	; 0
    2356:	b0 e0       	ldi	r27, 0x00	; 0
    2358:	82 17       	cp	r24, r18
    235a:	93 07       	cpc	r25, r19
    235c:	a4 07       	cpc	r26, r20
    235e:	b5 07       	cpc	r27, r21
    2360:	28 f0       	brcs	.+10     	; 0x236c <STEPPER_set_decel_step_values+0x66>
    2362:	f0 92 6c 03 	sts	0x036C, r15
    2366:	e0 92 6b 03 	sts	0x036B, r14
    236a:	33 c0       	rjmp	.+102    	; 0x23d2 <STEPPER_set_decel_step_values+0xcc>
    236c:	d6 95       	lsr	r29
    236e:	c7 95       	ror	r28
    2370:	d0 93 6c 03 	sts	0x036C, r29
    2374:	c0 93 6b 03 	sts	0x036B, r28
    2378:	2c c0       	rjmp	.+88     	; 0x23d2 <STEPPER_set_decel_step_values+0xcc>
    237a:	9a 01       	movw	r18, r20
    237c:	40 e0       	ldi	r20, 0x00	; 0
    237e:	50 e0       	ldi	r21, 0x00	; 0
    2380:	ca 01       	movw	r24, r20
    2382:	b9 01       	movw	r22, r18
    2384:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__mulsi3>
    2388:	20 91 61 03 	lds	r18, 0x0361
    238c:	30 91 62 03 	lds	r19, 0x0362
    2390:	22 0f       	add	r18, r18
    2392:	33 1f       	adc	r19, r19
    2394:	40 e0       	ldi	r20, 0x00	; 0
    2396:	50 e0       	ldi	r21, 0x00	; 0
    2398:	0e 94 ec 26 	call	0x4dd8	; 0x4dd8 <__udivmodsi4>
    239c:	79 01       	movw	r14, r18
    239e:	8a 01       	movw	r16, r20
    23a0:	a8 01       	movw	r20, r16
    23a2:	97 01       	movw	r18, r14
    23a4:	22 0f       	add	r18, r18
    23a6:	33 1f       	adc	r19, r19
    23a8:	44 1f       	adc	r20, r20
    23aa:	55 1f       	adc	r21, r21
    23ac:	ce 01       	movw	r24, r28
    23ae:	a0 e0       	ldi	r26, 0x00	; 0
    23b0:	b0 e0       	ldi	r27, 0x00	; 0
    23b2:	82 17       	cp	r24, r18
    23b4:	93 07       	cpc	r25, r19
    23b6:	a4 07       	cpc	r26, r20
    23b8:	b5 07       	cpc	r27, r21
    23ba:	28 f0       	brcs	.+10     	; 0x23c6 <STEPPER_set_decel_step_values+0xc0>
    23bc:	f0 92 6e 03 	sts	0x036E, r15
    23c0:	e0 92 6d 03 	sts	0x036D, r14
    23c4:	06 c0       	rjmp	.+12     	; 0x23d2 <STEPPER_set_decel_step_values+0xcc>
    23c6:	d6 95       	lsr	r29
    23c8:	c7 95       	ror	r28
    23ca:	d0 93 6e 03 	sts	0x036E, r29
    23ce:	c0 93 6d 03 	sts	0x036D, r28
    23d2:	df 91       	pop	r29
    23d4:	cf 91       	pop	r28
    23d6:	1f 91       	pop	r17
    23d8:	0f 91       	pop	r16
    23da:	ff 90       	pop	r15
    23dc:	ef 90       	pop	r14
    23de:	08 95       	ret

000023e0 <__TIMER0_COMPA_vect>:
    23e0:	0e 94 00 12 	call	0x2400	; 0x2400 <TMRSRVC_tick>
    23e4:	0e 94 40 12 	call	0x2480	; 0x2480 <STEPPER_clk>
    23e8:	0e 94 19 12 	call	0x2432	; 0x2432 <SPKR_beep_clk>
    23ec:	08 95       	ret

000023ee <__TMRSRVC_init>:
    23ee:	84 b5       	in	r24, 0x24	; 36
    23f0:	82 60       	ori	r24, 0x02	; 2
    23f2:	84 bd       	out	0x24, r24	; 36
    23f4:	85 b5       	in	r24, 0x25	; 37
    23f6:	84 60       	ori	r24, 0x04	; 4
    23f8:	85 bd       	out	0x25, r24	; 37
    23fa:	8e e4       	ldi	r24, 0x4E	; 78
    23fc:	87 bd       	out	0x27, r24	; 39
    23fe:	08 95       	ret

00002400 <TMRSRVC_tick>:
    2400:	88 e0       	ldi	r24, 0x08	; 8
    2402:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    2406:	88 23       	and	r24, r24
    2408:	11 f4       	brne	.+4      	; 0x240e <TMRSRVC_tick+0xe>
    240a:	84 e0       	ldi	r24, 0x04	; 4
    240c:	08 95       	ret
    240e:	80 91 4b 03 	lds	r24, 0x034B
    2412:	88 23       	and	r24, r24
    2414:	11 f4       	brne	.+4      	; 0x241a <TMRSRVC_tick+0x1a>
    2416:	83 e0       	ldi	r24, 0x03	; 3
    2418:	08 95       	ret
    241a:	80 91 4a 03 	lds	r24, 0x034A
    241e:	88 23       	and	r24, r24
    2420:	11 f0       	breq	.+4      	; 0x2426 <TMRSRVC_tick+0x26>
    2422:	82 e0       	ldi	r24, 0x02	; 2
    2424:	08 95       	ret
    2426:	0e 94 8d 14 	call	0x291a	; 0x291a <TMRSRVC_process>
    242a:	81 30       	cpi	r24, 0x01	; 1
    242c:	e1 f3       	breq	.-8      	; 0x2426 <TMRSRVC_tick+0x26>
    242e:	80 e0       	ldi	r24, 0x00	; 0
    2430:	08 95       	ret

00002432 <SPKR_beep_clk>:
    2432:	80 91 3b 03 	lds	r24, 0x033B
    2436:	81 30       	cpi	r24, 0x01	; 1
    2438:	11 f5       	brne	.+68     	; 0x247e <SPKR_beep_clk+0x4c>
    243a:	80 91 44 03 	lds	r24, 0x0344
    243e:	90 91 45 03 	lds	r25, 0x0345
    2442:	20 91 46 03 	lds	r18, 0x0346
    2446:	30 91 47 03 	lds	r19, 0x0347
    244a:	28 0f       	add	r18, r24
    244c:	39 1f       	adc	r19, r25
    244e:	30 93 45 03 	sts	0x0345, r19
    2452:	20 93 44 03 	sts	0x0344, r18
    2456:	80 91 44 03 	lds	r24, 0x0344
    245a:	90 91 45 03 	lds	r25, 0x0345
    245e:	88 5e       	subi	r24, 0xE8	; 232
    2460:	93 40       	sbci	r25, 0x03	; 3
    2462:	6c f0       	brlt	.+26     	; 0x247e <SPKR_beep_clk+0x4c>
    2464:	8b b1       	in	r24, 0x0b	; 11
    2466:	80 58       	subi	r24, 0x80	; 128
    2468:	8b b9       	out	0x0b, r24	; 11
    246a:	80 91 44 03 	lds	r24, 0x0344
    246e:	90 91 45 03 	lds	r25, 0x0345
    2472:	88 5e       	subi	r24, 0xE8	; 232
    2474:	93 40       	sbci	r25, 0x03	; 3
    2476:	90 93 45 03 	sts	0x0345, r25
    247a:	80 93 44 03 	sts	0x0344, r24
    247e:	08 95       	ret

00002480 <STEPPER_clk>:
    2480:	87 e0       	ldi	r24, 0x07	; 7
    2482:	0e 94 6f 09 	call	0x12de	; 0x12de <SYS_get_state>
    2486:	81 30       	cpi	r24, 0x01	; 1
    2488:	09 f0       	breq	.+2      	; 0x248c <STEPPER_clk+0xc>
    248a:	aa c0       	rjmp	.+340    	; 0x25e0 <STEPPER_clk+0x160>
    248c:	80 91 5f 03 	lds	r24, 0x035F
    2490:	90 91 60 03 	lds	r25, 0x0360
    2494:	89 2b       	or	r24, r25
    2496:	09 f1       	breq	.+66     	; 0x24da <STEPPER_clk+0x5a>
    2498:	80 91 83 03 	lds	r24, 0x0383
    249c:	90 91 84 03 	lds	r25, 0x0384
    24a0:	20 91 5f 03 	lds	r18, 0x035F
    24a4:	30 91 60 03 	lds	r19, 0x0360
    24a8:	82 0f       	add	r24, r18
    24aa:	93 1f       	adc	r25, r19
    24ac:	90 93 84 03 	sts	0x0384, r25
    24b0:	80 93 83 03 	sts	0x0383, r24
    24b4:	80 91 83 03 	lds	r24, 0x0383
    24b8:	90 91 84 03 	lds	r25, 0x0384
    24bc:	88 5e       	subi	r24, 0xE8	; 232
    24be:	93 40       	sbci	r25, 0x03	; 3
    24c0:	a4 f0       	brlt	.+40     	; 0x24ea <STEPPER_clk+0x6a>
    24c2:	80 91 83 03 	lds	r24, 0x0383
    24c6:	90 91 84 03 	lds	r25, 0x0384
    24ca:	88 5e       	subi	r24, 0xE8	; 232
    24cc:	93 40       	sbci	r25, 0x03	; 3
    24ce:	90 93 84 03 	sts	0x0384, r25
    24d2:	80 93 83 03 	sts	0x0383, r24
    24d6:	41 e0       	ldi	r20, 0x01	; 1
    24d8:	09 c0       	rjmp	.+18     	; 0x24ec <STEPPER_clk+0x6c>
    24da:	80 91 57 03 	lds	r24, 0x0357
    24de:	90 91 58 03 	lds	r25, 0x0358
    24e2:	90 93 5c 03 	sts	0x035C, r25
    24e6:	80 93 5b 03 	sts	0x035B, r24
    24ea:	40 e0       	ldi	r20, 0x00	; 0
    24ec:	80 91 61 03 	lds	r24, 0x0361
    24f0:	90 91 62 03 	lds	r25, 0x0362
    24f4:	89 2b       	or	r24, r25
    24f6:	09 f1       	breq	.+66     	; 0x253a <STEPPER_clk+0xba>
    24f8:	80 91 85 03 	lds	r24, 0x0385
    24fc:	90 91 86 03 	lds	r25, 0x0386
    2500:	20 91 61 03 	lds	r18, 0x0361
    2504:	30 91 62 03 	lds	r19, 0x0362
    2508:	82 0f       	add	r24, r18
    250a:	93 1f       	adc	r25, r19
    250c:	90 93 86 03 	sts	0x0386, r25
    2510:	80 93 85 03 	sts	0x0385, r24
    2514:	80 91 85 03 	lds	r24, 0x0385
    2518:	90 91 86 03 	lds	r25, 0x0386
    251c:	88 5e       	subi	r24, 0xE8	; 232
    251e:	93 40       	sbci	r25, 0x03	; 3
    2520:	a4 f0       	brlt	.+40     	; 0x254a <STEPPER_clk+0xca>
    2522:	80 91 85 03 	lds	r24, 0x0385
    2526:	90 91 86 03 	lds	r25, 0x0386
    252a:	88 5e       	subi	r24, 0xE8	; 232
    252c:	93 40       	sbci	r25, 0x03	; 3
    252e:	90 93 86 03 	sts	0x0386, r25
    2532:	80 93 85 03 	sts	0x0385, r24
    2536:	61 e0       	ldi	r22, 0x01	; 1
    2538:	09 c0       	rjmp	.+18     	; 0x254c <STEPPER_clk+0xcc>
    253a:	80 91 59 03 	lds	r24, 0x0359
    253e:	90 91 5a 03 	lds	r25, 0x035A
    2542:	90 93 5e 03 	sts	0x035E, r25
    2546:	80 93 5d 03 	sts	0x035D, r24
    254a:	60 e0       	ldi	r22, 0x00	; 0
    254c:	84 2f       	mov	r24, r20
    254e:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <STEPPER_process_accel>
    2552:	80 91 7f 03 	lds	r24, 0x037F
    2556:	90 91 80 03 	lds	r25, 0x0380
    255a:	20 91 5b 03 	lds	r18, 0x035B
    255e:	30 91 5c 03 	lds	r19, 0x035C
    2562:	28 0f       	add	r18, r24
    2564:	39 1f       	adc	r19, r25
    2566:	30 93 80 03 	sts	0x0380, r19
    256a:	20 93 7f 03 	sts	0x037F, r18
    256e:	80 91 7f 03 	lds	r24, 0x037F
    2572:	90 91 80 03 	lds	r25, 0x0380
    2576:	88 5e       	subi	r24, 0xE8	; 232
    2578:	93 40       	sbci	r25, 0x03	; 3
    257a:	14 f4       	brge	.+4      	; 0x2580 <STEPPER_clk+0x100>
    257c:	40 e0       	ldi	r20, 0x00	; 0
    257e:	0b c0       	rjmp	.+22     	; 0x2596 <STEPPER_clk+0x116>
    2580:	80 91 7f 03 	lds	r24, 0x037F
    2584:	90 91 80 03 	lds	r25, 0x0380
    2588:	88 5e       	subi	r24, 0xE8	; 232
    258a:	93 40       	sbci	r25, 0x03	; 3
    258c:	90 93 80 03 	sts	0x0380, r25
    2590:	80 93 7f 03 	sts	0x037F, r24
    2594:	41 e0       	ldi	r20, 0x01	; 1
    2596:	80 91 81 03 	lds	r24, 0x0381
    259a:	90 91 82 03 	lds	r25, 0x0382
    259e:	20 91 5d 03 	lds	r18, 0x035D
    25a2:	30 91 5e 03 	lds	r19, 0x035E
    25a6:	28 0f       	add	r18, r24
    25a8:	39 1f       	adc	r19, r25
    25aa:	30 93 82 03 	sts	0x0382, r19
    25ae:	20 93 81 03 	sts	0x0381, r18
    25b2:	80 91 81 03 	lds	r24, 0x0381
    25b6:	90 91 82 03 	lds	r25, 0x0382
    25ba:	88 5e       	subi	r24, 0xE8	; 232
    25bc:	93 40       	sbci	r25, 0x03	; 3
    25be:	14 f4       	brge	.+4      	; 0x25c4 <STEPPER_clk+0x144>
    25c0:	60 e0       	ldi	r22, 0x00	; 0
    25c2:	0b c0       	rjmp	.+22     	; 0x25da <STEPPER_clk+0x15a>
    25c4:	80 91 81 03 	lds	r24, 0x0381
    25c8:	90 91 82 03 	lds	r25, 0x0382
    25cc:	88 5e       	subi	r24, 0xE8	; 232
    25ce:	93 40       	sbci	r25, 0x03	; 3
    25d0:	90 93 82 03 	sts	0x0382, r25
    25d4:	80 93 81 03 	sts	0x0381, r24
    25d8:	61 e0       	ldi	r22, 0x01	; 1
    25da:	84 2f       	mov	r24, r20
    25dc:	0e 94 36 13 	call	0x266c	; 0x266c <STEPPER_process_run_mode>
    25e0:	08 95       	ret

000025e2 <STEPPER_process_accel>:
    25e2:	88 23       	and	r24, r24
    25e4:	f1 f0       	breq	.+60     	; 0x2622 <STEPPER_process_accel+0x40>
    25e6:	20 91 57 03 	lds	r18, 0x0357
    25ea:	30 91 58 03 	lds	r19, 0x0358
    25ee:	80 91 5b 03 	lds	r24, 0x035B
    25f2:	90 91 5c 03 	lds	r25, 0x035C
    25f6:	28 1b       	sub	r18, r24
    25f8:	39 0b       	sbc	r19, r25
    25fa:	12 16       	cp	r1, r18
    25fc:	13 06       	cpc	r1, r19
    25fe:	34 f4       	brge	.+12     	; 0x260c <STEPPER_process_accel+0x2a>
    2600:	80 91 5b 03 	lds	r24, 0x035B
    2604:	90 91 5c 03 	lds	r25, 0x035C
    2608:	01 96       	adiw	r24, 0x01	; 1
    260a:	07 c0       	rjmp	.+14     	; 0x261a <STEPPER_process_accel+0x38>
    260c:	23 2b       	or	r18, r19
    260e:	49 f0       	breq	.+18     	; 0x2622 <STEPPER_process_accel+0x40>
    2610:	80 91 5b 03 	lds	r24, 0x035B
    2614:	90 91 5c 03 	lds	r25, 0x035C
    2618:	01 97       	sbiw	r24, 0x01	; 1
    261a:	90 93 5c 03 	sts	0x035C, r25
    261e:	80 93 5b 03 	sts	0x035B, r24
    2622:	66 23       	and	r22, r22
    2624:	11 f1       	breq	.+68     	; 0x266a <STEPPER_process_accel+0x88>
    2626:	20 91 59 03 	lds	r18, 0x0359
    262a:	30 91 5a 03 	lds	r19, 0x035A
    262e:	80 91 5d 03 	lds	r24, 0x035D
    2632:	90 91 5e 03 	lds	r25, 0x035E
    2636:	28 1b       	sub	r18, r24
    2638:	39 0b       	sbc	r19, r25
    263a:	12 16       	cp	r1, r18
    263c:	13 06       	cpc	r1, r19
    263e:	54 f4       	brge	.+20     	; 0x2654 <STEPPER_process_accel+0x72>
    2640:	80 91 5d 03 	lds	r24, 0x035D
    2644:	90 91 5e 03 	lds	r25, 0x035E
    2648:	01 96       	adiw	r24, 0x01	; 1
    264a:	90 93 5e 03 	sts	0x035E, r25
    264e:	80 93 5d 03 	sts	0x035D, r24
    2652:	08 95       	ret
    2654:	23 2b       	or	r18, r19
    2656:	49 f0       	breq	.+18     	; 0x266a <STEPPER_process_accel+0x88>
    2658:	80 91 5d 03 	lds	r24, 0x035D
    265c:	90 91 5e 03 	lds	r25, 0x035E
    2660:	01 97       	sbiw	r24, 0x01	; 1
    2662:	90 93 5e 03 	sts	0x035E, r25
    2666:	80 93 5d 03 	sts	0x035D, r24
    266a:	08 95       	ret

0000266c <STEPPER_process_run_mode>:
    266c:	0f 93       	push	r16
    266e:	1f 93       	push	r17
    2670:	18 2f       	mov	r17, r24
    2672:	06 2f       	mov	r16, r22
    2674:	80 91 8b 03 	lds	r24, 0x038B
    2678:	88 23       	and	r24, r24
    267a:	09 f0       	breq	.+2      	; 0x267e <STEPPER_process_run_mode+0x12>
    267c:	e7 c0       	rjmp	.+462    	; 0x284c <STEPPER_process_run_mode+0x1e0>
    267e:	80 91 73 03 	lds	r24, 0x0373
    2682:	88 23       	and	r24, r24
    2684:	09 f0       	breq	.+2      	; 0x2688 <STEPPER_process_run_mode+0x1c>
    2686:	5a c0       	rjmp	.+180    	; 0x273c <STEPPER_process_run_mode+0xd0>
    2688:	80 91 5b 03 	lds	r24, 0x035B
    268c:	90 91 5c 03 	lds	r25, 0x035C
    2690:	89 2b       	or	r24, r25
    2692:	e9 f4       	brne	.+58     	; 0x26ce <STEPPER_process_run_mode+0x62>
    2694:	80 91 4c 03 	lds	r24, 0x034C
    2698:	83 7e       	andi	r24, 0xE3	; 227
    269a:	80 93 4c 03 	sts	0x034C, r24
    269e:	10 92 7c 03 	sts	0x037C, r1
    26a2:	80 91 87 03 	lds	r24, 0x0387
    26a6:	88 23       	and	r24, r24
    26a8:	09 f4       	brne	.+2      	; 0x26ac <STEPPER_process_run_mode+0x40>
    26aa:	5d c0       	rjmp	.+186    	; 0x2766 <STEPPER_process_run_mode+0xfa>
    26ac:	60 91 75 03 	lds	r22, 0x0375
    26b0:	80 e0       	ldi	r24, 0x00	; 0
    26b2:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
    26b6:	e0 91 89 03 	lds	r30, 0x0389
    26ba:	f0 91 8a 03 	lds	r31, 0x038A
    26be:	30 97       	sbiw	r30, 0x00	; 0
    26c0:	09 f4       	brne	.+2      	; 0x26c4 <STEPPER_process_run_mode+0x58>
    26c2:	51 c0       	rjmp	.+162    	; 0x2766 <STEPPER_process_run_mode+0xfa>
    26c4:	81 e0       	ldi	r24, 0x01	; 1
    26c6:	80 83       	st	Z, r24
    26c8:	10 92 87 03 	sts	0x0387, r1
    26cc:	4c c0       	rjmp	.+152    	; 0x2766 <STEPPER_process_run_mode+0xfa>
    26ce:	80 91 55 03 	lds	r24, 0x0355
    26d2:	81 30       	cpi	r24, 0x01	; 1
    26d4:	41 f4       	brne	.+16     	; 0x26e6 <STEPPER_process_run_mode+0x7a>
    26d6:	80 91 67 03 	lds	r24, 0x0367
    26da:	90 91 68 03 	lds	r25, 0x0368
    26de:	01 97       	sbiw	r24, 0x01	; 1
    26e0:	11 f4       	brne	.+4      	; 0x26e6 <STEPPER_process_run_mode+0x7a>
    26e2:	11 e0       	ldi	r17, 0x01	; 1
    26e4:	02 c0       	rjmp	.+4      	; 0x26ea <STEPPER_process_run_mode+0x7e>
    26e6:	11 23       	and	r17, r17
    26e8:	f1 f1       	breq	.+124    	; 0x2766 <STEPPER_process_run_mode+0xfa>
    26ea:	e0 91 7a 03 	lds	r30, 0x037A
    26ee:	f0 e0       	ldi	r31, 0x00	; 0
    26f0:	ef 5f       	subi	r30, 0xFF	; 255
    26f2:	fe 4f       	sbci	r31, 0xFE	; 254
    26f4:	90 91 4c 03 	lds	r25, 0x034C
    26f8:	93 7e       	andi	r25, 0xE3	; 227
    26fa:	80 81       	ld	r24, Z
    26fc:	89 2b       	or	r24, r25
    26fe:	80 93 4c 03 	sts	0x034C, r24
    2702:	80 91 78 03 	lds	r24, 0x0378
    2706:	88 23       	and	r24, r24
    2708:	21 f4       	brne	.+8      	; 0x2712 <STEPPER_process_run_mode+0xa6>
    270a:	80 91 7a 03 	lds	r24, 0x037A
    270e:	8f 5f       	subi	r24, 0xFF	; 255
    2710:	03 c0       	rjmp	.+6      	; 0x2718 <STEPPER_process_run_mode+0xac>
    2712:	80 91 7a 03 	lds	r24, 0x037A
    2716:	81 50       	subi	r24, 0x01	; 1
    2718:	80 93 7a 03 	sts	0x037A, r24
    271c:	80 91 7a 03 	lds	r24, 0x037A
    2720:	83 70       	andi	r24, 0x03	; 3
    2722:	80 93 7a 03 	sts	0x037A, r24
    2726:	81 e0       	ldi	r24, 0x01	; 1
    2728:	80 93 7c 03 	sts	0x037C, r24
    272c:	80 91 55 03 	lds	r24, 0x0355
    2730:	81 30       	cpi	r24, 0x01	; 1
    2732:	c9 f4       	brne	.+50     	; 0x2766 <STEPPER_process_run_mode+0xfa>
    2734:	80 e0       	ldi	r24, 0x00	; 0
    2736:	0e 94 39 14 	call	0x2872	; 0x2872 <STEPPER_process_step_mode>
    273a:	15 c0       	rjmp	.+42     	; 0x2766 <STEPPER_process_run_mode+0xfa>
    273c:	90 91 4c 03 	lds	r25, 0x034C
    2740:	93 7e       	andi	r25, 0xE3	; 227
    2742:	90 93 4c 03 	sts	0x034C, r25
    2746:	e0 91 7a 03 	lds	r30, 0x037A
    274a:	f0 e0       	ldi	r31, 0x00	; 0
    274c:	ef 5f       	subi	r30, 0xFF	; 255
    274e:	fe 4f       	sbci	r31, 0xFE	; 254
    2750:	80 81       	ld	r24, Z
    2752:	89 2b       	or	r24, r25
    2754:	80 93 4c 03 	sts	0x034C, r24
    2758:	82 e0       	ldi	r24, 0x02	; 2
    275a:	80 93 7c 03 	sts	0x037C, r24
    275e:	10 92 5c 03 	sts	0x035C, r1
    2762:	10 92 5b 03 	sts	0x035B, r1
    2766:	80 91 74 03 	lds	r24, 0x0374
    276a:	88 23       	and	r24, r24
    276c:	09 f0       	breq	.+2      	; 0x2770 <STEPPER_process_run_mode+0x104>
    276e:	59 c0       	rjmp	.+178    	; 0x2822 <STEPPER_process_run_mode+0x1b6>
    2770:	80 91 5d 03 	lds	r24, 0x035D
    2774:	90 91 5e 03 	lds	r25, 0x035E
    2778:	89 2b       	or	r24, r25
    277a:	e9 f4       	brne	.+58     	; 0x27b6 <STEPPER_process_run_mode+0x14a>
    277c:	80 91 4c 03 	lds	r24, 0x034C
    2780:	8f 71       	andi	r24, 0x1F	; 31
    2782:	80 93 4c 03 	sts	0x034C, r24
    2786:	10 92 7d 03 	sts	0x037D, r1
    278a:	80 91 88 03 	lds	r24, 0x0388
    278e:	88 23       	and	r24, r24
    2790:	09 f4       	brne	.+2      	; 0x2794 <STEPPER_process_run_mode+0x128>
    2792:	5c c0       	rjmp	.+184    	; 0x284c <STEPPER_process_run_mode+0x1e0>
    2794:	60 91 76 03 	lds	r22, 0x0376
    2798:	81 e0       	ldi	r24, 0x01	; 1
    279a:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
    279e:	e0 91 89 03 	lds	r30, 0x0389
    27a2:	f0 91 8a 03 	lds	r31, 0x038A
    27a6:	30 97       	sbiw	r30, 0x00	; 0
    27a8:	09 f4       	brne	.+2      	; 0x27ac <STEPPER_process_run_mode+0x140>
    27aa:	50 c0       	rjmp	.+160    	; 0x284c <STEPPER_process_run_mode+0x1e0>
    27ac:	81 e0       	ldi	r24, 0x01	; 1
    27ae:	81 83       	std	Z+1, r24	; 0x01
    27b0:	10 92 88 03 	sts	0x0388, r1
    27b4:	4b c0       	rjmp	.+150    	; 0x284c <STEPPER_process_run_mode+0x1e0>
    27b6:	80 91 56 03 	lds	r24, 0x0356
    27ba:	81 30       	cpi	r24, 0x01	; 1
    27bc:	41 f4       	brne	.+16     	; 0x27ce <STEPPER_process_run_mode+0x162>
    27be:	80 91 69 03 	lds	r24, 0x0369
    27c2:	90 91 6a 03 	lds	r25, 0x036A
    27c6:	01 97       	sbiw	r24, 0x01	; 1
    27c8:	11 f4       	brne	.+4      	; 0x27ce <STEPPER_process_run_mode+0x162>
    27ca:	01 e0       	ldi	r16, 0x01	; 1
    27cc:	02 c0       	rjmp	.+4      	; 0x27d2 <STEPPER_process_run_mode+0x166>
    27ce:	00 23       	and	r16, r16
    27d0:	e9 f1       	breq	.+122    	; 0x284c <STEPPER_process_run_mode+0x1e0>
    27d2:	e0 91 7b 03 	lds	r30, 0x037B
    27d6:	f0 e0       	ldi	r31, 0x00	; 0
    27d8:	eb 5f       	subi	r30, 0xFB	; 251
    27da:	fe 4f       	sbci	r31, 0xFE	; 254
    27dc:	90 91 4c 03 	lds	r25, 0x034C
    27e0:	9f 71       	andi	r25, 0x1F	; 31
    27e2:	80 81       	ld	r24, Z
    27e4:	89 2b       	or	r24, r25
    27e6:	80 93 4c 03 	sts	0x034C, r24
    27ea:	80 91 79 03 	lds	r24, 0x0379
    27ee:	88 23       	and	r24, r24
    27f0:	21 f4       	brne	.+8      	; 0x27fa <STEPPER_process_run_mode+0x18e>
    27f2:	80 91 7b 03 	lds	r24, 0x037B
    27f6:	8f 5f       	subi	r24, 0xFF	; 255
    27f8:	03 c0       	rjmp	.+6      	; 0x2800 <STEPPER_process_run_mode+0x194>
    27fa:	80 91 7b 03 	lds	r24, 0x037B
    27fe:	81 50       	subi	r24, 0x01	; 1
    2800:	80 93 7b 03 	sts	0x037B, r24
    2804:	80 91 7b 03 	lds	r24, 0x037B
    2808:	83 70       	andi	r24, 0x03	; 3
    280a:	80 93 7b 03 	sts	0x037B, r24
    280e:	81 e0       	ldi	r24, 0x01	; 1
    2810:	80 93 7d 03 	sts	0x037D, r24
    2814:	80 91 56 03 	lds	r24, 0x0356
    2818:	81 30       	cpi	r24, 0x01	; 1
    281a:	c1 f4       	brne	.+48     	; 0x284c <STEPPER_process_run_mode+0x1e0>
    281c:	0e 94 39 14 	call	0x2872	; 0x2872 <STEPPER_process_step_mode>
    2820:	15 c0       	rjmp	.+42     	; 0x284c <STEPPER_process_run_mode+0x1e0>
    2822:	90 91 4c 03 	lds	r25, 0x034C
    2826:	9f 71       	andi	r25, 0x1F	; 31
    2828:	90 93 4c 03 	sts	0x034C, r25
    282c:	e0 91 7b 03 	lds	r30, 0x037B
    2830:	f0 e0       	ldi	r31, 0x00	; 0
    2832:	eb 5f       	subi	r30, 0xFB	; 251
    2834:	fe 4f       	sbci	r31, 0xFE	; 254
    2836:	80 81       	ld	r24, Z
    2838:	89 2b       	or	r24, r25
    283a:	80 93 4c 03 	sts	0x034C, r24
    283e:	82 e0       	ldi	r24, 0x02	; 2
    2840:	80 93 7d 03 	sts	0x037D, r24
    2844:	10 92 5e 03 	sts	0x035E, r1
    2848:	10 92 5d 03 	sts	0x035D, r1
    284c:	80 91 7e 03 	lds	r24, 0x037E
    2850:	88 23       	and	r24, r24
    2852:	31 f4       	brne	.+12     	; 0x2860 <STEPPER_process_run_mode+0x1f4>
    2854:	8c e4       	ldi	r24, 0x4C	; 76
    2856:	93 e0       	ldi	r25, 0x03	; 3
    2858:	61 2f       	mov	r22, r17
    285a:	40 2f       	mov	r20, r16
    285c:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <STEPPER_process_pwm>
    2860:	88 b1       	in	r24, 0x08	; 8
    2862:	83 70       	andi	r24, 0x03	; 3
    2864:	90 91 4c 03 	lds	r25, 0x034C
    2868:	89 2b       	or	r24, r25
    286a:	88 b9       	out	0x08, r24	; 8
    286c:	1f 91       	pop	r17
    286e:	0f 91       	pop	r16
    2870:	08 95       	ret

00002872 <STEPPER_process_step_mode>:
    2872:	88 23       	and	r24, r24
    2874:	21 f0       	breq	.+8      	; 0x287e <STEPPER_process_step_mode+0xc>
    2876:	81 30       	cpi	r24, 0x01	; 1
    2878:	09 f0       	breq	.+2      	; 0x287c <STEPPER_process_step_mode+0xa>
    287a:	4e c0       	rjmp	.+156    	; 0x2918 <STEPPER_process_step_mode+0xa6>
    287c:	27 c0       	rjmp	.+78     	; 0x28cc <STEPPER_process_step_mode+0x5a>
    287e:	80 91 67 03 	lds	r24, 0x0367
    2882:	90 91 68 03 	lds	r25, 0x0368
    2886:	89 2b       	or	r24, r25
    2888:	49 f0       	breq	.+18     	; 0x289c <STEPPER_process_step_mode+0x2a>
    288a:	80 91 67 03 	lds	r24, 0x0367
    288e:	90 91 68 03 	lds	r25, 0x0368
    2892:	01 97       	sbiw	r24, 0x01	; 1
    2894:	90 93 68 03 	sts	0x0368, r25
    2898:	80 93 67 03 	sts	0x0367, r24
    289c:	80 91 87 03 	lds	r24, 0x0387
    28a0:	88 23       	and	r24, r24
    28a2:	d1 f5       	brne	.+116    	; 0x2918 <STEPPER_process_step_mode+0xa6>
    28a4:	20 91 67 03 	lds	r18, 0x0367
    28a8:	30 91 68 03 	lds	r19, 0x0368
    28ac:	80 91 6b 03 	lds	r24, 0x036B
    28b0:	90 91 6c 03 	lds	r25, 0x036C
    28b4:	28 17       	cp	r18, r24
    28b6:	39 07       	cpc	r19, r25
    28b8:	79 f5       	brne	.+94     	; 0x2918 <STEPPER_process_step_mode+0xa6>
    28ba:	80 e0       	ldi	r24, 0x00	; 0
    28bc:	60 e0       	ldi	r22, 0x00	; 0
    28be:	70 e0       	ldi	r23, 0x00	; 0
    28c0:	0e 94 4e 08 	call	0x109c	; 0x109c <STEPPER_set_speed>
    28c4:	81 e0       	ldi	r24, 0x01	; 1
    28c6:	80 93 87 03 	sts	0x0387, r24
    28ca:	08 95       	ret
    28cc:	80 91 69 03 	lds	r24, 0x0369
    28d0:	90 91 6a 03 	lds	r25, 0x036A
    28d4:	89 2b       	or	r24, r25
    28d6:	49 f0       	breq	.+18     	; 0x28ea <STEPPER_process_step_mode+0x78>
    28d8:	80 91 69 03 	lds	r24, 0x0369
    28dc:	90 91 6a 03 	lds	r25, 0x036A
    28e0:	01 97       	sbiw	r24, 0x01	; 1
    28e2:	90 93 6a 03 	sts	0x036A, r25
    28e6:	80 93 69 03 	sts	0x0369, r24
    28ea:	80 91 88 03 	lds	r24, 0x0388
    28ee:	88 23       	and	r24, r24
    28f0:	99 f4       	brne	.+38     	; 0x2918 <STEPPER_process_step_mode+0xa6>
    28f2:	20 91 69 03 	lds	r18, 0x0369
    28f6:	30 91 6a 03 	lds	r19, 0x036A
    28fa:	80 91 6d 03 	lds	r24, 0x036D
    28fe:	90 91 6e 03 	lds	r25, 0x036E
    2902:	28 17       	cp	r18, r24
    2904:	39 07       	cpc	r19, r25
    2906:	41 f4       	brne	.+16     	; 0x2918 <STEPPER_process_step_mode+0xa6>
    2908:	81 e0       	ldi	r24, 0x01	; 1
    290a:	60 e0       	ldi	r22, 0x00	; 0
    290c:	70 e0       	ldi	r23, 0x00	; 0
    290e:	0e 94 4e 08 	call	0x109c	; 0x109c <STEPPER_set_speed>
    2912:	81 e0       	ldi	r24, 0x01	; 1
    2914:	80 93 88 03 	sts	0x0388, r24
    2918:	08 95       	ret

0000291a <TMRSRVC_process>:
    291a:	ff 92       	push	r15
    291c:	0f 93       	push	r16
    291e:	1f 93       	push	r17
    2920:	cf 93       	push	r28
    2922:	df 93       	push	r29
    2924:	80 91 c5 03 	lds	r24, 0x03C5
    2928:	88 23       	and	r24, r24
    292a:	09 f4       	brne	.+2      	; 0x292e <TMRSRVC_process+0x14>
    292c:	59 c0       	rjmp	.+178    	; 0x29e0 <TMRSRVC_process+0xc6>
    292e:	00 91 c6 03 	lds	r16, 0x03C6
    2932:	10 91 c7 03 	lds	r17, 0x03C7
    2936:	f8 01       	movw	r30, r16
    2938:	c0 81       	ld	r28, Z
    293a:	d1 81       	ldd	r29, Z+1	; 0x01
    293c:	8c 81       	ldd	r24, Y+4	; 0x04
    293e:	9d 81       	ldd	r25, Y+5	; 0x05
    2940:	01 97       	sbiw	r24, 0x01	; 1
    2942:	9d 83       	std	Y+5, r25	; 0x05
    2944:	8c 83       	std	Y+4, r24	; 0x04
    2946:	18 16       	cp	r1, r24
    2948:	19 06       	cpc	r1, r25
    294a:	0c f4       	brge	.+2      	; 0x294e <TMRSRVC_process+0x34>
    294c:	49 c0       	rjmp	.+146    	; 0x29e0 <TMRSRVC_process+0xc6>
    294e:	89 81       	ldd	r24, Y+1	; 0x01
    2950:	80 ff       	sbrs	r24, 0
    2952:	05 c0       	rjmp	.+10     	; 0x295e <TMRSRVC_process+0x44>
    2954:	8e 81       	ldd	r24, Y+6	; 0x06
    2956:	88 23       	and	r24, r24
    2958:	11 f4       	brne	.+4      	; 0x295e <TMRSRVC_process+0x44>
    295a:	81 e0       	ldi	r24, 0x01	; 1
    295c:	8e 83       	std	Y+6, r24	; 0x06
    295e:	89 81       	ldd	r24, Y+1	; 0x01
    2960:	81 ff       	sbrs	r24, 1
    2962:	03 c0       	rjmp	.+6      	; 0x296a <TMRSRVC_process+0x50>
    2964:	ef 81       	ldd	r30, Y+7	; 0x07
    2966:	f8 85       	ldd	r31, Y+8	; 0x08
    2968:	09 95       	icall
    296a:	80 91 c5 03 	lds	r24, 0x03C5
    296e:	82 30       	cpi	r24, 0x02	; 2
    2970:	a8 f0       	brcs	.+42     	; 0x299c <TMRSRVC_process+0x82>
    2972:	f8 01       	movw	r30, r16
    2974:	82 81       	ldd	r24, Z+2	; 0x02
    2976:	93 81       	ldd	r25, Z+3	; 0x03
    2978:	90 93 c7 03 	sts	0x03C7, r25
    297c:	80 93 c6 03 	sts	0x03C6, r24
    2980:	13 82       	std	Z+3, r1	; 0x03
    2982:	12 82       	std	Z+2, r1	; 0x02
    2984:	e0 91 00 00 	lds	r30, 0x0000
    2988:	f0 91 01 00 	lds	r31, 0x0001
    298c:	84 81       	ldd	r24, Z+4	; 0x04
    298e:	95 81       	ldd	r25, Z+5	; 0x05
    2990:	18 16       	cp	r1, r24
    2992:	19 06       	cpc	r1, r25
    2994:	3c f0       	brlt	.+14     	; 0x29a4 <TMRSRVC_process+0x8a>
    2996:	ff 24       	eor	r15, r15
    2998:	f3 94       	inc	r15
    299a:	05 c0       	rjmp	.+10     	; 0x29a6 <TMRSRVC_process+0x8c>
    299c:	10 92 c7 03 	sts	0x03C7, r1
    29a0:	10 92 c6 03 	sts	0x03C6, r1
    29a4:	ff 24       	eor	r15, r15
    29a6:	80 91 c5 03 	lds	r24, 0x03C5
    29aa:	81 50       	subi	r24, 0x01	; 1
    29ac:	80 93 c5 03 	sts	0x03C5, r24
    29b0:	80 91 c5 03 	lds	r24, 0x03C5
    29b4:	88 23       	and	r24, r24
    29b6:	11 f4       	brne	.+4      	; 0x29bc <TMRSRVC_process+0xa2>
    29b8:	0e 94 f8 14 	call	0x29f0	; 0x29f0 <TMRSRVC_stop>
    29bc:	89 81       	ldd	r24, Y+1	; 0x01
    29be:	82 ff       	sbrs	r24, 2
    29c0:	08 c0       	rjmp	.+16     	; 0x29d2 <TMRSRVC_process+0xb8>
    29c2:	8a 81       	ldd	r24, Y+2	; 0x02
    29c4:	9b 81       	ldd	r25, Y+3	; 0x03
    29c6:	9d 83       	std	Y+5, r25	; 0x05
    29c8:	8c 83       	std	Y+4, r24	; 0x04
    29ca:	c8 01       	movw	r24, r16
    29cc:	0e 94 7f 10 	call	0x20fe	; 0x20fe <TMRSRVC_insert>
    29d0:	08 c0       	rjmp	.+16     	; 0x29e2 <TMRSRVC_process+0xc8>
    29d2:	c8 01       	movw	r24, r16
    29d4:	0e 94 0b 28 	call	0x5016	; 0x5016 <free>
    29d8:	89 81       	ldd	r24, Y+1	; 0x01
    29da:	8f 7e       	andi	r24, 0xEF	; 239
    29dc:	89 83       	std	Y+1, r24	; 0x01
    29de:	01 c0       	rjmp	.+2      	; 0x29e2 <TMRSRVC_process+0xc8>
    29e0:	ff 24       	eor	r15, r15
    29e2:	8f 2d       	mov	r24, r15
    29e4:	df 91       	pop	r29
    29e6:	cf 91       	pop	r28
    29e8:	1f 91       	pop	r17
    29ea:	0f 91       	pop	r16
    29ec:	ff 90       	pop	r15
    29ee:	08 95       	ret

000029f0 <TMRSRVC_stop>:
    29f0:	10 92 4b 03 	sts	0x034B, r1
    29f4:	08 95       	ret

000029f6 <STEPPER_process_pwm>:
    29f6:	fc 01       	movw	r30, r24
    29f8:	80 91 7c 03 	lds	r24, 0x037C
    29fc:	82 30       	cpi	r24, 0x02	; 2
    29fe:	69 f4       	brne	.+26     	; 0x2a1a <STEPPER_process_pwm+0x24>
    2a00:	80 91 50 03 	lds	r24, 0x0350
    2a04:	91 e0       	ldi	r25, 0x01	; 1
    2a06:	89 27       	eor	r24, r25
    2a08:	80 93 50 03 	sts	0x0350, r24
    2a0c:	88 23       	and	r24, r24
    2a0e:	09 f0       	breq	.+2      	; 0x2a12 <STEPPER_process_pwm+0x1c>
    2a10:	3e c0       	rjmp	.+124    	; 0x2a8e <STEPPER_process_pwm+0x98>
    2a12:	80 81       	ld	r24, Z
    2a14:	83 7e       	andi	r24, 0xE3	; 227
    2a16:	80 83       	st	Z, r24
    2a18:	3a c0       	rjmp	.+116    	; 0x2a8e <STEPPER_process_pwm+0x98>
    2a1a:	80 91 5b 03 	lds	r24, 0x035B
    2a1e:	90 91 5c 03 	lds	r25, 0x035C
    2a22:	c3 97       	sbiw	r24, 0x33	; 51
    2a24:	a4 f5       	brge	.+104    	; 0x2a8e <STEPPER_process_pwm+0x98>
    2a26:	66 23       	and	r22, r22
    2a28:	d1 f0       	breq	.+52     	; 0x2a5e <STEPPER_process_pwm+0x68>
    2a2a:	20 91 5b 03 	lds	r18, 0x035B
    2a2e:	30 91 5c 03 	lds	r19, 0x035C
    2a32:	80 e6       	ldi	r24, 0x60	; 96
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	bc 01       	movw	r22, r24
    2a38:	26 9f       	mul	r18, r22
    2a3a:	c0 01       	movw	r24, r0
    2a3c:	27 9f       	mul	r18, r23
    2a3e:	90 0d       	add	r25, r0
    2a40:	36 9f       	mul	r19, r22
    2a42:	90 0d       	add	r25, r0
    2a44:	11 24       	eor	r1, r1
    2a46:	88 0f       	add	r24, r24
    2a48:	89 2f       	mov	r24, r25
    2a4a:	88 1f       	adc	r24, r24
    2a4c:	99 0b       	sbc	r25, r25
    2a4e:	90 93 70 03 	sts	0x0370, r25
    2a52:	80 93 6f 03 	sts	0x036F, r24
    2a56:	81 e0       	ldi	r24, 0x01	; 1
    2a58:	80 93 4e 03 	sts	0x034E, r24
    2a5c:	18 c0       	rjmp	.+48     	; 0x2a8e <STEPPER_process_pwm+0x98>
    2a5e:	80 91 4e 03 	lds	r24, 0x034E
    2a62:	88 23       	and	r24, r24
    2a64:	a1 f0       	breq	.+40     	; 0x2a8e <STEPPER_process_pwm+0x98>
    2a66:	80 91 6f 03 	lds	r24, 0x036F
    2a6a:	90 91 70 03 	lds	r25, 0x0370
    2a6e:	01 97       	sbiw	r24, 0x01	; 1
    2a70:	90 93 70 03 	sts	0x0370, r25
    2a74:	80 93 6f 03 	sts	0x036F, r24
    2a78:	80 91 6f 03 	lds	r24, 0x036F
    2a7c:	90 91 70 03 	lds	r25, 0x0370
    2a80:	89 2b       	or	r24, r25
    2a82:	29 f4       	brne	.+10     	; 0x2a8e <STEPPER_process_pwm+0x98>
    2a84:	80 81       	ld	r24, Z
    2a86:	83 7e       	andi	r24, 0xE3	; 227
    2a88:	80 83       	st	Z, r24
    2a8a:	10 92 4e 03 	sts	0x034E, r1
    2a8e:	80 91 7d 03 	lds	r24, 0x037D
    2a92:	82 30       	cpi	r24, 0x02	; 2
    2a94:	69 f4       	brne	.+26     	; 0x2ab0 <STEPPER_process_pwm+0xba>
    2a96:	80 91 4f 03 	lds	r24, 0x034F
    2a9a:	91 e0       	ldi	r25, 0x01	; 1
    2a9c:	89 27       	eor	r24, r25
    2a9e:	80 93 4f 03 	sts	0x034F, r24
    2aa2:	88 23       	and	r24, r24
    2aa4:	09 f0       	breq	.+2      	; 0x2aa8 <STEPPER_process_pwm+0xb2>
    2aa6:	3e c0       	rjmp	.+124    	; 0x2b24 <STEPPER_process_pwm+0x12e>
    2aa8:	80 81       	ld	r24, Z
    2aaa:	8f 71       	andi	r24, 0x1F	; 31
    2aac:	80 83       	st	Z, r24
    2aae:	08 95       	ret
    2ab0:	80 91 5d 03 	lds	r24, 0x035D
    2ab4:	90 91 5e 03 	lds	r25, 0x035E
    2ab8:	c3 97       	sbiw	r24, 0x33	; 51
    2aba:	a4 f5       	brge	.+104    	; 0x2b24 <STEPPER_process_pwm+0x12e>
    2abc:	44 23       	and	r20, r20
    2abe:	d1 f0       	breq	.+52     	; 0x2af4 <STEPPER_process_pwm+0xfe>
    2ac0:	20 91 5d 03 	lds	r18, 0x035D
    2ac4:	30 91 5e 03 	lds	r19, 0x035E
    2ac8:	80 e6       	ldi	r24, 0x60	; 96
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	ac 01       	movw	r20, r24
    2ace:	24 9f       	mul	r18, r20
    2ad0:	c0 01       	movw	r24, r0
    2ad2:	25 9f       	mul	r18, r21
    2ad4:	90 0d       	add	r25, r0
    2ad6:	34 9f       	mul	r19, r20
    2ad8:	90 0d       	add	r25, r0
    2ada:	11 24       	eor	r1, r1
    2adc:	88 0f       	add	r24, r24
    2ade:	89 2f       	mov	r24, r25
    2ae0:	88 1f       	adc	r24, r24
    2ae2:	99 0b       	sbc	r25, r25
    2ae4:	90 93 72 03 	sts	0x0372, r25
    2ae8:	80 93 71 03 	sts	0x0371, r24
    2aec:	81 e0       	ldi	r24, 0x01	; 1
    2aee:	80 93 4d 03 	sts	0x034D, r24
    2af2:	08 95       	ret
    2af4:	80 91 4d 03 	lds	r24, 0x034D
    2af8:	88 23       	and	r24, r24
    2afa:	a1 f0       	breq	.+40     	; 0x2b24 <STEPPER_process_pwm+0x12e>
    2afc:	80 91 71 03 	lds	r24, 0x0371
    2b00:	90 91 72 03 	lds	r25, 0x0372
    2b04:	01 97       	sbiw	r24, 0x01	; 1
    2b06:	90 93 72 03 	sts	0x0372, r25
    2b0a:	80 93 71 03 	sts	0x0371, r24
    2b0e:	80 91 71 03 	lds	r24, 0x0371
    2b12:	90 91 72 03 	lds	r25, 0x0372
    2b16:	89 2b       	or	r24, r25
    2b18:	29 f4       	brne	.+10     	; 0x2b24 <STEPPER_process_pwm+0x12e>
    2b1a:	80 81       	ld	r24, Z
    2b1c:	8f 71       	andi	r24, 0x1F	; 31
    2b1e:	80 83       	st	Z, r24
    2b20:	10 92 4d 03 	sts	0x034D, r1
    2b24:	08 95       	ret

00002b26 <Forward_Move>:
// Alexandre van der Ven de Freitas
// Peter Richard Olejnik
// December 18, 2014


void Forward_Move(){
    2b26:	8f 92       	push	r8
    2b28:	af 92       	push	r10
    2b2a:	bf 92       	push	r11
    2b2c:	cf 92       	push	r12
    2b2e:	ef 92       	push	r14
    2b30:	ff 92       	push	r15
    2b32:	0f 93       	push	r16
    2b34:	1f 93       	push	r17
	// Forward Movement
	STEPPER_move_rn(STEPPER_BOTH,
    2b36:	1f 92       	push	r1
    2b38:	1f 92       	push	r1
    2b3a:	1f 92       	push	r1
    2b3c:	81 e0       	ldi	r24, 0x01	; 1
    2b3e:	8f 93       	push	r24
    2b40:	80 e9       	ldi	r24, 0x90	; 144
    2b42:	8f 93       	push	r24
    2b44:	1f 92       	push	r1
    2b46:	88 ec       	ldi	r24, 0xC8	; 200
    2b48:	8f 93       	push	r24
    2b4a:	1f 92       	push	r1
    2b4c:	1f 92       	push	r1
    2b4e:	81 2c       	mov	r8, r1
    2b50:	a1 2c       	mov	r10, r1
    2b52:	b1 2c       	mov	r11, r1
    2b54:	c1 2c       	mov	r12, r1
    2b56:	0f 2e       	mov	r0, r31
    2b58:	f0 e9       	ldi	r31, 0x90	; 144
    2b5a:	ef 2e       	mov	r14, r31
    2b5c:	ff 24       	eor	r15, r15
    2b5e:	f3 94       	inc	r15
    2b60:	f0 2d       	mov	r31, r0
    2b62:	08 ec       	ldi	r16, 0xC8	; 200
    2b64:	10 e0       	ldi	r17, 0x00	; 0
    2b66:	20 e0       	ldi	r18, 0x00	; 0
    2b68:	30 e0       	ldi	r19, 0x00	; 0
    2b6a:	40 e0       	ldi	r20, 0x00	; 0
    2b6c:	62 e0       	ldi	r22, 0x02	; 2
    2b6e:	82 e0       	ldi	r24, 0x02	; 2
    2b70:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_FWD, 200, 400,	//Left
		STEPPER_FWD, 200, 400);	//Right
	TMRSRVC_delay(1000); //2 Sec duration
    2b74:	88 ee       	ldi	r24, 0xE8	; 232
    2b76:	93 e0       	ldi	r25, 0x03	; 3
    2b78:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    2b7c:	60 e0       	ldi	r22, 0x00	; 0
    2b7e:	82 e0       	ldi	r24, 0x02	; 2
    2b80:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
	LCD_clear();
    2b84:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
	LCD_printf("Moving Forward...");
    2b88:	87 e2       	ldi	r24, 0x27	; 39
    2b8a:	91 e0       	ldi	r25, 0x01	; 1
    2b8c:	9f 93       	push	r25
    2b8e:	8f 93       	push	r24
    2b90:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    2b94:	8d b7       	in	r24, 0x3d	; 61
    2b96:	9e b7       	in	r25, 0x3e	; 62
    2b98:	0b 96       	adiw	r24, 0x0b	; 11
    2b9a:	0f b6       	in	r0, 0x3f	; 63
    2b9c:	f8 94       	cli
    2b9e:	9e bf       	out	0x3e, r25	; 62
    2ba0:	0f be       	out	0x3f, r0	; 63
    2ba2:	8d bf       	out	0x3d, r24	; 61
}
    2ba4:	1f 91       	pop	r17
    2ba6:	0f 91       	pop	r16
    2ba8:	ff 90       	pop	r15
    2baa:	ef 90       	pop	r14
    2bac:	cf 90       	pop	r12
    2bae:	bf 90       	pop	r11
    2bb0:	af 90       	pop	r10
    2bb2:	8f 90       	pop	r8
    2bb4:	08 95       	ret

00002bb6 <Backward_Move>:

void Backward_Move(){
    2bb6:	8f 92       	push	r8
    2bb8:	af 92       	push	r10
    2bba:	bf 92       	push	r11
    2bbc:	cf 92       	push	r12
    2bbe:	ef 92       	push	r14
    2bc0:	ff 92       	push	r15
    2bc2:	0f 93       	push	r16
    2bc4:	1f 93       	push	r17
	// Backward Movement
	STEPPER_move_rn(STEPPER_BOTH,
    2bc6:	1f 92       	push	r1
    2bc8:	1f 92       	push	r1
    2bca:	1f 92       	push	r1
    2bcc:	81 e0       	ldi	r24, 0x01	; 1
    2bce:	8f 93       	push	r24
    2bd0:	80 e9       	ldi	r24, 0x90	; 144
    2bd2:	8f 93       	push	r24
    2bd4:	1f 92       	push	r1
    2bd6:	88 ec       	ldi	r24, 0xC8	; 200
    2bd8:	8f 93       	push	r24
    2bda:	1f 92       	push	r1
    2bdc:	1f 92       	push	r1
    2bde:	88 24       	eor	r8, r8
    2be0:	83 94       	inc	r8
    2be2:	a1 2c       	mov	r10, r1
    2be4:	b1 2c       	mov	r11, r1
    2be6:	c1 2c       	mov	r12, r1
    2be8:	0f 2e       	mov	r0, r31
    2bea:	f0 e9       	ldi	r31, 0x90	; 144
    2bec:	ef 2e       	mov	r14, r31
    2bee:	ff 24       	eor	r15, r15
    2bf0:	f3 94       	inc	r15
    2bf2:	f0 2d       	mov	r31, r0
    2bf4:	08 ec       	ldi	r16, 0xC8	; 200
    2bf6:	10 e0       	ldi	r17, 0x00	; 0
    2bf8:	20 e0       	ldi	r18, 0x00	; 0
    2bfa:	30 e0       	ldi	r19, 0x00	; 0
    2bfc:	41 e0       	ldi	r20, 0x01	; 1
    2bfe:	62 e0       	ldi	r22, 0x02	; 2
    2c00:	82 e0       	ldi	r24, 0x02	; 2
    2c02:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_REV, 200, 400,	//Left
		STEPPER_REV, 200, 400);	//Right
	TMRSRVC_delay(1000); //2 Sec duration
    2c06:	88 ee       	ldi	r24, 0xE8	; 232
    2c08:	93 e0       	ldi	r25, 0x03	; 3
    2c0a:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    2c0e:	60 e0       	ldi	r22, 0x00	; 0
    2c10:	82 e0       	ldi	r24, 0x02	; 2
    2c12:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
	LCD_clear();
    2c16:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
	LCD_printf("Moving Backward...");
    2c1a:	89 e3       	ldi	r24, 0x39	; 57
    2c1c:	91 e0       	ldi	r25, 0x01	; 1
    2c1e:	9f 93       	push	r25
    2c20:	8f 93       	push	r24
    2c22:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    2c26:	8d b7       	in	r24, 0x3d	; 61
    2c28:	9e b7       	in	r25, 0x3e	; 62
    2c2a:	0b 96       	adiw	r24, 0x0b	; 11
    2c2c:	0f b6       	in	r0, 0x3f	; 63
    2c2e:	f8 94       	cli
    2c30:	9e bf       	out	0x3e, r25	; 62
    2c32:	0f be       	out	0x3f, r0	; 63
    2c34:	8d bf       	out	0x3d, r24	; 61
}
    2c36:	1f 91       	pop	r17
    2c38:	0f 91       	pop	r16
    2c3a:	ff 90       	pop	r15
    2c3c:	ef 90       	pop	r14
    2c3e:	cf 90       	pop	r12
    2c40:	bf 90       	pop	r11
    2c42:	af 90       	pop	r10
    2c44:	8f 90       	pop	r8
    2c46:	08 95       	ret

00002c48 <Hard_Right>:

void Hard_Right(){
    2c48:	8f 92       	push	r8
    2c4a:	af 92       	push	r10
    2c4c:	bf 92       	push	r11
    2c4e:	cf 92       	push	r12
    2c50:	ef 92       	push	r14
    2c52:	ff 92       	push	r15
    2c54:	0f 93       	push	r16
    2c56:	1f 93       	push	r17
    2c58:	cf 93       	push	r28
	// Excecutes a 90 degree turn
	STEPPER_move_stwt(STEPPER_BOTH,
    2c5a:	1f 92       	push	r1
    2c5c:	1f 92       	push	r1
    2c5e:	1f 92       	push	r1
    2c60:	83 e0       	ldi	r24, 0x03	; 3
    2c62:	8f 93       	push	r24
    2c64:	80 e2       	ldi	r24, 0x20	; 32
    2c66:	8f 93       	push	r24
    2c68:	1f 92       	push	r1
    2c6a:	c8 ec       	ldi	r28, 0xC8	; 200
    2c6c:	cf 93       	push	r28
    2c6e:	1f 92       	push	r1
    2c70:	82 e8       	ldi	r24, 0x82	; 130
    2c72:	8f 93       	push	r24
    2c74:	88 24       	eor	r8, r8
    2c76:	83 94       	inc	r8
    2c78:	a1 2c       	mov	r10, r1
    2c7a:	b1 2c       	mov	r11, r1
    2c7c:	c1 2c       	mov	r12, r1
    2c7e:	0f 2e       	mov	r0, r31
    2c80:	f0 e2       	ldi	r31, 0x20	; 32
    2c82:	ef 2e       	mov	r14, r31
    2c84:	f3 e0       	ldi	r31, 0x03	; 3
    2c86:	ff 2e       	mov	r15, r31
    2c88:	f0 2d       	mov	r31, r0
    2c8a:	08 ec       	ldi	r16, 0xC8	; 200
    2c8c:	10 e0       	ldi	r17, 0x00	; 0
    2c8e:	22 e8       	ldi	r18, 0x82	; 130
    2c90:	30 e0       	ldi	r19, 0x00	; 0
    2c92:	40 e0       	ldi	r20, 0x00	; 0
    2c94:	62 e0       	ldi	r22, 0x02	; 2
    2c96:	80 e0       	ldi	r24, 0x00	; 0
    2c98:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_FWD, 130, 200, 800, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_REV, 130, 200, 800, STEPPER_BRK_OFF);	//Right wheel
	// Forward Movement
	STEPPER_move_rn(STEPPER_BOTH,
    2c9c:	1f 92       	push	r1
    2c9e:	1f 92       	push	r1
    2ca0:	1f 92       	push	r1
    2ca2:	81 e0       	ldi	r24, 0x01	; 1
    2ca4:	8f 93       	push	r24
    2ca6:	80 e9       	ldi	r24, 0x90	; 144
    2ca8:	8f 93       	push	r24
    2caa:	1f 92       	push	r1
    2cac:	cf 93       	push	r28
    2cae:	1f 92       	push	r1
    2cb0:	1f 92       	push	r1
    2cb2:	81 2c       	mov	r8, r1
    2cb4:	0f 2e       	mov	r0, r31
    2cb6:	f0 e9       	ldi	r31, 0x90	; 144
    2cb8:	ef 2e       	mov	r14, r31
    2cba:	ff 24       	eor	r15, r15
    2cbc:	f3 94       	inc	r15
    2cbe:	f0 2d       	mov	r31, r0
    2cc0:	20 e0       	ldi	r18, 0x00	; 0
    2cc2:	30 e0       	ldi	r19, 0x00	; 0
    2cc4:	40 e0       	ldi	r20, 0x00	; 0
    2cc6:	62 e0       	ldi	r22, 0x02	; 2
    2cc8:	82 e0       	ldi	r24, 0x02	; 2
    2cca:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_FWD, 200, 400,	//Left
		STEPPER_FWD, 200, 400);	//Right
	TMRSRVC_delay(1000); //2 Sec duration
    2cce:	88 ee       	ldi	r24, 0xE8	; 232
    2cd0:	93 e0       	ldi	r25, 0x03	; 3
    2cd2:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    2cd6:	60 e0       	ldi	r22, 0x00	; 0
    2cd8:	82 e0       	ldi	r24, 0x02	; 2
    2cda:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
	LCD_clear();
    2cde:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
	LCD_printf("Hard Right...");
    2ce2:	8c e4       	ldi	r24, 0x4C	; 76
    2ce4:	91 e0       	ldi	r25, 0x01	; 1
    2ce6:	9f 93       	push	r25
    2ce8:	8f 93       	push	r24
    2cea:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    2cee:	8d b7       	in	r24, 0x3d	; 61
    2cf0:	9e b7       	in	r25, 0x3e	; 62
    2cf2:	44 96       	adiw	r24, 0x14	; 20
    2cf4:	0f b6       	in	r0, 0x3f	; 63
    2cf6:	f8 94       	cli
    2cf8:	9e bf       	out	0x3e, r25	; 62
    2cfa:	0f be       	out	0x3f, r0	; 63
    2cfc:	8d bf       	out	0x3d, r24	; 61
}
    2cfe:	cf 91       	pop	r28
    2d00:	1f 91       	pop	r17
    2d02:	0f 91       	pop	r16
    2d04:	ff 90       	pop	r15
    2d06:	ef 90       	pop	r14
    2d08:	cf 90       	pop	r12
    2d0a:	bf 90       	pop	r11
    2d0c:	af 90       	pop	r10
    2d0e:	8f 90       	pop	r8
    2d10:	08 95       	ret

00002d12 <Hard_Left>:

void Hard_Left(){
    2d12:	8f 92       	push	r8
    2d14:	af 92       	push	r10
    2d16:	bf 92       	push	r11
    2d18:	cf 92       	push	r12
    2d1a:	ef 92       	push	r14
    2d1c:	ff 92       	push	r15
    2d1e:	0f 93       	push	r16
    2d20:	1f 93       	push	r17
    2d22:	cf 93       	push	r28
	// Excecutes a 90 degree turn
	STEPPER_move_stwt(STEPPER_BOTH,
    2d24:	1f 92       	push	r1
    2d26:	1f 92       	push	r1
    2d28:	1f 92       	push	r1
    2d2a:	83 e0       	ldi	r24, 0x03	; 3
    2d2c:	8f 93       	push	r24
    2d2e:	80 e2       	ldi	r24, 0x20	; 32
    2d30:	8f 93       	push	r24
    2d32:	1f 92       	push	r1
    2d34:	c8 ec       	ldi	r28, 0xC8	; 200
    2d36:	cf 93       	push	r28
    2d38:	1f 92       	push	r1
    2d3a:	82 e8       	ldi	r24, 0x82	; 130
    2d3c:	8f 93       	push	r24
    2d3e:	81 2c       	mov	r8, r1
    2d40:	a1 2c       	mov	r10, r1
    2d42:	b1 2c       	mov	r11, r1
    2d44:	c1 2c       	mov	r12, r1
    2d46:	0f 2e       	mov	r0, r31
    2d48:	f0 e2       	ldi	r31, 0x20	; 32
    2d4a:	ef 2e       	mov	r14, r31
    2d4c:	f3 e0       	ldi	r31, 0x03	; 3
    2d4e:	ff 2e       	mov	r15, r31
    2d50:	f0 2d       	mov	r31, r0
    2d52:	08 ec       	ldi	r16, 0xC8	; 200
    2d54:	10 e0       	ldi	r17, 0x00	; 0
    2d56:	22 e8       	ldi	r18, 0x82	; 130
    2d58:	30 e0       	ldi	r19, 0x00	; 0
    2d5a:	41 e0       	ldi	r20, 0x01	; 1
    2d5c:	62 e0       	ldi	r22, 0x02	; 2
    2d5e:	80 e0       	ldi	r24, 0x00	; 0
    2d60:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_REV, 130, 200, 800, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_FWD, 130, 200, 800, STEPPER_BRK_OFF);	//Right wheel
	// Forward Movement
	STEPPER_move_rn(STEPPER_BOTH,
    2d64:	1f 92       	push	r1
    2d66:	1f 92       	push	r1
    2d68:	1f 92       	push	r1
    2d6a:	81 e0       	ldi	r24, 0x01	; 1
    2d6c:	8f 93       	push	r24
    2d6e:	80 e9       	ldi	r24, 0x90	; 144
    2d70:	8f 93       	push	r24
    2d72:	1f 92       	push	r1
    2d74:	cf 93       	push	r28
    2d76:	1f 92       	push	r1
    2d78:	1f 92       	push	r1
    2d7a:	0f 2e       	mov	r0, r31
    2d7c:	f0 e9       	ldi	r31, 0x90	; 144
    2d7e:	ef 2e       	mov	r14, r31
    2d80:	ff 24       	eor	r15, r15
    2d82:	f3 94       	inc	r15
    2d84:	f0 2d       	mov	r31, r0
    2d86:	20 e0       	ldi	r18, 0x00	; 0
    2d88:	30 e0       	ldi	r19, 0x00	; 0
    2d8a:	40 e0       	ldi	r20, 0x00	; 0
    2d8c:	62 e0       	ldi	r22, 0x02	; 2
    2d8e:	82 e0       	ldi	r24, 0x02	; 2
    2d90:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_FWD, 200, 400,	//Left
		STEPPER_FWD, 200, 400);	//Right
	TMRSRVC_delay(1000); //2 Sec duration
    2d94:	88 ee       	ldi	r24, 0xE8	; 232
    2d96:	93 e0       	ldi	r25, 0x03	; 3
    2d98:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    2d9c:	60 e0       	ldi	r22, 0x00	; 0
    2d9e:	82 e0       	ldi	r24, 0x02	; 2
    2da0:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
	LCD_clear();
    2da4:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
	LCD_printf("Hard Left...");
    2da8:	8a e5       	ldi	r24, 0x5A	; 90
    2daa:	91 e0       	ldi	r25, 0x01	; 1
    2dac:	9f 93       	push	r25
    2dae:	8f 93       	push	r24
    2db0:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    2db4:	8d b7       	in	r24, 0x3d	; 61
    2db6:	9e b7       	in	r25, 0x3e	; 62
    2db8:	44 96       	adiw	r24, 0x14	; 20
    2dba:	0f b6       	in	r0, 0x3f	; 63
    2dbc:	f8 94       	cli
    2dbe:	9e bf       	out	0x3e, r25	; 62
    2dc0:	0f be       	out	0x3f, r0	; 63
    2dc2:	8d bf       	out	0x3d, r24	; 61
}
    2dc4:	cf 91       	pop	r28
    2dc6:	1f 91       	pop	r17
    2dc8:	0f 91       	pop	r16
    2dca:	ff 90       	pop	r15
    2dcc:	ef 90       	pop	r14
    2dce:	cf 90       	pop	r12
    2dd0:	bf 90       	pop	r11
    2dd2:	af 90       	pop	r10
    2dd4:	8f 90       	pop	r8
    2dd6:	08 95       	ret

00002dd8 <Soft_Forward_Right>:

void Soft_Forward_Right(){
    2dd8:	8f 92       	push	r8
    2dda:	af 92       	push	r10
    2ddc:	bf 92       	push	r11
    2dde:	cf 92       	push	r12
    2de0:	ef 92       	push	r14
    2de2:	ff 92       	push	r15
    2de4:	0f 93       	push	r16
    2de6:	1f 93       	push	r17
	// Forward Movement
	STEPPER_move_rn(STEPPER_BOTH,
    2de8:	1f 92       	push	r1
    2dea:	1f 92       	push	r1
    2dec:	1f 92       	push	r1
    2dee:	81 e0       	ldi	r24, 0x01	; 1
    2df0:	8f 93       	push	r24
    2df2:	80 e9       	ldi	r24, 0x90	; 144
    2df4:	8f 93       	push	r24
    2df6:	1f 92       	push	r1
    2df8:	84 e6       	ldi	r24, 0x64	; 100
    2dfa:	8f 93       	push	r24
    2dfc:	1f 92       	push	r1
    2dfe:	1f 92       	push	r1
    2e00:	81 2c       	mov	r8, r1
    2e02:	a1 2c       	mov	r10, r1
    2e04:	b1 2c       	mov	r11, r1
    2e06:	c1 2c       	mov	r12, r1
    2e08:	0f 2e       	mov	r0, r31
    2e0a:	f0 e9       	ldi	r31, 0x90	; 144
    2e0c:	ef 2e       	mov	r14, r31
    2e0e:	ff 24       	eor	r15, r15
    2e10:	f3 94       	inc	r15
    2e12:	f0 2d       	mov	r31, r0
    2e14:	08 ec       	ldi	r16, 0xC8	; 200
    2e16:	10 e0       	ldi	r17, 0x00	; 0
    2e18:	20 e0       	ldi	r18, 0x00	; 0
    2e1a:	30 e0       	ldi	r19, 0x00	; 0
    2e1c:	40 e0       	ldi	r20, 0x00	; 0
    2e1e:	62 e0       	ldi	r22, 0x02	; 2
    2e20:	82 e0       	ldi	r24, 0x02	; 2
    2e22:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_FWD, 200, 400,	//Left
		STEPPER_FWD, 100, 400);	//Right
	TMRSRVC_delay(1000); //2 Sec duration
    2e26:	88 ee       	ldi	r24, 0xE8	; 232
    2e28:	93 e0       	ldi	r25, 0x03	; 3
    2e2a:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    2e2e:	60 e0       	ldi	r22, 0x00	; 0
    2e30:	82 e0       	ldi	r24, 0x02	; 2
    2e32:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
	LCD_clear();
    2e36:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
	LCD_printf("Soft Forward Right...");
    2e3a:	87 e6       	ldi	r24, 0x67	; 103
    2e3c:	91 e0       	ldi	r25, 0x01	; 1
    2e3e:	9f 93       	push	r25
    2e40:	8f 93       	push	r24
    2e42:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    2e46:	8d b7       	in	r24, 0x3d	; 61
    2e48:	9e b7       	in	r25, 0x3e	; 62
    2e4a:	0b 96       	adiw	r24, 0x0b	; 11
    2e4c:	0f b6       	in	r0, 0x3f	; 63
    2e4e:	f8 94       	cli
    2e50:	9e bf       	out	0x3e, r25	; 62
    2e52:	0f be       	out	0x3f, r0	; 63
    2e54:	8d bf       	out	0x3d, r24	; 61
}
    2e56:	1f 91       	pop	r17
    2e58:	0f 91       	pop	r16
    2e5a:	ff 90       	pop	r15
    2e5c:	ef 90       	pop	r14
    2e5e:	cf 90       	pop	r12
    2e60:	bf 90       	pop	r11
    2e62:	af 90       	pop	r10
    2e64:	8f 90       	pop	r8
    2e66:	08 95       	ret

00002e68 <Soft_Forward_Left>:

void Soft_Forward_Left(){
    2e68:	8f 92       	push	r8
    2e6a:	af 92       	push	r10
    2e6c:	bf 92       	push	r11
    2e6e:	cf 92       	push	r12
    2e70:	ef 92       	push	r14
    2e72:	ff 92       	push	r15
    2e74:	0f 93       	push	r16
    2e76:	1f 93       	push	r17
	// Forward Movement
	STEPPER_move_rn(STEPPER_BOTH,
    2e78:	1f 92       	push	r1
    2e7a:	1f 92       	push	r1
    2e7c:	1f 92       	push	r1
    2e7e:	81 e0       	ldi	r24, 0x01	; 1
    2e80:	8f 93       	push	r24
    2e82:	80 e9       	ldi	r24, 0x90	; 144
    2e84:	8f 93       	push	r24
    2e86:	1f 92       	push	r1
    2e88:	88 ec       	ldi	r24, 0xC8	; 200
    2e8a:	8f 93       	push	r24
    2e8c:	1f 92       	push	r1
    2e8e:	1f 92       	push	r1
    2e90:	81 2c       	mov	r8, r1
    2e92:	a1 2c       	mov	r10, r1
    2e94:	b1 2c       	mov	r11, r1
    2e96:	c1 2c       	mov	r12, r1
    2e98:	0f 2e       	mov	r0, r31
    2e9a:	f0 e9       	ldi	r31, 0x90	; 144
    2e9c:	ef 2e       	mov	r14, r31
    2e9e:	ff 24       	eor	r15, r15
    2ea0:	f3 94       	inc	r15
    2ea2:	f0 2d       	mov	r31, r0
    2ea4:	04 e6       	ldi	r16, 0x64	; 100
    2ea6:	10 e0       	ldi	r17, 0x00	; 0
    2ea8:	20 e0       	ldi	r18, 0x00	; 0
    2eaa:	30 e0       	ldi	r19, 0x00	; 0
    2eac:	40 e0       	ldi	r20, 0x00	; 0
    2eae:	62 e0       	ldi	r22, 0x02	; 2
    2eb0:	82 e0       	ldi	r24, 0x02	; 2
    2eb2:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_FWD, 100, 400,	//Left
		STEPPER_FWD, 200, 400);	//Right
	TMRSRVC_delay(1000); //2 Sec duration
    2eb6:	88 ee       	ldi	r24, 0xE8	; 232
    2eb8:	93 e0       	ldi	r25, 0x03	; 3
    2eba:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    2ebe:	60 e0       	ldi	r22, 0x00	; 0
    2ec0:	82 e0       	ldi	r24, 0x02	; 2
    2ec2:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
	LCD_clear();
    2ec6:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
	LCD_printf("Soft Forward Left...");
    2eca:	8d e7       	ldi	r24, 0x7D	; 125
    2ecc:	91 e0       	ldi	r25, 0x01	; 1
    2ece:	9f 93       	push	r25
    2ed0:	8f 93       	push	r24
    2ed2:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    2ed6:	8d b7       	in	r24, 0x3d	; 61
    2ed8:	9e b7       	in	r25, 0x3e	; 62
    2eda:	0b 96       	adiw	r24, 0x0b	; 11
    2edc:	0f b6       	in	r0, 0x3f	; 63
    2ede:	f8 94       	cli
    2ee0:	9e bf       	out	0x3e, r25	; 62
    2ee2:	0f be       	out	0x3f, r0	; 63
    2ee4:	8d bf       	out	0x3d, r24	; 61
}
    2ee6:	1f 91       	pop	r17
    2ee8:	0f 91       	pop	r16
    2eea:	ff 90       	pop	r15
    2eec:	ef 90       	pop	r14
    2eee:	cf 90       	pop	r12
    2ef0:	bf 90       	pop	r11
    2ef2:	af 90       	pop	r10
    2ef4:	8f 90       	pop	r8
    2ef6:	08 95       	ret

00002ef8 <Soft_Backward_Right>:

void Soft_Backward_Right(){
    2ef8:	8f 92       	push	r8
    2efa:	af 92       	push	r10
    2efc:	bf 92       	push	r11
    2efe:	cf 92       	push	r12
    2f00:	ef 92       	push	r14
    2f02:	ff 92       	push	r15
    2f04:	0f 93       	push	r16
    2f06:	1f 93       	push	r17
	// Forward Movement
	STEPPER_move_rn(STEPPER_BOTH,
    2f08:	1f 92       	push	r1
    2f0a:	1f 92       	push	r1
    2f0c:	1f 92       	push	r1
    2f0e:	81 e0       	ldi	r24, 0x01	; 1
    2f10:	8f 93       	push	r24
    2f12:	80 e9       	ldi	r24, 0x90	; 144
    2f14:	8f 93       	push	r24
    2f16:	1f 92       	push	r1
    2f18:	84 e6       	ldi	r24, 0x64	; 100
    2f1a:	8f 93       	push	r24
    2f1c:	1f 92       	push	r1
    2f1e:	1f 92       	push	r1
    2f20:	88 24       	eor	r8, r8
    2f22:	83 94       	inc	r8
    2f24:	a1 2c       	mov	r10, r1
    2f26:	b1 2c       	mov	r11, r1
    2f28:	c1 2c       	mov	r12, r1
    2f2a:	0f 2e       	mov	r0, r31
    2f2c:	f0 e9       	ldi	r31, 0x90	; 144
    2f2e:	ef 2e       	mov	r14, r31
    2f30:	ff 24       	eor	r15, r15
    2f32:	f3 94       	inc	r15
    2f34:	f0 2d       	mov	r31, r0
    2f36:	08 ec       	ldi	r16, 0xC8	; 200
    2f38:	10 e0       	ldi	r17, 0x00	; 0
    2f3a:	20 e0       	ldi	r18, 0x00	; 0
    2f3c:	30 e0       	ldi	r19, 0x00	; 0
    2f3e:	41 e0       	ldi	r20, 0x01	; 1
    2f40:	62 e0       	ldi	r22, 0x02	; 2
    2f42:	82 e0       	ldi	r24, 0x02	; 2
    2f44:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_REV, 200, 400,	//Left
		STEPPER_REV, 100, 400);	//Right
	TMRSRVC_delay(1000); //2 Sec duration
    2f48:	88 ee       	ldi	r24, 0xE8	; 232
    2f4a:	93 e0       	ldi	r25, 0x03	; 3
    2f4c:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    2f50:	60 e0       	ldi	r22, 0x00	; 0
    2f52:	82 e0       	ldi	r24, 0x02	; 2
    2f54:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
	LCD_clear();
    2f58:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
	LCD_printf("Soft Backward Right...");
    2f5c:	82 e9       	ldi	r24, 0x92	; 146
    2f5e:	91 e0       	ldi	r25, 0x01	; 1
    2f60:	9f 93       	push	r25
    2f62:	8f 93       	push	r24
    2f64:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    2f68:	8d b7       	in	r24, 0x3d	; 61
    2f6a:	9e b7       	in	r25, 0x3e	; 62
    2f6c:	0b 96       	adiw	r24, 0x0b	; 11
    2f6e:	0f b6       	in	r0, 0x3f	; 63
    2f70:	f8 94       	cli
    2f72:	9e bf       	out	0x3e, r25	; 62
    2f74:	0f be       	out	0x3f, r0	; 63
    2f76:	8d bf       	out	0x3d, r24	; 61
}
    2f78:	1f 91       	pop	r17
    2f7a:	0f 91       	pop	r16
    2f7c:	ff 90       	pop	r15
    2f7e:	ef 90       	pop	r14
    2f80:	cf 90       	pop	r12
    2f82:	bf 90       	pop	r11
    2f84:	af 90       	pop	r10
    2f86:	8f 90       	pop	r8
    2f88:	08 95       	ret

00002f8a <Soft_Backward_Left>:

void Soft_Backward_Left(){
    2f8a:	8f 92       	push	r8
    2f8c:	af 92       	push	r10
    2f8e:	bf 92       	push	r11
    2f90:	cf 92       	push	r12
    2f92:	ef 92       	push	r14
    2f94:	ff 92       	push	r15
    2f96:	0f 93       	push	r16
    2f98:	1f 93       	push	r17
	// Forward Movement
	STEPPER_move_rn(STEPPER_BOTH,
    2f9a:	1f 92       	push	r1
    2f9c:	1f 92       	push	r1
    2f9e:	1f 92       	push	r1
    2fa0:	81 e0       	ldi	r24, 0x01	; 1
    2fa2:	8f 93       	push	r24
    2fa4:	80 e9       	ldi	r24, 0x90	; 144
    2fa6:	8f 93       	push	r24
    2fa8:	1f 92       	push	r1
    2faa:	88 ec       	ldi	r24, 0xC8	; 200
    2fac:	8f 93       	push	r24
    2fae:	1f 92       	push	r1
    2fb0:	1f 92       	push	r1
    2fb2:	88 24       	eor	r8, r8
    2fb4:	83 94       	inc	r8
    2fb6:	a1 2c       	mov	r10, r1
    2fb8:	b1 2c       	mov	r11, r1
    2fba:	c1 2c       	mov	r12, r1
    2fbc:	0f 2e       	mov	r0, r31
    2fbe:	f0 e9       	ldi	r31, 0x90	; 144
    2fc0:	ef 2e       	mov	r14, r31
    2fc2:	ff 24       	eor	r15, r15
    2fc4:	f3 94       	inc	r15
    2fc6:	f0 2d       	mov	r31, r0
    2fc8:	04 e6       	ldi	r16, 0x64	; 100
    2fca:	10 e0       	ldi	r17, 0x00	; 0
    2fcc:	20 e0       	ldi	r18, 0x00	; 0
    2fce:	30 e0       	ldi	r19, 0x00	; 0
    2fd0:	41 e0       	ldi	r20, 0x01	; 1
    2fd2:	62 e0       	ldi	r22, 0x02	; 2
    2fd4:	82 e0       	ldi	r24, 0x02	; 2
    2fd6:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_REV, 100, 400,	//Left
		STEPPER_REV, 200, 400);	//Right
	TMRSRVC_delay(1000); //2 Sec duration
    2fda:	88 ee       	ldi	r24, 0xE8	; 232
    2fdc:	93 e0       	ldi	r25, 0x03	; 3
    2fde:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    2fe2:	60 e0       	ldi	r22, 0x00	; 0
    2fe4:	82 e0       	ldi	r24, 0x02	; 2
    2fe6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
	LCD_clear();
    2fea:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
	LCD_printf("Soft Backward Left...");
    2fee:	89 ea       	ldi	r24, 0xA9	; 169
    2ff0:	91 e0       	ldi	r25, 0x01	; 1
    2ff2:	9f 93       	push	r25
    2ff4:	8f 93       	push	r24
    2ff6:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    2ffa:	8d b7       	in	r24, 0x3d	; 61
    2ffc:	9e b7       	in	r25, 0x3e	; 62
    2ffe:	0b 96       	adiw	r24, 0x0b	; 11
    3000:	0f b6       	in	r0, 0x3f	; 63
    3002:	f8 94       	cli
    3004:	9e bf       	out	0x3e, r25	; 62
    3006:	0f be       	out	0x3f, r0	; 63
    3008:	8d bf       	out	0x3d, r24	; 61
}
    300a:	1f 91       	pop	r17
    300c:	0f 91       	pop	r16
    300e:	ff 90       	pop	r15
    3010:	ef 90       	pop	r14
    3012:	cf 90       	pop	r12
    3014:	bf 90       	pop	r11
    3016:	af 90       	pop	r10
    3018:	8f 90       	pop	r8
    301a:	08 95       	ret

0000301c <Cry>:

void Cry(){
	// Capek is confused and crys from frustration
	SPKR_play_beep(250, 500, 50);//500 Hz for 250 ms
    301c:	22 e3       	ldi	r18, 0x32	; 50
    301e:	30 e0       	ldi	r19, 0x00	; 0
    3020:	44 ef       	ldi	r20, 0xF4	; 244
    3022:	51 e0       	ldi	r21, 0x01	; 1
    3024:	6a ef       	ldi	r22, 0xFA	; 250
    3026:	70 e0       	ldi	r23, 0x00	; 0
    3028:	80 e0       	ldi	r24, 0x00	; 0
    302a:	90 e0       	ldi	r25, 0x00	; 0
    302c:	0e 94 d5 05 	call	0xbaa	; 0xbaa <SPKR_play_beep>
    3030:	08 95       	ret

00003032 <Movement_Selector_Excecutor>:
/* This header defines a function using switch case logic provided by the input in order to select what movement should the robot take when a given set of sensors detect barriers.*/
// Alexandre van der Ven de Freitas
// Peter Richard Olejnik
// December 18, 2014

void Movement_Selector_Excecutor(signed char FSS, signed char BSS, signed char RSS, signed char LSS, signed char TS){
    3032:	0f 93       	push	r16
	RSS = Right Sensor State
	LSS = Left Sensor State
	TS = Triggered Sensors, which is the total number of sensors which have exceded the IR sensor threashhold
*/

	switch(TS){
    3034:	02 30       	cpi	r16, 0x02	; 2
    3036:	69 f1       	breq	.+90     	; 0x3092 <Movement_Selector_Excecutor+0x60>
    3038:	1c f4       	brge	.+6      	; 0x3040 <Movement_Selector_Excecutor+0xe>
    303a:	01 30       	cpi	r16, 0x01	; 1
    303c:	41 f0       	breq	.+16     	; 0x304e <Movement_Selector_Excecutor+0x1c>
    303e:	79 c0       	rjmp	.+242    	; 0x3132 <Movement_Selector_Excecutor+0x100>
    3040:	03 30       	cpi	r16, 0x03	; 3
    3042:	09 f4       	brne	.+2      	; 0x3046 <Movement_Selector_Excecutor+0x14>
    3044:	56 c0       	rjmp	.+172    	; 0x30f2 <Movement_Selector_Excecutor+0xc0>
    3046:	04 30       	cpi	r16, 0x04	; 4
    3048:	09 f4       	brne	.+2      	; 0x304c <Movement_Selector_Excecutor+0x1a>
    304a:	71 c0       	rjmp	.+226    	; 0x312e <Movement_Selector_Excecutor+0xfc>
    304c:	72 c0       	rjmp	.+228    	; 0x3132 <Movement_Selector_Excecutor+0x100>
		case 1: // If only one sensor is triggered
			if ((FSS == 1) && (BSS == 0) && (RSS == 0) &&(LSS == 0)){
    304e:	81 30       	cpi	r24, 0x01	; 1
    3050:	49 f4       	brne	.+18     	; 0x3064 <Movement_Selector_Excecutor+0x32>
    3052:	61 11       	cpse	r22, r1
    3054:	1b c0       	rjmp	.+54     	; 0x308c <Movement_Selector_Excecutor+0x5a>
    3056:	41 11       	cpse	r20, r1
    3058:	19 c0       	rjmp	.+50     	; 0x308c <Movement_Selector_Excecutor+0x5a>
    305a:	21 11       	cpse	r18, r1
    305c:	17 c0       	rjmp	.+46     	; 0x308c <Movement_Selector_Excecutor+0x5a>
				Backward_Move();
    305e:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <Backward_Move>
    3062:	67 c0       	rjmp	.+206    	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else if ((FSS == 0) && (BSS == 1) && (RSS == 0) &&(LSS == 0)){
    3064:	81 11       	cpse	r24, r1
    3066:	12 c0       	rjmp	.+36     	; 0x308c <Movement_Selector_Excecutor+0x5a>
    3068:	61 30       	cpi	r22, 0x01	; 1
    306a:	39 f4       	brne	.+14     	; 0x307a <Movement_Selector_Excecutor+0x48>
    306c:	41 11       	cpse	r20, r1
    306e:	0e c0       	rjmp	.+28     	; 0x308c <Movement_Selector_Excecutor+0x5a>
    3070:	21 11       	cpse	r18, r1
    3072:	0c c0       	rjmp	.+24     	; 0x308c <Movement_Selector_Excecutor+0x5a>
				Forward_Move();
    3074:	0e 94 93 15 	call	0x2b26	; 0x2b26 <Forward_Move>
    3078:	5c c0       	rjmp	.+184    	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else if ((FSS == 0) && (BSS == 0) && (RSS == 0) &&(LSS == 1)){
    307a:	61 11       	cpse	r22, r1
    307c:	07 c0       	rjmp	.+14     	; 0x308c <Movement_Selector_Excecutor+0x5a>
    307e:	41 11       	cpse	r20, r1
    3080:	05 c0       	rjmp	.+10     	; 0x308c <Movement_Selector_Excecutor+0x5a>
    3082:	21 30       	cpi	r18, 0x01	; 1
    3084:	19 f4       	brne	.+6      	; 0x308c <Movement_Selector_Excecutor+0x5a>
				Soft_Backward_Right();
    3086:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <Soft_Backward_Right>
    308a:	53 c0       	rjmp	.+166    	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else {
				Soft_Backward_Left();
    308c:	0e 94 c5 17 	call	0x2f8a	; 0x2f8a <Soft_Backward_Left>
    3090:	50 c0       	rjmp	.+160    	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			break;
		case 2: // If two sensors are triggered
			if ((FSS == 1) && (BSS == 0) && (RSS == 0) &&(LSS == 1)){
    3092:	81 30       	cpi	r24, 0x01	; 1
    3094:	81 f4       	brne	.+32     	; 0x30b6 <Movement_Selector_Excecutor+0x84>
    3096:	61 11       	cpse	r22, r1
    3098:	20 c0       	rjmp	.+64     	; 0x30da <Movement_Selector_Excecutor+0xa8>
    309a:	41 11       	cpse	r20, r1
    309c:	05 c0       	rjmp	.+10     	; 0x30a8 <Movement_Selector_Excecutor+0x76>
    309e:	21 30       	cpi	r18, 0x01	; 1
    30a0:	29 f5       	brne	.+74     	; 0x30ec <Movement_Selector_Excecutor+0xba>
				Soft_Backward_Right();
    30a2:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <Soft_Backward_Right>
    30a6:	45 c0       	rjmp	.+138    	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else if ((FSS == 1) && (BSS == 0) && (RSS == 1) &&(LSS == 0)){
    30a8:	41 30       	cpi	r20, 0x01	; 1
    30aa:	01 f5       	brne	.+64     	; 0x30ec <Movement_Selector_Excecutor+0xba>
    30ac:	21 11       	cpse	r18, r1
    30ae:	1e c0       	rjmp	.+60     	; 0x30ec <Movement_Selector_Excecutor+0xba>
				Soft_Backward_Left();;
    30b0:	0e 94 c5 17 	call	0x2f8a	; 0x2f8a <Soft_Backward_Left>
    30b4:	3e c0       	rjmp	.+124    	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else if ((FSS == 0) && (BSS == 1) && (RSS == 0) &&(LSS == 1)){
    30b6:	81 11       	cpse	r24, r1
    30b8:	19 c0       	rjmp	.+50     	; 0x30ec <Movement_Selector_Excecutor+0xba>
    30ba:	61 30       	cpi	r22, 0x01	; 1
    30bc:	b9 f4       	brne	.+46     	; 0x30ec <Movement_Selector_Excecutor+0xba>
    30be:	41 11       	cpse	r20, r1
    30c0:	05 c0       	rjmp	.+10     	; 0x30cc <Movement_Selector_Excecutor+0x9a>
    30c2:	21 30       	cpi	r18, 0x01	; 1
    30c4:	99 f4       	brne	.+38     	; 0x30ec <Movement_Selector_Excecutor+0xba>
				Soft_Forward_Right();
    30c6:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <Soft_Forward_Right>
    30ca:	33 c0       	rjmp	.+102    	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else if ((FSS == 0) && (BSS == 1) && (RSS == 1) &&(LSS == 0)){
    30cc:	41 30       	cpi	r20, 0x01	; 1
    30ce:	71 f4       	brne	.+28     	; 0x30ec <Movement_Selector_Excecutor+0xba>
    30d0:	21 11       	cpse	r18, r1
    30d2:	0c c0       	rjmp	.+24     	; 0x30ec <Movement_Selector_Excecutor+0xba>
				Soft_Forward_Left();
    30d4:	0e 94 34 17 	call	0x2e68	; 0x2e68 <Soft_Forward_Left>
    30d8:	2c c0       	rjmp	.+88     	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else if ((FSS == 1) && (BSS == 1) && (RSS == 0) &&(LSS == 0)){
    30da:	61 30       	cpi	r22, 0x01	; 1
    30dc:	39 f4       	brne	.+14     	; 0x30ec <Movement_Selector_Excecutor+0xba>
    30de:	41 11       	cpse	r20, r1
    30e0:	05 c0       	rjmp	.+10     	; 0x30ec <Movement_Selector_Excecutor+0xba>
    30e2:	21 11       	cpse	r18, r1
    30e4:	03 c0       	rjmp	.+6      	; 0x30ec <Movement_Selector_Excecutor+0xba>
				Hard_Right();
    30e6:	0e 94 24 16 	call	0x2c48	; 0x2c48 <Hard_Right>
    30ea:	23 c0       	rjmp	.+70     	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else {
				Forward_Move();
    30ec:	0e 94 93 15 	call	0x2b26	; 0x2b26 <Forward_Move>
    30f0:	20 c0       	rjmp	.+64     	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			
			break;
		case 3: // If three sensors are triggered
			if ((FSS == 1) && (BSS == 1) && (RSS == 0) &&(LSS == 1)){
    30f2:	81 30       	cpi	r24, 0x01	; 1
    30f4:	c9 f4       	brne	.+50     	; 0x3128 <Movement_Selector_Excecutor+0xf6>
    30f6:	61 30       	cpi	r22, 0x01	; 1
    30f8:	71 f4       	brne	.+28     	; 0x3116 <Movement_Selector_Excecutor+0xe4>
    30fa:	41 11       	cpse	r20, r1
    30fc:	05 c0       	rjmp	.+10     	; 0x3108 <Movement_Selector_Excecutor+0xd6>
    30fe:	21 30       	cpi	r18, 0x01	; 1
    3100:	99 f4       	brne	.+38     	; 0x3128 <Movement_Selector_Excecutor+0xf6>
				Hard_Right();
    3102:	0e 94 24 16 	call	0x2c48	; 0x2c48 <Hard_Right>
    3106:	15 c0       	rjmp	.+42     	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else if ((FSS == 1) && (BSS == 1) && (RSS == 1) &&(LSS == 0)){
    3108:	41 30       	cpi	r20, 0x01	; 1
    310a:	71 f4       	brne	.+28     	; 0x3128 <Movement_Selector_Excecutor+0xf6>
    310c:	21 11       	cpse	r18, r1
    310e:	0c c0       	rjmp	.+24     	; 0x3128 <Movement_Selector_Excecutor+0xf6>
				Hard_Left();
    3110:	0e 94 89 16 	call	0x2d12	; 0x2d12 <Hard_Left>
    3114:	0e c0       	rjmp	.+28     	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else if ((FSS == 1) && (BSS == 0) && (RSS == 1) &&(LSS == 1)){
    3116:	61 11       	cpse	r22, r1
    3118:	07 c0       	rjmp	.+14     	; 0x3128 <Movement_Selector_Excecutor+0xf6>
    311a:	41 30       	cpi	r20, 0x01	; 1
    311c:	29 f4       	brne	.+10     	; 0x3128 <Movement_Selector_Excecutor+0xf6>
    311e:	21 30       	cpi	r18, 0x01	; 1
    3120:	19 f4       	brne	.+6      	; 0x3128 <Movement_Selector_Excecutor+0xf6>
				Backward_Move();
    3122:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <Backward_Move>
    3126:	05 c0       	rjmp	.+10     	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			else {
				Forward_Move();
    3128:	0e 94 93 15 	call	0x2b26	; 0x2b26 <Forward_Move>
    312c:	02 c0       	rjmp	.+4      	; 0x3132 <Movement_Selector_Excecutor+0x100>
				}
			
			break;
		case 4: // If all four sensors are triggered
			Cry();
    312e:	0e 94 0e 18 	call	0x301c	; 0x301c <Cry>
			break;
		default: // If none of the sensors are triggered
			// just stay and chill!
			break;
		}
	}
    3132:	0f 91       	pop	r16
    3134:	08 95       	ret

00003136 <Random_Wanderer>:
// Alexandre van der Ven de Freitas
// Peter Richard Olejnik
// December 18, 2014

// Random wanderer function
void Random_Wanderer(){
    3136:	8f 92       	push	r8
    3138:	af 92       	push	r10
    313a:	bf 92       	push	r11
    313c:	cf 92       	push	r12
    313e:	ef 92       	push	r14
    3140:	ff 92       	push	r15
    3142:	0f 93       	push	r16
    3144:	1f 93       	push	r17
    3146:	cf 93       	push	r28
    3148:	df 93       	push	r29
	char RightWheelSpeed;
	char LeftWheelSpeed;
	
	// Randomly select speed of wheels
	RightWheelSpeed = rand() % 201;
    314a:	0e 94 e8 28 	call	0x51d0	; 0x51d0 <rand>
    314e:	ec 01       	movw	r28, r24
	LeftWheelSpeed = rand() % 201;
    3150:	0e 94 e8 28 	call	0x51d0	; 0x51d0 <rand>
    3154:	29 ec       	ldi	r18, 0xC9	; 201
    3156:	30 e0       	ldi	r19, 0x00	; 0
    3158:	b9 01       	movw	r22, r18
    315a:	0e 94 d8 26 	call	0x4db0	; 0x4db0 <__divmodhi4>
    315e:	8c 01       	movw	r16, r24
    3160:	11 27       	eor	r17, r17

	STEPPER_move_rn(STEPPER_BOTH,
    3162:	1f 92       	push	r1
    3164:	1f 92       	push	r1
    3166:	1f 92       	push	r1
    3168:	81 e0       	ldi	r24, 0x01	; 1
    316a:	8f 93       	push	r24
    316c:	80 e9       	ldi	r24, 0x90	; 144
    316e:	8f 93       	push	r24
void Random_Wanderer(){
	char RightWheelSpeed;
	char LeftWheelSpeed;
	
	// Randomly select speed of wheels
	RightWheelSpeed = rand() % 201;
    3170:	ce 01       	movw	r24, r28
    3172:	b9 01       	movw	r22, r18
    3174:	0e 94 d8 26 	call	0x4db0	; 0x4db0 <__divmodhi4>
    3178:	99 27       	eor	r25, r25
	LeftWheelSpeed = rand() % 201;

	STEPPER_move_rn(STEPPER_BOTH,
    317a:	9f 93       	push	r25
    317c:	8f 93       	push	r24
    317e:	1f 92       	push	r1
    3180:	1f 92       	push	r1
    3182:	81 2c       	mov	r8, r1
    3184:	a1 2c       	mov	r10, r1
    3186:	b1 2c       	mov	r11, r1
    3188:	c1 2c       	mov	r12, r1
    318a:	0f 2e       	mov	r0, r31
    318c:	f0 e9       	ldi	r31, 0x90	; 144
    318e:	ef 2e       	mov	r14, r31
    3190:	ff 24       	eor	r15, r15
    3192:	f3 94       	inc	r15
    3194:	f0 2d       	mov	r31, r0
    3196:	20 e0       	ldi	r18, 0x00	; 0
    3198:	30 e0       	ldi	r19, 0x00	; 0
    319a:	40 e0       	ldi	r20, 0x00	; 0
    319c:	62 e0       	ldi	r22, 0x02	; 2
    319e:	82 e0       	ldi	r24, 0x02	; 2
    31a0:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_FWD, LeftWheelSpeed, 400,	//Left
		STEPPER_FWD, RightWheelSpeed, 400);	//Right
	TMRSRVC_delay(500); //5 Sec duration
    31a4:	84 ef       	ldi	r24, 0xF4	; 244
    31a6:	91 e0       	ldi	r25, 0x01	; 1
    31a8:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
    31ac:	8d b7       	in	r24, 0x3d	; 61
    31ae:	9e b7       	in	r25, 0x3e	; 62
    31b0:	09 96       	adiw	r24, 0x09	; 9
    31b2:	0f b6       	in	r0, 0x3f	; 63
    31b4:	f8 94       	cli
    31b6:	9e bf       	out	0x3e, r25	; 62
    31b8:	0f be       	out	0x3f, r0	; 63
    31ba:	8d bf       	out	0x3d, r24	; 61
	}
    31bc:	df 91       	pop	r29
    31be:	cf 91       	pop	r28
    31c0:	1f 91       	pop	r17
    31c2:	0f 91       	pop	r16
    31c4:	ff 90       	pop	r15
    31c6:	ef 90       	pop	r14
    31c8:	cf 90       	pop	r12
    31ca:	bf 90       	pop	r11
    31cc:	af 90       	pop	r10
    31ce:	8f 90       	pop	r8
    31d0:	08 95       	ret

000031d2 <getLeftIR>:
	//float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    31d2:	81 e0       	ldi	r24, 0x01	; 1
    31d4:	0e 94 c9 03 	call	0x792	; 0x792 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRLEFT_CHAN );
    31d8:	84 e0       	ldi	r24, 0x04	; 4
    31da:	0e 94 92 03 	call	0x724	; 0x724 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    31de:	0e 94 75 03 	call	0x6ea	; 0x6ea <ADC_sample>
	//LCD_printf( "ADC: %i\n",adcsample);
	// Convert to meaningful voltage value.
	//voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
    31e2:	bc 01       	movw	r22, r24
    31e4:	80 e0       	ldi	r24, 0x00	; 0
    31e6:	90 e0       	ldi	r25, 0x00	; 0
    31e8:	0e 94 49 20 	call	0x4092	; 0x4092 <__floatunsisf>
    31ec:	20 e0       	ldi	r18, 0x00	; 0
    31ee:	30 e0       	ldi	r19, 0x00	; 0
    31f0:	40 ea       	ldi	r20, 0xA0	; 160
    31f2:	50 e4       	ldi	r21, 0x40	; 64
    31f4:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <__addsf3>
    31f8:	9b 01       	movw	r18, r22
    31fa:	ac 01       	movw	r20, r24
    31fc:	60 e0       	ldi	r22, 0x00	; 0
    31fe:	70 e2       	ldi	r23, 0x20	; 32
    3200:	86 e3       	ldi	r24, 0x36	; 54
    3202:	95 e4       	ldi	r25, 0x45	; 69
    3204:	0e 94 b0 1f 	call	0x3f60	; 0x3f60 <__divsf3>
    3208:	20 e0       	ldi	r18, 0x00	; 0
    320a:	30 e0       	ldi	r19, 0x00	; 0
    320c:	40 e8       	ldi	r20, 0x80	; 128
    320e:	5f e3       	ldi	r21, 0x3F	; 63
    3210:	0e 94 e5 1e 	call	0x3dca	; 0x3dca <__subsf3>
	//Convert distance to inches
	dist = distance*0.3937;
    3214:	2c e0       	ldi	r18, 0x0C	; 12
    3216:	33 e9       	ldi	r19, 0x93	; 147
    3218:	49 ec       	ldi	r20, 0xC9	; 201
    321a:	5e e3       	ldi	r21, 0x3E	; 62
    321c:	0e 94 2b 21 	call	0x4256	; 0x4256 <__mulsf3>
	return dist;
}
    3220:	08 95       	ret

00003222 <getRightIR>:
	//float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    3222:	81 e0       	ldi	r24, 0x01	; 1
    3224:	0e 94 c9 03 	call	0x792	; 0x792 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel( IRRIGHT_CHAN );
    3228:	83 e0       	ldi	r24, 0x03	; 3
    322a:	0e 94 92 03 	call	0x724	; 0x724 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    322e:	0e 94 75 03 	call	0x6ea	; 0x6ea <ADC_sample>
	// Convert to meaningful voltage value.
	//voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
    3232:	bc 01       	movw	r22, r24
    3234:	80 e0       	ldi	r24, 0x00	; 0
    3236:	90 e0       	ldi	r25, 0x00	; 0
    3238:	0e 94 49 20 	call	0x4092	; 0x4092 <__floatunsisf>
    323c:	20 e0       	ldi	r18, 0x00	; 0
    323e:	30 e0       	ldi	r19, 0x00	; 0
    3240:	40 ea       	ldi	r20, 0xA0	; 160
    3242:	50 e4       	ldi	r21, 0x40	; 64
    3244:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <__addsf3>
    3248:	9b 01       	movw	r18, r22
    324a:	ac 01       	movw	r20, r24
    324c:	60 e0       	ldi	r22, 0x00	; 0
    324e:	70 e2       	ldi	r23, 0x20	; 32
    3250:	86 e3       	ldi	r24, 0x36	; 54
    3252:	95 e4       	ldi	r25, 0x45	; 69
    3254:	0e 94 b0 1f 	call	0x3f60	; 0x3f60 <__divsf3>
    3258:	20 e0       	ldi	r18, 0x00	; 0
    325a:	30 e0       	ldi	r19, 0x00	; 0
    325c:	40 e8       	ldi	r20, 0x80	; 128
    325e:	5f e3       	ldi	r21, 0x3F	; 63
    3260:	0e 94 e5 1e 	call	0x3dca	; 0x3dca <__subsf3>
	//Convert distance to inches
	dist = distance*0.3937;
    3264:	2c e0       	ldi	r18, 0x0C	; 12
    3266:	33 e9       	ldi	r19, 0x93	; 147
    3268:	49 ec       	ldi	r20, 0xC9	; 201
    326a:	5e e3       	ldi	r21, 0x3E	; 62
    326c:	0e 94 2b 21 	call	0x4256	; 0x4256 <__mulsf3>
	return dist;
}
    3270:	08 95       	ret

00003272 <getFrontIR>:
	//float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    3272:	81 e0       	ldi	r24, 0x01	; 1
    3274:	0e 94 c9 03 	call	0x792	; 0x792 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRFRONT_CHAN);
    3278:	87 e0       	ldi	r24, 0x07	; 7
    327a:	0e 94 92 03 	call	0x724	; 0x724 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    327e:	0e 94 75 03 	call	0x6ea	; 0x6ea <ADC_sample>
	// Convert to meaningful voltage value.
	//voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
    3282:	bc 01       	movw	r22, r24
    3284:	80 e0       	ldi	r24, 0x00	; 0
    3286:	90 e0       	ldi	r25, 0x00	; 0
    3288:	0e 94 49 20 	call	0x4092	; 0x4092 <__floatunsisf>
    328c:	20 e0       	ldi	r18, 0x00	; 0
    328e:	30 e0       	ldi	r19, 0x00	; 0
    3290:	40 ea       	ldi	r20, 0xA0	; 160
    3292:	50 e4       	ldi	r21, 0x40	; 64
    3294:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <__addsf3>
    3298:	9b 01       	movw	r18, r22
    329a:	ac 01       	movw	r20, r24
    329c:	60 e0       	ldi	r22, 0x00	; 0
    329e:	70 e2       	ldi	r23, 0x20	; 32
    32a0:	86 e3       	ldi	r24, 0x36	; 54
    32a2:	95 e4       	ldi	r25, 0x45	; 69
    32a4:	0e 94 b0 1f 	call	0x3f60	; 0x3f60 <__divsf3>
    32a8:	20 e0       	ldi	r18, 0x00	; 0
    32aa:	30 e0       	ldi	r19, 0x00	; 0
    32ac:	40 e8       	ldi	r20, 0x80	; 128
    32ae:	5f e3       	ldi	r21, 0x3F	; 63
    32b0:	0e 94 e5 1e 	call	0x3dca	; 0x3dca <__subsf3>
	//Convert distance to inches
	dist = distance*0.3937;
    32b4:	2c e0       	ldi	r18, 0x0C	; 12
    32b6:	33 e9       	ldi	r19, 0x93	; 147
    32b8:	49 ec       	ldi	r20, 0xC9	; 201
    32ba:	5e e3       	ldi	r21, 0x3E	; 62
    32bc:	0e 94 2b 21 	call	0x4256	; 0x4256 <__mulsf3>
	return dist;
}
    32c0:	08 95       	ret

000032c2 <getBackIR>:
	//float voltage;//IR range -0.4 to 5.3 V
	float distance;// (cm) 30 cm = 12 inches = 0.4 V
	float dist;//distance in inches
	ADC_SAMPLE adcsample;
	// Set the Voltage Reference first so VREF=5V.
	ADC_set_VREF( ADC_VREF_AVCC );
    32c2:	81 e0       	ldi	r24, 0x01	; 1
    32c4:	0e 94 c9 03 	call	0x792	; 0x792 <ADC_set_VREF>
	// Set the channel we will sample from.
	ADC_set_channel(IRBACK_CHAN);
    32c8:	85 e0       	ldi	r24, 0x05	; 5
    32ca:	0e 94 92 03 	call	0x724	; 0x724 <ADC_set_channel>
	// Now sample it!
	adcsample = ADC_sample();
    32ce:	0e 94 75 03 	call	0x6ea	; 0x6ea <ADC_sample>
	// Convert to meaningful voltage value.
	//voltage = adcsample * ( 5.0 / 1024 );
	// Convert to distance in cm
	distance = (2914/(adcsample+5.0))-1.0;
    32d2:	bc 01       	movw	r22, r24
    32d4:	80 e0       	ldi	r24, 0x00	; 0
    32d6:	90 e0       	ldi	r25, 0x00	; 0
    32d8:	0e 94 49 20 	call	0x4092	; 0x4092 <__floatunsisf>
    32dc:	20 e0       	ldi	r18, 0x00	; 0
    32de:	30 e0       	ldi	r19, 0x00	; 0
    32e0:	40 ea       	ldi	r20, 0xA0	; 160
    32e2:	50 e4       	ldi	r21, 0x40	; 64
    32e4:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <__addsf3>
    32e8:	9b 01       	movw	r18, r22
    32ea:	ac 01       	movw	r20, r24
    32ec:	60 e0       	ldi	r22, 0x00	; 0
    32ee:	70 e2       	ldi	r23, 0x20	; 32
    32f0:	86 e3       	ldi	r24, 0x36	; 54
    32f2:	95 e4       	ldi	r25, 0x45	; 69
    32f4:	0e 94 b0 1f 	call	0x3f60	; 0x3f60 <__divsf3>
    32f8:	20 e0       	ldi	r18, 0x00	; 0
    32fa:	30 e0       	ldi	r19, 0x00	; 0
    32fc:	40 e8       	ldi	r20, 0x80	; 128
    32fe:	5f e3       	ldi	r21, 0x3F	; 63
    3300:	0e 94 e5 1e 	call	0x3dca	; 0x3dca <__subsf3>
	//Convert distance to inches
	dist = distance*0.3937;
    3304:	2c e0       	ldi	r18, 0x0C	; 12
    3306:	33 e9       	ldi	r19, 0x93	; 147
    3308:	49 ec       	ldi	r20, 0xC9	; 201
    330a:	5e e3       	ldi	r21, 0x3E	; 62
    330c:	0e 94 2b 21 	call	0x4256	; 0x4256 <__mulsf3>
	return dist;
}
    3310:	08 95       	ret

00003312 <moveForward>:
signed char xo = 0;
signed char yo = 0;
short thetao = 0;

// Moves the robot forward for a given number of steps.
void moveForward(int steps, int speed){
    3312:	8f 92       	push	r8
    3314:	af 92       	push	r10
    3316:	bf 92       	push	r11
    3318:	cf 92       	push	r12
    331a:	ef 92       	push	r14
    331c:	ff 92       	push	r15
    331e:	0f 93       	push	r16
    3320:	1f 93       	push	r17
    3322:	cf 93       	push	r28
    3324:	df 93       	push	r29
    3326:	d8 2f       	mov	r29, r24
    3328:	c9 2f       	mov	r28, r25
    332a:	06 2f       	mov	r16, r22
    332c:	17 2f       	mov	r17, r23
	// Performs the same error detection procedure for the Stepper subsystem as it was performed with ATTINY.
	SUBSYS_OPENSTAT openStepper;
	
	// Stepper subsystem is opened.
	openStepper = STEPPER_open();
    332e:	0e 94 94 07 	call	0xf28	; 0xf28 <STEPPER_open>
	
	// Displays an error message if the returned value for the opened stepper subsystem is unexpected.
	if (openStepper.state != SUBSYS_OPEN){
    3332:	91 30       	cpi	r25, 0x01	; 1
    3334:	41 f0       	breq	.+16     	; 0x3346 <moveForward+0x34>
		LCD_printf("\nError when opening STEPPER subsystem!");
    3336:	4f eb       	ldi	r20, 0xBF	; 191
    3338:	51 e0       	ldi	r21, 0x01	; 1
    333a:	5f 93       	push	r21
    333c:	4f 93       	push	r20
    333e:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    3342:	0f 90       	pop	r0
    3344:	0f 90       	pop	r0
	}
	
	// Moving both wheels forward.
	STEPPER_move_stwt(STEPPER_BOTH,
    3346:	1f 92       	push	r1
    3348:	1f 92       	push	r1
    334a:	1f 92       	push	r1
    334c:	81 e0       	ldi	r24, 0x01	; 1
    334e:	8f 93       	push	r24
    3350:	80 e9       	ldi	r24, 0x90	; 144
    3352:	8f 93       	push	r24
    3354:	1f 93       	push	r17
    3356:	0f 93       	push	r16
    3358:	cf 93       	push	r28
    335a:	df 93       	push	r29
    335c:	81 2c       	mov	r8, r1
    335e:	a1 2c       	mov	r10, r1
    3360:	b1 2c       	mov	r11, r1
    3362:	c1 2c       	mov	r12, r1
    3364:	0f 2e       	mov	r0, r31
    3366:	f0 e9       	ldi	r31, 0x90	; 144
    3368:	ef 2e       	mov	r14, r31
    336a:	ff 24       	eor	r15, r15
    336c:	f3 94       	inc	r15
    336e:	f0 2d       	mov	r31, r0
    3370:	2d 2f       	mov	r18, r29
    3372:	3c 2f       	mov	r19, r28
    3374:	40 e0       	ldi	r20, 0x00	; 0
    3376:	62 e0       	ldi	r22, 0x02	; 2
    3378:	80 e0       	ldi	r24, 0x00	; 0
    337a:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
    337e:	8d b7       	in	r24, 0x3d	; 61
    3380:	9e b7       	in	r25, 0x3e	; 62
    3382:	09 96       	adiw	r24, 0x09	; 9
    3384:	0f b6       	in	r0, 0x3f	; 63
    3386:	f8 94       	cli
    3388:	9e bf       	out	0x3e, r25	; 62
    338a:	0f be       	out	0x3f, r0	; 63
    338c:	8d bf       	out	0x3d, r24	; 61
		STEPPER_FWD, steps, speed, 400, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_FWD, steps, speed, 400, STEPPER_BRK_OFF);	//Right wheel
}
    338e:	df 91       	pop	r29
    3390:	cf 91       	pop	r28
    3392:	1f 91       	pop	r17
    3394:	0f 91       	pop	r16
    3396:	ff 90       	pop	r15
    3398:	ef 90       	pop	r14
    339a:	cf 90       	pop	r12
    339c:	bf 90       	pop	r11
    339e:	af 90       	pop	r10
    33a0:	8f 90       	pop	r8
    33a2:	08 95       	ret

000033a4 <sTurnLeft>:
	yo = y;
	thetao = theta;
}

// Given an angle and a speed, this function makes the robot turn/spin to the left.
void sTurnLeft(int angle, int speed){
    33a4:	8f 92       	push	r8
    33a6:	af 92       	push	r10
    33a8:	bf 92       	push	r11
    33aa:	cf 92       	push	r12
    33ac:	ef 92       	push	r14
    33ae:	ff 92       	push	r15
    33b0:	0f 93       	push	r16
    33b2:	1f 93       	push	r17
    33b4:	cf 93       	push	r28
    33b6:	df 93       	push	r29
    33b8:	ec 01       	movw	r28, r24
    33ba:	06 2f       	mov	r16, r22
    33bc:	17 2f       	mov	r17, r23
	
	// Performs the same error detection procedure for the Stepper subsystem as it was performed with ATTINY.
	SUBSYS_OPENSTAT openStepper;
	
	// Stepper subsystem is opened.
	openStepper = STEPPER_open();
    33be:	0e 94 94 07 	call	0xf28	; 0xf28 <STEPPER_open>
	
	// Displays an error message if the returned value for the opened stepper subsystem is unexpected.
	if (openStepper.state != SUBSYS_OPEN){
    33c2:	91 30       	cpi	r25, 0x01	; 1
    33c4:	41 f0       	breq	.+16     	; 0x33d6 <sTurnLeft+0x32>
		LCD_printf("\nError when opening STEPPER subsystem!");
    33c6:	8f eb       	ldi	r24, 0xBF	; 191
    33c8:	91 e0       	ldi	r25, 0x01	; 1
    33ca:	9f 93       	push	r25
    33cc:	8f 93       	push	r24
    33ce:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    33d2:	0f 90       	pop	r0
    33d4:	0f 90       	pop	r0
	}
	
	steps = angle*130/90;
    33d6:	22 e8       	ldi	r18, 0x82	; 130
    33d8:	2c 9f       	mul	r18, r28
    33da:	c0 01       	movw	r24, r0
    33dc:	2d 9f       	mul	r18, r29
    33de:	90 0d       	add	r25, r0
    33e0:	11 24       	eor	r1, r1
    33e2:	6a e5       	ldi	r22, 0x5A	; 90
    33e4:	70 e0       	ldi	r23, 0x00	; 0
    33e6:	0e 94 d8 26 	call	0x4db0	; 0x4db0 <__divmodhi4>
    33ea:	26 2f       	mov	r18, r22
    33ec:	37 2f       	mov	r19, r23
	STEPPER_move_stwt(STEPPER_BOTH,
    33ee:	1f 92       	push	r1
    33f0:	1f 92       	push	r1
    33f2:	1f 92       	push	r1
    33f4:	83 e0       	ldi	r24, 0x03	; 3
    33f6:	8f 93       	push	r24
    33f8:	80 e2       	ldi	r24, 0x20	; 32
    33fa:	8f 93       	push	r24
    33fc:	1f 93       	push	r17
    33fe:	0f 93       	push	r16
    3400:	7f 93       	push	r23
    3402:	6f 93       	push	r22
    3404:	81 2c       	mov	r8, r1
    3406:	a1 2c       	mov	r10, r1
    3408:	b1 2c       	mov	r11, r1
    340a:	c1 2c       	mov	r12, r1
    340c:	0f 2e       	mov	r0, r31
    340e:	f0 e2       	ldi	r31, 0x20	; 32
    3410:	ef 2e       	mov	r14, r31
    3412:	f3 e0       	ldi	r31, 0x03	; 3
    3414:	ff 2e       	mov	r15, r31
    3416:	f0 2d       	mov	r31, r0
    3418:	41 e0       	ldi	r20, 0x01	; 1
    341a:	62 e0       	ldi	r22, 0x02	; 2
    341c:	80 e0       	ldi	r24, 0x00	; 0
    341e:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_REV, steps, speed, 800, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_FWD, steps, speed, 800, STEPPER_BRK_OFF);	//Right wheel
		
	STEPPER_close();
    3422:	0e 94 22 06 	call	0xc44	; 0xc44 <STEPPER_close>
    3426:	8d b7       	in	r24, 0x3d	; 61
    3428:	9e b7       	in	r25, 0x3e	; 62
    342a:	09 96       	adiw	r24, 0x09	; 9
    342c:	0f b6       	in	r0, 0x3f	; 63
    342e:	f8 94       	cli
    3430:	9e bf       	out	0x3e, r25	; 62
    3432:	0f be       	out	0x3f, r0	; 63
    3434:	8d bf       	out	0x3d, r24	; 61
}
    3436:	df 91       	pop	r29
    3438:	cf 91       	pop	r28
    343a:	1f 91       	pop	r17
    343c:	0f 91       	pop	r16
    343e:	ff 90       	pop	r15
    3440:	ef 90       	pop	r14
    3442:	cf 90       	pop	r12
    3444:	bf 90       	pop	r11
    3446:	af 90       	pop	r10
    3448:	8f 90       	pop	r8
    344a:	08 95       	ret

0000344c <sTurnRight>:

// Given an angle and a speed, this function makes the robot turn/spin to the right.
void sTurnRight(int angle, int speed){
    344c:	8f 92       	push	r8
    344e:	af 92       	push	r10
    3450:	bf 92       	push	r11
    3452:	cf 92       	push	r12
    3454:	ef 92       	push	r14
    3456:	ff 92       	push	r15
    3458:	0f 93       	push	r16
    345a:	1f 93       	push	r17
    345c:	cf 93       	push	r28
    345e:	df 93       	push	r29
    3460:	ec 01       	movw	r28, r24
    3462:	06 2f       	mov	r16, r22
    3464:	17 2f       	mov	r17, r23
	
	// Performs the same error detection procedure for the Stepper subsystem as it was performed with ATTINY.
	SUBSYS_OPENSTAT openStepper;
	
	// Stepper subsystem is opened.
	openStepper = STEPPER_open();
    3466:	0e 94 94 07 	call	0xf28	; 0xf28 <STEPPER_open>
	
	// Displays an error message if the returned value for the opened stepper subsystem is unexpected.
	if (openStepper.state != SUBSYS_OPEN){
    346a:	91 30       	cpi	r25, 0x01	; 1
    346c:	41 f0       	breq	.+16     	; 0x347e <sTurnRight+0x32>
		LCD_printf("\nError when opening STEPPER subsystem!");
    346e:	8f eb       	ldi	r24, 0xBF	; 191
    3470:	91 e0       	ldi	r25, 0x01	; 1
    3472:	9f 93       	push	r25
    3474:	8f 93       	push	r24
    3476:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    347a:	0f 90       	pop	r0
    347c:	0f 90       	pop	r0
	}
	
	steps = angle*130/90;
    347e:	22 e8       	ldi	r18, 0x82	; 130
    3480:	2c 9f       	mul	r18, r28
    3482:	c0 01       	movw	r24, r0
    3484:	2d 9f       	mul	r18, r29
    3486:	90 0d       	add	r25, r0
    3488:	11 24       	eor	r1, r1
    348a:	6a e5       	ldi	r22, 0x5A	; 90
    348c:	70 e0       	ldi	r23, 0x00	; 0
    348e:	0e 94 d8 26 	call	0x4db0	; 0x4db0 <__divmodhi4>
    3492:	26 2f       	mov	r18, r22
    3494:	37 2f       	mov	r19, r23
	STEPPER_move_stwt(STEPPER_BOTH,
    3496:	1f 92       	push	r1
    3498:	1f 92       	push	r1
    349a:	1f 92       	push	r1
    349c:	83 e0       	ldi	r24, 0x03	; 3
    349e:	8f 93       	push	r24
    34a0:	80 e2       	ldi	r24, 0x20	; 32
    34a2:	8f 93       	push	r24
    34a4:	1f 93       	push	r17
    34a6:	0f 93       	push	r16
    34a8:	7f 93       	push	r23
    34aa:	6f 93       	push	r22
    34ac:	88 24       	eor	r8, r8
    34ae:	83 94       	inc	r8
    34b0:	a1 2c       	mov	r10, r1
    34b2:	b1 2c       	mov	r11, r1
    34b4:	c1 2c       	mov	r12, r1
    34b6:	0f 2e       	mov	r0, r31
    34b8:	f0 e2       	ldi	r31, 0x20	; 32
    34ba:	ef 2e       	mov	r14, r31
    34bc:	f3 e0       	ldi	r31, 0x03	; 3
    34be:	ff 2e       	mov	r15, r31
    34c0:	f0 2d       	mov	r31, r0
    34c2:	40 e0       	ldi	r20, 0x00	; 0
    34c4:	62 e0       	ldi	r22, 0x02	; 2
    34c6:	80 e0       	ldi	r24, 0x00	; 0
    34c8:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_FWD, steps, speed, 800, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_REV, steps, speed, 800, STEPPER_BRK_OFF);	//Right wheel
		
	STEPPER_close();
    34cc:	0e 94 22 06 	call	0xc44	; 0xc44 <STEPPER_close>
    34d0:	8d b7       	in	r24, 0x3d	; 61
    34d2:	9e b7       	in	r25, 0x3e	; 62
    34d4:	09 96       	adiw	r24, 0x09	; 9
    34d6:	0f b6       	in	r0, 0x3f	; 63
    34d8:	f8 94       	cli
    34da:	9e bf       	out	0x3e, r25	; 62
    34dc:	0f be       	out	0x3f, r0	; 63
    34de:	8d bf       	out	0x3d, r24	; 61
    34e0:	df 91       	pop	r29
    34e2:	cf 91       	pop	r28
    34e4:	1f 91       	pop	r17
    34e6:	0f 91       	pop	r16
    34e8:	ff 90       	pop	r15
    34ea:	ef 90       	pop	r14
    34ec:	cf 90       	pop	r12
    34ee:	bf 90       	pop	r11
    34f0:	af 90       	pop	r10
    34f2:	8f 90       	pop	r8
    34f4:	08 95       	ret

000034f6 <go2Angle>:
		STEPPER_FWD, steps, speed, 400, STEPPER_BRK_OFF,	//Left wheel
		STEPPER_FWD, steps, speed, 400, STEPPER_BRK_OFF);	//Right wheel
}

// Rotates the robot to the required functions.
void go2Angle(int angle){
    34f6:	cf 93       	push	r28
    34f8:	df 93       	push	r29
	
	// If the angle is positive, rotate the robot in a certain angle that is converted in steps to the left.
	if (angle > 0){
    34fa:	18 16       	cp	r1, r24
    34fc:	19 06       	cpc	r1, r25
    34fe:	dc f4       	brge	.+54     	; 0x3536 <go2Angle+0x40>
		if (angle <= 180){
    3500:	85 3b       	cpi	r24, 0xB5	; 181
    3502:	91 05       	cpc	r25, r1
    3504:	2c f4       	brge	.+10     	; 0x3510 <go2Angle+0x1a>
			sTurnLeft(angle, 400);
    3506:	60 e9       	ldi	r22, 0x90	; 144
    3508:	71 e0       	ldi	r23, 0x01	; 1
    350a:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <sTurnLeft>
    350e:	32 c0       	rjmp	.+100    	; 0x3574 <go2Angle+0x7e>
		}else if(angle > 180){
			angle = angle/2;
    3510:	9c 01       	movw	r18, r24
    3512:	99 23       	and	r25, r25
    3514:	14 f4       	brge	.+4      	; 0x351a <go2Angle+0x24>
    3516:	2f 5f       	subi	r18, 0xFF	; 255
    3518:	3f 4f       	sbci	r19, 0xFF	; 255
    351a:	e9 01       	movw	r28, r18
    351c:	d5 95       	asr	r29
    351e:	c7 95       	ror	r28
			sTurnLeft(angle, 400);
    3520:	60 e9       	ldi	r22, 0x90	; 144
    3522:	71 e0       	ldi	r23, 0x01	; 1
    3524:	ce 01       	movw	r24, r28
    3526:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <sTurnLeft>
			sTurnLeft(angle, 400);
    352a:	60 e9       	ldi	r22, 0x90	; 144
    352c:	71 e0       	ldi	r23, 0x01	; 1
    352e:	ce 01       	movw	r24, r28
    3530:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <sTurnLeft>
    3534:	1f c0       	rjmp	.+62     	; 0x3574 <go2Angle+0x7e>
		}
	// If the angle is negative, rotate the robot in a certain angle that is converted in steps to the right.
	}else if(angle < 0){
    3536:	99 23       	and	r25, r25
    3538:	ec f4       	brge	.+58     	; 0x3574 <go2Angle+0x7e>
		angle = angle * (-1); //Make the angle positive to calculate the amount of steps.
    353a:	91 95       	neg	r25
    353c:	81 95       	neg	r24
    353e:	91 09       	sbc	r25, r1
		if (angle <= 180){
    3540:	85 3b       	cpi	r24, 0xB5	; 181
    3542:	91 05       	cpc	r25, r1
    3544:	2c f4       	brge	.+10     	; 0x3550 <go2Angle+0x5a>
			sTurnRight(angle, 400);
    3546:	60 e9       	ldi	r22, 0x90	; 144
    3548:	71 e0       	ldi	r23, 0x01	; 1
    354a:	0e 94 26 1a 	call	0x344c	; 0x344c <sTurnRight>
    354e:	12 c0       	rjmp	.+36     	; 0x3574 <go2Angle+0x7e>
		}else if (angle > 180){
			angle = angle/2;
    3550:	9c 01       	movw	r18, r24
    3552:	99 23       	and	r25, r25
    3554:	14 f4       	brge	.+4      	; 0x355a <go2Angle+0x64>
    3556:	2f 5f       	subi	r18, 0xFF	; 255
    3558:	3f 4f       	sbci	r19, 0xFF	; 255
    355a:	e9 01       	movw	r28, r18
    355c:	d5 95       	asr	r29
    355e:	c7 95       	ror	r28
			sTurnRight(angle, 400);
    3560:	60 e9       	ldi	r22, 0x90	; 144
    3562:	71 e0       	ldi	r23, 0x01	; 1
    3564:	ce 01       	movw	r24, r28
    3566:	0e 94 26 1a 	call	0x344c	; 0x344c <sTurnRight>
			sTurnRight(angle, 400);
    356a:	60 e9       	ldi	r22, 0x90	; 144
    356c:	71 e0       	ldi	r23, 0x01	; 1
    356e:	ce 01       	movw	r24, r28
    3570:	0e 94 26 1a 	call	0x344c	; 0x344c <sTurnRight>
		}
	}else{
		// does nothing
	}
}
    3574:	df 91       	pop	r29
    3576:	cf 91       	pop	r28
    3578:	08 95       	ret

0000357a <go2Point>:

// Guides the robot to the desired input point.
void go2Point(signed char x, signed char y){ //input in feet
    357a:	2f 92       	push	r2
    357c:	3f 92       	push	r3
    357e:	4f 92       	push	r4
    3580:	5f 92       	push	r5
    3582:	6f 92       	push	r6
    3584:	7f 92       	push	r7
    3586:	8f 92       	push	r8
    3588:	9f 92       	push	r9
    358a:	af 92       	push	r10
    358c:	bf 92       	push	r11
    358e:	cf 92       	push	r12
    3590:	df 92       	push	r13
    3592:	ef 92       	push	r14
    3594:	ff 92       	push	r15
    3596:	0f 93       	push	r16
    3598:	1f 93       	push	r17
    359a:	cf 93       	push	r28
    359c:	df 93       	push	r29
    359e:	cd b7       	in	r28, 0x3d	; 61
    35a0:	de b7       	in	r29, 0x3e	; 62
    35a2:	2d 97       	sbiw	r28, 0x0d	; 13
    35a4:	0f b6       	in	r0, 0x3f	; 63
    35a6:	f8 94       	cli
    35a8:	de bf       	out	0x3e, r29	; 62
    35aa:	0f be       	out	0x3f, r0	; 63
    35ac:	cd bf       	out	0x3d, r28	; 61
	float deltax, deltay, distance, steps, divSteps, frontIR, rightIR, leftIR;
	int theta, deltaTheta;
	char flag = 0;

	// Since the whole software was developed with an inches scale in mind, here the conversion to feet occurs.
	x = x*12;
    35ae:	98 2f       	mov	r25, r24
    35b0:	99 0f       	add	r25, r25
    35b2:	89 0f       	add	r24, r25
    35b4:	88 0f       	add	r24, r24
    35b6:	88 0f       	add	r24, r24
    35b8:	8e 83       	std	Y+6, r24	; 0x06
	y = y*12;
    35ba:	86 2f       	mov	r24, r22
    35bc:	88 0f       	add	r24, r24
    35be:	68 0f       	add	r22, r24
    35c0:	66 0f       	add	r22, r22
    35c2:	66 0f       	add	r22, r22
    35c4:	6f 83       	std	Y+7, r22	; 0x07
	
	// Calculations:
	deltax = x - xo;
    35c6:	2e 81       	ldd	r18, Y+6	; 0x06
    35c8:	62 2f       	mov	r22, r18
    35ca:	77 27       	eor	r23, r23
    35cc:	67 fd       	sbrc	r22, 7
    35ce:	70 95       	com	r23
    35d0:	80 91 54 03 	lds	r24, 0x0354
    35d4:	68 1b       	sub	r22, r24
    35d6:	71 09       	sbc	r23, r1
    35d8:	87 fd       	sbrc	r24, 7
    35da:	73 95       	inc	r23
    35dc:	88 27       	eor	r24, r24
    35de:	77 fd       	sbrc	r23, 7
    35e0:	80 95       	com	r24
    35e2:	98 2f       	mov	r25, r24
    35e4:	0e 94 4b 20 	call	0x4096	; 0x4096 <__floatsisf>
    35e8:	4b 01       	movw	r8, r22
    35ea:	5c 01       	movw	r10, r24
	deltay = y - yo;
    35ec:	3f 81       	ldd	r19, Y+7	; 0x07
    35ee:	63 2f       	mov	r22, r19
    35f0:	77 27       	eor	r23, r23
    35f2:	67 fd       	sbrc	r22, 7
    35f4:	70 95       	com	r23
    35f6:	80 91 53 03 	lds	r24, 0x0353
    35fa:	68 1b       	sub	r22, r24
    35fc:	71 09       	sbc	r23, r1
    35fe:	87 fd       	sbrc	r24, 7
    3600:	73 95       	inc	r23
    3602:	88 27       	eor	r24, r24
    3604:	77 fd       	sbrc	r23, 7
    3606:	80 95       	com	r24
    3608:	98 2f       	mov	r25, r24
    360a:	0e 94 4b 20 	call	0x4096	; 0x4096 <__floatsisf>
    360e:	6b 01       	movw	r12, r22
    3610:	7c 01       	movw	r14, r24
	// Obtaining the theta in degrees since the function from math.h returns in radians.
	theta = atan2(deltay,deltax) * (180/M_PI);
    3612:	a5 01       	movw	r20, r10
    3614:	94 01       	movw	r18, r8
    3616:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <atan2>
    361a:	20 ee       	ldi	r18, 0xE0	; 224
    361c:	3e e2       	ldi	r19, 0x2E	; 46
    361e:	45 e6       	ldi	r20, 0x65	; 101
    3620:	52 e4       	ldi	r21, 0x42	; 66
    3622:	0e 94 2b 21 	call	0x4256	; 0x4256 <__mulsf3>
    3626:	0e 94 18 20 	call	0x4030	; 0x4030 <__fixsfsi>
    362a:	68 87       	std	Y+8, r22	; 0x08
    362c:	79 87       	std	Y+9, r23	; 0x09
    362e:	8a 87       	std	Y+10, r24	; 0x0a
    3630:	9b 87       	std	Y+11, r25	; 0x0b
	//LCD_clear();
	//LCD_printf("%d - %d = %d", theta, thetao, deltaTheta);
	//LCD_printf("x = %d, y = %d",x,y);
	
	// Calculating the length of the vector.
	distance = sqrt((deltax*deltax)+(deltay*deltay));
    3632:	a5 01       	movw	r20, r10
    3634:	94 01       	movw	r18, r8
    3636:	c5 01       	movw	r24, r10
    3638:	b4 01       	movw	r22, r8
    363a:	0e 94 2b 21 	call	0x4256	; 0x4256 <__mulsf3>
    363e:	4b 01       	movw	r8, r22
    3640:	5c 01       	movw	r10, r24
    3642:	a7 01       	movw	r20, r14
    3644:	96 01       	movw	r18, r12
    3646:	c7 01       	movw	r24, r14
    3648:	b6 01       	movw	r22, r12
    364a:	0e 94 2b 21 	call	0x4256	; 0x4256 <__mulsf3>
    364e:	9b 01       	movw	r18, r22
    3650:	ac 01       	movw	r20, r24
    3652:	c5 01       	movw	r24, r10
    3654:	b4 01       	movw	r22, r8
    3656:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <__addsf3>
    365a:	0e 94 92 21 	call	0x4324	; 0x4324 <sqrt>
	
	// Converting it into steps.
	steps = distance/0.108;
    365e:	2b e1       	ldi	r18, 0x1B	; 27
    3660:	3f e2       	ldi	r19, 0x2F	; 47
    3662:	4d ed       	ldi	r20, 0xDD	; 221
    3664:	5d e3       	ldi	r21, 0x3D	; 61
    3666:	0e 94 b0 1f 	call	0x3f60	; 0x3f60 <__divsf3>
    366a:	c6 2e       	mov	r12, r22
    366c:	d7 2e       	mov	r13, r23
    366e:	e8 2e       	mov	r14, r24
    3670:	f9 2e       	mov	r15, r25
    3672:	06 2f       	mov	r16, r22
    3674:	19 2f       	mov	r17, r25
	// Calculations:
	deltax = x - xo;
	deltay = y - yo;
	// Obtaining the theta in degrees since the function from math.h returns in radians.
	theta = atan2(deltay,deltax) * (180/M_PI);
	deltaTheta = theta - thetao;
    3676:	80 91 51 03 	lds	r24, 0x0351
    367a:	90 91 52 03 	lds	r25, 0x0352
	
	// Converting it into steps.
	steps = distance/0.108;
	
	// Call for go to angle function.
	go2Angle(deltaTheta);
    367e:	e8 85       	ldd	r30, Y+8	; 0x08
    3680:	f9 85       	ldd	r31, Y+9	; 0x09
    3682:	e8 1b       	sub	r30, r24
    3684:	f9 0b       	sbc	r31, r25
    3686:	cf 01       	movw	r24, r30
    3688:	0e 94 7b 1a 	call	0x34f6	; 0x34f6 <go2Angle>
	TMRSRVC_delay(500); //0.5 seconds delay.
    368c:	84 ef       	ldi	r24, 0xF4	; 244
    368e:	91 e0       	ldi	r25, 0x01	; 1
    3690:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	
	// Divides the number of steps to be run by moveForward()
	divSteps = steps/20;
    3694:	20 e0       	ldi	r18, 0x00	; 0
    3696:	30 e0       	ldi	r19, 0x00	; 0
    3698:	40 ea       	ldi	r20, 0xA0	; 160
    369a:	51 e4       	ldi	r21, 0x41	; 65
    369c:	6c 2d       	mov	r22, r12
    369e:	7d 2d       	mov	r23, r13
    36a0:	8e 2d       	mov	r24, r14
    36a2:	9f 2d       	mov	r25, r15
    36a4:	0e 94 b0 1f 	call	0x3f60	; 0x3f60 <__divsf3>
    36a8:	69 83       	std	Y+1, r22	; 0x01
    36aa:	7a 83       	std	Y+2, r23	; 0x02
    36ac:	8b 83       	std	Y+3, r24	; 0x03
    36ae:	9c 83       	std	Y+4, r25	; 0x04
	
	// While the steps value is bigger than zero:
	while(steps>0){
    36b0:	20 e0       	ldi	r18, 0x00	; 0
    36b2:	30 e0       	ldi	r19, 0x00	; 0
    36b4:	a9 01       	movw	r20, r18
    36b6:	6c 2d       	mov	r22, r12
    36b8:	7d 2d       	mov	r23, r13
    36ba:	8e 2d       	mov	r24, r14
    36bc:	9f 2d       	mov	r25, r15
    36be:	0e 94 20 21 	call	0x4240	; 0x4240 <__gesf2>
    36c2:	18 16       	cp	r1, r24
    36c4:	0c f0       	brlt	.+2      	; 0x36c8 <go2Point+0x14e>
    36c6:	c6 c0       	rjmp	.+396    	; 0x3854 <go2Point+0x2da>

// Guides the robot to the desired input point.
void go2Point(signed char x, signed char y){ //input in feet
	float deltax, deltay, distance, steps, divSteps, frontIR, rightIR, leftIR;
	int theta, deltaTheta;
	char flag = 0;
    36c8:	1d 82       	std	Y+5, r1	; 0x05
			go2Angle(-90); // Turn -90 degrees
			moveForward(200, 200); // Move forward to align the side IR sensors with the box.
			flag = 1; // Flags to 1
		}
		LCD_clear();
		LCD_printf("%f", steps);
    36ca:	0f 2e       	mov	r0, r31
    36cc:	f8 ef       	ldi	r31, 0xF8	; 248
    36ce:	2f 2e       	mov	r2, r31
    36d0:	f1 e0       	ldi	r31, 0x01	; 1
    36d2:	3f 2e       	mov	r3, r31
    36d4:	f0 2d       	mov	r31, r0
    36d6:	dc 86       	std	Y+12, r13	; 0x0c
    36d8:	ed 86       	std	Y+13, r14	; 0x0d
	divSteps = steps/20;
	
	// While the steps value is bigger than zero:
	while(steps>0){
		// Read the sensors
		frontIR = getFrontIR();
    36da:	0e 94 39 19 	call	0x3272	; 0x3272 <getFrontIR>
    36de:	6b 01       	movw	r12, r22
    36e0:	7c 01       	movw	r14, r24
		rightIR = getRightIR();
    36e2:	0e 94 11 19 	call	0x3222	; 0x3222 <getRightIR>
    36e6:	4b 01       	movw	r8, r22
    36e8:	5c 01       	movw	r10, r24
		leftIR = getLeftIR();
    36ea:	0e 94 e9 18 	call	0x31d2	; 0x31d2 <getLeftIR>
    36ee:	2b 01       	movw	r4, r22
    36f0:	3c 01       	movw	r6, r24
		
		// If the front IR is reading values larger than 7 inches...
		if (frontIR > 7){
    36f2:	20 e0       	ldi	r18, 0x00	; 0
    36f4:	30 e0       	ldi	r19, 0x00	; 0
    36f6:	40 ee       	ldi	r20, 0xE0	; 224
    36f8:	50 e4       	ldi	r21, 0x40	; 64
    36fa:	c7 01       	movw	r24, r14
    36fc:	b6 01       	movw	r22, r12
    36fe:	0e 94 20 21 	call	0x4240	; 0x4240 <__gesf2>
    3702:	18 16       	cp	r1, r24
    3704:	0c f0       	brlt	.+2      	; 0x3708 <go2Point+0x18e>
    3706:	6c c0       	rjmp	.+216    	; 0x37e0 <go2Point+0x266>
			// If the internal flag is 1...
			if (flag>0){
    3708:	fd 81       	ldd	r31, Y+5	; 0x05
    370a:	ff 23       	and	r31, r31
    370c:	09 f4       	brne	.+2      	; 0x3710 <go2Point+0x196>
    370e:	4b c0       	rjmp	.+150    	; 0x37a6 <go2Point+0x22c>
				// If either of the side IRs are reading values smaller than 10 inches...
				if(rightIR < 10 || leftIR < 10){
    3710:	20 e0       	ldi	r18, 0x00	; 0
    3712:	30 e0       	ldi	r19, 0x00	; 0
    3714:	40 e2       	ldi	r20, 0x20	; 32
    3716:	51 e4       	ldi	r21, 0x41	; 65
    3718:	c5 01       	movw	r24, r10
    371a:	b4 01       	movw	r22, r8
    371c:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <__cmpsf2>
    3720:	88 23       	and	r24, r24
    3722:	54 f0       	brlt	.+20     	; 0x3738 <go2Point+0x1be>
    3724:	20 e0       	ldi	r18, 0x00	; 0
    3726:	30 e0       	ldi	r19, 0x00	; 0
    3728:	40 e2       	ldi	r20, 0x20	; 32
    372a:	51 e4       	ldi	r21, 0x41	; 65
    372c:	c3 01       	movw	r24, r6
    372e:	b2 01       	movw	r22, r4
    3730:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <__cmpsf2>
    3734:	88 23       	and	r24, r24
    3736:	ec f4       	brge	.+58     	; 0x3772 <go2Point+0x1f8>
					moveForward(divSteps,200); // Move forward with the given number of fractioned steps
    3738:	69 81       	ldd	r22, Y+1	; 0x01
    373a:	7a 81       	ldd	r23, Y+2	; 0x02
    373c:	8b 81       	ldd	r24, Y+3	; 0x03
    373e:	9c 81       	ldd	r25, Y+4	; 0x04
    3740:	0e 94 18 20 	call	0x4030	; 0x4030 <__fixsfsi>
    3744:	dc 01       	movw	r26, r24
    3746:	cb 01       	movw	r24, r22
    3748:	68 ec       	ldi	r22, 0xC8	; 200
    374a:	70 e0       	ldi	r23, 0x00	; 0
    374c:	0e 94 89 19 	call	0x3312	; 0x3312 <moveForward>
					steps = steps - divSteps; // Decrements the number of steps
    3750:	29 81       	ldd	r18, Y+1	; 0x01
    3752:	3a 81       	ldd	r19, Y+2	; 0x02
    3754:	4b 81       	ldd	r20, Y+3	; 0x03
    3756:	5c 81       	ldd	r21, Y+4	; 0x04
    3758:	ac 85       	ldd	r26, Y+12	; 0x0c
    375a:	fd 85       	ldd	r31, Y+13	; 0x0d
    375c:	60 2f       	mov	r22, r16
    375e:	7a 2f       	mov	r23, r26
    3760:	8f 2f       	mov	r24, r31
    3762:	91 2f       	mov	r25, r17
    3764:	0e 94 e5 1e 	call	0x3dca	; 0x3dca <__subsf3>
    3768:	06 2f       	mov	r16, r22
    376a:	7c 87       	std	Y+12, r23	; 0x0c
    376c:	8d 87       	std	Y+13, r24	; 0x0d
    376e:	19 2f       	mov	r17, r25
    3770:	51 c0       	rjmp	.+162    	; 0x3814 <go2Point+0x29a>
				}else{ // If the sides are reading values larger than 10 inches...
					moveForward(200, 200); // Move forward a little to avoid the edge of the box.
    3772:	68 ec       	ldi	r22, 0xC8	; 200
    3774:	70 e0       	ldi	r23, 0x00	; 0
    3776:	88 ec       	ldi	r24, 0xC8	; 200
    3778:	90 e0       	ldi	r25, 0x00	; 0
    377a:	0e 94 89 19 	call	0x3312	; 0x3312 <moveForward>
					go2Angle(-90); // Turn -90 degrees
    377e:	86 ea       	ldi	r24, 0xA6	; 166
    3780:	9f ef       	ldi	r25, 0xFF	; 255
    3782:	0e 94 7b 1a 	call	0x34f6	; 0x34f6 <go2Angle>
					TMRSRVC_delay(500);
    3786:	84 ef       	ldi	r24, 0xF4	; 244
    3788:	91 e0       	ldi	r25, 0x01	; 1
    378a:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
					moveForward(250, 200); // Move forward for centralizing the path.
    378e:	68 ec       	ldi	r22, 0xC8	; 200
    3790:	70 e0       	ldi	r23, 0x00	; 0
    3792:	8a ef       	ldi	r24, 0xFA	; 250
    3794:	90 e0       	ldi	r25, 0x00	; 0
    3796:	0e 94 89 19 	call	0x3312	; 0x3312 <moveForward>
					go2Angle(90); // Turn 90 degrees
    379a:	8a e5       	ldi	r24, 0x5A	; 90
    379c:	90 e0       	ldi	r25, 0x00	; 0
    379e:	0e 94 7b 1a 	call	0x34f6	; 0x34f6 <go2Angle>
					flag = 0; // Changes flag back to zero.
    37a2:	1d 82       	std	Y+5, r1	; 0x05
    37a4:	37 c0       	rjmp	.+110    	; 0x3814 <go2Point+0x29a>
				}
			}else{ // If the flag is zero...
				moveForward(divSteps, 200); // Move forward with the given number of fractioned steps
    37a6:	69 81       	ldd	r22, Y+1	; 0x01
    37a8:	7a 81       	ldd	r23, Y+2	; 0x02
    37aa:	8b 81       	ldd	r24, Y+3	; 0x03
    37ac:	9c 81       	ldd	r25, Y+4	; 0x04
    37ae:	0e 94 18 20 	call	0x4030	; 0x4030 <__fixsfsi>
    37b2:	dc 01       	movw	r26, r24
    37b4:	cb 01       	movw	r24, r22
    37b6:	68 ec       	ldi	r22, 0xC8	; 200
    37b8:	70 e0       	ldi	r23, 0x00	; 0
    37ba:	0e 94 89 19 	call	0x3312	; 0x3312 <moveForward>
				steps = steps - divSteps; // Decrements the number of steps
    37be:	29 81       	ldd	r18, Y+1	; 0x01
    37c0:	3a 81       	ldd	r19, Y+2	; 0x02
    37c2:	4b 81       	ldd	r20, Y+3	; 0x03
    37c4:	5c 81       	ldd	r21, Y+4	; 0x04
    37c6:	ac 85       	ldd	r26, Y+12	; 0x0c
    37c8:	fd 85       	ldd	r31, Y+13	; 0x0d
    37ca:	60 2f       	mov	r22, r16
    37cc:	7a 2f       	mov	r23, r26
    37ce:	8f 2f       	mov	r24, r31
    37d0:	91 2f       	mov	r25, r17
    37d2:	0e 94 e5 1e 	call	0x3dca	; 0x3dca <__subsf3>
    37d6:	06 2f       	mov	r16, r22
    37d8:	7c 87       	std	Y+12, r23	; 0x0c
    37da:	8d 87       	std	Y+13, r24	; 0x0d
    37dc:	19 2f       	mov	r17, r25
    37de:	1a c0       	rjmp	.+52     	; 0x3814 <go2Point+0x29a>
			}
		}else{ // If the front IR reading is smaller than 7 inches...
			go2Angle(90); // Turn 90 degrees
    37e0:	8a e5       	ldi	r24, 0x5A	; 90
    37e2:	90 e0       	ldi	r25, 0x00	; 0
    37e4:	0e 94 7b 1a 	call	0x34f6	; 0x34f6 <go2Angle>
			TMRSRVC_delay(500);
    37e8:	84 ef       	ldi	r24, 0xF4	; 244
    37ea:	91 e0       	ldi	r25, 0x01	; 1
    37ec:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
			moveForward(250, 200); // Move forward away from the box edge
    37f0:	68 ec       	ldi	r22, 0xC8	; 200
    37f2:	70 e0       	ldi	r23, 0x00	; 0
    37f4:	8a ef       	ldi	r24, 0xFA	; 250
    37f6:	90 e0       	ldi	r25, 0x00	; 0
    37f8:	0e 94 89 19 	call	0x3312	; 0x3312 <moveForward>
			go2Angle(-90); // Turn -90 degrees
    37fc:	86 ea       	ldi	r24, 0xA6	; 166
    37fe:	9f ef       	ldi	r25, 0xFF	; 255
    3800:	0e 94 7b 1a 	call	0x34f6	; 0x34f6 <go2Angle>
			moveForward(200, 200); // Move forward to align the side IR sensors with the box.
    3804:	68 ec       	ldi	r22, 0xC8	; 200
    3806:	70 e0       	ldi	r23, 0x00	; 0
    3808:	88 ec       	ldi	r24, 0xC8	; 200
    380a:	90 e0       	ldi	r25, 0x00	; 0
    380c:	0e 94 89 19 	call	0x3312	; 0x3312 <moveForward>
			flag = 1; // Flags to 1
    3810:	21 e0       	ldi	r18, 0x01	; 1
    3812:	2d 83       	std	Y+5, r18	; 0x05
		}
		LCD_clear();
    3814:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
		LCD_printf("%f", steps);
    3818:	1f 93       	push	r17
    381a:	3d 85       	ldd	r19, Y+13	; 0x0d
    381c:	3f 93       	push	r19
    381e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3820:	8f 93       	push	r24
    3822:	0f 93       	push	r16
    3824:	3f 92       	push	r3
    3826:	2f 92       	push	r2
    3828:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
	
	// Divides the number of steps to be run by moveForward()
	divSteps = steps/20;
	
	// While the steps value is bigger than zero:
	while(steps>0){
    382c:	0f 90       	pop	r0
    382e:	0f 90       	pop	r0
    3830:	0f 90       	pop	r0
    3832:	0f 90       	pop	r0
    3834:	0f 90       	pop	r0
    3836:	0f 90       	pop	r0
    3838:	20 e0       	ldi	r18, 0x00	; 0
    383a:	30 e0       	ldi	r19, 0x00	; 0
    383c:	a9 01       	movw	r20, r18
    383e:	ac 85       	ldd	r26, Y+12	; 0x0c
    3840:	fd 85       	ldd	r31, Y+13	; 0x0d
    3842:	60 2f       	mov	r22, r16
    3844:	7a 2f       	mov	r23, r26
    3846:	8f 2f       	mov	r24, r31
    3848:	91 2f       	mov	r25, r17
    384a:	0e 94 20 21 	call	0x4240	; 0x4240 <__gesf2>
    384e:	18 16       	cp	r1, r24
    3850:	0c f4       	brge	.+2      	; 0x3854 <go2Point+0x2da>
    3852:	43 cf       	rjmp	.-378    	; 0x36da <go2Point+0x160>
		}
		LCD_clear();
		LCD_printf("%f", steps);
	}
	// Updating the original values.
	xo = x;
    3854:	9e 81       	ldd	r25, Y+6	; 0x06
    3856:	90 93 54 03 	sts	0x0354, r25
	yo = y;
    385a:	ef 81       	ldd	r30, Y+7	; 0x07
    385c:	e0 93 53 03 	sts	0x0353, r30
	thetao = theta;
    3860:	28 85       	ldd	r18, Y+8	; 0x08
    3862:	39 85       	ldd	r19, Y+9	; 0x09
    3864:	30 93 52 03 	sts	0x0352, r19
    3868:	20 93 51 03 	sts	0x0351, r18
}
    386c:	2d 96       	adiw	r28, 0x0d	; 13
    386e:	0f b6       	in	r0, 0x3f	; 63
    3870:	f8 94       	cli
    3872:	de bf       	out	0x3e, r29	; 62
    3874:	0f be       	out	0x3f, r0	; 63
    3876:	cd bf       	out	0x3d, r28	; 61
    3878:	df 91       	pop	r29
    387a:	cf 91       	pop	r28
    387c:	1f 91       	pop	r17
    387e:	0f 91       	pop	r16
    3880:	ff 90       	pop	r15
    3882:	ef 90       	pop	r14
    3884:	df 90       	pop	r13
    3886:	cf 90       	pop	r12
    3888:	bf 90       	pop	r11
    388a:	af 90       	pop	r10
    388c:	9f 90       	pop	r9
    388e:	8f 90       	pop	r8
    3890:	7f 90       	pop	r7
    3892:	6f 90       	pop	r6
    3894:	5f 90       	pop	r5
    3896:	4f 90       	pop	r4
    3898:	3f 90       	pop	r3
    389a:	2f 90       	pop	r2
    389c:	08 95       	ret

0000389e <aggressive>:
    }
}


// Function for the aggressive kid.
void aggressive(){
    389e:	8f 92       	push	r8
    38a0:	af 92       	push	r10
    38a2:	bf 92       	push	r11
    38a4:	cf 92       	push	r12
    38a6:	ef 92       	push	r14
    38a8:	ff 92       	push	r15
    38aa:	0f 93       	push	r16
    38ac:	1f 93       	push	r17
	
	float frontIR = 0;
	
	// Obtains the front IR sensor reading
	frontIR = getFrontIR();
    38ae:	0e 94 39 19 	call	0x3272	; 0x3272 <getFrontIR>
	
	//LCD_printf("%f", frontIR);
	//LCD_clear();
	
	// If front IR sensor reads values larger or equal to five, move forward else stop. 
	if(frontIR >= 5){
    38b2:	20 e0       	ldi	r18, 0x00	; 0
    38b4:	30 e0       	ldi	r19, 0x00	; 0
    38b6:	40 ea       	ldi	r20, 0xA0	; 160
    38b8:	50 e4       	ldi	r21, 0x40	; 64
    38ba:	0e 94 20 21 	call	0x4240	; 0x4240 <__gesf2>
    38be:	88 23       	and	r24, r24
    38c0:	44 f1       	brlt	.+80     	; 0x3912 <aggressive+0x74>
		STEPPER_move_rn(STEPPER_BOTH,
    38c2:	1f 92       	push	r1
    38c4:	1f 92       	push	r1
    38c6:	1f 92       	push	r1
    38c8:	81 e0       	ldi	r24, 0x01	; 1
    38ca:	8f 93       	push	r24
    38cc:	80 e9       	ldi	r24, 0x90	; 144
    38ce:	8f 93       	push	r24
    38d0:	1f 92       	push	r1
    38d2:	88 ec       	ldi	r24, 0xC8	; 200
    38d4:	8f 93       	push	r24
    38d6:	1f 92       	push	r1
    38d8:	1f 92       	push	r1
    38da:	81 2c       	mov	r8, r1
    38dc:	a1 2c       	mov	r10, r1
    38de:	b1 2c       	mov	r11, r1
    38e0:	c1 2c       	mov	r12, r1
    38e2:	0f 2e       	mov	r0, r31
    38e4:	f0 e9       	ldi	r31, 0x90	; 144
    38e6:	ef 2e       	mov	r14, r31
    38e8:	ff 24       	eor	r15, r15
    38ea:	f3 94       	inc	r15
    38ec:	f0 2d       	mov	r31, r0
    38ee:	08 ec       	ldi	r16, 0xC8	; 200
    38f0:	10 e0       	ldi	r17, 0x00	; 0
    38f2:	20 e0       	ldi	r18, 0x00	; 0
    38f4:	30 e0       	ldi	r19, 0x00	; 0
    38f6:	40 e0       	ldi	r20, 0x00	; 0
    38f8:	62 e0       	ldi	r22, 0x02	; 2
    38fa:	82 e0       	ldi	r24, 0x02	; 2
    38fc:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
    3900:	8d b7       	in	r24, 0x3d	; 61
    3902:	9e b7       	in	r25, 0x3e	; 62
    3904:	09 96       	adiw	r24, 0x09	; 9
    3906:	0f b6       	in	r0, 0x3f	; 63
    3908:	f8 94       	cli
    390a:	9e bf       	out	0x3e, r25	; 62
    390c:	0f be       	out	0x3f, r0	; 63
    390e:	8d bf       	out	0x3d, r24	; 61
    3910:	0e c0       	rjmp	.+28     	; 0x392e <aggressive+0x90>
			STEPPER_FWD, 200, 400,	//Left
			STEPPER_FWD, 200, 400);	//Right
	}else{
		STEPPER_stop(STEPPER_BOTH, STEPPER_BRK_OFF);
    3912:	60 e0       	ldi	r22, 0x00	; 0
    3914:	82 e0       	ldi	r24, 0x02	; 2
    3916:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <STEPPER_stop>
		LCD_clear();
    391a:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
		LCD_printf("RAWR!");
    391e:	86 ee       	ldi	r24, 0xE6	; 230
    3920:	91 e0       	ldi	r25, 0x01	; 1
    3922:	9f 93       	push	r25
    3924:	8f 93       	push	r24
    3926:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    392a:	0f 90       	pop	r0
    392c:	0f 90       	pop	r0
	}
}
    392e:	1f 91       	pop	r17
    3930:	0f 91       	pop	r16
    3932:	ff 90       	pop	r15
    3934:	ef 90       	pop	r14
    3936:	cf 90       	pop	r12
    3938:	bf 90       	pop	r11
    393a:	af 90       	pop	r10
    393c:	8f 90       	pop	r8
    393e:	08 95       	ret

00003940 <shy>:

// Function for the shy kid.
void shy(){
    3940:	4f 92       	push	r4
    3942:	5f 92       	push	r5
    3944:	6f 92       	push	r6
    3946:	7f 92       	push	r7
    3948:	8f 92       	push	r8
    394a:	9f 92       	push	r9
    394c:	af 92       	push	r10
    394e:	bf 92       	push	r11
    3950:	cf 92       	push	r12
    3952:	df 92       	push	r13
    3954:	ef 92       	push	r14
    3956:	ff 92       	push	r15
    3958:	0f 93       	push	r16
    395a:	1f 93       	push	r17
    395c:	cf 93       	push	r28
    395e:	df 93       	push	r29
	char RSS;
	char LSS;
	
	
	// Reads the sensors.
	frontIR = getFrontIR();
    3960:	0e 94 39 19 	call	0x3272	; 0x3272 <getFrontIR>
    3964:	46 2e       	mov	r4, r22
    3966:	57 2e       	mov	r5, r23
    3968:	68 2e       	mov	r6, r24
    396a:	c9 2f       	mov	r28, r25
	backIR = getBackIR();
    396c:	0e 94 61 19 	call	0x32c2	; 0x32c2 <getBackIR>
    3970:	76 2e       	mov	r7, r22
    3972:	87 2e       	mov	r8, r23
    3974:	98 2e       	mov	r9, r24
    3976:	d9 2f       	mov	r29, r25
	rightIR = getRightIR();
    3978:	0e 94 11 19 	call	0x3222	; 0x3222 <getRightIR>
    397c:	a6 2e       	mov	r10, r22
    397e:	b7 2e       	mov	r11, r23
    3980:	c8 2e       	mov	r12, r24
    3982:	d9 2e       	mov	r13, r25
	leftIR = getLeftIR();
    3984:	0e 94 e9 18 	call	0x31d2	; 0x31d2 <getLeftIR>
    3988:	e6 2e       	mov	r14, r22
    398a:	f7 2e       	mov	r15, r23
    398c:	08 2f       	mov	r16, r24
    398e:	19 2f       	mov	r17, r25

	LCD_clear();
    3990:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
	LCD_printf("%f, %f, %f, %f", frontIR, backIR, rightIR, leftIR);
    3994:	1f 93       	push	r17
    3996:	0f 93       	push	r16
    3998:	ff 92       	push	r15
    399a:	ef 92       	push	r14
    399c:	df 92       	push	r13
    399e:	cf 92       	push	r12
    39a0:	bf 92       	push	r11
    39a2:	af 92       	push	r10
    39a4:	df 93       	push	r29
    39a6:	9f 92       	push	r9
    39a8:	8f 92       	push	r8
    39aa:	7f 92       	push	r7
    39ac:	cf 93       	push	r28
    39ae:	6f 92       	push	r6
    39b0:	5f 92       	push	r5
    39b2:	4f 92       	push	r4
    39b4:	2c ee       	ldi	r18, 0xEC	; 236
    39b6:	31 e0       	ldi	r19, 0x01	; 1
    39b8:	3f 93       	push	r19
    39ba:	2f 93       	push	r18
    39bc:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>

	// Checks which of the sensors are being read
	FSS = (sensLimit > frontIR);
    39c0:	8d b7       	in	r24, 0x3d	; 61
    39c2:	9e b7       	in	r25, 0x3e	; 62
    39c4:	42 96       	adiw	r24, 0x12	; 18
    39c6:	0f b6       	in	r0, 0x3f	; 63
    39c8:	f8 94       	cli
    39ca:	9e bf       	out	0x3e, r25	; 62
    39cc:	0f be       	out	0x3f, r0	; 63
    39ce:	8d bf       	out	0x3d, r24	; 61
    39d0:	20 e0       	ldi	r18, 0x00	; 0
    39d2:	30 e0       	ldi	r19, 0x00	; 0
    39d4:	40 ea       	ldi	r20, 0xA0	; 160
    39d6:	50 e4       	ldi	r21, 0x40	; 64
    39d8:	64 2d       	mov	r22, r4
    39da:	75 2d       	mov	r23, r5
    39dc:	86 2d       	mov	r24, r6
    39de:	9c 2f       	mov	r25, r28
    39e0:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <__cmpsf2>
    39e4:	c8 2f       	mov	r28, r24
    39e6:	cc 1f       	adc	r28, r28
    39e8:	cc 27       	eor	r28, r28
    39ea:	cc 1f       	adc	r28, r28
	BSS = (sensLimit > backIR);
    39ec:	20 e0       	ldi	r18, 0x00	; 0
    39ee:	30 e0       	ldi	r19, 0x00	; 0
    39f0:	40 ea       	ldi	r20, 0xA0	; 160
    39f2:	50 e4       	ldi	r21, 0x40	; 64
    39f4:	67 2d       	mov	r22, r7
    39f6:	78 2d       	mov	r23, r8
    39f8:	89 2d       	mov	r24, r9
    39fa:	9d 2f       	mov	r25, r29
    39fc:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <__cmpsf2>
    3a00:	d8 2f       	mov	r29, r24
    3a02:	dd 1f       	adc	r29, r29
    3a04:	dd 27       	eor	r29, r29
    3a06:	dd 1f       	adc	r29, r29
	RSS = (sensLimit > rightIR);
    3a08:	20 e0       	ldi	r18, 0x00	; 0
    3a0a:	30 e0       	ldi	r19, 0x00	; 0
    3a0c:	40 ea       	ldi	r20, 0xA0	; 160
    3a0e:	50 e4       	ldi	r21, 0x40	; 64
    3a10:	6a 2d       	mov	r22, r10
    3a12:	7b 2d       	mov	r23, r11
    3a14:	8c 2d       	mov	r24, r12
    3a16:	9d 2d       	mov	r25, r13
    3a18:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <__cmpsf2>
    3a1c:	d8 2e       	mov	r13, r24
    3a1e:	dd 1c       	adc	r13, r13
    3a20:	dd 24       	eor	r13, r13
    3a22:	dd 1c       	adc	r13, r13
	LSS = (sensLimit > leftIR);
    3a24:	20 e0       	ldi	r18, 0x00	; 0
    3a26:	30 e0       	ldi	r19, 0x00	; 0
    3a28:	40 ea       	ldi	r20, 0xA0	; 160
    3a2a:	50 e4       	ldi	r21, 0x40	; 64
    3a2c:	6e 2d       	mov	r22, r14
    3a2e:	7f 2d       	mov	r23, r15
    3a30:	80 2f       	mov	r24, r16
    3a32:	91 2f       	mov	r25, r17
    3a34:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <__cmpsf2>
    3a38:	28 2f       	mov	r18, r24
    3a3a:	22 1f       	adc	r18, r18
    3a3c:	22 27       	eor	r18, r18
    3a3e:	22 1f       	adc	r18, r18

	// Makes the sum for switch case in Movement_Selector_Executor()
	TS = FSS + BSS + RSS + LSS;
    3a40:	0d 2f       	mov	r16, r29
    3a42:	0c 0f       	add	r16, r28
    3a44:	0d 0d       	add	r16, r13
    3a46:	02 0f       	add	r16, r18
		
	// Calls the Movement_Selector_Executor
	Movement_Selector_Excecutor(FSS, BSS, RSS, LSS, TS);
    3a48:	4d 2d       	mov	r20, r13
    3a4a:	6d 2f       	mov	r22, r29
    3a4c:	8c 2f       	mov	r24, r28
    3a4e:	0e 94 19 18 	call	0x3032	; 0x3032 <Movement_Selector_Excecutor>
}
    3a52:	df 91       	pop	r29
    3a54:	cf 91       	pop	r28
    3a56:	1f 91       	pop	r17
    3a58:	0f 91       	pop	r16
    3a5a:	ff 90       	pop	r15
    3a5c:	ef 90       	pop	r14
    3a5e:	df 90       	pop	r13
    3a60:	cf 90       	pop	r12
    3a62:	bf 90       	pop	r11
    3a64:	af 90       	pop	r10
    3a66:	9f 90       	pop	r9
    3a68:	8f 90       	pop	r8
    3a6a:	7f 90       	pop	r7
    3a6c:	6f 90       	pop	r6
    3a6e:	5f 90       	pop	r5
    3a70:	4f 90       	pop	r4
    3a72:	08 95       	ret

00003a74 <Shy_Random_Wanderer>:

// Subsumption function
void Shy_Random_Wanderer(){
    3a74:	8f 92       	push	r8
    3a76:	af 92       	push	r10
    3a78:	bf 92       	push	r11
    3a7a:	cf 92       	push	r12
    3a7c:	ef 92       	push	r14
    3a7e:	ff 92       	push	r15
    3a80:	0f 93       	push	r16
    3a82:	1f 93       	push	r17
    3a84:	cf 93       	push	r28
    3a86:	df 93       	push	r29
	char RightWheelSpeed;
	char LeftWheelSpeed;

	// Randomly select speed of wheels
	RightWheelSpeed = rand() % 201;
    3a88:	0e 94 e8 28 	call	0x51d0	; 0x51d0 <rand>
    3a8c:	ec 01       	movw	r28, r24
	LeftWheelSpeed = rand() % 201;
    3a8e:	0e 94 e8 28 	call	0x51d0	; 0x51d0 <rand>
    3a92:	29 ec       	ldi	r18, 0xC9	; 201
    3a94:	30 e0       	ldi	r19, 0x00	; 0
    3a96:	b9 01       	movw	r22, r18
    3a98:	0e 94 d8 26 	call	0x4db0	; 0x4db0 <__divmodhi4>
    3a9c:	8c 01       	movw	r16, r24
    3a9e:	11 27       	eor	r17, r17

	STEPPER_move_rn(STEPPER_BOTH,
    3aa0:	1f 92       	push	r1
    3aa2:	1f 92       	push	r1
    3aa4:	1f 92       	push	r1
    3aa6:	81 e0       	ldi	r24, 0x01	; 1
    3aa8:	8f 93       	push	r24
    3aaa:	80 e9       	ldi	r24, 0x90	; 144
    3aac:	8f 93       	push	r24
void Shy_Random_Wanderer(){
	char RightWheelSpeed;
	char LeftWheelSpeed;

	// Randomly select speed of wheels
	RightWheelSpeed = rand() % 201;
    3aae:	ce 01       	movw	r24, r28
    3ab0:	b9 01       	movw	r22, r18
    3ab2:	0e 94 d8 26 	call	0x4db0	; 0x4db0 <__divmodhi4>
    3ab6:	99 27       	eor	r25, r25
	LeftWheelSpeed = rand() % 201;

	STEPPER_move_rn(STEPPER_BOTH,
    3ab8:	9f 93       	push	r25
    3aba:	8f 93       	push	r24
    3abc:	1f 92       	push	r1
    3abe:	1f 92       	push	r1
    3ac0:	81 2c       	mov	r8, r1
    3ac2:	a1 2c       	mov	r10, r1
    3ac4:	b1 2c       	mov	r11, r1
    3ac6:	c1 2c       	mov	r12, r1
    3ac8:	0f 2e       	mov	r0, r31
    3aca:	f0 e9       	ldi	r31, 0x90	; 144
    3acc:	ef 2e       	mov	r14, r31
    3ace:	ff 24       	eor	r15, r15
    3ad0:	f3 94       	inc	r15
    3ad2:	f0 2d       	mov	r31, r0
    3ad4:	20 e0       	ldi	r18, 0x00	; 0
    3ad6:	30 e0       	ldi	r19, 0x00	; 0
    3ad8:	40 e0       	ldi	r20, 0x00	; 0
    3ada:	62 e0       	ldi	r22, 0x02	; 2
    3adc:	82 e0       	ldi	r24, 0x02	; 2
    3ade:	0e 94 ed 06 	call	0xdda	; 0xdda <STEPPER_move>
		STEPPER_FWD, LeftWheelSpeed, 400,	//Left
		STEPPER_FWD, RightWheelSpeed, 400);	//Right
	TMRSRVC_delay(500); //5 Sec duration
    3ae2:	84 ef       	ldi	r24, 0xF4	; 244
    3ae4:	91 e0       	ldi	r25, 0x01	; 1
    3ae6:	0e 94 9b 0a 	call	0x1536	; 0x1536 <TMRSRVC_delay>
	shy();
    3aea:	0e 94 a0 1c 	call	0x3940	; 0x3940 <shy>
    3aee:	8d b7       	in	r24, 0x3d	; 61
    3af0:	9e b7       	in	r25, 0x3e	; 62
    3af2:	09 96       	adiw	r24, 0x09	; 9
    3af4:	0f b6       	in	r0, 0x3f	; 63
    3af6:	f8 94       	cli
    3af8:	9e bf       	out	0x3e, r25	; 62
    3afa:	0f be       	out	0x3f, r0	; 63
    3afc:	8d bf       	out	0x3d, r24	; 61
}
    3afe:	df 91       	pop	r29
    3b00:	cf 91       	pop	r28
    3b02:	1f 91       	pop	r17
    3b04:	0f 91       	pop	r16
    3b06:	ff 90       	pop	r15
    3b08:	ef 90       	pop	r14
    3b0a:	cf 90       	pop	r12
    3b0c:	bf 90       	pop	r11
    3b0e:	af 90       	pop	r10
    3b10:	8f 90       	pop	r8
    3b12:	08 95       	ret

00003b14 <CBOT_main>:
	// local main variables:
	signed char cox = 0;
	signed char coy = 0;
	
	// Opening LCD subsystem management.
	LCD_open();
    3b14:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <LCD_open>
	
	// This information is printed on the LCD display in case this initial setup takes longer.
	LCD_printf("Setting up...");
    3b18:	8b ef       	ldi	r24, 0xFB	; 251
    3b1a:	91 e0       	ldi	r25, 0x01	; 1
    3b1c:	9f 93       	push	r25
    3b1e:	8f 93       	push	r24
    3b20:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
	
	// Subsystem open state variable information.
	SUBSYS_OPENSTAT openTiny;
	
	// Opening ATTINY subsystem management and storing returning value in openTiny that is associated to the struct SUBSYS_OPENSTAT_TYPE.
	openTiny = ATTINY_open();
    3b24:	0e 94 4c 0a 	call	0x1498	; 0x1498 <ATTINY_open>
	
	// If the state struct from openTiny is different from the expected value, an error occurs.
	if (openTiny.state != SUBSYS_OPEN){
    3b28:	0f 90       	pop	r0
    3b2a:	0f 90       	pop	r0
    3b2c:	91 30       	cpi	r25, 0x01	; 1
    3b2e:	51 f0       	breq	.+20     	; 0x3b44 <CBOT_main+0x30>
		LCD_clear();
    3b30:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
		// The error is then displayed.
		LCD_printf("Error when opening ATTINY!");
    3b34:	89 e0       	ldi	r24, 0x09	; 9
    3b36:	92 e0       	ldi	r25, 0x02	; 2
    3b38:	9f 93       	push	r25
    3b3a:	8f 93       	push	r24
    3b3c:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
    3b40:	0f 90       	pop	r0
    3b42:	0f 90       	pop	r0
	}
	
	SPKR_open(SPKR_BEEP_MODE);		// Open the speaker in beep mode
    3b44:	81 e0       	ldi	r24, 0x01	; 1
    3b46:	0e 94 c8 05 	call	0xb90	; 0xb90 <SPKR_open>
	ADC_open();						// Open the ADC module
    3b4a:	0e 94 67 03 	call	0x6ce	; 0x6ce <ADC_open>
	ADC_set_VREF( ADC_VREF_AVCC );	// Set the Voltage Reference first so VREF=5V.
    3b4e:	81 e0       	ldi	r24, 0x01	; 1
    3b50:	0e 94 c9 03 	call	0x792	; 0x792 <ADC_set_VREF>
	STEPPER_open();					// Open Stepper module.
    3b54:	0e 94 94 07 	call	0xf28	; 0xf28 <STEPPER_open>
	
	// After the initial setup, a "Ready!" message is displayed on the second line of the LCD display.
	LCD_printf("\nReady!");
    3b58:	84 e2       	ldi	r24, 0x24	; 36
    3b5a:	92 e0       	ldi	r25, 0x02	; 2
    3b5c:	9f 93       	push	r25
    3b5e:	8f 93       	push	r24
    3b60:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
	LCD_clear();
    3b64:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
    3b68:	0f 90       	pop	r0
    3b6a:	0f 90       	pop	r0
	
	// While loop that keeps the micro controller running begins here:
    while(1)
    {
		// Main menu:
		LCD_printf("SW3: Kids");
    3b6c:	0f 2e       	mov	r0, r31
    3b6e:	fc e2       	ldi	r31, 0x2C	; 44
    3b70:	4f 2e       	mov	r4, r31
    3b72:	f2 e0       	ldi	r31, 0x02	; 2
    3b74:	5f 2e       	mov	r5, r31
    3b76:	f0 2d       	mov	r31, r0
		
		// Press SW3 to select one of the kids.
		if (ATTINY_get_SW_state(ATTINY_SW3)){
			while(!ATTINY_get_SW_state(ATTINY_SW5)){ // SW5 returns to main menu
				LCD_clear();
				LCD_printf("SW3: Aggressive");
    3b78:	0f 2e       	mov	r0, r31
    3b7a:	f5 e5       	ldi	r31, 0x55	; 85
    3b7c:	ef 2e       	mov	r14, r31
    3b7e:	f2 e0       	ldi	r31, 0x02	; 2
    3b80:	ff 2e       	mov	r15, r31
    3b82:	f0 2d       	mov	r31, r0
				LCD_printf("\nSW4: Shy");
    3b84:	05 e6       	ldi	r16, 0x65	; 101
    3b86:	12 e0       	ldi	r17, 0x02	; 2
				LCD_printf("\nSW5: Back");
    3b88:	cf e6       	ldi	r28, 0x6F	; 111
    3b8a:	d2 e0       	ldi	r29, 0x02	; 2
			}
		}else if(ATTINY_get_SW_state(ATTINY_SW5)){
			// While SW5 is not pressed...
			while(!ATTINY_get_SW_state(ATTINY_SW5)){
				LCD_clear();
				LCD_printf("( %d , %d )", cox, coy); // Displays the angle selection.
    3b8c:	0f 2e       	mov	r0, r31
    3b8e:	fa e9       	ldi	r31, 0x9A	; 154
    3b90:	cf 2e       	mov	r12, r31
    3b92:	f2 e0       	ldi	r31, 0x02	; 2
    3b94:	df 2e       	mov	r13, r31
    3b96:	f0 2d       	mov	r31, r0
				LCD_printf("\nSW3 + | SW4 - \nSW5 To y");
    3b98:	0f 2e       	mov	r0, r31
    3b9a:	f6 ea       	ldi	r31, 0xA6	; 166
    3b9c:	6f 2e       	mov	r6, r31
    3b9e:	f2 e0       	ldi	r31, 0x02	; 2
    3ba0:	7f 2e       	mov	r7, r31
    3ba2:	f0 2d       	mov	r31, r0
			// After choosing the value of the coordinate x, the user must choose the value of the coordinate y:
			// While SW5 is not pressed...
			while(!ATTINY_get_SW_state(ATTINY_SW5)){
				LCD_clear();
				LCD_printf("( %d , %d )", cox, coy);
				LCD_printf("\nSW3 + | SW4 - \nSW5 Enter");
    3ba4:	0f 2e       	mov	r0, r31
    3ba6:	ff eb       	ldi	r31, 0xBF	; 191
    3ba8:	8f 2e       	mov	r8, r31
    3baa:	f2 e0       	ldi	r31, 0x02	; 2
    3bac:	9f 2e       	mov	r9, r31
    3bae:	f0 2d       	mov	r31, r0
	
	// While loop that keeps the micro controller running begins here:
    while(1)
    {
		// Main menu:
		LCD_printf("SW3: Kids");
    3bb0:	5f 92       	push	r5
    3bb2:	4f 92       	push	r4
    3bb4:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
		LCD_printf("\nSW4: Randoms");
    3bb8:	86 e3       	ldi	r24, 0x36	; 54
    3bba:	92 e0       	ldi	r25, 0x02	; 2
    3bbc:	9f 93       	push	r25
    3bbe:	8f 93       	push	r24
    3bc0:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
		LCD_printf("\nSW5: Go to goal");
    3bc4:	84 e4       	ldi	r24, 0x44	; 68
    3bc6:	92 e0       	ldi	r25, 0x02	; 2
    3bc8:	9f 93       	push	r25
    3bca:	8f 93       	push	r24
    3bcc:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
		LCD_clear();
    3bd0:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
		
		// Press SW3 to select one of the kids.
		if (ATTINY_get_SW_state(ATTINY_SW3)){
    3bd4:	80 e0       	ldi	r24, 0x00	; 0
    3bd6:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3bda:	0f 90       	pop	r0
    3bdc:	0f 90       	pop	r0
    3bde:	0f 90       	pop	r0
    3be0:	0f 90       	pop	r0
    3be2:	0f 90       	pop	r0
    3be4:	0f 90       	pop	r0
    3be6:	81 11       	cpse	r24, r1
    3be8:	25 c0       	rjmp	.+74     	; 0x3c34 <CBOT_main+0x120>
    3bea:	2a c0       	rjmp	.+84     	; 0x3c40 <CBOT_main+0x12c>
			while(!ATTINY_get_SW_state(ATTINY_SW5)){ // SW5 returns to main menu
				LCD_clear();
    3bec:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
				LCD_printf("SW3: Aggressive");
    3bf0:	ff 92       	push	r15
    3bf2:	ef 92       	push	r14
    3bf4:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
				LCD_printf("\nSW4: Shy");
    3bf8:	1f 93       	push	r17
    3bfa:	0f 93       	push	r16
    3bfc:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
				LCD_printf("\nSW5: Back");
    3c00:	df 93       	push	r29
    3c02:	cf 93       	push	r28
    3c04:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
				if(ATTINY_get_SW_state(ATTINY_SW3)){
    3c08:	80 e0       	ldi	r24, 0x00	; 0
    3c0a:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3c0e:	0f 90       	pop	r0
    3c10:	0f 90       	pop	r0
    3c12:	0f 90       	pop	r0
    3c14:	0f 90       	pop	r0
    3c16:	0f 90       	pop	r0
    3c18:	0f 90       	pop	r0
    3c1a:	88 23       	and	r24, r24
    3c1c:	19 f0       	breq	.+6      	; 0x3c24 <CBOT_main+0x110>
					while(1){
						// Selects the aggressive kid
						aggressive();
    3c1e:	0e 94 4f 1c 	call	0x389e	; 0x389e <aggressive>
    3c22:	fd cf       	rjmp	.-6      	; 0x3c1e <CBOT_main+0x10a>
					}
				}else if(ATTINY_get_SW_state(ATTINY_SW4)){
    3c24:	81 e0       	ldi	r24, 0x01	; 1
    3c26:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3c2a:	88 23       	and	r24, r24
    3c2c:	19 f0       	breq	.+6      	; 0x3c34 <CBOT_main+0x120>
					while(1){
						// Selects the shy kid
						shy();
    3c2e:	0e 94 a0 1c 	call	0x3940	; 0x3940 <shy>
    3c32:	fd cf       	rjmp	.-6      	; 0x3c2e <CBOT_main+0x11a>
		LCD_printf("\nSW5: Go to goal");
		LCD_clear();
		
		// Press SW3 to select one of the kids.
		if (ATTINY_get_SW_state(ATTINY_SW3)){
			while(!ATTINY_get_SW_state(ATTINY_SW5)){ // SW5 returns to main menu
    3c34:	82 e0       	ldi	r24, 0x02	; 2
    3c36:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3c3a:	88 23       	and	r24, r24
    3c3c:	b9 f2       	breq	.-82     	; 0x3bec <CBOT_main+0xd8>
    3c3e:	b8 cf       	rjmp	.-144    	; 0x3bb0 <CBOT_main+0x9c>
						// Selects the shy kid
						shy();
					}
				}
			}
		}else if(ATTINY_get_SW_state(ATTINY_SW4)){
    3c40:	81 e0       	ldi	r24, 0x01	; 1
    3c42:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3c46:	88 23       	and	r24, r24
    3c48:	79 f1       	breq	.+94     	; 0x3ca8 <CBOT_main+0x194>
			LCD_clear();
    3c4a:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
			LCD_printf("SW3: Random.");
    3c4e:	8a e7       	ldi	r24, 0x7A	; 122
    3c50:	92 e0       	ldi	r25, 0x02	; 2
    3c52:	9f 93       	push	r25
    3c54:	8f 93       	push	r24
    3c56:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
			LCD_printf("\nSW4: Subsumption.");
    3c5a:	87 e8       	ldi	r24, 0x87	; 135
    3c5c:	92 e0       	ldi	r25, 0x02	; 2
    3c5e:	9f 93       	push	r25
    3c60:	8f 93       	push	r24
    3c62:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
			LCD_printf("\nSW5: Back");
    3c66:	df 93       	push	r29
    3c68:	cf 93       	push	r28
    3c6a:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
			while(!ATTINY_get_SW_state(ATTINY_SW5)){ // SW5 returns to main menu
    3c6e:	0f 90       	pop	r0
    3c70:	0f 90       	pop	r0
    3c72:	0f 90       	pop	r0
    3c74:	0f 90       	pop	r0
    3c76:	0f 90       	pop	r0
    3c78:	0f 90       	pop	r0
    3c7a:	10 c0       	rjmp	.+32     	; 0x3c9c <CBOT_main+0x188>
				if(ATTINY_get_SW_state(ATTINY_SW3)){
    3c7c:	80 e0       	ldi	r24, 0x00	; 0
    3c7e:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3c82:	88 23       	and	r24, r24
    3c84:	19 f0       	breq	.+6      	; 0x3c8c <CBOT_main+0x178>
					while(1){
						// Selects the random wanderer
						Random_Wanderer();
    3c86:	0e 94 9b 18 	call	0x3136	; 0x3136 <Random_Wanderer>
    3c8a:	fd cf       	rjmp	.-6      	; 0x3c86 <CBOT_main+0x172>
					}
				}else if(ATTINY_get_SW_state(ATTINY_SW4)){
    3c8c:	81 e0       	ldi	r24, 0x01	; 1
    3c8e:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3c92:	88 23       	and	r24, r24
    3c94:	19 f0       	breq	.+6      	; 0x3c9c <CBOT_main+0x188>
					while(1){
						// Selects Subsumption
						Shy_Random_Wanderer();
    3c96:	0e 94 3a 1d 	call	0x3a74	; 0x3a74 <Shy_Random_Wanderer>
    3c9a:	fd cf       	rjmp	.-6      	; 0x3c96 <CBOT_main+0x182>
		}else if(ATTINY_get_SW_state(ATTINY_SW4)){
			LCD_clear();
			LCD_printf("SW3: Random.");
			LCD_printf("\nSW4: Subsumption.");
			LCD_printf("\nSW5: Back");
			while(!ATTINY_get_SW_state(ATTINY_SW5)){ // SW5 returns to main menu
    3c9c:	82 e0       	ldi	r24, 0x02	; 2
    3c9e:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3ca2:	88 23       	and	r24, r24
    3ca4:	59 f3       	breq	.-42     	; 0x3c7c <CBOT_main+0x168>
    3ca6:	84 cf       	rjmp	.-248    	; 0x3bb0 <CBOT_main+0x9c>
						// Selects Subsumption
						Shy_Random_Wanderer();
					}
				}
			}
		}else if(ATTINY_get_SW_state(ATTINY_SW5)){
    3ca8:	82 e0       	ldi	r24, 0x02	; 2
    3caa:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3cae:	88 23       	and	r24, r24
    3cb0:	09 f4       	brne	.+2      	; 0x3cb4 <CBOT_main+0x1a0>
    3cb2:	7e cf       	rjmp	.-260    	; 0x3bb0 <CBOT_main+0x9c>
    3cb4:	b1 2c       	mov	r11, r1
					// If SW4 is pressed, the coordinate x is decremented.
					}else if(ATTINY_get_SW_state(ATTINY_SW4)){
					cox--;
					// If the x value is < -5, it goes back to 5.
					if(cox < -5){
						cox = 5;
    3cb6:	0f 2e       	mov	r0, r31
    3cb8:	f5 e0       	ldi	r31, 0x05	; 5
    3cba:	3f 2e       	mov	r3, r31
    3cbc:	f0 2d       	mov	r31, r0
				// If SW3 is pressed, the coordinate x is incremented.
				if(ATTINY_get_SW_state(ATTINY_SW3)){
					cox++;
					// If the x value is > 5, it goes back to -5.
					if (cox > 5){
						cox = -5;
    3cbe:	0f 2e       	mov	r0, r31
    3cc0:	fb ef       	ldi	r31, 0xFB	; 251
    3cc2:	af 2e       	mov	r10, r31
    3cc4:	f0 2d       	mov	r31, r0
    3cc6:	32 c0       	rjmp	.+100    	; 0x3d2c <CBOT_main+0x218>
				}
			}
		}else if(ATTINY_get_SW_state(ATTINY_SW5)){
			// While SW5 is not pressed...
			while(!ATTINY_get_SW_state(ATTINY_SW5)){
				LCD_clear();
    3cc8:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
				LCD_printf("( %d , %d )", cox, coy); // Displays the angle selection.
    3ccc:	1f 92       	push	r1
    3cce:	1f 92       	push	r1
    3cd0:	8b 2d       	mov	r24, r11
    3cd2:	99 27       	eor	r25, r25
    3cd4:	87 fd       	sbrc	r24, 7
    3cd6:	90 95       	com	r25
    3cd8:	9f 93       	push	r25
    3cda:	bf 92       	push	r11
    3cdc:	df 92       	push	r13
    3cde:	cf 92       	push	r12
    3ce0:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
				LCD_printf("\nSW3 + | SW4 - \nSW5 To y");
    3ce4:	7f 92       	push	r7
    3ce6:	6f 92       	push	r6
    3ce8:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
				// If SW3 is pressed, the coordinate x is incremented.
				if(ATTINY_get_SW_state(ATTINY_SW3)){
    3cec:	80 e0       	ldi	r24, 0x00	; 0
    3cee:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3cf2:	2d b7       	in	r18, 0x3d	; 61
    3cf4:	3e b7       	in	r19, 0x3e	; 62
    3cf6:	28 5f       	subi	r18, 0xF8	; 248
    3cf8:	3f 4f       	sbci	r19, 0xFF	; 255
    3cfa:	0f b6       	in	r0, 0x3f	; 63
    3cfc:	f8 94       	cli
    3cfe:	3e bf       	out	0x3e, r19	; 62
    3d00:	0f be       	out	0x3f, r0	; 63
    3d02:	2d bf       	out	0x3d, r18	; 61
    3d04:	88 23       	and	r24, r24
    3d06:	29 f0       	breq	.+10     	; 0x3d12 <CBOT_main+0x1fe>
					cox++;
    3d08:	b3 94       	inc	r11
					// If the x value is > 5, it goes back to -5.
					if (cox > 5){
    3d0a:	35 e0       	ldi	r19, 0x05	; 5
    3d0c:	3b 15       	cp	r19, r11
    3d0e:	5c f0       	brlt	.+22     	; 0x3d26 <CBOT_main+0x212>
    3d10:	0d c0       	rjmp	.+26     	; 0x3d2c <CBOT_main+0x218>
						cox = -5;
					}
					// If SW4 is pressed, the coordinate x is decremented.
					}else if(ATTINY_get_SW_state(ATTINY_SW4)){
    3d12:	81 e0       	ldi	r24, 0x01	; 1
    3d14:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3d18:	88 23       	and	r24, r24
    3d1a:	41 f0       	breq	.+16     	; 0x3d2c <CBOT_main+0x218>
					cox--;
    3d1c:	ba 94       	dec	r11
					// If the x value is < -5, it goes back to 5.
					if(cox < -5){
    3d1e:	8b ef       	ldi	r24, 0xFB	; 251
    3d20:	b8 16       	cp	r11, r24
    3d22:	1c f0       	brlt	.+6      	; 0x3d2a <CBOT_main+0x216>
    3d24:	03 c0       	rjmp	.+6      	; 0x3d2c <CBOT_main+0x218>
				// If SW3 is pressed, the coordinate x is incremented.
				if(ATTINY_get_SW_state(ATTINY_SW3)){
					cox++;
					// If the x value is > 5, it goes back to -5.
					if (cox > 5){
						cox = -5;
    3d26:	ba 2c       	mov	r11, r10
    3d28:	01 c0       	rjmp	.+2      	; 0x3d2c <CBOT_main+0x218>
					// If SW4 is pressed, the coordinate x is decremented.
					}else if(ATTINY_get_SW_state(ATTINY_SW4)){
					cox--;
					// If the x value is < -5, it goes back to 5.
					if(cox < -5){
						cox = 5;
    3d2a:	b3 2c       	mov	r11, r3
					}
				}
			}
		}else if(ATTINY_get_SW_state(ATTINY_SW5)){
			// While SW5 is not pressed...
			while(!ATTINY_get_SW_state(ATTINY_SW5)){
    3d2c:	82 e0       	ldi	r24, 0x02	; 2
    3d2e:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3d32:	88 23       	and	r24, r24
    3d34:	49 f2       	breq	.-110    	; 0x3cc8 <CBOT_main+0x1b4>
    3d36:	a1 2c       	mov	r10, r1
			}
			// After choosing the value of the coordinate x, the user must choose the value of the coordinate y:
			// While SW5 is not pressed...
			while(!ATTINY_get_SW_state(ATTINY_SW5)){
				LCD_clear();
				LCD_printf("( %d , %d )", cox, coy);
    3d38:	2b 2c       	mov	r2, r11
    3d3a:	33 24       	eor	r3, r3
    3d3c:	27 fc       	sbrc	r2, 7
    3d3e:	30 94       	com	r3
    3d40:	38 c0       	rjmp	.+112    	; 0x3db2 <CBOT_main+0x29e>
				}
			}
			// After choosing the value of the coordinate x, the user must choose the value of the coordinate y:
			// While SW5 is not pressed...
			while(!ATTINY_get_SW_state(ATTINY_SW5)){
				LCD_clear();
    3d42:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
				LCD_printf("( %d , %d )", cox, coy);
    3d46:	8a 2d       	mov	r24, r10
    3d48:	99 27       	eor	r25, r25
    3d4a:	87 fd       	sbrc	r24, 7
    3d4c:	90 95       	com	r25
    3d4e:	9f 93       	push	r25
    3d50:	af 92       	push	r10
    3d52:	3f 92       	push	r3
    3d54:	bf 92       	push	r11
    3d56:	df 92       	push	r13
    3d58:	cf 92       	push	r12
    3d5a:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
				LCD_printf("\nSW3 + | SW4 - \nSW5 Enter");
    3d5e:	9f 92       	push	r9
    3d60:	8f 92       	push	r8
    3d62:	0e 94 18 2a 	call	0x5430	; 0x5430 <printf>
				// If SW3 is pressed, the coordinate y is incremented.
				if(ATTINY_get_SW_state(ATTINY_SW3)){
    3d66:	80 e0       	ldi	r24, 0x00	; 0
    3d68:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3d6c:	2d b7       	in	r18, 0x3d	; 61
    3d6e:	3e b7       	in	r19, 0x3e	; 62
    3d70:	28 5f       	subi	r18, 0xF8	; 248
    3d72:	3f 4f       	sbci	r19, 0xFF	; 255
    3d74:	0f b6       	in	r0, 0x3f	; 63
    3d76:	f8 94       	cli
    3d78:	3e bf       	out	0x3e, r19	; 62
    3d7a:	0f be       	out	0x3f, r0	; 63
    3d7c:	2d bf       	out	0x3d, r18	; 61
    3d7e:	88 23       	and	r24, r24
    3d80:	29 f0       	breq	.+10     	; 0x3d8c <CBOT_main+0x278>
					coy++;
    3d82:	a3 94       	inc	r10
					// If the x value is > 5, it goes back to -5.
					if (coy > 5){
    3d84:	35 e0       	ldi	r19, 0x05	; 5
    3d86:	3a 15       	cp	r19, r10
    3d88:	5c f0       	brlt	.+22     	; 0x3da0 <CBOT_main+0x28c>
    3d8a:	13 c0       	rjmp	.+38     	; 0x3db2 <CBOT_main+0x29e>
						coy = -5;
					}
					// If SW4 is pressed, the coordinate y is decremented.
					}else if(ATTINY_get_SW_state(ATTINY_SW4)){
    3d8c:	81 e0       	ldi	r24, 0x01	; 1
    3d8e:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3d92:	88 23       	and	r24, r24
    3d94:	71 f0       	breq	.+28     	; 0x3db2 <CBOT_main+0x29e>
						coy--;
    3d96:	aa 94       	dec	r10
					// If the x value is < -5, it goes back to 5
					if(coy < -5){
    3d98:	8b ef       	ldi	r24, 0xFB	; 251
    3d9a:	a8 16       	cp	r10, r24
    3d9c:	34 f0       	brlt	.+12     	; 0x3daa <CBOT_main+0x296>
    3d9e:	09 c0       	rjmp	.+18     	; 0x3db2 <CBOT_main+0x29e>
				// If SW3 is pressed, the coordinate y is incremented.
				if(ATTINY_get_SW_state(ATTINY_SW3)){
					coy++;
					// If the x value is > 5, it goes back to -5.
					if (coy > 5){
						coy = -5;
    3da0:	0f 2e       	mov	r0, r31
    3da2:	fb ef       	ldi	r31, 0xFB	; 251
    3da4:	af 2e       	mov	r10, r31
    3da6:	f0 2d       	mov	r31, r0
    3da8:	04 c0       	rjmp	.+8      	; 0x3db2 <CBOT_main+0x29e>
					// If SW4 is pressed, the coordinate y is decremented.
					}else if(ATTINY_get_SW_state(ATTINY_SW4)){
						coy--;
					// If the x value is < -5, it goes back to 5
					if(coy < -5){
						coy = 5;
    3daa:	0f 2e       	mov	r0, r31
    3dac:	f5 e0       	ldi	r31, 0x05	; 5
    3dae:	af 2e       	mov	r10, r31
    3db0:	f0 2d       	mov	r31, r0
					}
				}
			}
			// After choosing the value of the coordinate x, the user must choose the value of the coordinate y:
			// While SW5 is not pressed...
			while(!ATTINY_get_SW_state(ATTINY_SW5)){
    3db2:	82 e0       	ldi	r24, 0x02	; 2
    3db4:	0e 94 fe 09 	call	0x13fc	; 0x13fc <ATTINY_get_SW_state>
    3db8:	88 23       	and	r24, r24
    3dba:	19 f2       	breq	.-122    	; 0x3d42 <CBOT_main+0x22e>
						coy = 5;
					}
				}
			}
			// Calls go to goal point function.
			go2Point(cox,coy);
    3dbc:	6a 2d       	mov	r22, r10
    3dbe:	8b 2d       	mov	r24, r11
    3dc0:	0e 94 bd 1a 	call	0x357a	; 0x357a <go2Point>
			// Clears the variables up.
			cox = 0;
			coy = 0;
			LCD_clear();
    3dc4:	0e 94 dd 03 	call	0x7ba	; 0x7ba <LCD_clear>
    3dc8:	f3 ce       	rjmp	.-538    	; 0x3bb0 <CBOT_main+0x9c>

00003dca <__subsf3>:
    3dca:	50 58       	subi	r21, 0x80	; 128

00003dcc <__addsf3>:
    3dcc:	bb 27       	eor	r27, r27
    3dce:	aa 27       	eor	r26, r26
    3dd0:	0e d0       	rcall	.+28     	; 0x3dee <__addsf3x>
    3dd2:	fc c1       	rjmp	.+1016   	; 0x41cc <__fp_round>
    3dd4:	ed d1       	rcall	.+986    	; 0x41b0 <__fp_pscA>
    3dd6:	30 f0       	brcs	.+12     	; 0x3de4 <__addsf3+0x18>
    3dd8:	f2 d1       	rcall	.+996    	; 0x41be <__fp_pscB>
    3dda:	20 f0       	brcs	.+8      	; 0x3de4 <__addsf3+0x18>
    3ddc:	31 f4       	brne	.+12     	; 0x3dea <__addsf3+0x1e>
    3dde:	9f 3f       	cpi	r25, 0xFF	; 255
    3de0:	11 f4       	brne	.+4      	; 0x3de6 <__addsf3+0x1a>
    3de2:	1e f4       	brtc	.+6      	; 0x3dea <__addsf3+0x1e>
    3de4:	bd c1       	rjmp	.+890    	; 0x4160 <__fp_nan>
    3de6:	0e f4       	brtc	.+2      	; 0x3dea <__addsf3+0x1e>
    3de8:	e0 95       	com	r30
    3dea:	e7 fb       	bst	r30, 7
    3dec:	b3 c1       	rjmp	.+870    	; 0x4154 <__fp_inf>

00003dee <__addsf3x>:
    3dee:	e9 2f       	mov	r30, r25
    3df0:	fe d1       	rcall	.+1020   	; 0x41ee <__fp_split3>
    3df2:	80 f3       	brcs	.-32     	; 0x3dd4 <__addsf3+0x8>
    3df4:	ba 17       	cp	r27, r26
    3df6:	62 07       	cpc	r22, r18
    3df8:	73 07       	cpc	r23, r19
    3dfa:	84 07       	cpc	r24, r20
    3dfc:	95 07       	cpc	r25, r21
    3dfe:	18 f0       	brcs	.+6      	; 0x3e06 <__addsf3x+0x18>
    3e00:	71 f4       	brne	.+28     	; 0x3e1e <__addsf3x+0x30>
    3e02:	9e f5       	brtc	.+102    	; 0x3e6a <__addsf3x+0x7c>
    3e04:	16 c2       	rjmp	.+1068   	; 0x4232 <__fp_zero>
    3e06:	0e f4       	brtc	.+2      	; 0x3e0a <__addsf3x+0x1c>
    3e08:	e0 95       	com	r30
    3e0a:	0b 2e       	mov	r0, r27
    3e0c:	ba 2f       	mov	r27, r26
    3e0e:	a0 2d       	mov	r26, r0
    3e10:	0b 01       	movw	r0, r22
    3e12:	b9 01       	movw	r22, r18
    3e14:	90 01       	movw	r18, r0
    3e16:	0c 01       	movw	r0, r24
    3e18:	ca 01       	movw	r24, r20
    3e1a:	a0 01       	movw	r20, r0
    3e1c:	11 24       	eor	r1, r1
    3e1e:	ff 27       	eor	r31, r31
    3e20:	59 1b       	sub	r21, r25
    3e22:	99 f0       	breq	.+38     	; 0x3e4a <__addsf3x+0x5c>
    3e24:	59 3f       	cpi	r21, 0xF9	; 249
    3e26:	50 f4       	brcc	.+20     	; 0x3e3c <__addsf3x+0x4e>
    3e28:	50 3e       	cpi	r21, 0xE0	; 224
    3e2a:	68 f1       	brcs	.+90     	; 0x3e86 <__addsf3x+0x98>
    3e2c:	1a 16       	cp	r1, r26
    3e2e:	f0 40       	sbci	r31, 0x00	; 0
    3e30:	a2 2f       	mov	r26, r18
    3e32:	23 2f       	mov	r18, r19
    3e34:	34 2f       	mov	r19, r20
    3e36:	44 27       	eor	r20, r20
    3e38:	58 5f       	subi	r21, 0xF8	; 248
    3e3a:	f3 cf       	rjmp	.-26     	; 0x3e22 <__addsf3x+0x34>
    3e3c:	46 95       	lsr	r20
    3e3e:	37 95       	ror	r19
    3e40:	27 95       	ror	r18
    3e42:	a7 95       	ror	r26
    3e44:	f0 40       	sbci	r31, 0x00	; 0
    3e46:	53 95       	inc	r21
    3e48:	c9 f7       	brne	.-14     	; 0x3e3c <__addsf3x+0x4e>
    3e4a:	7e f4       	brtc	.+30     	; 0x3e6a <__addsf3x+0x7c>
    3e4c:	1f 16       	cp	r1, r31
    3e4e:	ba 0b       	sbc	r27, r26
    3e50:	62 0b       	sbc	r22, r18
    3e52:	73 0b       	sbc	r23, r19
    3e54:	84 0b       	sbc	r24, r20
    3e56:	ba f0       	brmi	.+46     	; 0x3e86 <__addsf3x+0x98>
    3e58:	91 50       	subi	r25, 0x01	; 1
    3e5a:	a1 f0       	breq	.+40     	; 0x3e84 <__addsf3x+0x96>
    3e5c:	ff 0f       	add	r31, r31
    3e5e:	bb 1f       	adc	r27, r27
    3e60:	66 1f       	adc	r22, r22
    3e62:	77 1f       	adc	r23, r23
    3e64:	88 1f       	adc	r24, r24
    3e66:	c2 f7       	brpl	.-16     	; 0x3e58 <__addsf3x+0x6a>
    3e68:	0e c0       	rjmp	.+28     	; 0x3e86 <__addsf3x+0x98>
    3e6a:	ba 0f       	add	r27, r26
    3e6c:	62 1f       	adc	r22, r18
    3e6e:	73 1f       	adc	r23, r19
    3e70:	84 1f       	adc	r24, r20
    3e72:	48 f4       	brcc	.+18     	; 0x3e86 <__addsf3x+0x98>
    3e74:	87 95       	ror	r24
    3e76:	77 95       	ror	r23
    3e78:	67 95       	ror	r22
    3e7a:	b7 95       	ror	r27
    3e7c:	f7 95       	ror	r31
    3e7e:	9e 3f       	cpi	r25, 0xFE	; 254
    3e80:	08 f0       	brcs	.+2      	; 0x3e84 <__addsf3x+0x96>
    3e82:	b3 cf       	rjmp	.-154    	; 0x3dea <__addsf3+0x1e>
    3e84:	93 95       	inc	r25
    3e86:	88 0f       	add	r24, r24
    3e88:	08 f0       	brcs	.+2      	; 0x3e8c <__addsf3x+0x9e>
    3e8a:	99 27       	eor	r25, r25
    3e8c:	ee 0f       	add	r30, r30
    3e8e:	97 95       	ror	r25
    3e90:	87 95       	ror	r24
    3e92:	08 95       	ret
    3e94:	8d d1       	rcall	.+794    	; 0x41b0 <__fp_pscA>
    3e96:	58 f0       	brcs	.+22     	; 0x3eae <__addsf3x+0xc0>
    3e98:	80 e8       	ldi	r24, 0x80	; 128
    3e9a:	91 e0       	ldi	r25, 0x01	; 1
    3e9c:	09 f4       	brne	.+2      	; 0x3ea0 <__addsf3x+0xb2>
    3e9e:	9e ef       	ldi	r25, 0xFE	; 254
    3ea0:	8e d1       	rcall	.+796    	; 0x41be <__fp_pscB>
    3ea2:	28 f0       	brcs	.+10     	; 0x3eae <__addsf3x+0xc0>
    3ea4:	40 e8       	ldi	r20, 0x80	; 128
    3ea6:	51 e0       	ldi	r21, 0x01	; 1
    3ea8:	59 f4       	brne	.+22     	; 0x3ec0 <atan2+0xe>
    3eaa:	5e ef       	ldi	r21, 0xFE	; 254
    3eac:	09 c0       	rjmp	.+18     	; 0x3ec0 <atan2+0xe>
    3eae:	58 c1       	rjmp	.+688    	; 0x4160 <__fp_nan>
    3eb0:	c0 c1       	rjmp	.+896    	; 0x4232 <__fp_zero>

00003eb2 <atan2>:
    3eb2:	e9 2f       	mov	r30, r25
    3eb4:	e0 78       	andi	r30, 0x80	; 128
    3eb6:	9b d1       	rcall	.+822    	; 0x41ee <__fp_split3>
    3eb8:	68 f3       	brcs	.-38     	; 0x3e94 <__addsf3x+0xa6>
    3eba:	09 2e       	mov	r0, r25
    3ebc:	05 2a       	or	r0, r21
    3ebe:	c1 f3       	breq	.-16     	; 0x3eb0 <__addsf3x+0xc2>
    3ec0:	26 17       	cp	r18, r22
    3ec2:	37 07       	cpc	r19, r23
    3ec4:	48 07       	cpc	r20, r24
    3ec6:	59 07       	cpc	r21, r25
    3ec8:	38 f0       	brcs	.+14     	; 0x3ed8 <atan2+0x26>
    3eca:	0e 2e       	mov	r0, r30
    3ecc:	07 f8       	bld	r0, 7
    3ece:	e0 25       	eor	r30, r0
    3ed0:	69 f0       	breq	.+26     	; 0x3eec <atan2+0x3a>
    3ed2:	e0 25       	eor	r30, r0
    3ed4:	e0 64       	ori	r30, 0x40	; 64
    3ed6:	0a c0       	rjmp	.+20     	; 0x3eec <atan2+0x3a>
    3ed8:	ef 63       	ori	r30, 0x3F	; 63
    3eda:	07 f8       	bld	r0, 7
    3edc:	00 94       	com	r0
    3ede:	07 fa       	bst	r0, 7
    3ee0:	db 01       	movw	r26, r22
    3ee2:	b9 01       	movw	r22, r18
    3ee4:	9d 01       	movw	r18, r26
    3ee6:	dc 01       	movw	r26, r24
    3ee8:	ca 01       	movw	r24, r20
    3eea:	ad 01       	movw	r20, r26
    3eec:	ef 93       	push	r30
    3eee:	47 d0       	rcall	.+142    	; 0x3f7e <__divsf3_pse>
    3ef0:	6d d1       	rcall	.+730    	; 0x41cc <__fp_round>
    3ef2:	0a d0       	rcall	.+20     	; 0x3f08 <atan>
    3ef4:	5f 91       	pop	r21
    3ef6:	55 23       	and	r21, r21
    3ef8:	31 f0       	breq	.+12     	; 0x3f06 <atan2+0x54>
    3efa:	2b ed       	ldi	r18, 0xDB	; 219
    3efc:	3f e0       	ldi	r19, 0x0F	; 15
    3efe:	49 e4       	ldi	r20, 0x49	; 73
    3f00:	50 fd       	sbrc	r21, 0
    3f02:	49 ec       	ldi	r20, 0xC9	; 201
    3f04:	63 cf       	rjmp	.-314    	; 0x3dcc <__addsf3>
    3f06:	08 95       	ret

00003f08 <atan>:
    3f08:	df 93       	push	r29
    3f0a:	dd 27       	eor	r29, r29
    3f0c:	b9 2f       	mov	r27, r25
    3f0e:	bf 77       	andi	r27, 0x7F	; 127
    3f10:	40 e8       	ldi	r20, 0x80	; 128
    3f12:	5f e3       	ldi	r21, 0x3F	; 63
    3f14:	16 16       	cp	r1, r22
    3f16:	17 06       	cpc	r1, r23
    3f18:	48 07       	cpc	r20, r24
    3f1a:	5b 07       	cpc	r21, r27
    3f1c:	10 f4       	brcc	.+4      	; 0x3f22 <atan+0x1a>
    3f1e:	d9 2f       	mov	r29, r25
    3f20:	93 d1       	rcall	.+806    	; 0x4248 <inverse>
    3f22:	9f 93       	push	r25
    3f24:	8f 93       	push	r24
    3f26:	7f 93       	push	r23
    3f28:	6f 93       	push	r22
    3f2a:	3a d2       	rcall	.+1140   	; 0x43a0 <square>
    3f2c:	ec e7       	ldi	r30, 0x7C	; 124
    3f2e:	f0 e0       	ldi	r31, 0x00	; 0
    3f30:	1a d1       	rcall	.+564    	; 0x4166 <__fp_powser>
    3f32:	4c d1       	rcall	.+664    	; 0x41cc <__fp_round>
    3f34:	2f 91       	pop	r18
    3f36:	3f 91       	pop	r19
    3f38:	4f 91       	pop	r20
    3f3a:	5f 91       	pop	r21
    3f3c:	98 d1       	rcall	.+816    	; 0x426e <__mulsf3x>
    3f3e:	dd 23       	and	r29, r29
    3f40:	49 f0       	breq	.+18     	; 0x3f54 <atan+0x4c>
    3f42:	90 58       	subi	r25, 0x80	; 128
    3f44:	a2 ea       	ldi	r26, 0xA2	; 162
    3f46:	2a ed       	ldi	r18, 0xDA	; 218
    3f48:	3f e0       	ldi	r19, 0x0F	; 15
    3f4a:	49 ec       	ldi	r20, 0xC9	; 201
    3f4c:	5f e3       	ldi	r21, 0x3F	; 63
    3f4e:	d0 78       	andi	r29, 0x80	; 128
    3f50:	5d 27       	eor	r21, r29
    3f52:	4d df       	rcall	.-358    	; 0x3dee <__addsf3x>
    3f54:	df 91       	pop	r29
    3f56:	3a c1       	rjmp	.+628    	; 0x41cc <__fp_round>

00003f58 <__cmpsf2>:
    3f58:	d9 d0       	rcall	.+434    	; 0x410c <__fp_cmp>
    3f5a:	08 f4       	brcc	.+2      	; 0x3f5e <__cmpsf2+0x6>
    3f5c:	81 e0       	ldi	r24, 0x01	; 1
    3f5e:	08 95       	ret

00003f60 <__divsf3>:
    3f60:	0c d0       	rcall	.+24     	; 0x3f7a <__divsf3x>
    3f62:	34 c1       	rjmp	.+616    	; 0x41cc <__fp_round>
    3f64:	2c d1       	rcall	.+600    	; 0x41be <__fp_pscB>
    3f66:	40 f0       	brcs	.+16     	; 0x3f78 <__divsf3+0x18>
    3f68:	23 d1       	rcall	.+582    	; 0x41b0 <__fp_pscA>
    3f6a:	30 f0       	brcs	.+12     	; 0x3f78 <__divsf3+0x18>
    3f6c:	21 f4       	brne	.+8      	; 0x3f76 <__divsf3+0x16>
    3f6e:	5f 3f       	cpi	r21, 0xFF	; 255
    3f70:	19 f0       	breq	.+6      	; 0x3f78 <__divsf3+0x18>
    3f72:	f0 c0       	rjmp	.+480    	; 0x4154 <__fp_inf>
    3f74:	51 11       	cpse	r21, r1
    3f76:	5e c1       	rjmp	.+700    	; 0x4234 <__fp_szero>
    3f78:	f3 c0       	rjmp	.+486    	; 0x4160 <__fp_nan>

00003f7a <__divsf3x>:
    3f7a:	39 d1       	rcall	.+626    	; 0x41ee <__fp_split3>
    3f7c:	98 f3       	brcs	.-26     	; 0x3f64 <__divsf3+0x4>

00003f7e <__divsf3_pse>:
    3f7e:	99 23       	and	r25, r25
    3f80:	c9 f3       	breq	.-14     	; 0x3f74 <__divsf3+0x14>
    3f82:	55 23       	and	r21, r21
    3f84:	b1 f3       	breq	.-20     	; 0x3f72 <__divsf3+0x12>
    3f86:	95 1b       	sub	r25, r21
    3f88:	55 0b       	sbc	r21, r21
    3f8a:	bb 27       	eor	r27, r27
    3f8c:	aa 27       	eor	r26, r26
    3f8e:	62 17       	cp	r22, r18
    3f90:	73 07       	cpc	r23, r19
    3f92:	84 07       	cpc	r24, r20
    3f94:	38 f0       	brcs	.+14     	; 0x3fa4 <__divsf3_pse+0x26>
    3f96:	9f 5f       	subi	r25, 0xFF	; 255
    3f98:	5f 4f       	sbci	r21, 0xFF	; 255
    3f9a:	22 0f       	add	r18, r18
    3f9c:	33 1f       	adc	r19, r19
    3f9e:	44 1f       	adc	r20, r20
    3fa0:	aa 1f       	adc	r26, r26
    3fa2:	a9 f3       	breq	.-22     	; 0x3f8e <__divsf3_pse+0x10>
    3fa4:	33 d0       	rcall	.+102    	; 0x400c <__divsf3_pse+0x8e>
    3fa6:	0e 2e       	mov	r0, r30
    3fa8:	3a f0       	brmi	.+14     	; 0x3fb8 <__divsf3_pse+0x3a>
    3faa:	e0 e8       	ldi	r30, 0x80	; 128
    3fac:	30 d0       	rcall	.+96     	; 0x400e <__divsf3_pse+0x90>
    3fae:	91 50       	subi	r25, 0x01	; 1
    3fb0:	50 40       	sbci	r21, 0x00	; 0
    3fb2:	e6 95       	lsr	r30
    3fb4:	00 1c       	adc	r0, r0
    3fb6:	ca f7       	brpl	.-14     	; 0x3faa <__divsf3_pse+0x2c>
    3fb8:	29 d0       	rcall	.+82     	; 0x400c <__divsf3_pse+0x8e>
    3fba:	fe 2f       	mov	r31, r30
    3fbc:	27 d0       	rcall	.+78     	; 0x400c <__divsf3_pse+0x8e>
    3fbe:	66 0f       	add	r22, r22
    3fc0:	77 1f       	adc	r23, r23
    3fc2:	88 1f       	adc	r24, r24
    3fc4:	bb 1f       	adc	r27, r27
    3fc6:	26 17       	cp	r18, r22
    3fc8:	37 07       	cpc	r19, r23
    3fca:	48 07       	cpc	r20, r24
    3fcc:	ab 07       	cpc	r26, r27
    3fce:	b0 e8       	ldi	r27, 0x80	; 128
    3fd0:	09 f0       	breq	.+2      	; 0x3fd4 <__divsf3_pse+0x56>
    3fd2:	bb 0b       	sbc	r27, r27
    3fd4:	80 2d       	mov	r24, r0
    3fd6:	bf 01       	movw	r22, r30
    3fd8:	ff 27       	eor	r31, r31
    3fda:	93 58       	subi	r25, 0x83	; 131
    3fdc:	5f 4f       	sbci	r21, 0xFF	; 255
    3fde:	2a f0       	brmi	.+10     	; 0x3fea <__divsf3_pse+0x6c>
    3fe0:	9e 3f       	cpi	r25, 0xFE	; 254
    3fe2:	51 05       	cpc	r21, r1
    3fe4:	68 f0       	brcs	.+26     	; 0x4000 <__divsf3_pse+0x82>
    3fe6:	b6 c0       	rjmp	.+364    	; 0x4154 <__fp_inf>
    3fe8:	25 c1       	rjmp	.+586    	; 0x4234 <__fp_szero>
    3fea:	5f 3f       	cpi	r21, 0xFF	; 255
    3fec:	ec f3       	brlt	.-6      	; 0x3fe8 <__divsf3_pse+0x6a>
    3fee:	98 3e       	cpi	r25, 0xE8	; 232
    3ff0:	dc f3       	brlt	.-10     	; 0x3fe8 <__divsf3_pse+0x6a>
    3ff2:	86 95       	lsr	r24
    3ff4:	77 95       	ror	r23
    3ff6:	67 95       	ror	r22
    3ff8:	b7 95       	ror	r27
    3ffa:	f7 95       	ror	r31
    3ffc:	9f 5f       	subi	r25, 0xFF	; 255
    3ffe:	c9 f7       	brne	.-14     	; 0x3ff2 <__divsf3_pse+0x74>
    4000:	88 0f       	add	r24, r24
    4002:	91 1d       	adc	r25, r1
    4004:	96 95       	lsr	r25
    4006:	87 95       	ror	r24
    4008:	97 f9       	bld	r25, 7
    400a:	08 95       	ret
    400c:	e1 e0       	ldi	r30, 0x01	; 1
    400e:	66 0f       	add	r22, r22
    4010:	77 1f       	adc	r23, r23
    4012:	88 1f       	adc	r24, r24
    4014:	bb 1f       	adc	r27, r27
    4016:	62 17       	cp	r22, r18
    4018:	73 07       	cpc	r23, r19
    401a:	84 07       	cpc	r24, r20
    401c:	ba 07       	cpc	r27, r26
    401e:	20 f0       	brcs	.+8      	; 0x4028 <__divsf3_pse+0xaa>
    4020:	62 1b       	sub	r22, r18
    4022:	73 0b       	sbc	r23, r19
    4024:	84 0b       	sbc	r24, r20
    4026:	ba 0b       	sbc	r27, r26
    4028:	ee 1f       	adc	r30, r30
    402a:	88 f7       	brcc	.-30     	; 0x400e <__divsf3_pse+0x90>
    402c:	e0 95       	com	r30
    402e:	08 95       	ret

00004030 <__fixsfsi>:
    4030:	04 d0       	rcall	.+8      	; 0x403a <__fixunssfsi>
    4032:	68 94       	set
    4034:	b1 11       	cpse	r27, r1
    4036:	fe c0       	rjmp	.+508    	; 0x4234 <__fp_szero>
    4038:	08 95       	ret

0000403a <__fixunssfsi>:
    403a:	e1 d0       	rcall	.+450    	; 0x41fe <__fp_splitA>
    403c:	88 f0       	brcs	.+34     	; 0x4060 <__fixunssfsi+0x26>
    403e:	9f 57       	subi	r25, 0x7F	; 127
    4040:	90 f0       	brcs	.+36     	; 0x4066 <__fixunssfsi+0x2c>
    4042:	b9 2f       	mov	r27, r25
    4044:	99 27       	eor	r25, r25
    4046:	b7 51       	subi	r27, 0x17	; 23
    4048:	a0 f0       	brcs	.+40     	; 0x4072 <__fixunssfsi+0x38>
    404a:	d1 f0       	breq	.+52     	; 0x4080 <__fixunssfsi+0x46>
    404c:	66 0f       	add	r22, r22
    404e:	77 1f       	adc	r23, r23
    4050:	88 1f       	adc	r24, r24
    4052:	99 1f       	adc	r25, r25
    4054:	1a f0       	brmi	.+6      	; 0x405c <__fixunssfsi+0x22>
    4056:	ba 95       	dec	r27
    4058:	c9 f7       	brne	.-14     	; 0x404c <__fixunssfsi+0x12>
    405a:	12 c0       	rjmp	.+36     	; 0x4080 <__fixunssfsi+0x46>
    405c:	b1 30       	cpi	r27, 0x01	; 1
    405e:	81 f0       	breq	.+32     	; 0x4080 <__fixunssfsi+0x46>
    4060:	e8 d0       	rcall	.+464    	; 0x4232 <__fp_zero>
    4062:	b1 e0       	ldi	r27, 0x01	; 1
    4064:	08 95       	ret
    4066:	e5 c0       	rjmp	.+458    	; 0x4232 <__fp_zero>
    4068:	67 2f       	mov	r22, r23
    406a:	78 2f       	mov	r23, r24
    406c:	88 27       	eor	r24, r24
    406e:	b8 5f       	subi	r27, 0xF8	; 248
    4070:	39 f0       	breq	.+14     	; 0x4080 <__fixunssfsi+0x46>
    4072:	b9 3f       	cpi	r27, 0xF9	; 249
    4074:	cc f3       	brlt	.-14     	; 0x4068 <__fixunssfsi+0x2e>
    4076:	86 95       	lsr	r24
    4078:	77 95       	ror	r23
    407a:	67 95       	ror	r22
    407c:	b3 95       	inc	r27
    407e:	d9 f7       	brne	.-10     	; 0x4076 <__fixunssfsi+0x3c>
    4080:	3e f4       	brtc	.+14     	; 0x4090 <__fixunssfsi+0x56>
    4082:	90 95       	com	r25
    4084:	80 95       	com	r24
    4086:	70 95       	com	r23
    4088:	61 95       	neg	r22
    408a:	7f 4f       	sbci	r23, 0xFF	; 255
    408c:	8f 4f       	sbci	r24, 0xFF	; 255
    408e:	9f 4f       	sbci	r25, 0xFF	; 255
    4090:	08 95       	ret

00004092 <__floatunsisf>:
    4092:	e8 94       	clt
    4094:	09 c0       	rjmp	.+18     	; 0x40a8 <__floatsisf+0x12>

00004096 <__floatsisf>:
    4096:	97 fb       	bst	r25, 7
    4098:	3e f4       	brtc	.+14     	; 0x40a8 <__floatsisf+0x12>
    409a:	90 95       	com	r25
    409c:	80 95       	com	r24
    409e:	70 95       	com	r23
    40a0:	61 95       	neg	r22
    40a2:	7f 4f       	sbci	r23, 0xFF	; 255
    40a4:	8f 4f       	sbci	r24, 0xFF	; 255
    40a6:	9f 4f       	sbci	r25, 0xFF	; 255
    40a8:	99 23       	and	r25, r25
    40aa:	a9 f0       	breq	.+42     	; 0x40d6 <__floatsisf+0x40>
    40ac:	f9 2f       	mov	r31, r25
    40ae:	96 e9       	ldi	r25, 0x96	; 150
    40b0:	bb 27       	eor	r27, r27
    40b2:	93 95       	inc	r25
    40b4:	f6 95       	lsr	r31
    40b6:	87 95       	ror	r24
    40b8:	77 95       	ror	r23
    40ba:	67 95       	ror	r22
    40bc:	b7 95       	ror	r27
    40be:	f1 11       	cpse	r31, r1
    40c0:	f8 cf       	rjmp	.-16     	; 0x40b2 <__floatsisf+0x1c>
    40c2:	fa f4       	brpl	.+62     	; 0x4102 <__floatsisf+0x6c>
    40c4:	bb 0f       	add	r27, r27
    40c6:	11 f4       	brne	.+4      	; 0x40cc <__floatsisf+0x36>
    40c8:	60 ff       	sbrs	r22, 0
    40ca:	1b c0       	rjmp	.+54     	; 0x4102 <__floatsisf+0x6c>
    40cc:	6f 5f       	subi	r22, 0xFF	; 255
    40ce:	7f 4f       	sbci	r23, 0xFF	; 255
    40d0:	8f 4f       	sbci	r24, 0xFF	; 255
    40d2:	9f 4f       	sbci	r25, 0xFF	; 255
    40d4:	16 c0       	rjmp	.+44     	; 0x4102 <__floatsisf+0x6c>
    40d6:	88 23       	and	r24, r24
    40d8:	11 f0       	breq	.+4      	; 0x40de <__floatsisf+0x48>
    40da:	96 e9       	ldi	r25, 0x96	; 150
    40dc:	11 c0       	rjmp	.+34     	; 0x4100 <__floatsisf+0x6a>
    40de:	77 23       	and	r23, r23
    40e0:	21 f0       	breq	.+8      	; 0x40ea <__floatsisf+0x54>
    40e2:	9e e8       	ldi	r25, 0x8E	; 142
    40e4:	87 2f       	mov	r24, r23
    40e6:	76 2f       	mov	r23, r22
    40e8:	05 c0       	rjmp	.+10     	; 0x40f4 <__floatsisf+0x5e>
    40ea:	66 23       	and	r22, r22
    40ec:	71 f0       	breq	.+28     	; 0x410a <__floatsisf+0x74>
    40ee:	96 e8       	ldi	r25, 0x86	; 134
    40f0:	86 2f       	mov	r24, r22
    40f2:	70 e0       	ldi	r23, 0x00	; 0
    40f4:	60 e0       	ldi	r22, 0x00	; 0
    40f6:	2a f0       	brmi	.+10     	; 0x4102 <__floatsisf+0x6c>
    40f8:	9a 95       	dec	r25
    40fa:	66 0f       	add	r22, r22
    40fc:	77 1f       	adc	r23, r23
    40fe:	88 1f       	adc	r24, r24
    4100:	da f7       	brpl	.-10     	; 0x40f8 <__floatsisf+0x62>
    4102:	88 0f       	add	r24, r24
    4104:	96 95       	lsr	r25
    4106:	87 95       	ror	r24
    4108:	97 f9       	bld	r25, 7
    410a:	08 95       	ret

0000410c <__fp_cmp>:
    410c:	99 0f       	add	r25, r25
    410e:	00 08       	sbc	r0, r0
    4110:	55 0f       	add	r21, r21
    4112:	aa 0b       	sbc	r26, r26
    4114:	e0 e8       	ldi	r30, 0x80	; 128
    4116:	fe ef       	ldi	r31, 0xFE	; 254
    4118:	16 16       	cp	r1, r22
    411a:	17 06       	cpc	r1, r23
    411c:	e8 07       	cpc	r30, r24
    411e:	f9 07       	cpc	r31, r25
    4120:	c0 f0       	brcs	.+48     	; 0x4152 <__fp_cmp+0x46>
    4122:	12 16       	cp	r1, r18
    4124:	13 06       	cpc	r1, r19
    4126:	e4 07       	cpc	r30, r20
    4128:	f5 07       	cpc	r31, r21
    412a:	98 f0       	brcs	.+38     	; 0x4152 <__fp_cmp+0x46>
    412c:	62 1b       	sub	r22, r18
    412e:	73 0b       	sbc	r23, r19
    4130:	84 0b       	sbc	r24, r20
    4132:	95 0b       	sbc	r25, r21
    4134:	39 f4       	brne	.+14     	; 0x4144 <__fp_cmp+0x38>
    4136:	0a 26       	eor	r0, r26
    4138:	61 f0       	breq	.+24     	; 0x4152 <__fp_cmp+0x46>
    413a:	23 2b       	or	r18, r19
    413c:	24 2b       	or	r18, r20
    413e:	25 2b       	or	r18, r21
    4140:	21 f4       	brne	.+8      	; 0x414a <__fp_cmp+0x3e>
    4142:	08 95       	ret
    4144:	0a 26       	eor	r0, r26
    4146:	09 f4       	brne	.+2      	; 0x414a <__fp_cmp+0x3e>
    4148:	a1 40       	sbci	r26, 0x01	; 1
    414a:	a6 95       	lsr	r26
    414c:	8f ef       	ldi	r24, 0xFF	; 255
    414e:	81 1d       	adc	r24, r1
    4150:	81 1d       	adc	r24, r1
    4152:	08 95       	ret

00004154 <__fp_inf>:
    4154:	97 f9       	bld	r25, 7
    4156:	9f 67       	ori	r25, 0x7F	; 127
    4158:	80 e8       	ldi	r24, 0x80	; 128
    415a:	70 e0       	ldi	r23, 0x00	; 0
    415c:	60 e0       	ldi	r22, 0x00	; 0
    415e:	08 95       	ret

00004160 <__fp_nan>:
    4160:	9f ef       	ldi	r25, 0xFF	; 255
    4162:	80 ec       	ldi	r24, 0xC0	; 192
    4164:	08 95       	ret

00004166 <__fp_powser>:
    4166:	df 93       	push	r29
    4168:	cf 93       	push	r28
    416a:	1f 93       	push	r17
    416c:	0f 93       	push	r16
    416e:	ff 92       	push	r15
    4170:	ef 92       	push	r14
    4172:	df 92       	push	r13
    4174:	7b 01       	movw	r14, r22
    4176:	8c 01       	movw	r16, r24
    4178:	68 94       	set
    417a:	05 c0       	rjmp	.+10     	; 0x4186 <__fp_powser+0x20>
    417c:	da 2e       	mov	r13, r26
    417e:	ef 01       	movw	r28, r30
    4180:	76 d0       	rcall	.+236    	; 0x426e <__mulsf3x>
    4182:	fe 01       	movw	r30, r28
    4184:	e8 94       	clt
    4186:	a5 91       	lpm	r26, Z+
    4188:	25 91       	lpm	r18, Z+
    418a:	35 91       	lpm	r19, Z+
    418c:	45 91       	lpm	r20, Z+
    418e:	55 91       	lpm	r21, Z+
    4190:	ae f3       	brts	.-22     	; 0x417c <__fp_powser+0x16>
    4192:	ef 01       	movw	r28, r30
    4194:	2c de       	rcall	.-936    	; 0x3dee <__addsf3x>
    4196:	fe 01       	movw	r30, r28
    4198:	97 01       	movw	r18, r14
    419a:	a8 01       	movw	r20, r16
    419c:	da 94       	dec	r13
    419e:	79 f7       	brne	.-34     	; 0x417e <__fp_powser+0x18>
    41a0:	df 90       	pop	r13
    41a2:	ef 90       	pop	r14
    41a4:	ff 90       	pop	r15
    41a6:	0f 91       	pop	r16
    41a8:	1f 91       	pop	r17
    41aa:	cf 91       	pop	r28
    41ac:	df 91       	pop	r29
    41ae:	08 95       	ret

000041b0 <__fp_pscA>:
    41b0:	00 24       	eor	r0, r0
    41b2:	0a 94       	dec	r0
    41b4:	16 16       	cp	r1, r22
    41b6:	17 06       	cpc	r1, r23
    41b8:	18 06       	cpc	r1, r24
    41ba:	09 06       	cpc	r0, r25
    41bc:	08 95       	ret

000041be <__fp_pscB>:
    41be:	00 24       	eor	r0, r0
    41c0:	0a 94       	dec	r0
    41c2:	12 16       	cp	r1, r18
    41c4:	13 06       	cpc	r1, r19
    41c6:	14 06       	cpc	r1, r20
    41c8:	05 06       	cpc	r0, r21
    41ca:	08 95       	ret

000041cc <__fp_round>:
    41cc:	09 2e       	mov	r0, r25
    41ce:	03 94       	inc	r0
    41d0:	00 0c       	add	r0, r0
    41d2:	11 f4       	brne	.+4      	; 0x41d8 <__fp_round+0xc>
    41d4:	88 23       	and	r24, r24
    41d6:	52 f0       	brmi	.+20     	; 0x41ec <__fp_round+0x20>
    41d8:	bb 0f       	add	r27, r27
    41da:	40 f4       	brcc	.+16     	; 0x41ec <__fp_round+0x20>
    41dc:	bf 2b       	or	r27, r31
    41de:	11 f4       	brne	.+4      	; 0x41e4 <__fp_round+0x18>
    41e0:	60 ff       	sbrs	r22, 0
    41e2:	04 c0       	rjmp	.+8      	; 0x41ec <__fp_round+0x20>
    41e4:	6f 5f       	subi	r22, 0xFF	; 255
    41e6:	7f 4f       	sbci	r23, 0xFF	; 255
    41e8:	8f 4f       	sbci	r24, 0xFF	; 255
    41ea:	9f 4f       	sbci	r25, 0xFF	; 255
    41ec:	08 95       	ret

000041ee <__fp_split3>:
    41ee:	57 fd       	sbrc	r21, 7
    41f0:	90 58       	subi	r25, 0x80	; 128
    41f2:	44 0f       	add	r20, r20
    41f4:	55 1f       	adc	r21, r21
    41f6:	59 f0       	breq	.+22     	; 0x420e <__fp_splitA+0x10>
    41f8:	5f 3f       	cpi	r21, 0xFF	; 255
    41fa:	71 f0       	breq	.+28     	; 0x4218 <__fp_splitA+0x1a>
    41fc:	47 95       	ror	r20

000041fe <__fp_splitA>:
    41fe:	88 0f       	add	r24, r24
    4200:	97 fb       	bst	r25, 7
    4202:	99 1f       	adc	r25, r25
    4204:	61 f0       	breq	.+24     	; 0x421e <__fp_splitA+0x20>
    4206:	9f 3f       	cpi	r25, 0xFF	; 255
    4208:	79 f0       	breq	.+30     	; 0x4228 <__fp_splitA+0x2a>
    420a:	87 95       	ror	r24
    420c:	08 95       	ret
    420e:	12 16       	cp	r1, r18
    4210:	13 06       	cpc	r1, r19
    4212:	14 06       	cpc	r1, r20
    4214:	55 1f       	adc	r21, r21
    4216:	f2 cf       	rjmp	.-28     	; 0x41fc <__fp_split3+0xe>
    4218:	46 95       	lsr	r20
    421a:	f1 df       	rcall	.-30     	; 0x41fe <__fp_splitA>
    421c:	08 c0       	rjmp	.+16     	; 0x422e <__fp_splitA+0x30>
    421e:	16 16       	cp	r1, r22
    4220:	17 06       	cpc	r1, r23
    4222:	18 06       	cpc	r1, r24
    4224:	99 1f       	adc	r25, r25
    4226:	f1 cf       	rjmp	.-30     	; 0x420a <__fp_splitA+0xc>
    4228:	86 95       	lsr	r24
    422a:	71 05       	cpc	r23, r1
    422c:	61 05       	cpc	r22, r1
    422e:	08 94       	sec
    4230:	08 95       	ret

00004232 <__fp_zero>:
    4232:	e8 94       	clt

00004234 <__fp_szero>:
    4234:	bb 27       	eor	r27, r27
    4236:	66 27       	eor	r22, r22
    4238:	77 27       	eor	r23, r23
    423a:	cb 01       	movw	r24, r22
    423c:	97 f9       	bld	r25, 7
    423e:	08 95       	ret

00004240 <__gesf2>:
    4240:	65 df       	rcall	.-310    	; 0x410c <__fp_cmp>
    4242:	08 f4       	brcc	.+2      	; 0x4246 <__gesf2+0x6>
    4244:	8f ef       	ldi	r24, 0xFF	; 255
    4246:	08 95       	ret

00004248 <inverse>:
    4248:	9b 01       	movw	r18, r22
    424a:	ac 01       	movw	r20, r24
    424c:	60 e0       	ldi	r22, 0x00	; 0
    424e:	70 e0       	ldi	r23, 0x00	; 0
    4250:	80 e8       	ldi	r24, 0x80	; 128
    4252:	9f e3       	ldi	r25, 0x3F	; 63
    4254:	85 ce       	rjmp	.-758    	; 0x3f60 <__divsf3>

00004256 <__mulsf3>:
    4256:	0b d0       	rcall	.+22     	; 0x426e <__mulsf3x>
    4258:	b9 cf       	rjmp	.-142    	; 0x41cc <__fp_round>
    425a:	aa df       	rcall	.-172    	; 0x41b0 <__fp_pscA>
    425c:	28 f0       	brcs	.+10     	; 0x4268 <__mulsf3+0x12>
    425e:	af df       	rcall	.-162    	; 0x41be <__fp_pscB>
    4260:	18 f0       	brcs	.+6      	; 0x4268 <__mulsf3+0x12>
    4262:	95 23       	and	r25, r21
    4264:	09 f0       	breq	.+2      	; 0x4268 <__mulsf3+0x12>
    4266:	76 cf       	rjmp	.-276    	; 0x4154 <__fp_inf>
    4268:	7b cf       	rjmp	.-266    	; 0x4160 <__fp_nan>
    426a:	11 24       	eor	r1, r1
    426c:	e3 cf       	rjmp	.-58     	; 0x4234 <__fp_szero>

0000426e <__mulsf3x>:
    426e:	bf df       	rcall	.-130    	; 0x41ee <__fp_split3>
    4270:	a0 f3       	brcs	.-24     	; 0x425a <__mulsf3+0x4>

00004272 <__mulsf3_pse>:
    4272:	95 9f       	mul	r25, r21
    4274:	d1 f3       	breq	.-12     	; 0x426a <__mulsf3+0x14>
    4276:	95 0f       	add	r25, r21
    4278:	50 e0       	ldi	r21, 0x00	; 0
    427a:	55 1f       	adc	r21, r21
    427c:	62 9f       	mul	r22, r18
    427e:	f0 01       	movw	r30, r0
    4280:	72 9f       	mul	r23, r18
    4282:	bb 27       	eor	r27, r27
    4284:	f0 0d       	add	r31, r0
    4286:	b1 1d       	adc	r27, r1
    4288:	63 9f       	mul	r22, r19
    428a:	aa 27       	eor	r26, r26
    428c:	f0 0d       	add	r31, r0
    428e:	b1 1d       	adc	r27, r1
    4290:	aa 1f       	adc	r26, r26
    4292:	64 9f       	mul	r22, r20
    4294:	66 27       	eor	r22, r22
    4296:	b0 0d       	add	r27, r0
    4298:	a1 1d       	adc	r26, r1
    429a:	66 1f       	adc	r22, r22
    429c:	82 9f       	mul	r24, r18
    429e:	22 27       	eor	r18, r18
    42a0:	b0 0d       	add	r27, r0
    42a2:	a1 1d       	adc	r26, r1
    42a4:	62 1f       	adc	r22, r18
    42a6:	73 9f       	mul	r23, r19
    42a8:	b0 0d       	add	r27, r0
    42aa:	a1 1d       	adc	r26, r1
    42ac:	62 1f       	adc	r22, r18
    42ae:	83 9f       	mul	r24, r19
    42b0:	a0 0d       	add	r26, r0
    42b2:	61 1d       	adc	r22, r1
    42b4:	22 1f       	adc	r18, r18
    42b6:	74 9f       	mul	r23, r20
    42b8:	33 27       	eor	r19, r19
    42ba:	a0 0d       	add	r26, r0
    42bc:	61 1d       	adc	r22, r1
    42be:	23 1f       	adc	r18, r19
    42c0:	84 9f       	mul	r24, r20
    42c2:	60 0d       	add	r22, r0
    42c4:	21 1d       	adc	r18, r1
    42c6:	82 2f       	mov	r24, r18
    42c8:	76 2f       	mov	r23, r22
    42ca:	6a 2f       	mov	r22, r26
    42cc:	11 24       	eor	r1, r1
    42ce:	9f 57       	subi	r25, 0x7F	; 127
    42d0:	50 40       	sbci	r21, 0x00	; 0
    42d2:	8a f0       	brmi	.+34     	; 0x42f6 <__mulsf3_pse+0x84>
    42d4:	e1 f0       	breq	.+56     	; 0x430e <__mulsf3_pse+0x9c>
    42d6:	88 23       	and	r24, r24
    42d8:	4a f0       	brmi	.+18     	; 0x42ec <__mulsf3_pse+0x7a>
    42da:	ee 0f       	add	r30, r30
    42dc:	ff 1f       	adc	r31, r31
    42de:	bb 1f       	adc	r27, r27
    42e0:	66 1f       	adc	r22, r22
    42e2:	77 1f       	adc	r23, r23
    42e4:	88 1f       	adc	r24, r24
    42e6:	91 50       	subi	r25, 0x01	; 1
    42e8:	50 40       	sbci	r21, 0x00	; 0
    42ea:	a9 f7       	brne	.-22     	; 0x42d6 <__mulsf3_pse+0x64>
    42ec:	9e 3f       	cpi	r25, 0xFE	; 254
    42ee:	51 05       	cpc	r21, r1
    42f0:	70 f0       	brcs	.+28     	; 0x430e <__mulsf3_pse+0x9c>
    42f2:	30 cf       	rjmp	.-416    	; 0x4154 <__fp_inf>
    42f4:	9f cf       	rjmp	.-194    	; 0x4234 <__fp_szero>
    42f6:	5f 3f       	cpi	r21, 0xFF	; 255
    42f8:	ec f3       	brlt	.-6      	; 0x42f4 <__mulsf3_pse+0x82>
    42fa:	98 3e       	cpi	r25, 0xE8	; 232
    42fc:	dc f3       	brlt	.-10     	; 0x42f4 <__mulsf3_pse+0x82>
    42fe:	86 95       	lsr	r24
    4300:	77 95       	ror	r23
    4302:	67 95       	ror	r22
    4304:	b7 95       	ror	r27
    4306:	f7 95       	ror	r31
    4308:	e7 95       	ror	r30
    430a:	9f 5f       	subi	r25, 0xFF	; 255
    430c:	c1 f7       	brne	.-16     	; 0x42fe <__mulsf3_pse+0x8c>
    430e:	fe 2b       	or	r31, r30
    4310:	88 0f       	add	r24, r24
    4312:	91 1d       	adc	r25, r1
    4314:	96 95       	lsr	r25
    4316:	87 95       	ror	r24
    4318:	97 f9       	bld	r25, 7
    431a:	08 95       	ret
    431c:	11 f4       	brne	.+4      	; 0x4322 <__mulsf3_pse+0xb0>
    431e:	0e f4       	brtc	.+2      	; 0x4322 <__mulsf3_pse+0xb0>
    4320:	1f cf       	rjmp	.-450    	; 0x4160 <__fp_nan>
    4322:	41 c0       	rjmp	.+130    	; 0x43a6 <__fp_mpack>

00004324 <sqrt>:
    4324:	6c df       	rcall	.-296    	; 0x41fe <__fp_splitA>
    4326:	d0 f3       	brcs	.-12     	; 0x431c <__mulsf3_pse+0xaa>
    4328:	99 23       	and	r25, r25
    432a:	d9 f3       	breq	.-10     	; 0x4322 <__mulsf3_pse+0xb0>
    432c:	ce f3       	brts	.-14     	; 0x4320 <__mulsf3_pse+0xae>
    432e:	9f 57       	subi	r25, 0x7F	; 127
    4330:	55 0b       	sbc	r21, r21
    4332:	87 ff       	sbrs	r24, 7
    4334:	46 d0       	rcall	.+140    	; 0x43c2 <__fp_norm2>
    4336:	00 24       	eor	r0, r0
    4338:	a0 e6       	ldi	r26, 0x60	; 96
    433a:	40 ea       	ldi	r20, 0xA0	; 160
    433c:	90 01       	movw	r18, r0
    433e:	80 58       	subi	r24, 0x80	; 128
    4340:	56 95       	lsr	r21
    4342:	97 95       	ror	r25
    4344:	28 f4       	brcc	.+10     	; 0x4350 <sqrt+0x2c>
    4346:	80 5c       	subi	r24, 0xC0	; 192
    4348:	66 0f       	add	r22, r22
    434a:	77 1f       	adc	r23, r23
    434c:	88 1f       	adc	r24, r24
    434e:	20 f0       	brcs	.+8      	; 0x4358 <sqrt+0x34>
    4350:	26 17       	cp	r18, r22
    4352:	37 07       	cpc	r19, r23
    4354:	48 07       	cpc	r20, r24
    4356:	30 f4       	brcc	.+12     	; 0x4364 <sqrt+0x40>
    4358:	62 1b       	sub	r22, r18
    435a:	73 0b       	sbc	r23, r19
    435c:	84 0b       	sbc	r24, r20
    435e:	20 29       	or	r18, r0
    4360:	31 29       	or	r19, r1
    4362:	4a 2b       	or	r20, r26
    4364:	a6 95       	lsr	r26
    4366:	17 94       	ror	r1
    4368:	07 94       	ror	r0
    436a:	20 25       	eor	r18, r0
    436c:	31 25       	eor	r19, r1
    436e:	4a 27       	eor	r20, r26
    4370:	58 f7       	brcc	.-42     	; 0x4348 <sqrt+0x24>
    4372:	66 0f       	add	r22, r22
    4374:	77 1f       	adc	r23, r23
    4376:	88 1f       	adc	r24, r24
    4378:	20 f0       	brcs	.+8      	; 0x4382 <sqrt+0x5e>
    437a:	26 17       	cp	r18, r22
    437c:	37 07       	cpc	r19, r23
    437e:	48 07       	cpc	r20, r24
    4380:	30 f4       	brcc	.+12     	; 0x438e <sqrt+0x6a>
    4382:	62 0b       	sbc	r22, r18
    4384:	73 0b       	sbc	r23, r19
    4386:	84 0b       	sbc	r24, r20
    4388:	20 0d       	add	r18, r0
    438a:	31 1d       	adc	r19, r1
    438c:	41 1d       	adc	r20, r1
    438e:	a0 95       	com	r26
    4390:	81 f7       	brne	.-32     	; 0x4372 <sqrt+0x4e>
    4392:	b9 01       	movw	r22, r18
    4394:	84 2f       	mov	r24, r20
    4396:	91 58       	subi	r25, 0x81	; 129
    4398:	88 0f       	add	r24, r24
    439a:	96 95       	lsr	r25
    439c:	87 95       	ror	r24
    439e:	08 95       	ret

000043a0 <square>:
    43a0:	9b 01       	movw	r18, r22
    43a2:	ac 01       	movw	r20, r24
    43a4:	58 cf       	rjmp	.-336    	; 0x4256 <__mulsf3>

000043a6 <__fp_mpack>:
    43a6:	9f 3f       	cpi	r25, 0xFF	; 255
    43a8:	31 f0       	breq	.+12     	; 0x43b6 <__fp_mpack_finite+0xc>

000043aa <__fp_mpack_finite>:
    43aa:	91 50       	subi	r25, 0x01	; 1
    43ac:	20 f4       	brcc	.+8      	; 0x43b6 <__fp_mpack_finite+0xc>
    43ae:	87 95       	ror	r24
    43b0:	77 95       	ror	r23
    43b2:	67 95       	ror	r22
    43b4:	b7 95       	ror	r27
    43b6:	88 0f       	add	r24, r24
    43b8:	91 1d       	adc	r25, r1
    43ba:	96 95       	lsr	r25
    43bc:	87 95       	ror	r24
    43be:	97 f9       	bld	r25, 7
    43c0:	08 95       	ret

000043c2 <__fp_norm2>:
    43c2:	91 50       	subi	r25, 0x01	; 1
    43c4:	50 40       	sbci	r21, 0x00	; 0
    43c6:	66 0f       	add	r22, r22
    43c8:	77 1f       	adc	r23, r23
    43ca:	88 1f       	adc	r24, r24
    43cc:	d2 f7       	brpl	.-12     	; 0x43c2 <__fp_norm2>
    43ce:	08 95       	ret

000043d0 <vfprintf>:
    43d0:	a3 e1       	ldi	r26, 0x13	; 19
    43d2:	b0 e0       	ldi	r27, 0x00	; 0
    43d4:	ee ee       	ldi	r30, 0xEE	; 238
    43d6:	f1 e2       	ldi	r31, 0x21	; 33
    43d8:	0c 94 19 27 	jmp	0x4e32	; 0x4e32 <__prologue_saves__>
    43dc:	7c 01       	movw	r14, r24
    43de:	1b 01       	movw	r2, r22
    43e0:	6a 01       	movw	r12, r20
    43e2:	fc 01       	movw	r30, r24
    43e4:	17 82       	std	Z+7, r1	; 0x07
    43e6:	16 82       	std	Z+6, r1	; 0x06
    43e8:	83 81       	ldd	r24, Z+3	; 0x03
    43ea:	81 ff       	sbrs	r24, 1
    43ec:	66 c3       	rjmp	.+1740   	; 0x4aba <vfprintf+0x6ea>
    43ee:	be 01       	movw	r22, r28
    43f0:	6f 5f       	subi	r22, 0xFF	; 255
    43f2:	7f 4f       	sbci	r23, 0xFF	; 255
    43f4:	4b 01       	movw	r8, r22
    43f6:	f7 01       	movw	r30, r14
    43f8:	93 81       	ldd	r25, Z+3	; 0x03
    43fa:	f1 01       	movw	r30, r2
    43fc:	93 fd       	sbrc	r25, 3
    43fe:	85 91       	lpm	r24, Z+
    4400:	93 ff       	sbrs	r25, 3
    4402:	81 91       	ld	r24, Z+
    4404:	1f 01       	movw	r2, r30
    4406:	88 23       	and	r24, r24
    4408:	09 f4       	brne	.+2      	; 0x440c <vfprintf+0x3c>
    440a:	53 c3       	rjmp	.+1702   	; 0x4ab2 <vfprintf+0x6e2>
    440c:	85 32       	cpi	r24, 0x25	; 37
    440e:	39 f4       	brne	.+14     	; 0x441e <vfprintf+0x4e>
    4410:	93 fd       	sbrc	r25, 3
    4412:	85 91       	lpm	r24, Z+
    4414:	93 ff       	sbrs	r25, 3
    4416:	81 91       	ld	r24, Z+
    4418:	1f 01       	movw	r2, r30
    441a:	85 32       	cpi	r24, 0x25	; 37
    441c:	39 f4       	brne	.+14     	; 0x442c <vfprintf+0x5c>
    441e:	b7 01       	movw	r22, r14
    4420:	90 e0       	ldi	r25, 0x00	; 0
    4422:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4426:	56 01       	movw	r10, r12
    4428:	65 01       	movw	r12, r10
    442a:	e5 cf       	rjmp	.-54     	; 0x43f6 <vfprintf+0x26>
    442c:	10 e0       	ldi	r17, 0x00	; 0
    442e:	51 2c       	mov	r5, r1
    4430:	20 e0       	ldi	r18, 0x00	; 0
    4432:	20 32       	cpi	r18, 0x20	; 32
    4434:	a0 f4       	brcc	.+40     	; 0x445e <vfprintf+0x8e>
    4436:	8b 32       	cpi	r24, 0x2B	; 43
    4438:	69 f0       	breq	.+26     	; 0x4454 <vfprintf+0x84>
    443a:	30 f4       	brcc	.+12     	; 0x4448 <vfprintf+0x78>
    443c:	80 32       	cpi	r24, 0x20	; 32
    443e:	59 f0       	breq	.+22     	; 0x4456 <vfprintf+0x86>
    4440:	83 32       	cpi	r24, 0x23	; 35
    4442:	69 f4       	brne	.+26     	; 0x445e <vfprintf+0x8e>
    4444:	20 61       	ori	r18, 0x10	; 16
    4446:	2c c0       	rjmp	.+88     	; 0x44a0 <vfprintf+0xd0>
    4448:	8d 32       	cpi	r24, 0x2D	; 45
    444a:	39 f0       	breq	.+14     	; 0x445a <vfprintf+0x8a>
    444c:	80 33       	cpi	r24, 0x30	; 48
    444e:	39 f4       	brne	.+14     	; 0x445e <vfprintf+0x8e>
    4450:	21 60       	ori	r18, 0x01	; 1
    4452:	26 c0       	rjmp	.+76     	; 0x44a0 <vfprintf+0xd0>
    4454:	22 60       	ori	r18, 0x02	; 2
    4456:	24 60       	ori	r18, 0x04	; 4
    4458:	23 c0       	rjmp	.+70     	; 0x44a0 <vfprintf+0xd0>
    445a:	28 60       	ori	r18, 0x08	; 8
    445c:	21 c0       	rjmp	.+66     	; 0x44a0 <vfprintf+0xd0>
    445e:	27 fd       	sbrc	r18, 7
    4460:	27 c0       	rjmp	.+78     	; 0x44b0 <vfprintf+0xe0>
    4462:	30 ed       	ldi	r19, 0xD0	; 208
    4464:	38 0f       	add	r19, r24
    4466:	3a 30       	cpi	r19, 0x0A	; 10
    4468:	78 f4       	brcc	.+30     	; 0x4488 <vfprintf+0xb8>
    446a:	26 ff       	sbrs	r18, 6
    446c:	06 c0       	rjmp	.+12     	; 0x447a <vfprintf+0xaa>
    446e:	fa e0       	ldi	r31, 0x0A	; 10
    4470:	1f 9f       	mul	r17, r31
    4472:	30 0d       	add	r19, r0
    4474:	11 24       	eor	r1, r1
    4476:	13 2f       	mov	r17, r19
    4478:	13 c0       	rjmp	.+38     	; 0x44a0 <vfprintf+0xd0>
    447a:	6a e0       	ldi	r22, 0x0A	; 10
    447c:	56 9e       	mul	r5, r22
    447e:	30 0d       	add	r19, r0
    4480:	11 24       	eor	r1, r1
    4482:	53 2e       	mov	r5, r19
    4484:	20 62       	ori	r18, 0x20	; 32
    4486:	0c c0       	rjmp	.+24     	; 0x44a0 <vfprintf+0xd0>
    4488:	8e 32       	cpi	r24, 0x2E	; 46
    448a:	21 f4       	brne	.+8      	; 0x4494 <vfprintf+0xc4>
    448c:	26 fd       	sbrc	r18, 6
    448e:	11 c3       	rjmp	.+1570   	; 0x4ab2 <vfprintf+0x6e2>
    4490:	20 64       	ori	r18, 0x40	; 64
    4492:	06 c0       	rjmp	.+12     	; 0x44a0 <vfprintf+0xd0>
    4494:	8c 36       	cpi	r24, 0x6C	; 108
    4496:	11 f4       	brne	.+4      	; 0x449c <vfprintf+0xcc>
    4498:	20 68       	ori	r18, 0x80	; 128
    449a:	02 c0       	rjmp	.+4      	; 0x44a0 <vfprintf+0xd0>
    449c:	88 36       	cpi	r24, 0x68	; 104
    449e:	41 f4       	brne	.+16     	; 0x44b0 <vfprintf+0xe0>
    44a0:	f1 01       	movw	r30, r2
    44a2:	93 fd       	sbrc	r25, 3
    44a4:	85 91       	lpm	r24, Z+
    44a6:	93 ff       	sbrs	r25, 3
    44a8:	81 91       	ld	r24, Z+
    44aa:	1f 01       	movw	r2, r30
    44ac:	81 11       	cpse	r24, r1
    44ae:	c1 cf       	rjmp	.-126    	; 0x4432 <vfprintf+0x62>
    44b0:	9b eb       	ldi	r25, 0xBB	; 187
    44b2:	98 0f       	add	r25, r24
    44b4:	93 30       	cpi	r25, 0x03	; 3
    44b6:	18 f4       	brcc	.+6      	; 0x44be <vfprintf+0xee>
    44b8:	20 61       	ori	r18, 0x10	; 16
    44ba:	80 5e       	subi	r24, 0xE0	; 224
    44bc:	06 c0       	rjmp	.+12     	; 0x44ca <vfprintf+0xfa>
    44be:	9b e9       	ldi	r25, 0x9B	; 155
    44c0:	98 0f       	add	r25, r24
    44c2:	93 30       	cpi	r25, 0x03	; 3
    44c4:	08 f0       	brcs	.+2      	; 0x44c8 <vfprintf+0xf8>
    44c6:	aa c1       	rjmp	.+852    	; 0x481c <vfprintf+0x44c>
    44c8:	2f 7e       	andi	r18, 0xEF	; 239
    44ca:	26 ff       	sbrs	r18, 6
    44cc:	16 e0       	ldi	r17, 0x06	; 6
    44ce:	2f 73       	andi	r18, 0x3F	; 63
    44d0:	72 2e       	mov	r7, r18
    44d2:	85 36       	cpi	r24, 0x65	; 101
    44d4:	21 f4       	brne	.+8      	; 0x44de <vfprintf+0x10e>
    44d6:	f2 2f       	mov	r31, r18
    44d8:	f0 64       	ori	r31, 0x40	; 64
    44da:	7f 2e       	mov	r7, r31
    44dc:	08 c0       	rjmp	.+16     	; 0x44ee <vfprintf+0x11e>
    44de:	86 36       	cpi	r24, 0x66	; 102
    44e0:	21 f4       	brne	.+8      	; 0x44ea <vfprintf+0x11a>
    44e2:	62 2f       	mov	r22, r18
    44e4:	60 68       	ori	r22, 0x80	; 128
    44e6:	76 2e       	mov	r7, r22
    44e8:	02 c0       	rjmp	.+4      	; 0x44ee <vfprintf+0x11e>
    44ea:	11 11       	cpse	r17, r1
    44ec:	11 50       	subi	r17, 0x01	; 1
    44ee:	77 fe       	sbrs	r7, 7
    44f0:	07 c0       	rjmp	.+14     	; 0x4500 <vfprintf+0x130>
    44f2:	1c 33       	cpi	r17, 0x3C	; 60
    44f4:	48 f4       	brcc	.+18     	; 0x4508 <vfprintf+0x138>
    44f6:	44 24       	eor	r4, r4
    44f8:	43 94       	inc	r4
    44fa:	41 0e       	add	r4, r17
    44fc:	27 e0       	ldi	r18, 0x07	; 7
    44fe:	0b c0       	rjmp	.+22     	; 0x4516 <vfprintf+0x146>
    4500:	18 30       	cpi	r17, 0x08	; 8
    4502:	30 f4       	brcc	.+12     	; 0x4510 <vfprintf+0x140>
    4504:	21 2f       	mov	r18, r17
    4506:	06 c0       	rjmp	.+12     	; 0x4514 <vfprintf+0x144>
    4508:	27 e0       	ldi	r18, 0x07	; 7
    450a:	4c e3       	ldi	r20, 0x3C	; 60
    450c:	44 2e       	mov	r4, r20
    450e:	03 c0       	rjmp	.+6      	; 0x4516 <vfprintf+0x146>
    4510:	27 e0       	ldi	r18, 0x07	; 7
    4512:	17 e0       	ldi	r17, 0x07	; 7
    4514:	41 2c       	mov	r4, r1
    4516:	56 01       	movw	r10, r12
    4518:	74 e0       	ldi	r23, 0x04	; 4
    451a:	a7 0e       	add	r10, r23
    451c:	b1 1c       	adc	r11, r1
    451e:	f6 01       	movw	r30, r12
    4520:	60 81       	ld	r22, Z
    4522:	71 81       	ldd	r23, Z+1	; 0x01
    4524:	82 81       	ldd	r24, Z+2	; 0x02
    4526:	93 81       	ldd	r25, Z+3	; 0x03
    4528:	04 2d       	mov	r16, r4
    452a:	a4 01       	movw	r20, r8
    452c:	0e 94 f8 28 	call	0x51f0	; 0x51f0 <__ftoa_engine>
    4530:	6c 01       	movw	r12, r24
    4532:	09 81       	ldd	r16, Y+1	; 0x01
    4534:	00 ff       	sbrs	r16, 0
    4536:	02 c0       	rjmp	.+4      	; 0x453c <vfprintf+0x16c>
    4538:	03 ff       	sbrs	r16, 3
    453a:	06 c0       	rjmp	.+12     	; 0x4548 <vfprintf+0x178>
    453c:	71 fc       	sbrc	r7, 1
    453e:	07 c0       	rjmp	.+14     	; 0x454e <vfprintf+0x17e>
    4540:	72 fc       	sbrc	r7, 2
    4542:	08 c0       	rjmp	.+16     	; 0x4554 <vfprintf+0x184>
    4544:	61 2c       	mov	r6, r1
    4546:	08 c0       	rjmp	.+16     	; 0x4558 <vfprintf+0x188>
    4548:	3d e2       	ldi	r19, 0x2D	; 45
    454a:	63 2e       	mov	r6, r19
    454c:	05 c0       	rjmp	.+10     	; 0x4558 <vfprintf+0x188>
    454e:	2b e2       	ldi	r18, 0x2B	; 43
    4550:	62 2e       	mov	r6, r18
    4552:	02 c0       	rjmp	.+4      	; 0x4558 <vfprintf+0x188>
    4554:	90 e2       	ldi	r25, 0x20	; 32
    4556:	69 2e       	mov	r6, r25
    4558:	80 2f       	mov	r24, r16
    455a:	8c 70       	andi	r24, 0x0C	; 12
    455c:	99 f1       	breq	.+102    	; 0x45c4 <vfprintf+0x1f4>
    455e:	66 20       	and	r6, r6
    4560:	11 f0       	breq	.+4      	; 0x4566 <vfprintf+0x196>
    4562:	84 e0       	ldi	r24, 0x04	; 4
    4564:	01 c0       	rjmp	.+2      	; 0x4568 <vfprintf+0x198>
    4566:	83 e0       	ldi	r24, 0x03	; 3
    4568:	85 15       	cp	r24, r5
    456a:	10 f0       	brcs	.+4      	; 0x4570 <vfprintf+0x1a0>
    456c:	51 2c       	mov	r5, r1
    456e:	0b c0       	rjmp	.+22     	; 0x4586 <vfprintf+0x1b6>
    4570:	58 1a       	sub	r5, r24
    4572:	73 fc       	sbrc	r7, 3
    4574:	08 c0       	rjmp	.+16     	; 0x4586 <vfprintf+0x1b6>
    4576:	b7 01       	movw	r22, r14
    4578:	80 e2       	ldi	r24, 0x20	; 32
    457a:	90 e0       	ldi	r25, 0x00	; 0
    457c:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4580:	5a 94       	dec	r5
    4582:	c9 f7       	brne	.-14     	; 0x4576 <vfprintf+0x1a6>
    4584:	f3 cf       	rjmp	.-26     	; 0x456c <vfprintf+0x19c>
    4586:	66 20       	and	r6, r6
    4588:	29 f0       	breq	.+10     	; 0x4594 <vfprintf+0x1c4>
    458a:	b7 01       	movw	r22, r14
    458c:	86 2d       	mov	r24, r6
    458e:	90 e0       	ldi	r25, 0x00	; 0
    4590:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4594:	03 fd       	sbrc	r16, 3
    4596:	03 c0       	rjmp	.+6      	; 0x459e <vfprintf+0x1ce>
    4598:	01 e9       	ldi	r16, 0x91	; 145
    459a:	15 e0       	ldi	r17, 0x05	; 5
    459c:	02 c0       	rjmp	.+4      	; 0x45a2 <vfprintf+0x1d2>
    459e:	0d e8       	ldi	r16, 0x8D	; 141
    45a0:	15 e0       	ldi	r17, 0x05	; 5
    45a2:	f7 2d       	mov	r31, r7
    45a4:	f0 71       	andi	r31, 0x10	; 16
    45a6:	7f 2e       	mov	r7, r31
    45a8:	f8 01       	movw	r30, r16
    45aa:	84 91       	lpm	r24, Z
    45ac:	88 23       	and	r24, r24
    45ae:	09 f4       	brne	.+2      	; 0x45b2 <vfprintf+0x1e2>
    45b0:	76 c2       	rjmp	.+1260   	; 0x4a9e <vfprintf+0x6ce>
    45b2:	71 10       	cpse	r7, r1
    45b4:	80 52       	subi	r24, 0x20	; 32
    45b6:	b7 01       	movw	r22, r14
    45b8:	90 e0       	ldi	r25, 0x00	; 0
    45ba:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    45be:	0f 5f       	subi	r16, 0xFF	; 255
    45c0:	1f 4f       	sbci	r17, 0xFF	; 255
    45c2:	f2 cf       	rjmp	.-28     	; 0x45a8 <vfprintf+0x1d8>
    45c4:	77 fe       	sbrs	r7, 7
    45c6:	0f c0       	rjmp	.+30     	; 0x45e6 <vfprintf+0x216>
    45c8:	4c 0c       	add	r4, r12
    45ca:	04 ff       	sbrs	r16, 4
    45cc:	04 c0       	rjmp	.+8      	; 0x45d6 <vfprintf+0x206>
    45ce:	8a 81       	ldd	r24, Y+2	; 0x02
    45d0:	81 33       	cpi	r24, 0x31	; 49
    45d2:	09 f4       	brne	.+2      	; 0x45d6 <vfprintf+0x206>
    45d4:	4a 94       	dec	r4
    45d6:	14 14       	cp	r1, r4
    45d8:	74 f5       	brge	.+92     	; 0x4636 <vfprintf+0x266>
    45da:	f8 e0       	ldi	r31, 0x08	; 8
    45dc:	f4 15       	cp	r31, r4
    45de:	78 f5       	brcc	.+94     	; 0x463e <vfprintf+0x26e>
    45e0:	88 e0       	ldi	r24, 0x08	; 8
    45e2:	48 2e       	mov	r4, r24
    45e4:	2c c0       	rjmp	.+88     	; 0x463e <vfprintf+0x26e>
    45e6:	76 fc       	sbrc	r7, 6
    45e8:	2a c0       	rjmp	.+84     	; 0x463e <vfprintf+0x26e>
    45ea:	81 2f       	mov	r24, r17
    45ec:	90 e0       	ldi	r25, 0x00	; 0
    45ee:	8c 15       	cp	r24, r12
    45f0:	9d 05       	cpc	r25, r13
    45f2:	9c f0       	brlt	.+38     	; 0x461a <vfprintf+0x24a>
    45f4:	6c ef       	ldi	r22, 0xFC	; 252
    45f6:	c6 16       	cp	r12, r22
    45f8:	6f ef       	ldi	r22, 0xFF	; 255
    45fa:	d6 06       	cpc	r13, r22
    45fc:	74 f0       	brlt	.+28     	; 0x461a <vfprintf+0x24a>
    45fe:	77 2d       	mov	r23, r7
    4600:	70 68       	ori	r23, 0x80	; 128
    4602:	77 2e       	mov	r7, r23
    4604:	0a c0       	rjmp	.+20     	; 0x461a <vfprintf+0x24a>
    4606:	e2 e0       	ldi	r30, 0x02	; 2
    4608:	f0 e0       	ldi	r31, 0x00	; 0
    460a:	ec 0f       	add	r30, r28
    460c:	fd 1f       	adc	r31, r29
    460e:	e1 0f       	add	r30, r17
    4610:	f1 1d       	adc	r31, r1
    4612:	80 81       	ld	r24, Z
    4614:	80 33       	cpi	r24, 0x30	; 48
    4616:	19 f4       	brne	.+6      	; 0x461e <vfprintf+0x24e>
    4618:	11 50       	subi	r17, 0x01	; 1
    461a:	11 11       	cpse	r17, r1
    461c:	f4 cf       	rjmp	.-24     	; 0x4606 <vfprintf+0x236>
    461e:	77 fe       	sbrs	r7, 7
    4620:	0e c0       	rjmp	.+28     	; 0x463e <vfprintf+0x26e>
    4622:	44 24       	eor	r4, r4
    4624:	43 94       	inc	r4
    4626:	41 0e       	add	r4, r17
    4628:	81 2f       	mov	r24, r17
    462a:	90 e0       	ldi	r25, 0x00	; 0
    462c:	c8 16       	cp	r12, r24
    462e:	d9 06       	cpc	r13, r25
    4630:	2c f4       	brge	.+10     	; 0x463c <vfprintf+0x26c>
    4632:	1c 19       	sub	r17, r12
    4634:	04 c0       	rjmp	.+8      	; 0x463e <vfprintf+0x26e>
    4636:	44 24       	eor	r4, r4
    4638:	43 94       	inc	r4
    463a:	01 c0       	rjmp	.+2      	; 0x463e <vfprintf+0x26e>
    463c:	10 e0       	ldi	r17, 0x00	; 0
    463e:	77 fe       	sbrs	r7, 7
    4640:	07 c0       	rjmp	.+14     	; 0x4650 <vfprintf+0x280>
    4642:	1c 14       	cp	r1, r12
    4644:	1d 04       	cpc	r1, r13
    4646:	3c f4       	brge	.+14     	; 0x4656 <vfprintf+0x286>
    4648:	96 01       	movw	r18, r12
    464a:	2f 5f       	subi	r18, 0xFF	; 255
    464c:	3f 4f       	sbci	r19, 0xFF	; 255
    464e:	05 c0       	rjmp	.+10     	; 0x465a <vfprintf+0x28a>
    4650:	25 e0       	ldi	r18, 0x05	; 5
    4652:	30 e0       	ldi	r19, 0x00	; 0
    4654:	02 c0       	rjmp	.+4      	; 0x465a <vfprintf+0x28a>
    4656:	21 e0       	ldi	r18, 0x01	; 1
    4658:	30 e0       	ldi	r19, 0x00	; 0
    465a:	66 20       	and	r6, r6
    465c:	11 f0       	breq	.+4      	; 0x4662 <vfprintf+0x292>
    465e:	2f 5f       	subi	r18, 0xFF	; 255
    4660:	3f 4f       	sbci	r19, 0xFF	; 255
    4662:	11 23       	and	r17, r17
    4664:	31 f0       	breq	.+12     	; 0x4672 <vfprintf+0x2a2>
    4666:	41 2f       	mov	r20, r17
    4668:	50 e0       	ldi	r21, 0x00	; 0
    466a:	4f 5f       	subi	r20, 0xFF	; 255
    466c:	5f 4f       	sbci	r21, 0xFF	; 255
    466e:	24 0f       	add	r18, r20
    4670:	35 1f       	adc	r19, r21
    4672:	45 2d       	mov	r20, r5
    4674:	50 e0       	ldi	r21, 0x00	; 0
    4676:	24 17       	cp	r18, r20
    4678:	35 07       	cpc	r19, r21
    467a:	14 f4       	brge	.+4      	; 0x4680 <vfprintf+0x2b0>
    467c:	52 1a       	sub	r5, r18
    467e:	01 c0       	rjmp	.+2      	; 0x4682 <vfprintf+0x2b2>
    4680:	51 2c       	mov	r5, r1
    4682:	87 2d       	mov	r24, r7
    4684:	89 70       	andi	r24, 0x09	; 9
    4686:	49 f4       	brne	.+18     	; 0x469a <vfprintf+0x2ca>
    4688:	55 20       	and	r5, r5
    468a:	39 f0       	breq	.+14     	; 0x469a <vfprintf+0x2ca>
    468c:	b7 01       	movw	r22, r14
    468e:	80 e2       	ldi	r24, 0x20	; 32
    4690:	90 e0       	ldi	r25, 0x00	; 0
    4692:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4696:	5a 94       	dec	r5
    4698:	f7 cf       	rjmp	.-18     	; 0x4688 <vfprintf+0x2b8>
    469a:	66 20       	and	r6, r6
    469c:	29 f0       	breq	.+10     	; 0x46a8 <vfprintf+0x2d8>
    469e:	b7 01       	movw	r22, r14
    46a0:	86 2d       	mov	r24, r6
    46a2:	90 e0       	ldi	r25, 0x00	; 0
    46a4:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    46a8:	73 fc       	sbrc	r7, 3
    46aa:	09 c0       	rjmp	.+18     	; 0x46be <vfprintf+0x2ee>
    46ac:	55 20       	and	r5, r5
    46ae:	39 f0       	breq	.+14     	; 0x46be <vfprintf+0x2ee>
    46b0:	b7 01       	movw	r22, r14
    46b2:	80 e3       	ldi	r24, 0x30	; 48
    46b4:	90 e0       	ldi	r25, 0x00	; 0
    46b6:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    46ba:	5a 94       	dec	r5
    46bc:	f7 cf       	rjmp	.-18     	; 0x46ac <vfprintf+0x2dc>
    46be:	77 fe       	sbrs	r7, 7
    46c0:	5f c0       	rjmp	.+190    	; 0x4780 <vfprintf+0x3b0>
    46c2:	9c 2d       	mov	r25, r12
    46c4:	8d 2d       	mov	r24, r13
    46c6:	d7 fe       	sbrs	r13, 7
    46c8:	02 c0       	rjmp	.+4      	; 0x46ce <vfprintf+0x2fe>
    46ca:	90 e0       	ldi	r25, 0x00	; 0
    46cc:	80 e0       	ldi	r24, 0x00	; 0
    46ce:	69 2e       	mov	r6, r25
    46d0:	78 2e       	mov	r7, r24
    46d2:	40 e0       	ldi	r20, 0x00	; 0
    46d4:	50 e0       	ldi	r21, 0x00	; 0
    46d6:	c6 01       	movw	r24, r12
    46d8:	84 19       	sub	r24, r4
    46da:	91 09       	sbc	r25, r1
    46dc:	9d 87       	std	Y+13, r25	; 0x0d
    46de:	8c 87       	std	Y+12, r24	; 0x0c
    46e0:	96 01       	movw	r18, r12
    46e2:	26 19       	sub	r18, r6
    46e4:	37 09       	sbc	r19, r7
    46e6:	28 0d       	add	r18, r8
    46e8:	39 1d       	adc	r19, r9
    46ea:	81 2f       	mov	r24, r17
    46ec:	90 e0       	ldi	r25, 0x00	; 0
    46ee:	ee 27       	eor	r30, r30
    46f0:	ff 27       	eor	r31, r31
    46f2:	e8 1b       	sub	r30, r24
    46f4:	f9 0b       	sbc	r31, r25
    46f6:	ff 87       	std	Y+15, r31	; 0x0f
    46f8:	ee 87       	std	Y+14, r30	; 0x0e
    46fa:	ff ef       	ldi	r31, 0xFF	; 255
    46fc:	6f 16       	cp	r6, r31
    46fe:	7f 06       	cpc	r7, r31
    4700:	69 f4       	brne	.+26     	; 0x471c <vfprintf+0x34c>
    4702:	b7 01       	movw	r22, r14
    4704:	8e e2       	ldi	r24, 0x2E	; 46
    4706:	90 e0       	ldi	r25, 0x00	; 0
    4708:	2b 8b       	std	Y+19, r18	; 0x13
    470a:	3a 8b       	std	Y+18, r19	; 0x12
    470c:	48 8b       	std	Y+16, r20	; 0x10
    470e:	59 8b       	std	Y+17, r21	; 0x11
    4710:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4714:	59 89       	ldd	r21, Y+17	; 0x11
    4716:	48 89       	ldd	r20, Y+16	; 0x10
    4718:	3a 89       	ldd	r19, Y+18	; 0x12
    471a:	2b 89       	ldd	r18, Y+19	; 0x13
    471c:	c6 14       	cp	r12, r6
    471e:	d7 04       	cpc	r13, r7
    4720:	54 f0       	brlt	.+20     	; 0x4736 <vfprintf+0x366>
    4722:	6c 85       	ldd	r22, Y+12	; 0x0c
    4724:	7d 85       	ldd	r23, Y+13	; 0x0d
    4726:	66 15       	cp	r22, r6
    4728:	77 05       	cpc	r23, r7
    472a:	2c f4       	brge	.+10     	; 0x4736 <vfprintf+0x366>
    472c:	f9 01       	movw	r30, r18
    472e:	e4 0f       	add	r30, r20
    4730:	f5 1f       	adc	r31, r21
    4732:	81 81       	ldd	r24, Z+1	; 0x01
    4734:	01 c0       	rjmp	.+2      	; 0x4738 <vfprintf+0x368>
    4736:	80 e3       	ldi	r24, 0x30	; 48
    4738:	71 e0       	ldi	r23, 0x01	; 1
    473a:	67 1a       	sub	r6, r23
    473c:	71 08       	sbc	r7, r1
    473e:	4f 5f       	subi	r20, 0xFF	; 255
    4740:	5f 4f       	sbci	r21, 0xFF	; 255
    4742:	ee 85       	ldd	r30, Y+14	; 0x0e
    4744:	ff 85       	ldd	r31, Y+15	; 0x0f
    4746:	6e 16       	cp	r6, r30
    4748:	7f 06       	cpc	r7, r31
    474a:	6c f0       	brlt	.+26     	; 0x4766 <vfprintf+0x396>
    474c:	b7 01       	movw	r22, r14
    474e:	90 e0       	ldi	r25, 0x00	; 0
    4750:	2b 8b       	std	Y+19, r18	; 0x13
    4752:	3a 8b       	std	Y+18, r19	; 0x12
    4754:	48 8b       	std	Y+16, r20	; 0x10
    4756:	59 8b       	std	Y+17, r21	; 0x11
    4758:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    475c:	2b 89       	ldd	r18, Y+19	; 0x13
    475e:	3a 89       	ldd	r19, Y+18	; 0x12
    4760:	48 89       	ldd	r20, Y+16	; 0x10
    4762:	59 89       	ldd	r21, Y+17	; 0x11
    4764:	ca cf       	rjmp	.-108    	; 0x46fa <vfprintf+0x32a>
    4766:	6c 14       	cp	r6, r12
    4768:	7d 04       	cpc	r7, r13
    476a:	39 f4       	brne	.+14     	; 0x477a <vfprintf+0x3aa>
    476c:	9a 81       	ldd	r25, Y+2	; 0x02
    476e:	96 33       	cpi	r25, 0x36	; 54
    4770:	18 f4       	brcc	.+6      	; 0x4778 <vfprintf+0x3a8>
    4772:	95 33       	cpi	r25, 0x35	; 53
    4774:	11 f4       	brne	.+4      	; 0x477a <vfprintf+0x3aa>
    4776:	04 ff       	sbrs	r16, 4
    4778:	81 e3       	ldi	r24, 0x31	; 49
    477a:	b7 01       	movw	r22, r14
    477c:	90 e0       	ldi	r25, 0x00	; 0
    477e:	4b c0       	rjmp	.+150    	; 0x4816 <vfprintf+0x446>
    4780:	8a 81       	ldd	r24, Y+2	; 0x02
    4782:	81 33       	cpi	r24, 0x31	; 49
    4784:	09 f0       	breq	.+2      	; 0x4788 <vfprintf+0x3b8>
    4786:	0f 7e       	andi	r16, 0xEF	; 239
    4788:	b7 01       	movw	r22, r14
    478a:	90 e0       	ldi	r25, 0x00	; 0
    478c:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4790:	11 11       	cpse	r17, r1
    4792:	05 c0       	rjmp	.+10     	; 0x479e <vfprintf+0x3ce>
    4794:	74 fe       	sbrs	r7, 4
    4796:	18 c0       	rjmp	.+48     	; 0x47c8 <vfprintf+0x3f8>
    4798:	85 e4       	ldi	r24, 0x45	; 69
    479a:	90 e0       	ldi	r25, 0x00	; 0
    479c:	17 c0       	rjmp	.+46     	; 0x47cc <vfprintf+0x3fc>
    479e:	b7 01       	movw	r22, r14
    47a0:	8e e2       	ldi	r24, 0x2E	; 46
    47a2:	90 e0       	ldi	r25, 0x00	; 0
    47a4:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    47a8:	82 e0       	ldi	r24, 0x02	; 2
    47aa:	66 24       	eor	r6, r6
    47ac:	63 94       	inc	r6
    47ae:	68 0e       	add	r6, r24
    47b0:	f4 01       	movw	r30, r8
    47b2:	e8 0f       	add	r30, r24
    47b4:	f1 1d       	adc	r31, r1
    47b6:	80 81       	ld	r24, Z
    47b8:	b7 01       	movw	r22, r14
    47ba:	90 e0       	ldi	r25, 0x00	; 0
    47bc:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    47c0:	11 50       	subi	r17, 0x01	; 1
    47c2:	41 f3       	breq	.-48     	; 0x4794 <vfprintf+0x3c4>
    47c4:	86 2d       	mov	r24, r6
    47c6:	f1 cf       	rjmp	.-30     	; 0x47aa <vfprintf+0x3da>
    47c8:	85 e6       	ldi	r24, 0x65	; 101
    47ca:	90 e0       	ldi	r25, 0x00	; 0
    47cc:	b7 01       	movw	r22, r14
    47ce:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    47d2:	d7 fc       	sbrc	r13, 7
    47d4:	05 c0       	rjmp	.+10     	; 0x47e0 <vfprintf+0x410>
    47d6:	c1 14       	cp	r12, r1
    47d8:	d1 04       	cpc	r13, r1
    47da:	39 f4       	brne	.+14     	; 0x47ea <vfprintf+0x41a>
    47dc:	04 ff       	sbrs	r16, 4
    47de:	05 c0       	rjmp	.+10     	; 0x47ea <vfprintf+0x41a>
    47e0:	d1 94       	neg	r13
    47e2:	c1 94       	neg	r12
    47e4:	d1 08       	sbc	r13, r1
    47e6:	8d e2       	ldi	r24, 0x2D	; 45
    47e8:	01 c0       	rjmp	.+2      	; 0x47ec <vfprintf+0x41c>
    47ea:	8b e2       	ldi	r24, 0x2B	; 43
    47ec:	b7 01       	movw	r22, r14
    47ee:	90 e0       	ldi	r25, 0x00	; 0
    47f0:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    47f4:	80 e3       	ldi	r24, 0x30	; 48
    47f6:	6a e0       	ldi	r22, 0x0A	; 10
    47f8:	c6 16       	cp	r12, r22
    47fa:	d1 04       	cpc	r13, r1
    47fc:	2c f0       	brlt	.+10     	; 0x4808 <vfprintf+0x438>
    47fe:	8f 5f       	subi	r24, 0xFF	; 255
    4800:	fa e0       	ldi	r31, 0x0A	; 10
    4802:	cf 1a       	sub	r12, r31
    4804:	d1 08       	sbc	r13, r1
    4806:	f7 cf       	rjmp	.-18     	; 0x47f6 <vfprintf+0x426>
    4808:	b7 01       	movw	r22, r14
    480a:	90 e0       	ldi	r25, 0x00	; 0
    480c:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4810:	b7 01       	movw	r22, r14
    4812:	c6 01       	movw	r24, r12
    4814:	c0 96       	adiw	r24, 0x30	; 48
    4816:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    481a:	41 c1       	rjmp	.+642    	; 0x4a9e <vfprintf+0x6ce>
    481c:	83 36       	cpi	r24, 0x63	; 99
    481e:	31 f0       	breq	.+12     	; 0x482c <vfprintf+0x45c>
    4820:	83 37       	cpi	r24, 0x73	; 115
    4822:	79 f0       	breq	.+30     	; 0x4842 <vfprintf+0x472>
    4824:	83 35       	cpi	r24, 0x53	; 83
    4826:	09 f0       	breq	.+2      	; 0x482a <vfprintf+0x45a>
    4828:	58 c0       	rjmp	.+176    	; 0x48da <vfprintf+0x50a>
    482a:	21 c0       	rjmp	.+66     	; 0x486e <vfprintf+0x49e>
    482c:	56 01       	movw	r10, r12
    482e:	72 e0       	ldi	r23, 0x02	; 2
    4830:	a7 0e       	add	r10, r23
    4832:	b1 1c       	adc	r11, r1
    4834:	f6 01       	movw	r30, r12
    4836:	80 81       	ld	r24, Z
    4838:	89 83       	std	Y+1, r24	; 0x01
    483a:	01 e0       	ldi	r16, 0x01	; 1
    483c:	10 e0       	ldi	r17, 0x00	; 0
    483e:	64 01       	movw	r12, r8
    4840:	14 c0       	rjmp	.+40     	; 0x486a <vfprintf+0x49a>
    4842:	56 01       	movw	r10, r12
    4844:	f2 e0       	ldi	r31, 0x02	; 2
    4846:	af 0e       	add	r10, r31
    4848:	b1 1c       	adc	r11, r1
    484a:	f6 01       	movw	r30, r12
    484c:	c0 80       	ld	r12, Z
    484e:	d1 80       	ldd	r13, Z+1	; 0x01
    4850:	26 ff       	sbrs	r18, 6
    4852:	03 c0       	rjmp	.+6      	; 0x485a <vfprintf+0x48a>
    4854:	61 2f       	mov	r22, r17
    4856:	70 e0       	ldi	r23, 0x00	; 0
    4858:	02 c0       	rjmp	.+4      	; 0x485e <vfprintf+0x48e>
    485a:	6f ef       	ldi	r22, 0xFF	; 255
    485c:	7f ef       	ldi	r23, 0xFF	; 255
    485e:	c6 01       	movw	r24, r12
    4860:	2b 8b       	std	Y+19, r18	; 0x13
    4862:	0e 94 db 29 	call	0x53b6	; 0x53b6 <strnlen>
    4866:	8c 01       	movw	r16, r24
    4868:	2b 89       	ldd	r18, Y+19	; 0x13
    486a:	2f 77       	andi	r18, 0x7F	; 127
    486c:	15 c0       	rjmp	.+42     	; 0x4898 <vfprintf+0x4c8>
    486e:	56 01       	movw	r10, r12
    4870:	f2 e0       	ldi	r31, 0x02	; 2
    4872:	af 0e       	add	r10, r31
    4874:	b1 1c       	adc	r11, r1
    4876:	f6 01       	movw	r30, r12
    4878:	c0 80       	ld	r12, Z
    487a:	d1 80       	ldd	r13, Z+1	; 0x01
    487c:	26 ff       	sbrs	r18, 6
    487e:	03 c0       	rjmp	.+6      	; 0x4886 <vfprintf+0x4b6>
    4880:	61 2f       	mov	r22, r17
    4882:	70 e0       	ldi	r23, 0x00	; 0
    4884:	02 c0       	rjmp	.+4      	; 0x488a <vfprintf+0x4ba>
    4886:	6f ef       	ldi	r22, 0xFF	; 255
    4888:	7f ef       	ldi	r23, 0xFF	; 255
    488a:	c6 01       	movw	r24, r12
    488c:	2b 8b       	std	Y+19, r18	; 0x13
    488e:	0e 94 d0 29 	call	0x53a0	; 0x53a0 <strnlen_P>
    4892:	8c 01       	movw	r16, r24
    4894:	2b 89       	ldd	r18, Y+19	; 0x13
    4896:	20 68       	ori	r18, 0x80	; 128
    4898:	72 2e       	mov	r7, r18
    489a:	23 fd       	sbrc	r18, 3
    489c:	1a c0       	rjmp	.+52     	; 0x48d2 <vfprintf+0x502>
    489e:	85 2d       	mov	r24, r5
    48a0:	90 e0       	ldi	r25, 0x00	; 0
    48a2:	08 17       	cp	r16, r24
    48a4:	19 07       	cpc	r17, r25
    48a6:	a8 f4       	brcc	.+42     	; 0x48d2 <vfprintf+0x502>
    48a8:	b7 01       	movw	r22, r14
    48aa:	80 e2       	ldi	r24, 0x20	; 32
    48ac:	90 e0       	ldi	r25, 0x00	; 0
    48ae:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    48b2:	5a 94       	dec	r5
    48b4:	f4 cf       	rjmp	.-24     	; 0x489e <vfprintf+0x4ce>
    48b6:	f6 01       	movw	r30, r12
    48b8:	77 fc       	sbrc	r7, 7
    48ba:	85 91       	lpm	r24, Z+
    48bc:	77 fe       	sbrs	r7, 7
    48be:	81 91       	ld	r24, Z+
    48c0:	6f 01       	movw	r12, r30
    48c2:	b7 01       	movw	r22, r14
    48c4:	90 e0       	ldi	r25, 0x00	; 0
    48c6:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    48ca:	51 10       	cpse	r5, r1
    48cc:	5a 94       	dec	r5
    48ce:	01 50       	subi	r16, 0x01	; 1
    48d0:	11 09       	sbc	r17, r1
    48d2:	01 15       	cp	r16, r1
    48d4:	11 05       	cpc	r17, r1
    48d6:	79 f7       	brne	.-34     	; 0x48b6 <vfprintf+0x4e6>
    48d8:	e2 c0       	rjmp	.+452    	; 0x4a9e <vfprintf+0x6ce>
    48da:	84 36       	cpi	r24, 0x64	; 100
    48dc:	11 f0       	breq	.+4      	; 0x48e2 <vfprintf+0x512>
    48de:	89 36       	cpi	r24, 0x69	; 105
    48e0:	51 f5       	brne	.+84     	; 0x4936 <vfprintf+0x566>
    48e2:	56 01       	movw	r10, r12
    48e4:	27 ff       	sbrs	r18, 7
    48e6:	09 c0       	rjmp	.+18     	; 0x48fa <vfprintf+0x52a>
    48e8:	f4 e0       	ldi	r31, 0x04	; 4
    48ea:	af 0e       	add	r10, r31
    48ec:	b1 1c       	adc	r11, r1
    48ee:	f6 01       	movw	r30, r12
    48f0:	60 81       	ld	r22, Z
    48f2:	71 81       	ldd	r23, Z+1	; 0x01
    48f4:	82 81       	ldd	r24, Z+2	; 0x02
    48f6:	93 81       	ldd	r25, Z+3	; 0x03
    48f8:	0a c0       	rjmp	.+20     	; 0x490e <vfprintf+0x53e>
    48fa:	f2 e0       	ldi	r31, 0x02	; 2
    48fc:	af 0e       	add	r10, r31
    48fe:	b1 1c       	adc	r11, r1
    4900:	f6 01       	movw	r30, r12
    4902:	60 81       	ld	r22, Z
    4904:	71 81       	ldd	r23, Z+1	; 0x01
    4906:	88 27       	eor	r24, r24
    4908:	77 fd       	sbrc	r23, 7
    490a:	80 95       	com	r24
    490c:	98 2f       	mov	r25, r24
    490e:	02 2f       	mov	r16, r18
    4910:	0f 76       	andi	r16, 0x6F	; 111
    4912:	97 ff       	sbrs	r25, 7
    4914:	08 c0       	rjmp	.+16     	; 0x4926 <vfprintf+0x556>
    4916:	90 95       	com	r25
    4918:	80 95       	com	r24
    491a:	70 95       	com	r23
    491c:	61 95       	neg	r22
    491e:	7f 4f       	sbci	r23, 0xFF	; 255
    4920:	8f 4f       	sbci	r24, 0xFF	; 255
    4922:	9f 4f       	sbci	r25, 0xFF	; 255
    4924:	00 68       	ori	r16, 0x80	; 128
    4926:	2a e0       	ldi	r18, 0x0A	; 10
    4928:	30 e0       	ldi	r19, 0x00	; 0
    492a:	a4 01       	movw	r20, r8
    492c:	0e 94 2c 2a 	call	0x5458	; 0x5458 <__ultoa_invert>
    4930:	c8 2e       	mov	r12, r24
    4932:	c8 18       	sub	r12, r8
    4934:	3e c0       	rjmp	.+124    	; 0x49b2 <vfprintf+0x5e2>
    4936:	02 2f       	mov	r16, r18
    4938:	85 37       	cpi	r24, 0x75	; 117
    493a:	21 f4       	brne	.+8      	; 0x4944 <vfprintf+0x574>
    493c:	0f 7e       	andi	r16, 0xEF	; 239
    493e:	2a e0       	ldi	r18, 0x0A	; 10
    4940:	30 e0       	ldi	r19, 0x00	; 0
    4942:	1d c0       	rjmp	.+58     	; 0x497e <vfprintf+0x5ae>
    4944:	09 7f       	andi	r16, 0xF9	; 249
    4946:	8f 36       	cpi	r24, 0x6F	; 111
    4948:	91 f0       	breq	.+36     	; 0x496e <vfprintf+0x59e>
    494a:	18 f4       	brcc	.+6      	; 0x4952 <vfprintf+0x582>
    494c:	88 35       	cpi	r24, 0x58	; 88
    494e:	59 f0       	breq	.+22     	; 0x4966 <vfprintf+0x596>
    4950:	b0 c0       	rjmp	.+352    	; 0x4ab2 <vfprintf+0x6e2>
    4952:	80 37       	cpi	r24, 0x70	; 112
    4954:	19 f0       	breq	.+6      	; 0x495c <vfprintf+0x58c>
    4956:	88 37       	cpi	r24, 0x78	; 120
    4958:	11 f0       	breq	.+4      	; 0x495e <vfprintf+0x58e>
    495a:	ab c0       	rjmp	.+342    	; 0x4ab2 <vfprintf+0x6e2>
    495c:	00 61       	ori	r16, 0x10	; 16
    495e:	04 ff       	sbrs	r16, 4
    4960:	09 c0       	rjmp	.+18     	; 0x4974 <vfprintf+0x5a4>
    4962:	04 60       	ori	r16, 0x04	; 4
    4964:	07 c0       	rjmp	.+14     	; 0x4974 <vfprintf+0x5a4>
    4966:	24 ff       	sbrs	r18, 4
    4968:	08 c0       	rjmp	.+16     	; 0x497a <vfprintf+0x5aa>
    496a:	06 60       	ori	r16, 0x06	; 6
    496c:	06 c0       	rjmp	.+12     	; 0x497a <vfprintf+0x5aa>
    496e:	28 e0       	ldi	r18, 0x08	; 8
    4970:	30 e0       	ldi	r19, 0x00	; 0
    4972:	05 c0       	rjmp	.+10     	; 0x497e <vfprintf+0x5ae>
    4974:	20 e1       	ldi	r18, 0x10	; 16
    4976:	30 e0       	ldi	r19, 0x00	; 0
    4978:	02 c0       	rjmp	.+4      	; 0x497e <vfprintf+0x5ae>
    497a:	20 e1       	ldi	r18, 0x10	; 16
    497c:	32 e0       	ldi	r19, 0x02	; 2
    497e:	56 01       	movw	r10, r12
    4980:	07 ff       	sbrs	r16, 7
    4982:	09 c0       	rjmp	.+18     	; 0x4996 <vfprintf+0x5c6>
    4984:	f4 e0       	ldi	r31, 0x04	; 4
    4986:	af 0e       	add	r10, r31
    4988:	b1 1c       	adc	r11, r1
    498a:	f6 01       	movw	r30, r12
    498c:	60 81       	ld	r22, Z
    498e:	71 81       	ldd	r23, Z+1	; 0x01
    4990:	82 81       	ldd	r24, Z+2	; 0x02
    4992:	93 81       	ldd	r25, Z+3	; 0x03
    4994:	08 c0       	rjmp	.+16     	; 0x49a6 <vfprintf+0x5d6>
    4996:	f2 e0       	ldi	r31, 0x02	; 2
    4998:	af 0e       	add	r10, r31
    499a:	b1 1c       	adc	r11, r1
    499c:	f6 01       	movw	r30, r12
    499e:	60 81       	ld	r22, Z
    49a0:	71 81       	ldd	r23, Z+1	; 0x01
    49a2:	80 e0       	ldi	r24, 0x00	; 0
    49a4:	90 e0       	ldi	r25, 0x00	; 0
    49a6:	a4 01       	movw	r20, r8
    49a8:	0e 94 2c 2a 	call	0x5458	; 0x5458 <__ultoa_invert>
    49ac:	c8 2e       	mov	r12, r24
    49ae:	c8 18       	sub	r12, r8
    49b0:	0f 77       	andi	r16, 0x7F	; 127
    49b2:	06 ff       	sbrs	r16, 6
    49b4:	0b c0       	rjmp	.+22     	; 0x49cc <vfprintf+0x5fc>
    49b6:	20 2f       	mov	r18, r16
    49b8:	2e 7f       	andi	r18, 0xFE	; 254
    49ba:	c1 16       	cp	r12, r17
    49bc:	50 f4       	brcc	.+20     	; 0x49d2 <vfprintf+0x602>
    49be:	04 ff       	sbrs	r16, 4
    49c0:	0a c0       	rjmp	.+20     	; 0x49d6 <vfprintf+0x606>
    49c2:	02 fd       	sbrc	r16, 2
    49c4:	08 c0       	rjmp	.+16     	; 0x49d6 <vfprintf+0x606>
    49c6:	20 2f       	mov	r18, r16
    49c8:	2e 7e       	andi	r18, 0xEE	; 238
    49ca:	05 c0       	rjmp	.+10     	; 0x49d6 <vfprintf+0x606>
    49cc:	dc 2c       	mov	r13, r12
    49ce:	20 2f       	mov	r18, r16
    49d0:	03 c0       	rjmp	.+6      	; 0x49d8 <vfprintf+0x608>
    49d2:	dc 2c       	mov	r13, r12
    49d4:	01 c0       	rjmp	.+2      	; 0x49d8 <vfprintf+0x608>
    49d6:	d1 2e       	mov	r13, r17
    49d8:	24 ff       	sbrs	r18, 4
    49da:	0d c0       	rjmp	.+26     	; 0x49f6 <vfprintf+0x626>
    49dc:	fe 01       	movw	r30, r28
    49de:	ec 0d       	add	r30, r12
    49e0:	f1 1d       	adc	r31, r1
    49e2:	80 81       	ld	r24, Z
    49e4:	80 33       	cpi	r24, 0x30	; 48
    49e6:	11 f4       	brne	.+4      	; 0x49ec <vfprintf+0x61c>
    49e8:	29 7e       	andi	r18, 0xE9	; 233
    49ea:	09 c0       	rjmp	.+18     	; 0x49fe <vfprintf+0x62e>
    49ec:	22 ff       	sbrs	r18, 2
    49ee:	06 c0       	rjmp	.+12     	; 0x49fc <vfprintf+0x62c>
    49f0:	d3 94       	inc	r13
    49f2:	d3 94       	inc	r13
    49f4:	04 c0       	rjmp	.+8      	; 0x49fe <vfprintf+0x62e>
    49f6:	82 2f       	mov	r24, r18
    49f8:	86 78       	andi	r24, 0x86	; 134
    49fa:	09 f0       	breq	.+2      	; 0x49fe <vfprintf+0x62e>
    49fc:	d3 94       	inc	r13
    49fe:	23 fd       	sbrc	r18, 3
    4a00:	13 c0       	rjmp	.+38     	; 0x4a28 <vfprintf+0x658>
    4a02:	20 ff       	sbrs	r18, 0
    4a04:	06 c0       	rjmp	.+12     	; 0x4a12 <vfprintf+0x642>
    4a06:	1c 2d       	mov	r17, r12
    4a08:	d5 14       	cp	r13, r5
    4a0a:	18 f4       	brcc	.+6      	; 0x4a12 <vfprintf+0x642>
    4a0c:	15 0d       	add	r17, r5
    4a0e:	1d 19       	sub	r17, r13
    4a10:	d5 2c       	mov	r13, r5
    4a12:	d5 14       	cp	r13, r5
    4a14:	68 f4       	brcc	.+26     	; 0x4a30 <vfprintf+0x660>
    4a16:	b7 01       	movw	r22, r14
    4a18:	80 e2       	ldi	r24, 0x20	; 32
    4a1a:	90 e0       	ldi	r25, 0x00	; 0
    4a1c:	2b 8b       	std	Y+19, r18	; 0x13
    4a1e:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4a22:	d3 94       	inc	r13
    4a24:	2b 89       	ldd	r18, Y+19	; 0x13
    4a26:	f5 cf       	rjmp	.-22     	; 0x4a12 <vfprintf+0x642>
    4a28:	d5 14       	cp	r13, r5
    4a2a:	10 f4       	brcc	.+4      	; 0x4a30 <vfprintf+0x660>
    4a2c:	5d 18       	sub	r5, r13
    4a2e:	01 c0       	rjmp	.+2      	; 0x4a32 <vfprintf+0x662>
    4a30:	51 2c       	mov	r5, r1
    4a32:	24 ff       	sbrs	r18, 4
    4a34:	12 c0       	rjmp	.+36     	; 0x4a5a <vfprintf+0x68a>
    4a36:	b7 01       	movw	r22, r14
    4a38:	80 e3       	ldi	r24, 0x30	; 48
    4a3a:	90 e0       	ldi	r25, 0x00	; 0
    4a3c:	2b 8b       	std	Y+19, r18	; 0x13
    4a3e:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4a42:	2b 89       	ldd	r18, Y+19	; 0x13
    4a44:	22 ff       	sbrs	r18, 2
    4a46:	17 c0       	rjmp	.+46     	; 0x4a76 <vfprintf+0x6a6>
    4a48:	21 ff       	sbrs	r18, 1
    4a4a:	03 c0       	rjmp	.+6      	; 0x4a52 <vfprintf+0x682>
    4a4c:	88 e5       	ldi	r24, 0x58	; 88
    4a4e:	90 e0       	ldi	r25, 0x00	; 0
    4a50:	02 c0       	rjmp	.+4      	; 0x4a56 <vfprintf+0x686>
    4a52:	88 e7       	ldi	r24, 0x78	; 120
    4a54:	90 e0       	ldi	r25, 0x00	; 0
    4a56:	b7 01       	movw	r22, r14
    4a58:	0c c0       	rjmp	.+24     	; 0x4a72 <vfprintf+0x6a2>
    4a5a:	82 2f       	mov	r24, r18
    4a5c:	86 78       	andi	r24, 0x86	; 134
    4a5e:	59 f0       	breq	.+22     	; 0x4a76 <vfprintf+0x6a6>
    4a60:	21 fd       	sbrc	r18, 1
    4a62:	02 c0       	rjmp	.+4      	; 0x4a68 <vfprintf+0x698>
    4a64:	80 e2       	ldi	r24, 0x20	; 32
    4a66:	01 c0       	rjmp	.+2      	; 0x4a6a <vfprintf+0x69a>
    4a68:	8b e2       	ldi	r24, 0x2B	; 43
    4a6a:	27 fd       	sbrc	r18, 7
    4a6c:	8d e2       	ldi	r24, 0x2D	; 45
    4a6e:	b7 01       	movw	r22, r14
    4a70:	90 e0       	ldi	r25, 0x00	; 0
    4a72:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4a76:	c1 16       	cp	r12, r17
    4a78:	38 f4       	brcc	.+14     	; 0x4a88 <vfprintf+0x6b8>
    4a7a:	b7 01       	movw	r22, r14
    4a7c:	80 e3       	ldi	r24, 0x30	; 48
    4a7e:	90 e0       	ldi	r25, 0x00	; 0
    4a80:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4a84:	11 50       	subi	r17, 0x01	; 1
    4a86:	f7 cf       	rjmp	.-18     	; 0x4a76 <vfprintf+0x6a6>
    4a88:	ca 94       	dec	r12
    4a8a:	f4 01       	movw	r30, r8
    4a8c:	ec 0d       	add	r30, r12
    4a8e:	f1 1d       	adc	r31, r1
    4a90:	80 81       	ld	r24, Z
    4a92:	b7 01       	movw	r22, r14
    4a94:	90 e0       	ldi	r25, 0x00	; 0
    4a96:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4a9a:	c1 10       	cpse	r12, r1
    4a9c:	f5 cf       	rjmp	.-22     	; 0x4a88 <vfprintf+0x6b8>
    4a9e:	55 20       	and	r5, r5
    4aa0:	09 f4       	brne	.+2      	; 0x4aa4 <vfprintf+0x6d4>
    4aa2:	c2 cc       	rjmp	.-1660   	; 0x4428 <vfprintf+0x58>
    4aa4:	b7 01       	movw	r22, r14
    4aa6:	80 e2       	ldi	r24, 0x20	; 32
    4aa8:	90 e0       	ldi	r25, 0x00	; 0
    4aaa:	0e 94 e6 29 	call	0x53cc	; 0x53cc <fputc>
    4aae:	5a 94       	dec	r5
    4ab0:	f6 cf       	rjmp	.-20     	; 0x4a9e <vfprintf+0x6ce>
    4ab2:	f7 01       	movw	r30, r14
    4ab4:	86 81       	ldd	r24, Z+6	; 0x06
    4ab6:	97 81       	ldd	r25, Z+7	; 0x07
    4ab8:	02 c0       	rjmp	.+4      	; 0x4abe <vfprintf+0x6ee>
    4aba:	8f ef       	ldi	r24, 0xFF	; 255
    4abc:	9f ef       	ldi	r25, 0xFF	; 255
    4abe:	63 96       	adiw	r28, 0x13	; 19
    4ac0:	e2 e1       	ldi	r30, 0x12	; 18
    4ac2:	0c 94 35 27 	jmp	0x4e6a	; 0x4e6a <__epilogue_restores__>

00004ac6 <lrint>:
    4ac6:	9b db       	rcall	.-2250   	; 0x41fe <__fp_splitA>
    4ac8:	a8 f1       	brcs	.+106    	; 0x4b34 <lrint+0x6e>
    4aca:	9e 57       	subi	r25, 0x7E	; 126
    4acc:	a8 f1       	brcs	.+106    	; 0x4b38 <lrint+0x72>
    4ace:	98 51       	subi	r25, 0x18	; 24
    4ad0:	60 f0       	brcs	.+24     	; 0x4aea <lrint+0x24>
    4ad2:	39 f1       	breq	.+78     	; 0x4b22 <lrint+0x5c>
    4ad4:	98 30       	cpi	r25, 0x08	; 8
    4ad6:	70 f5       	brcc	.+92     	; 0x4b34 <lrint+0x6e>
    4ad8:	09 2e       	mov	r0, r25
    4ada:	99 27       	eor	r25, r25
    4adc:	66 0f       	add	r22, r22
    4ade:	77 1f       	adc	r23, r23
    4ae0:	88 1f       	adc	r24, r24
    4ae2:	99 1f       	adc	r25, r25
    4ae4:	0a 94       	dec	r0
    4ae6:	d1 f7       	brne	.-12     	; 0x4adc <lrint+0x16>
    4ae8:	1c c0       	rjmp	.+56     	; 0x4b22 <lrint+0x5c>
    4aea:	bb 27       	eor	r27, r27
    4aec:	99 3f       	cpi	r25, 0xF9	; 249
    4aee:	4c f4       	brge	.+18     	; 0x4b02 <lrint+0x3c>
    4af0:	b1 11       	cpse	r27, r1
    4af2:	b1 e0       	ldi	r27, 0x01	; 1
    4af4:	b6 2b       	or	r27, r22
    4af6:	67 2f       	mov	r22, r23
    4af8:	78 2f       	mov	r23, r24
    4afa:	88 27       	eor	r24, r24
    4afc:	98 5f       	subi	r25, 0xF8	; 248
    4afe:	b1 f7       	brne	.-20     	; 0x4aec <lrint+0x26>
    4b00:	08 c0       	rjmp	.+16     	; 0x4b12 <lrint+0x4c>
    4b02:	86 95       	lsr	r24
    4b04:	77 95       	ror	r23
    4b06:	67 95       	ror	r22
    4b08:	b7 95       	ror	r27
    4b0a:	08 f4       	brcc	.+2      	; 0x4b0e <lrint+0x48>
    4b0c:	b1 60       	ori	r27, 0x01	; 1
    4b0e:	93 95       	inc	r25
    4b10:	c1 f7       	brne	.-16     	; 0x4b02 <lrint+0x3c>
    4b12:	bb 0f       	add	r27, r27
    4b14:	30 f4       	brcc	.+12     	; 0x4b22 <lrint+0x5c>
    4b16:	11 f4       	brne	.+4      	; 0x4b1c <lrint+0x56>
    4b18:	60 ff       	sbrs	r22, 0
    4b1a:	03 c0       	rjmp	.+6      	; 0x4b22 <lrint+0x5c>
    4b1c:	6f 5f       	subi	r22, 0xFF	; 255
    4b1e:	7f 4f       	sbci	r23, 0xFF	; 255
    4b20:	8f 4f       	sbci	r24, 0xFF	; 255
    4b22:	3e f4       	brtc	.+14     	; 0x4b32 <lrint+0x6c>
    4b24:	90 95       	com	r25
    4b26:	80 95       	com	r24
    4b28:	70 95       	com	r23
    4b2a:	61 95       	neg	r22
    4b2c:	7f 4f       	sbci	r23, 0xFF	; 255
    4b2e:	8f 4f       	sbci	r24, 0xFF	; 255
    4b30:	9f 4f       	sbci	r25, 0xFF	; 255
    4b32:	08 95       	ret
    4b34:	68 94       	set
    4b36:	7e cb       	rjmp	.-2308   	; 0x4234 <__fp_szero>
    4b38:	7c cb       	rjmp	.-2312   	; 0x4232 <__fp_zero>

00004b3a <pow>:
    4b3a:	fa 01       	movw	r30, r20
    4b3c:	ee 0f       	add	r30, r30
    4b3e:	ff 1f       	adc	r31, r31
    4b40:	30 96       	adiw	r30, 0x00	; 0
    4b42:	21 05       	cpc	r18, r1
    4b44:	31 05       	cpc	r19, r1
    4b46:	99 f1       	breq	.+102    	; 0x4bae <pow+0x74>
    4b48:	61 15       	cp	r22, r1
    4b4a:	71 05       	cpc	r23, r1
    4b4c:	61 f4       	brne	.+24     	; 0x4b66 <pow+0x2c>
    4b4e:	80 38       	cpi	r24, 0x80	; 128
    4b50:	bf e3       	ldi	r27, 0x3F	; 63
    4b52:	9b 07       	cpc	r25, r27
    4b54:	49 f1       	breq	.+82     	; 0x4ba8 <pow+0x6e>
    4b56:	68 94       	set
    4b58:	90 38       	cpi	r25, 0x80	; 128
    4b5a:	81 05       	cpc	r24, r1
    4b5c:	61 f0       	breq	.+24     	; 0x4b76 <pow+0x3c>
    4b5e:	80 38       	cpi	r24, 0x80	; 128
    4b60:	bf ef       	ldi	r27, 0xFF	; 255
    4b62:	9b 07       	cpc	r25, r27
    4b64:	41 f0       	breq	.+16     	; 0x4b76 <pow+0x3c>
    4b66:	99 23       	and	r25, r25
    4b68:	42 f5       	brpl	.+80     	; 0x4bba <pow+0x80>
    4b6a:	ff 3f       	cpi	r31, 0xFF	; 255
    4b6c:	e1 05       	cpc	r30, r1
    4b6e:	31 05       	cpc	r19, r1
    4b70:	21 05       	cpc	r18, r1
    4b72:	11 f1       	breq	.+68     	; 0x4bb8 <pow+0x7e>
    4b74:	e8 94       	clt
    4b76:	08 94       	sec
    4b78:	e7 95       	ror	r30
    4b7a:	d9 01       	movw	r26, r18
    4b7c:	aa 23       	and	r26, r26
    4b7e:	29 f4       	brne	.+10     	; 0x4b8a <pow+0x50>
    4b80:	ab 2f       	mov	r26, r27
    4b82:	be 2f       	mov	r27, r30
    4b84:	f8 5f       	subi	r31, 0xF8	; 248
    4b86:	d0 f3       	brcs	.-12     	; 0x4b7c <pow+0x42>
    4b88:	10 c0       	rjmp	.+32     	; 0x4baa <pow+0x70>
    4b8a:	ff 5f       	subi	r31, 0xFF	; 255
    4b8c:	70 f4       	brcc	.+28     	; 0x4baa <pow+0x70>
    4b8e:	a6 95       	lsr	r26
    4b90:	e0 f7       	brcc	.-8      	; 0x4b8a <pow+0x50>
    4b92:	f7 39       	cpi	r31, 0x97	; 151
    4b94:	50 f0       	brcs	.+20     	; 0x4baa <pow+0x70>
    4b96:	19 f0       	breq	.+6      	; 0x4b9e <pow+0x64>
    4b98:	ff 3a       	cpi	r31, 0xAF	; 175
    4b9a:	38 f4       	brcc	.+14     	; 0x4baa <pow+0x70>
    4b9c:	9f 77       	andi	r25, 0x7F	; 127
    4b9e:	9f 93       	push	r25
    4ba0:	0c d0       	rcall	.+24     	; 0x4bba <pow+0x80>
    4ba2:	0f 90       	pop	r0
    4ba4:	07 fc       	sbrc	r0, 7
    4ba6:	90 58       	subi	r25, 0x80	; 128
    4ba8:	08 95       	ret
    4baa:	3e f0       	brts	.+14     	; 0x4bba <pow+0x80>
    4bac:	d9 ca       	rjmp	.-2638   	; 0x4160 <__fp_nan>
    4bae:	60 e0       	ldi	r22, 0x00	; 0
    4bb0:	70 e0       	ldi	r23, 0x00	; 0
    4bb2:	80 e8       	ldi	r24, 0x80	; 128
    4bb4:	9f e3       	ldi	r25, 0x3F	; 63
    4bb6:	08 95       	ret
    4bb8:	4f e7       	ldi	r20, 0x7F	; 127
    4bba:	9f 77       	andi	r25, 0x7F	; 127
    4bbc:	5f 93       	push	r21
    4bbe:	4f 93       	push	r20
    4bc0:	3f 93       	push	r19
    4bc2:	2f 93       	push	r18
    4bc4:	72 d0       	rcall	.+228    	; 0x4caa <log>
    4bc6:	2f 91       	pop	r18
    4bc8:	3f 91       	pop	r19
    4bca:	4f 91       	pop	r20
    4bcc:	5f 91       	pop	r21
    4bce:	43 db       	rcall	.-2426   	; 0x4256 <__mulsf3>
    4bd0:	05 c0       	rjmp	.+10     	; 0x4bdc <exp>
    4bd2:	19 f4       	brne	.+6      	; 0x4bda <pow+0xa0>
    4bd4:	0e f0       	brts	.+2      	; 0x4bd8 <pow+0x9e>
    4bd6:	be ca       	rjmp	.-2692   	; 0x4154 <__fp_inf>
    4bd8:	2c cb       	rjmp	.-2472   	; 0x4232 <__fp_zero>
    4bda:	c2 ca       	rjmp	.-2684   	; 0x4160 <__fp_nan>

00004bdc <exp>:
    4bdc:	10 db       	rcall	.-2528   	; 0x41fe <__fp_splitA>
    4bde:	c8 f3       	brcs	.-14     	; 0x4bd2 <pow+0x98>
    4be0:	96 38       	cpi	r25, 0x86	; 134
    4be2:	c0 f7       	brcc	.-16     	; 0x4bd4 <pow+0x9a>
    4be4:	07 f8       	bld	r0, 7
    4be6:	0f 92       	push	r0
    4be8:	e8 94       	clt
    4bea:	2b e3       	ldi	r18, 0x3B	; 59
    4bec:	3a ea       	ldi	r19, 0xAA	; 170
    4bee:	48 eb       	ldi	r20, 0xB8	; 184
    4bf0:	5f e7       	ldi	r21, 0x7F	; 127
    4bf2:	3f db       	rcall	.-2434   	; 0x4272 <__mulsf3_pse>
    4bf4:	0f 92       	push	r0
    4bf6:	0f 92       	push	r0
    4bf8:	0f 92       	push	r0
    4bfa:	4d b7       	in	r20, 0x3d	; 61
    4bfc:	5e b7       	in	r21, 0x3e	; 62
    4bfe:	0f 92       	push	r0
    4c00:	94 d0       	rcall	.+296    	; 0x4d2a <modf>
    4c02:	e6 ef       	ldi	r30, 0xF6	; 246
    4c04:	f0 e0       	ldi	r31, 0x00	; 0
    4c06:	af da       	rcall	.-2722   	; 0x4166 <__fp_powser>
    4c08:	4f 91       	pop	r20
    4c0a:	5f 91       	pop	r21
    4c0c:	ef 91       	pop	r30
    4c0e:	ff 91       	pop	r31
    4c10:	e5 95       	asr	r30
    4c12:	ee 1f       	adc	r30, r30
    4c14:	ff 1f       	adc	r31, r31
    4c16:	49 f0       	breq	.+18     	; 0x4c2a <exp+0x4e>
    4c18:	fe 57       	subi	r31, 0x7E	; 126
    4c1a:	e0 68       	ori	r30, 0x80	; 128
    4c1c:	44 27       	eor	r20, r20
    4c1e:	ee 0f       	add	r30, r30
    4c20:	44 1f       	adc	r20, r20
    4c22:	fa 95       	dec	r31
    4c24:	e1 f7       	brne	.-8      	; 0x4c1e <exp+0x42>
    4c26:	41 95       	neg	r20
    4c28:	55 0b       	sbc	r21, r21
    4c2a:	06 d0       	rcall	.+12     	; 0x4c38 <ldexp>
    4c2c:	0f 90       	pop	r0
    4c2e:	07 fe       	sbrs	r0, 7
    4c30:	0b cb       	rjmp	.-2538   	; 0x4248 <inverse>
    4c32:	08 95       	ret
    4c34:	8f ca       	rjmp	.-2786   	; 0x4154 <__fp_inf>
    4c36:	b7 cb       	rjmp	.-2194   	; 0x43a6 <__fp_mpack>

00004c38 <ldexp>:
    4c38:	e2 da       	rcall	.-2620   	; 0x41fe <__fp_splitA>
    4c3a:	e8 f3       	brcs	.-6      	; 0x4c36 <exp+0x5a>
    4c3c:	99 23       	and	r25, r25
    4c3e:	d9 f3       	breq	.-10     	; 0x4c36 <exp+0x5a>
    4c40:	94 0f       	add	r25, r20
    4c42:	51 1d       	adc	r21, r1
    4c44:	bb f3       	brvs	.-18     	; 0x4c34 <exp+0x58>
    4c46:	91 50       	subi	r25, 0x01	; 1
    4c48:	50 40       	sbci	r21, 0x00	; 0
    4c4a:	94 f0       	brlt	.+36     	; 0x4c70 <ldexp+0x38>
    4c4c:	59 f0       	breq	.+22     	; 0x4c64 <ldexp+0x2c>
    4c4e:	88 23       	and	r24, r24
    4c50:	32 f0       	brmi	.+12     	; 0x4c5e <ldexp+0x26>
    4c52:	66 0f       	add	r22, r22
    4c54:	77 1f       	adc	r23, r23
    4c56:	88 1f       	adc	r24, r24
    4c58:	91 50       	subi	r25, 0x01	; 1
    4c5a:	50 40       	sbci	r21, 0x00	; 0
    4c5c:	c1 f7       	brne	.-16     	; 0x4c4e <ldexp+0x16>
    4c5e:	9e 3f       	cpi	r25, 0xFE	; 254
    4c60:	51 05       	cpc	r21, r1
    4c62:	44 f7       	brge	.-48     	; 0x4c34 <exp+0x58>
    4c64:	88 0f       	add	r24, r24
    4c66:	91 1d       	adc	r25, r1
    4c68:	96 95       	lsr	r25
    4c6a:	87 95       	ror	r24
    4c6c:	97 f9       	bld	r25, 7
    4c6e:	08 95       	ret
    4c70:	5f 3f       	cpi	r21, 0xFF	; 255
    4c72:	ac f0       	brlt	.+42     	; 0x4c9e <ldexp+0x66>
    4c74:	98 3e       	cpi	r25, 0xE8	; 232
    4c76:	9c f0       	brlt	.+38     	; 0x4c9e <ldexp+0x66>
    4c78:	bb 27       	eor	r27, r27
    4c7a:	86 95       	lsr	r24
    4c7c:	77 95       	ror	r23
    4c7e:	67 95       	ror	r22
    4c80:	b7 95       	ror	r27
    4c82:	08 f4       	brcc	.+2      	; 0x4c86 <ldexp+0x4e>
    4c84:	b1 60       	ori	r27, 0x01	; 1
    4c86:	93 95       	inc	r25
    4c88:	c1 f7       	brne	.-16     	; 0x4c7a <ldexp+0x42>
    4c8a:	bb 0f       	add	r27, r27
    4c8c:	58 f7       	brcc	.-42     	; 0x4c64 <ldexp+0x2c>
    4c8e:	11 f4       	brne	.+4      	; 0x4c94 <ldexp+0x5c>
    4c90:	60 ff       	sbrs	r22, 0
    4c92:	e8 cf       	rjmp	.-48     	; 0x4c64 <ldexp+0x2c>
    4c94:	6f 5f       	subi	r22, 0xFF	; 255
    4c96:	7f 4f       	sbci	r23, 0xFF	; 255
    4c98:	8f 4f       	sbci	r24, 0xFF	; 255
    4c9a:	9f 4f       	sbci	r25, 0xFF	; 255
    4c9c:	e3 cf       	rjmp	.-58     	; 0x4c64 <ldexp+0x2c>
    4c9e:	ca ca       	rjmp	.-2668   	; 0x4234 <__fp_szero>
    4ca0:	0e f0       	brts	.+2      	; 0x4ca4 <ldexp+0x6c>
    4ca2:	81 cb       	rjmp	.-2302   	; 0x43a6 <__fp_mpack>
    4ca4:	5d ca       	rjmp	.-2886   	; 0x4160 <__fp_nan>
    4ca6:	68 94       	set
    4ca8:	55 ca       	rjmp	.-2902   	; 0x4154 <__fp_inf>

00004caa <log>:
    4caa:	a9 da       	rcall	.-2734   	; 0x41fe <__fp_splitA>
    4cac:	c8 f3       	brcs	.-14     	; 0x4ca0 <ldexp+0x68>
    4cae:	99 23       	and	r25, r25
    4cb0:	d1 f3       	breq	.-12     	; 0x4ca6 <ldexp+0x6e>
    4cb2:	c6 f3       	brts	.-16     	; 0x4ca4 <ldexp+0x6c>
    4cb4:	df 93       	push	r29
    4cb6:	cf 93       	push	r28
    4cb8:	1f 93       	push	r17
    4cba:	0f 93       	push	r16
    4cbc:	ff 92       	push	r15
    4cbe:	c9 2f       	mov	r28, r25
    4cc0:	dd 27       	eor	r29, r29
    4cc2:	88 23       	and	r24, r24
    4cc4:	2a f0       	brmi	.+10     	; 0x4cd0 <log+0x26>
    4cc6:	21 97       	sbiw	r28, 0x01	; 1
    4cc8:	66 0f       	add	r22, r22
    4cca:	77 1f       	adc	r23, r23
    4ccc:	88 1f       	adc	r24, r24
    4cce:	da f7       	brpl	.-10     	; 0x4cc6 <log+0x1c>
    4cd0:	20 e0       	ldi	r18, 0x00	; 0
    4cd2:	30 e0       	ldi	r19, 0x00	; 0
    4cd4:	40 e8       	ldi	r20, 0x80	; 128
    4cd6:	5f eb       	ldi	r21, 0xBF	; 191
    4cd8:	9f e3       	ldi	r25, 0x3F	; 63
    4cda:	88 39       	cpi	r24, 0x98	; 152
    4cdc:	20 f0       	brcs	.+8      	; 0x4ce6 <log+0x3c>
    4cde:	80 3e       	cpi	r24, 0xE0	; 224
    4ce0:	30 f0       	brcs	.+12     	; 0x4cee <log+0x44>
    4ce2:	21 96       	adiw	r28, 0x01	; 1
    4ce4:	8f 77       	andi	r24, 0x7F	; 127
    4ce6:	72 d8       	rcall	.-3868   	; 0x3dcc <__addsf3>
    4ce8:	ee e1       	ldi	r30, 0x1E	; 30
    4cea:	f1 e0       	ldi	r31, 0x01	; 1
    4cec:	03 c0       	rjmp	.+6      	; 0x4cf4 <log+0x4a>
    4cee:	6e d8       	rcall	.-3876   	; 0x3dcc <__addsf3>
    4cf0:	eb e4       	ldi	r30, 0x4B	; 75
    4cf2:	f1 e0       	ldi	r31, 0x01	; 1
    4cf4:	38 da       	rcall	.-2960   	; 0x4166 <__fp_powser>
    4cf6:	8b 01       	movw	r16, r22
    4cf8:	be 01       	movw	r22, r28
    4cfa:	ec 01       	movw	r28, r24
    4cfc:	fb 2e       	mov	r15, r27
    4cfe:	6f 57       	subi	r22, 0x7F	; 127
    4d00:	71 09       	sbc	r23, r1
    4d02:	75 95       	asr	r23
    4d04:	77 1f       	adc	r23, r23
    4d06:	88 0b       	sbc	r24, r24
    4d08:	99 0b       	sbc	r25, r25
    4d0a:	c5 d9       	rcall	.-3190   	; 0x4096 <__floatsisf>
    4d0c:	28 e1       	ldi	r18, 0x18	; 24
    4d0e:	32 e7       	ldi	r19, 0x72	; 114
    4d10:	41 e3       	ldi	r20, 0x31	; 49
    4d12:	5f e3       	ldi	r21, 0x3F	; 63
    4d14:	ac da       	rcall	.-2728   	; 0x426e <__mulsf3x>
    4d16:	af 2d       	mov	r26, r15
    4d18:	98 01       	movw	r18, r16
    4d1a:	ae 01       	movw	r20, r28
    4d1c:	ff 90       	pop	r15
    4d1e:	0f 91       	pop	r16
    4d20:	1f 91       	pop	r17
    4d22:	cf 91       	pop	r28
    4d24:	df 91       	pop	r29
    4d26:	63 d8       	rcall	.-3898   	; 0x3dee <__addsf3x>
    4d28:	51 ca       	rjmp	.-2910   	; 0x41cc <__fp_round>

00004d2a <modf>:
    4d2a:	fa 01       	movw	r30, r20
    4d2c:	dc 01       	movw	r26, r24
    4d2e:	aa 0f       	add	r26, r26
    4d30:	bb 1f       	adc	r27, r27
    4d32:	9b 01       	movw	r18, r22
    4d34:	ac 01       	movw	r20, r24
    4d36:	bf 57       	subi	r27, 0x7F	; 127
    4d38:	28 f4       	brcc	.+10     	; 0x4d44 <modf+0x1a>
    4d3a:	22 27       	eor	r18, r18
    4d3c:	33 27       	eor	r19, r19
    4d3e:	44 27       	eor	r20, r20
    4d40:	50 78       	andi	r21, 0x80	; 128
    4d42:	1f c0       	rjmp	.+62     	; 0x4d82 <modf+0x58>
    4d44:	b7 51       	subi	r27, 0x17	; 23
    4d46:	88 f4       	brcc	.+34     	; 0x4d6a <modf+0x40>
    4d48:	ab 2f       	mov	r26, r27
    4d4a:	00 24       	eor	r0, r0
    4d4c:	46 95       	lsr	r20
    4d4e:	37 95       	ror	r19
    4d50:	27 95       	ror	r18
    4d52:	01 1c       	adc	r0, r1
    4d54:	a3 95       	inc	r26
    4d56:	d2 f3       	brmi	.-12     	; 0x4d4c <modf+0x22>
    4d58:	00 20       	and	r0, r0
    4d5a:	69 f0       	breq	.+26     	; 0x4d76 <modf+0x4c>
    4d5c:	22 0f       	add	r18, r18
    4d5e:	33 1f       	adc	r19, r19
    4d60:	44 1f       	adc	r20, r20
    4d62:	b3 95       	inc	r27
    4d64:	da f3       	brmi	.-10     	; 0x4d5c <modf+0x32>
    4d66:	0d d0       	rcall	.+26     	; 0x4d82 <modf+0x58>
    4d68:	30 c8       	rjmp	.-4000   	; 0x3dca <__subsf3>
    4d6a:	61 30       	cpi	r22, 0x01	; 1
    4d6c:	71 05       	cpc	r23, r1
    4d6e:	a0 e8       	ldi	r26, 0x80	; 128
    4d70:	8a 07       	cpc	r24, r26
    4d72:	b9 46       	sbci	r27, 0x69	; 105
    4d74:	30 f4       	brcc	.+12     	; 0x4d82 <modf+0x58>
    4d76:	9b 01       	movw	r18, r22
    4d78:	ac 01       	movw	r20, r24
    4d7a:	66 27       	eor	r22, r22
    4d7c:	77 27       	eor	r23, r23
    4d7e:	88 27       	eor	r24, r24
    4d80:	90 78       	andi	r25, 0x80	; 128
    4d82:	30 96       	adiw	r30, 0x00	; 0
    4d84:	21 f0       	breq	.+8      	; 0x4d8e <modf+0x64>
    4d86:	20 83       	st	Z, r18
    4d88:	31 83       	std	Z+1, r19	; 0x01
    4d8a:	42 83       	std	Z+2, r20	; 0x02
    4d8c:	53 83       	std	Z+3, r21	; 0x03
    4d8e:	08 95       	ret

00004d90 <__mulsi3>:
    4d90:	db 01       	movw	r26, r22
    4d92:	8f 93       	push	r24
    4d94:	9f 93       	push	r25
    4d96:	0e 94 0e 27 	call	0x4e1c	; 0x4e1c <__muluhisi3>
    4d9a:	bf 91       	pop	r27
    4d9c:	af 91       	pop	r26
    4d9e:	a2 9f       	mul	r26, r18
    4da0:	80 0d       	add	r24, r0
    4da2:	91 1d       	adc	r25, r1
    4da4:	a3 9f       	mul	r26, r19
    4da6:	90 0d       	add	r25, r0
    4da8:	b2 9f       	mul	r27, r18
    4daa:	90 0d       	add	r25, r0
    4dac:	11 24       	eor	r1, r1
    4dae:	08 95       	ret

00004db0 <__divmodhi4>:
    4db0:	97 fb       	bst	r25, 7
    4db2:	07 2e       	mov	r0, r23
    4db4:	16 f4       	brtc	.+4      	; 0x4dba <__divmodhi4+0xa>
    4db6:	00 94       	com	r0
    4db8:	07 d0       	rcall	.+14     	; 0x4dc8 <__divmodhi4_neg1>
    4dba:	77 fd       	sbrc	r23, 7
    4dbc:	09 d0       	rcall	.+18     	; 0x4dd0 <__divmodhi4_neg2>
    4dbe:	0e 94 50 27 	call	0x4ea0	; 0x4ea0 <__udivmodhi4>
    4dc2:	07 fc       	sbrc	r0, 7
    4dc4:	05 d0       	rcall	.+10     	; 0x4dd0 <__divmodhi4_neg2>
    4dc6:	3e f4       	brtc	.+14     	; 0x4dd6 <__divmodhi4_exit>

00004dc8 <__divmodhi4_neg1>:
    4dc8:	90 95       	com	r25
    4dca:	81 95       	neg	r24
    4dcc:	9f 4f       	sbci	r25, 0xFF	; 255
    4dce:	08 95       	ret

00004dd0 <__divmodhi4_neg2>:
    4dd0:	70 95       	com	r23
    4dd2:	61 95       	neg	r22
    4dd4:	7f 4f       	sbci	r23, 0xFF	; 255

00004dd6 <__divmodhi4_exit>:
    4dd6:	08 95       	ret

00004dd8 <__udivmodsi4>:
    4dd8:	a1 e2       	ldi	r26, 0x21	; 33
    4dda:	1a 2e       	mov	r1, r26
    4ddc:	aa 1b       	sub	r26, r26
    4dde:	bb 1b       	sub	r27, r27
    4de0:	fd 01       	movw	r30, r26
    4de2:	0d c0       	rjmp	.+26     	; 0x4dfe <__udivmodsi4_ep>

00004de4 <__udivmodsi4_loop>:
    4de4:	aa 1f       	adc	r26, r26
    4de6:	bb 1f       	adc	r27, r27
    4de8:	ee 1f       	adc	r30, r30
    4dea:	ff 1f       	adc	r31, r31
    4dec:	a2 17       	cp	r26, r18
    4dee:	b3 07       	cpc	r27, r19
    4df0:	e4 07       	cpc	r30, r20
    4df2:	f5 07       	cpc	r31, r21
    4df4:	20 f0       	brcs	.+8      	; 0x4dfe <__udivmodsi4_ep>
    4df6:	a2 1b       	sub	r26, r18
    4df8:	b3 0b       	sbc	r27, r19
    4dfa:	e4 0b       	sbc	r30, r20
    4dfc:	f5 0b       	sbc	r31, r21

00004dfe <__udivmodsi4_ep>:
    4dfe:	66 1f       	adc	r22, r22
    4e00:	77 1f       	adc	r23, r23
    4e02:	88 1f       	adc	r24, r24
    4e04:	99 1f       	adc	r25, r25
    4e06:	1a 94       	dec	r1
    4e08:	69 f7       	brne	.-38     	; 0x4de4 <__udivmodsi4_loop>
    4e0a:	60 95       	com	r22
    4e0c:	70 95       	com	r23
    4e0e:	80 95       	com	r24
    4e10:	90 95       	com	r25
    4e12:	9b 01       	movw	r18, r22
    4e14:	ac 01       	movw	r20, r24
    4e16:	bd 01       	movw	r22, r26
    4e18:	cf 01       	movw	r24, r30
    4e1a:	08 95       	ret

00004e1c <__muluhisi3>:
    4e1c:	0e 94 64 27 	call	0x4ec8	; 0x4ec8 <__umulhisi3>
    4e20:	a5 9f       	mul	r26, r21
    4e22:	90 0d       	add	r25, r0
    4e24:	b4 9f       	mul	r27, r20
    4e26:	90 0d       	add	r25, r0
    4e28:	a4 9f       	mul	r26, r20
    4e2a:	80 0d       	add	r24, r0
    4e2c:	91 1d       	adc	r25, r1
    4e2e:	11 24       	eor	r1, r1
    4e30:	08 95       	ret

00004e32 <__prologue_saves__>:
    4e32:	2f 92       	push	r2
    4e34:	3f 92       	push	r3
    4e36:	4f 92       	push	r4
    4e38:	5f 92       	push	r5
    4e3a:	6f 92       	push	r6
    4e3c:	7f 92       	push	r7
    4e3e:	8f 92       	push	r8
    4e40:	9f 92       	push	r9
    4e42:	af 92       	push	r10
    4e44:	bf 92       	push	r11
    4e46:	cf 92       	push	r12
    4e48:	df 92       	push	r13
    4e4a:	ef 92       	push	r14
    4e4c:	ff 92       	push	r15
    4e4e:	0f 93       	push	r16
    4e50:	1f 93       	push	r17
    4e52:	cf 93       	push	r28
    4e54:	df 93       	push	r29
    4e56:	cd b7       	in	r28, 0x3d	; 61
    4e58:	de b7       	in	r29, 0x3e	; 62
    4e5a:	ca 1b       	sub	r28, r26
    4e5c:	db 0b       	sbc	r29, r27
    4e5e:	0f b6       	in	r0, 0x3f	; 63
    4e60:	f8 94       	cli
    4e62:	de bf       	out	0x3e, r29	; 62
    4e64:	0f be       	out	0x3f, r0	; 63
    4e66:	cd bf       	out	0x3d, r28	; 61
    4e68:	09 94       	ijmp

00004e6a <__epilogue_restores__>:
    4e6a:	2a 88       	ldd	r2, Y+18	; 0x12
    4e6c:	39 88       	ldd	r3, Y+17	; 0x11
    4e6e:	48 88       	ldd	r4, Y+16	; 0x10
    4e70:	5f 84       	ldd	r5, Y+15	; 0x0f
    4e72:	6e 84       	ldd	r6, Y+14	; 0x0e
    4e74:	7d 84       	ldd	r7, Y+13	; 0x0d
    4e76:	8c 84       	ldd	r8, Y+12	; 0x0c
    4e78:	9b 84       	ldd	r9, Y+11	; 0x0b
    4e7a:	aa 84       	ldd	r10, Y+10	; 0x0a
    4e7c:	b9 84       	ldd	r11, Y+9	; 0x09
    4e7e:	c8 84       	ldd	r12, Y+8	; 0x08
    4e80:	df 80       	ldd	r13, Y+7	; 0x07
    4e82:	ee 80       	ldd	r14, Y+6	; 0x06
    4e84:	fd 80       	ldd	r15, Y+5	; 0x05
    4e86:	0c 81       	ldd	r16, Y+4	; 0x04
    4e88:	1b 81       	ldd	r17, Y+3	; 0x03
    4e8a:	aa 81       	ldd	r26, Y+2	; 0x02
    4e8c:	b9 81       	ldd	r27, Y+1	; 0x01
    4e8e:	ce 0f       	add	r28, r30
    4e90:	d1 1d       	adc	r29, r1
    4e92:	0f b6       	in	r0, 0x3f	; 63
    4e94:	f8 94       	cli
    4e96:	de bf       	out	0x3e, r29	; 62
    4e98:	0f be       	out	0x3f, r0	; 63
    4e9a:	cd bf       	out	0x3d, r28	; 61
    4e9c:	ed 01       	movw	r28, r26
    4e9e:	08 95       	ret

00004ea0 <__udivmodhi4>:
    4ea0:	aa 1b       	sub	r26, r26
    4ea2:	bb 1b       	sub	r27, r27
    4ea4:	51 e1       	ldi	r21, 0x11	; 17
    4ea6:	07 c0       	rjmp	.+14     	; 0x4eb6 <__udivmodhi4_ep>

00004ea8 <__udivmodhi4_loop>:
    4ea8:	aa 1f       	adc	r26, r26
    4eaa:	bb 1f       	adc	r27, r27
    4eac:	a6 17       	cp	r26, r22
    4eae:	b7 07       	cpc	r27, r23
    4eb0:	10 f0       	brcs	.+4      	; 0x4eb6 <__udivmodhi4_ep>
    4eb2:	a6 1b       	sub	r26, r22
    4eb4:	b7 0b       	sbc	r27, r23

00004eb6 <__udivmodhi4_ep>:
    4eb6:	88 1f       	adc	r24, r24
    4eb8:	99 1f       	adc	r25, r25
    4eba:	5a 95       	dec	r21
    4ebc:	a9 f7       	brne	.-22     	; 0x4ea8 <__udivmodhi4_loop>
    4ebe:	80 95       	com	r24
    4ec0:	90 95       	com	r25
    4ec2:	bc 01       	movw	r22, r24
    4ec4:	cd 01       	movw	r24, r26
    4ec6:	08 95       	ret

00004ec8 <__umulhisi3>:
    4ec8:	a2 9f       	mul	r26, r18
    4eca:	b0 01       	movw	r22, r0
    4ecc:	b3 9f       	mul	r27, r19
    4ece:	c0 01       	movw	r24, r0
    4ed0:	a3 9f       	mul	r26, r19
    4ed2:	70 0d       	add	r23, r0
    4ed4:	81 1d       	adc	r24, r1
    4ed6:	11 24       	eor	r1, r1
    4ed8:	91 1d       	adc	r25, r1
    4eda:	b2 9f       	mul	r27, r18
    4edc:	70 0d       	add	r23, r0
    4ede:	81 1d       	adc	r24, r1
    4ee0:	11 24       	eor	r1, r1
    4ee2:	91 1d       	adc	r25, r1
    4ee4:	08 95       	ret

00004ee6 <malloc>:
    4ee6:	cf 93       	push	r28
    4ee8:	df 93       	push	r29
    4eea:	82 30       	cpi	r24, 0x02	; 2
    4eec:	91 05       	cpc	r25, r1
    4eee:	10 f4       	brcc	.+4      	; 0x4ef4 <malloc+0xe>
    4ef0:	82 e0       	ldi	r24, 0x02	; 2
    4ef2:	90 e0       	ldi	r25, 0x00	; 0
    4ef4:	e0 91 ca 03 	lds	r30, 0x03CA
    4ef8:	f0 91 cb 03 	lds	r31, 0x03CB
    4efc:	20 e0       	ldi	r18, 0x00	; 0
    4efe:	30 e0       	ldi	r19, 0x00	; 0
    4f00:	a0 e0       	ldi	r26, 0x00	; 0
    4f02:	b0 e0       	ldi	r27, 0x00	; 0
    4f04:	30 97       	sbiw	r30, 0x00	; 0
    4f06:	39 f1       	breq	.+78     	; 0x4f56 <malloc+0x70>
    4f08:	40 81       	ld	r20, Z
    4f0a:	51 81       	ldd	r21, Z+1	; 0x01
    4f0c:	48 17       	cp	r20, r24
    4f0e:	59 07       	cpc	r21, r25
    4f10:	b8 f0       	brcs	.+46     	; 0x4f40 <malloc+0x5a>
    4f12:	48 17       	cp	r20, r24
    4f14:	59 07       	cpc	r21, r25
    4f16:	71 f4       	brne	.+28     	; 0x4f34 <malloc+0x4e>
    4f18:	82 81       	ldd	r24, Z+2	; 0x02
    4f1a:	93 81       	ldd	r25, Z+3	; 0x03
    4f1c:	10 97       	sbiw	r26, 0x00	; 0
    4f1e:	29 f0       	breq	.+10     	; 0x4f2a <malloc+0x44>
    4f20:	13 96       	adiw	r26, 0x03	; 3
    4f22:	9c 93       	st	X, r25
    4f24:	8e 93       	st	-X, r24
    4f26:	12 97       	sbiw	r26, 0x02	; 2
    4f28:	2c c0       	rjmp	.+88     	; 0x4f82 <malloc+0x9c>
    4f2a:	90 93 cb 03 	sts	0x03CB, r25
    4f2e:	80 93 ca 03 	sts	0x03CA, r24
    4f32:	27 c0       	rjmp	.+78     	; 0x4f82 <malloc+0x9c>
    4f34:	21 15       	cp	r18, r1
    4f36:	31 05       	cpc	r19, r1
    4f38:	31 f0       	breq	.+12     	; 0x4f46 <malloc+0x60>
    4f3a:	42 17       	cp	r20, r18
    4f3c:	53 07       	cpc	r21, r19
    4f3e:	18 f0       	brcs	.+6      	; 0x4f46 <malloc+0x60>
    4f40:	a9 01       	movw	r20, r18
    4f42:	db 01       	movw	r26, r22
    4f44:	01 c0       	rjmp	.+2      	; 0x4f48 <malloc+0x62>
    4f46:	ef 01       	movw	r28, r30
    4f48:	9a 01       	movw	r18, r20
    4f4a:	bd 01       	movw	r22, r26
    4f4c:	df 01       	movw	r26, r30
    4f4e:	02 80       	ldd	r0, Z+2	; 0x02
    4f50:	f3 81       	ldd	r31, Z+3	; 0x03
    4f52:	e0 2d       	mov	r30, r0
    4f54:	d7 cf       	rjmp	.-82     	; 0x4f04 <malloc+0x1e>
    4f56:	21 15       	cp	r18, r1
    4f58:	31 05       	cpc	r19, r1
    4f5a:	f9 f0       	breq	.+62     	; 0x4f9a <malloc+0xb4>
    4f5c:	28 1b       	sub	r18, r24
    4f5e:	39 0b       	sbc	r19, r25
    4f60:	24 30       	cpi	r18, 0x04	; 4
    4f62:	31 05       	cpc	r19, r1
    4f64:	80 f4       	brcc	.+32     	; 0x4f86 <malloc+0xa0>
    4f66:	8a 81       	ldd	r24, Y+2	; 0x02
    4f68:	9b 81       	ldd	r25, Y+3	; 0x03
    4f6a:	61 15       	cp	r22, r1
    4f6c:	71 05       	cpc	r23, r1
    4f6e:	21 f0       	breq	.+8      	; 0x4f78 <malloc+0x92>
    4f70:	fb 01       	movw	r30, r22
    4f72:	93 83       	std	Z+3, r25	; 0x03
    4f74:	82 83       	std	Z+2, r24	; 0x02
    4f76:	04 c0       	rjmp	.+8      	; 0x4f80 <malloc+0x9a>
    4f78:	90 93 cb 03 	sts	0x03CB, r25
    4f7c:	80 93 ca 03 	sts	0x03CA, r24
    4f80:	fe 01       	movw	r30, r28
    4f82:	32 96       	adiw	r30, 0x02	; 2
    4f84:	44 c0       	rjmp	.+136    	; 0x500e <malloc+0x128>
    4f86:	fe 01       	movw	r30, r28
    4f88:	e2 0f       	add	r30, r18
    4f8a:	f3 1f       	adc	r31, r19
    4f8c:	81 93       	st	Z+, r24
    4f8e:	91 93       	st	Z+, r25
    4f90:	22 50       	subi	r18, 0x02	; 2
    4f92:	31 09       	sbc	r19, r1
    4f94:	39 83       	std	Y+1, r19	; 0x01
    4f96:	28 83       	st	Y, r18
    4f98:	3a c0       	rjmp	.+116    	; 0x500e <malloc+0x128>
    4f9a:	20 91 c8 03 	lds	r18, 0x03C8
    4f9e:	30 91 c9 03 	lds	r19, 0x03C9
    4fa2:	23 2b       	or	r18, r19
    4fa4:	41 f4       	brne	.+16     	; 0x4fb6 <malloc+0xd0>
    4fa6:	20 91 1f 01 	lds	r18, 0x011F
    4faa:	30 91 20 01 	lds	r19, 0x0120
    4fae:	30 93 c9 03 	sts	0x03C9, r19
    4fb2:	20 93 c8 03 	sts	0x03C8, r18
    4fb6:	20 91 1d 01 	lds	r18, 0x011D
    4fba:	30 91 1e 01 	lds	r19, 0x011E
    4fbe:	21 15       	cp	r18, r1
    4fc0:	31 05       	cpc	r19, r1
    4fc2:	41 f4       	brne	.+16     	; 0x4fd4 <malloc+0xee>
    4fc4:	2d b7       	in	r18, 0x3d	; 61
    4fc6:	3e b7       	in	r19, 0x3e	; 62
    4fc8:	40 91 21 01 	lds	r20, 0x0121
    4fcc:	50 91 22 01 	lds	r21, 0x0122
    4fd0:	24 1b       	sub	r18, r20
    4fd2:	35 0b       	sbc	r19, r21
    4fd4:	e0 91 c8 03 	lds	r30, 0x03C8
    4fd8:	f0 91 c9 03 	lds	r31, 0x03C9
    4fdc:	e2 17       	cp	r30, r18
    4fde:	f3 07       	cpc	r31, r19
    4fe0:	a0 f4       	brcc	.+40     	; 0x500a <malloc+0x124>
    4fe2:	2e 1b       	sub	r18, r30
    4fe4:	3f 0b       	sbc	r19, r31
    4fe6:	28 17       	cp	r18, r24
    4fe8:	39 07       	cpc	r19, r25
    4fea:	78 f0       	brcs	.+30     	; 0x500a <malloc+0x124>
    4fec:	ac 01       	movw	r20, r24
    4fee:	4e 5f       	subi	r20, 0xFE	; 254
    4ff0:	5f 4f       	sbci	r21, 0xFF	; 255
    4ff2:	24 17       	cp	r18, r20
    4ff4:	35 07       	cpc	r19, r21
    4ff6:	48 f0       	brcs	.+18     	; 0x500a <malloc+0x124>
    4ff8:	4e 0f       	add	r20, r30
    4ffa:	5f 1f       	adc	r21, r31
    4ffc:	50 93 c9 03 	sts	0x03C9, r21
    5000:	40 93 c8 03 	sts	0x03C8, r20
    5004:	81 93       	st	Z+, r24
    5006:	91 93       	st	Z+, r25
    5008:	02 c0       	rjmp	.+4      	; 0x500e <malloc+0x128>
    500a:	e0 e0       	ldi	r30, 0x00	; 0
    500c:	f0 e0       	ldi	r31, 0x00	; 0
    500e:	cf 01       	movw	r24, r30
    5010:	df 91       	pop	r29
    5012:	cf 91       	pop	r28
    5014:	08 95       	ret

00005016 <free>:
    5016:	cf 93       	push	r28
    5018:	df 93       	push	r29
    501a:	00 97       	sbiw	r24, 0x00	; 0
    501c:	09 f4       	brne	.+2      	; 0x5020 <free+0xa>
    501e:	87 c0       	rjmp	.+270    	; 0x512e <free+0x118>
    5020:	fc 01       	movw	r30, r24
    5022:	32 97       	sbiw	r30, 0x02	; 2
    5024:	13 82       	std	Z+3, r1	; 0x03
    5026:	12 82       	std	Z+2, r1	; 0x02
    5028:	c0 91 ca 03 	lds	r28, 0x03CA
    502c:	d0 91 cb 03 	lds	r29, 0x03CB
    5030:	20 97       	sbiw	r28, 0x00	; 0
    5032:	81 f4       	brne	.+32     	; 0x5054 <free+0x3e>
    5034:	20 81       	ld	r18, Z
    5036:	31 81       	ldd	r19, Z+1	; 0x01
    5038:	28 0f       	add	r18, r24
    503a:	39 1f       	adc	r19, r25
    503c:	80 91 c8 03 	lds	r24, 0x03C8
    5040:	90 91 c9 03 	lds	r25, 0x03C9
    5044:	82 17       	cp	r24, r18
    5046:	93 07       	cpc	r25, r19
    5048:	79 f5       	brne	.+94     	; 0x50a8 <free+0x92>
    504a:	f0 93 c9 03 	sts	0x03C9, r31
    504e:	e0 93 c8 03 	sts	0x03C8, r30
    5052:	6d c0       	rjmp	.+218    	; 0x512e <free+0x118>
    5054:	de 01       	movw	r26, r28
    5056:	20 e0       	ldi	r18, 0x00	; 0
    5058:	30 e0       	ldi	r19, 0x00	; 0
    505a:	ae 17       	cp	r26, r30
    505c:	bf 07       	cpc	r27, r31
    505e:	50 f4       	brcc	.+20     	; 0x5074 <free+0x5e>
    5060:	12 96       	adiw	r26, 0x02	; 2
    5062:	4d 91       	ld	r20, X+
    5064:	5c 91       	ld	r21, X
    5066:	13 97       	sbiw	r26, 0x03	; 3
    5068:	9d 01       	movw	r18, r26
    506a:	41 15       	cp	r20, r1
    506c:	51 05       	cpc	r21, r1
    506e:	09 f1       	breq	.+66     	; 0x50b2 <free+0x9c>
    5070:	da 01       	movw	r26, r20
    5072:	f3 cf       	rjmp	.-26     	; 0x505a <free+0x44>
    5074:	b3 83       	std	Z+3, r27	; 0x03
    5076:	a2 83       	std	Z+2, r26	; 0x02
    5078:	40 81       	ld	r20, Z
    507a:	51 81       	ldd	r21, Z+1	; 0x01
    507c:	84 0f       	add	r24, r20
    507e:	95 1f       	adc	r25, r21
    5080:	8a 17       	cp	r24, r26
    5082:	9b 07       	cpc	r25, r27
    5084:	71 f4       	brne	.+28     	; 0x50a2 <free+0x8c>
    5086:	8d 91       	ld	r24, X+
    5088:	9c 91       	ld	r25, X
    508a:	11 97       	sbiw	r26, 0x01	; 1
    508c:	84 0f       	add	r24, r20
    508e:	95 1f       	adc	r25, r21
    5090:	02 96       	adiw	r24, 0x02	; 2
    5092:	91 83       	std	Z+1, r25	; 0x01
    5094:	80 83       	st	Z, r24
    5096:	12 96       	adiw	r26, 0x02	; 2
    5098:	8d 91       	ld	r24, X+
    509a:	9c 91       	ld	r25, X
    509c:	13 97       	sbiw	r26, 0x03	; 3
    509e:	93 83       	std	Z+3, r25	; 0x03
    50a0:	82 83       	std	Z+2, r24	; 0x02
    50a2:	21 15       	cp	r18, r1
    50a4:	31 05       	cpc	r19, r1
    50a6:	29 f4       	brne	.+10     	; 0x50b2 <free+0x9c>
    50a8:	f0 93 cb 03 	sts	0x03CB, r31
    50ac:	e0 93 ca 03 	sts	0x03CA, r30
    50b0:	3e c0       	rjmp	.+124    	; 0x512e <free+0x118>
    50b2:	d9 01       	movw	r26, r18
    50b4:	13 96       	adiw	r26, 0x03	; 3
    50b6:	fc 93       	st	X, r31
    50b8:	ee 93       	st	-X, r30
    50ba:	12 97       	sbiw	r26, 0x02	; 2
    50bc:	4d 91       	ld	r20, X+
    50be:	5d 91       	ld	r21, X+
    50c0:	a4 0f       	add	r26, r20
    50c2:	b5 1f       	adc	r27, r21
    50c4:	ea 17       	cp	r30, r26
    50c6:	fb 07       	cpc	r31, r27
    50c8:	79 f4       	brne	.+30     	; 0x50e8 <free+0xd2>
    50ca:	80 81       	ld	r24, Z
    50cc:	91 81       	ldd	r25, Z+1	; 0x01
    50ce:	84 0f       	add	r24, r20
    50d0:	95 1f       	adc	r25, r21
    50d2:	02 96       	adiw	r24, 0x02	; 2
    50d4:	d9 01       	movw	r26, r18
    50d6:	11 96       	adiw	r26, 0x01	; 1
    50d8:	9c 93       	st	X, r25
    50da:	8e 93       	st	-X, r24
    50dc:	82 81       	ldd	r24, Z+2	; 0x02
    50de:	93 81       	ldd	r25, Z+3	; 0x03
    50e0:	13 96       	adiw	r26, 0x03	; 3
    50e2:	9c 93       	st	X, r25
    50e4:	8e 93       	st	-X, r24
    50e6:	12 97       	sbiw	r26, 0x02	; 2
    50e8:	e0 e0       	ldi	r30, 0x00	; 0
    50ea:	f0 e0       	ldi	r31, 0x00	; 0
    50ec:	8a 81       	ldd	r24, Y+2	; 0x02
    50ee:	9b 81       	ldd	r25, Y+3	; 0x03
    50f0:	00 97       	sbiw	r24, 0x00	; 0
    50f2:	19 f0       	breq	.+6      	; 0x50fa <free+0xe4>
    50f4:	fe 01       	movw	r30, r28
    50f6:	ec 01       	movw	r28, r24
    50f8:	f9 cf       	rjmp	.-14     	; 0x50ec <free+0xd6>
    50fa:	ce 01       	movw	r24, r28
    50fc:	02 96       	adiw	r24, 0x02	; 2
    50fe:	28 81       	ld	r18, Y
    5100:	39 81       	ldd	r19, Y+1	; 0x01
    5102:	82 0f       	add	r24, r18
    5104:	93 1f       	adc	r25, r19
    5106:	20 91 c8 03 	lds	r18, 0x03C8
    510a:	30 91 c9 03 	lds	r19, 0x03C9
    510e:	28 17       	cp	r18, r24
    5110:	39 07       	cpc	r19, r25
    5112:	69 f4       	brne	.+26     	; 0x512e <free+0x118>
    5114:	30 97       	sbiw	r30, 0x00	; 0
    5116:	29 f4       	brne	.+10     	; 0x5122 <free+0x10c>
    5118:	10 92 cb 03 	sts	0x03CB, r1
    511c:	10 92 ca 03 	sts	0x03CA, r1
    5120:	02 c0       	rjmp	.+4      	; 0x5126 <free+0x110>
    5122:	13 82       	std	Z+3, r1	; 0x03
    5124:	12 82       	std	Z+2, r1	; 0x02
    5126:	d0 93 c9 03 	sts	0x03C9, r29
    512a:	c0 93 c8 03 	sts	0x03C8, r28
    512e:	df 91       	pop	r29
    5130:	cf 91       	pop	r28
    5132:	08 95       	ret

00005134 <do_rand>:
    5134:	8f 92       	push	r8
    5136:	9f 92       	push	r9
    5138:	af 92       	push	r10
    513a:	bf 92       	push	r11
    513c:	cf 92       	push	r12
    513e:	df 92       	push	r13
    5140:	ef 92       	push	r14
    5142:	ff 92       	push	r15
    5144:	cf 93       	push	r28
    5146:	df 93       	push	r29
    5148:	ec 01       	movw	r28, r24
    514a:	68 81       	ld	r22, Y
    514c:	79 81       	ldd	r23, Y+1	; 0x01
    514e:	8a 81       	ldd	r24, Y+2	; 0x02
    5150:	9b 81       	ldd	r25, Y+3	; 0x03
    5152:	61 15       	cp	r22, r1
    5154:	71 05       	cpc	r23, r1
    5156:	81 05       	cpc	r24, r1
    5158:	91 05       	cpc	r25, r1
    515a:	21 f4       	brne	.+8      	; 0x5164 <do_rand+0x30>
    515c:	64 e2       	ldi	r22, 0x24	; 36
    515e:	79 ed       	ldi	r23, 0xD9	; 217
    5160:	8b e5       	ldi	r24, 0x5B	; 91
    5162:	97 e0       	ldi	r25, 0x07	; 7
    5164:	2d e1       	ldi	r18, 0x1D	; 29
    5166:	33 ef       	ldi	r19, 0xF3	; 243
    5168:	41 e0       	ldi	r20, 0x01	; 1
    516a:	50 e0       	ldi	r21, 0x00	; 0
    516c:	0e 94 8a 2a 	call	0x5514	; 0x5514 <__divmodsi4>
    5170:	49 01       	movw	r8, r18
    5172:	5a 01       	movw	r10, r20
    5174:	9b 01       	movw	r18, r22
    5176:	ac 01       	movw	r20, r24
    5178:	a7 ea       	ldi	r26, 0xA7	; 167
    517a:	b1 e4       	ldi	r27, 0x41	; 65
    517c:	0e 94 0e 27 	call	0x4e1c	; 0x4e1c <__muluhisi3>
    5180:	6b 01       	movw	r12, r22
    5182:	7c 01       	movw	r14, r24
    5184:	ac ee       	ldi	r26, 0xEC	; 236
    5186:	b4 ef       	ldi	r27, 0xF4	; 244
    5188:	a5 01       	movw	r20, r10
    518a:	94 01       	movw	r18, r8
    518c:	0e 94 ac 2a 	call	0x5558	; 0x5558 <__mulohisi3>
    5190:	c6 0e       	add	r12, r22
    5192:	d7 1e       	adc	r13, r23
    5194:	e8 1e       	adc	r14, r24
    5196:	f9 1e       	adc	r15, r25
    5198:	f7 fe       	sbrs	r15, 7
    519a:	06 c0       	rjmp	.+12     	; 0x51a8 <do_rand+0x74>
    519c:	81 e0       	ldi	r24, 0x01	; 1
    519e:	c8 1a       	sub	r12, r24
    51a0:	d1 08       	sbc	r13, r1
    51a2:	e1 08       	sbc	r14, r1
    51a4:	80 e8       	ldi	r24, 0x80	; 128
    51a6:	f8 0a       	sbc	r15, r24
    51a8:	c8 82       	st	Y, r12
    51aa:	d9 82       	std	Y+1, r13	; 0x01
    51ac:	ea 82       	std	Y+2, r14	; 0x02
    51ae:	fb 82       	std	Y+3, r15	; 0x03
    51b0:	c6 01       	movw	r24, r12
    51b2:	9f 77       	andi	r25, 0x7F	; 127
    51b4:	df 91       	pop	r29
    51b6:	cf 91       	pop	r28
    51b8:	ff 90       	pop	r15
    51ba:	ef 90       	pop	r14
    51bc:	df 90       	pop	r13
    51be:	cf 90       	pop	r12
    51c0:	bf 90       	pop	r11
    51c2:	af 90       	pop	r10
    51c4:	9f 90       	pop	r9
    51c6:	8f 90       	pop	r8
    51c8:	08 95       	ret

000051ca <rand_r>:
    51ca:	0e 94 9a 28 	call	0x5134	; 0x5134 <do_rand>
    51ce:	08 95       	ret

000051d0 <rand>:
    51d0:	83 e2       	ldi	r24, 0x23	; 35
    51d2:	91 e0       	ldi	r25, 0x01	; 1
    51d4:	0e 94 9a 28 	call	0x5134	; 0x5134 <do_rand>
    51d8:	08 95       	ret

000051da <srand>:
    51da:	a0 e0       	ldi	r26, 0x00	; 0
    51dc:	b0 e0       	ldi	r27, 0x00	; 0
    51de:	80 93 23 01 	sts	0x0123, r24
    51e2:	90 93 24 01 	sts	0x0124, r25
    51e6:	a0 93 25 01 	sts	0x0125, r26
    51ea:	b0 93 26 01 	sts	0x0126, r27
    51ee:	08 95       	ret

000051f0 <__ftoa_engine>:
    51f0:	28 30       	cpi	r18, 0x08	; 8
    51f2:	08 f0       	brcs	.+2      	; 0x51f6 <__ftoa_engine+0x6>
    51f4:	27 e0       	ldi	r18, 0x07	; 7
    51f6:	33 27       	eor	r19, r19
    51f8:	da 01       	movw	r26, r20
    51fa:	99 0f       	add	r25, r25
    51fc:	31 1d       	adc	r19, r1
    51fe:	87 fd       	sbrc	r24, 7
    5200:	91 60       	ori	r25, 0x01	; 1
    5202:	00 96       	adiw	r24, 0x00	; 0
    5204:	61 05       	cpc	r22, r1
    5206:	71 05       	cpc	r23, r1
    5208:	39 f4       	brne	.+14     	; 0x5218 <__ftoa_engine+0x28>
    520a:	32 60       	ori	r19, 0x02	; 2
    520c:	2e 5f       	subi	r18, 0xFE	; 254
    520e:	3d 93       	st	X+, r19
    5210:	30 e3       	ldi	r19, 0x30	; 48
    5212:	2a 95       	dec	r18
    5214:	e1 f7       	brne	.-8      	; 0x520e <__ftoa_engine+0x1e>
    5216:	08 95       	ret
    5218:	9f 3f       	cpi	r25, 0xFF	; 255
    521a:	30 f0       	brcs	.+12     	; 0x5228 <__ftoa_engine+0x38>
    521c:	80 38       	cpi	r24, 0x80	; 128
    521e:	71 05       	cpc	r23, r1
    5220:	61 05       	cpc	r22, r1
    5222:	09 f0       	breq	.+2      	; 0x5226 <__ftoa_engine+0x36>
    5224:	3c 5f       	subi	r19, 0xFC	; 252
    5226:	3c 5f       	subi	r19, 0xFC	; 252
    5228:	3d 93       	st	X+, r19
    522a:	91 30       	cpi	r25, 0x01	; 1
    522c:	08 f0       	brcs	.+2      	; 0x5230 <__ftoa_engine+0x40>
    522e:	80 68       	ori	r24, 0x80	; 128
    5230:	91 1d       	adc	r25, r1
    5232:	df 93       	push	r29
    5234:	cf 93       	push	r28
    5236:	1f 93       	push	r17
    5238:	0f 93       	push	r16
    523a:	ff 92       	push	r15
    523c:	ef 92       	push	r14
    523e:	19 2f       	mov	r17, r25
    5240:	98 7f       	andi	r25, 0xF8	; 248
    5242:	96 95       	lsr	r25
    5244:	e9 2f       	mov	r30, r25
    5246:	96 95       	lsr	r25
    5248:	96 95       	lsr	r25
    524a:	e9 0f       	add	r30, r25
    524c:	ff 27       	eor	r31, r31
    524e:	e1 51       	subi	r30, 0x11	; 17
    5250:	fa 4f       	sbci	r31, 0xFA	; 250
    5252:	99 27       	eor	r25, r25
    5254:	33 27       	eor	r19, r19
    5256:	ee 24       	eor	r14, r14
    5258:	ff 24       	eor	r15, r15
    525a:	a7 01       	movw	r20, r14
    525c:	e7 01       	movw	r28, r14
    525e:	05 90       	lpm	r0, Z+
    5260:	08 94       	sec
    5262:	07 94       	ror	r0
    5264:	28 f4       	brcc	.+10     	; 0x5270 <__ftoa_engine+0x80>
    5266:	36 0f       	add	r19, r22
    5268:	e7 1e       	adc	r14, r23
    526a:	f8 1e       	adc	r15, r24
    526c:	49 1f       	adc	r20, r25
    526e:	51 1d       	adc	r21, r1
    5270:	66 0f       	add	r22, r22
    5272:	77 1f       	adc	r23, r23
    5274:	88 1f       	adc	r24, r24
    5276:	99 1f       	adc	r25, r25
    5278:	06 94       	lsr	r0
    527a:	a1 f7       	brne	.-24     	; 0x5264 <__ftoa_engine+0x74>
    527c:	05 90       	lpm	r0, Z+
    527e:	07 94       	ror	r0
    5280:	28 f4       	brcc	.+10     	; 0x528c <__ftoa_engine+0x9c>
    5282:	e7 0e       	add	r14, r23
    5284:	f8 1e       	adc	r15, r24
    5286:	49 1f       	adc	r20, r25
    5288:	56 1f       	adc	r21, r22
    528a:	c1 1d       	adc	r28, r1
    528c:	77 0f       	add	r23, r23
    528e:	88 1f       	adc	r24, r24
    5290:	99 1f       	adc	r25, r25
    5292:	66 1f       	adc	r22, r22
    5294:	06 94       	lsr	r0
    5296:	a1 f7       	brne	.-24     	; 0x5280 <__ftoa_engine+0x90>
    5298:	05 90       	lpm	r0, Z+
    529a:	07 94       	ror	r0
    529c:	28 f4       	brcc	.+10     	; 0x52a8 <__ftoa_engine+0xb8>
    529e:	f8 0e       	add	r15, r24
    52a0:	49 1f       	adc	r20, r25
    52a2:	56 1f       	adc	r21, r22
    52a4:	c7 1f       	adc	r28, r23
    52a6:	d1 1d       	adc	r29, r1
    52a8:	88 0f       	add	r24, r24
    52aa:	99 1f       	adc	r25, r25
    52ac:	66 1f       	adc	r22, r22
    52ae:	77 1f       	adc	r23, r23
    52b0:	06 94       	lsr	r0
    52b2:	a1 f7       	brne	.-24     	; 0x529c <__ftoa_engine+0xac>
    52b4:	05 90       	lpm	r0, Z+
    52b6:	07 94       	ror	r0
    52b8:	20 f4       	brcc	.+8      	; 0x52c2 <__ftoa_engine+0xd2>
    52ba:	49 0f       	add	r20, r25
    52bc:	56 1f       	adc	r21, r22
    52be:	c7 1f       	adc	r28, r23
    52c0:	d8 1f       	adc	r29, r24
    52c2:	99 0f       	add	r25, r25
    52c4:	66 1f       	adc	r22, r22
    52c6:	77 1f       	adc	r23, r23
    52c8:	88 1f       	adc	r24, r24
    52ca:	06 94       	lsr	r0
    52cc:	a9 f7       	brne	.-22     	; 0x52b8 <__ftoa_engine+0xc8>
    52ce:	84 91       	lpm	r24, Z
    52d0:	10 95       	com	r17
    52d2:	17 70       	andi	r17, 0x07	; 7
    52d4:	41 f0       	breq	.+16     	; 0x52e6 <__ftoa_engine+0xf6>
    52d6:	d6 95       	lsr	r29
    52d8:	c7 95       	ror	r28
    52da:	57 95       	ror	r21
    52dc:	47 95       	ror	r20
    52de:	f7 94       	ror	r15
    52e0:	e7 94       	ror	r14
    52e2:	1a 95       	dec	r17
    52e4:	c1 f7       	brne	.-16     	; 0x52d6 <__ftoa_engine+0xe6>
    52e6:	e5 e9       	ldi	r30, 0x95	; 149
    52e8:	f5 e0       	ldi	r31, 0x05	; 5
    52ea:	68 94       	set
    52ec:	15 90       	lpm	r1, Z+
    52ee:	15 91       	lpm	r17, Z+
    52f0:	35 91       	lpm	r19, Z+
    52f2:	65 91       	lpm	r22, Z+
    52f4:	95 91       	lpm	r25, Z+
    52f6:	05 90       	lpm	r0, Z+
    52f8:	7f e2       	ldi	r23, 0x2F	; 47
    52fa:	73 95       	inc	r23
    52fc:	e1 18       	sub	r14, r1
    52fe:	f1 0a       	sbc	r15, r17
    5300:	43 0b       	sbc	r20, r19
    5302:	56 0b       	sbc	r21, r22
    5304:	c9 0b       	sbc	r28, r25
    5306:	d0 09       	sbc	r29, r0
    5308:	c0 f7       	brcc	.-16     	; 0x52fa <__ftoa_engine+0x10a>
    530a:	e1 0c       	add	r14, r1
    530c:	f1 1e       	adc	r15, r17
    530e:	43 1f       	adc	r20, r19
    5310:	56 1f       	adc	r21, r22
    5312:	c9 1f       	adc	r28, r25
    5314:	d0 1d       	adc	r29, r0
    5316:	7e f4       	brtc	.+30     	; 0x5336 <__ftoa_engine+0x146>
    5318:	70 33       	cpi	r23, 0x30	; 48
    531a:	11 f4       	brne	.+4      	; 0x5320 <__ftoa_engine+0x130>
    531c:	8a 95       	dec	r24
    531e:	e6 cf       	rjmp	.-52     	; 0x52ec <__ftoa_engine+0xfc>
    5320:	e8 94       	clt
    5322:	01 50       	subi	r16, 0x01	; 1
    5324:	30 f0       	brcs	.+12     	; 0x5332 <__ftoa_engine+0x142>
    5326:	08 0f       	add	r16, r24
    5328:	0a f4       	brpl	.+2      	; 0x532c <__ftoa_engine+0x13c>
    532a:	00 27       	eor	r16, r16
    532c:	02 17       	cp	r16, r18
    532e:	08 f4       	brcc	.+2      	; 0x5332 <__ftoa_engine+0x142>
    5330:	20 2f       	mov	r18, r16
    5332:	23 95       	inc	r18
    5334:	02 2f       	mov	r16, r18
    5336:	7a 33       	cpi	r23, 0x3A	; 58
    5338:	28 f0       	brcs	.+10     	; 0x5344 <__ftoa_engine+0x154>
    533a:	79 e3       	ldi	r23, 0x39	; 57
    533c:	7d 93       	st	X+, r23
    533e:	2a 95       	dec	r18
    5340:	e9 f7       	brne	.-6      	; 0x533c <__ftoa_engine+0x14c>
    5342:	10 c0       	rjmp	.+32     	; 0x5364 <__ftoa_engine+0x174>
    5344:	7d 93       	st	X+, r23
    5346:	2a 95       	dec	r18
    5348:	89 f6       	brne	.-94     	; 0x52ec <__ftoa_engine+0xfc>
    534a:	06 94       	lsr	r0
    534c:	97 95       	ror	r25
    534e:	67 95       	ror	r22
    5350:	37 95       	ror	r19
    5352:	17 95       	ror	r17
    5354:	17 94       	ror	r1
    5356:	e1 18       	sub	r14, r1
    5358:	f1 0a       	sbc	r15, r17
    535a:	43 0b       	sbc	r20, r19
    535c:	56 0b       	sbc	r21, r22
    535e:	c9 0b       	sbc	r28, r25
    5360:	d0 09       	sbc	r29, r0
    5362:	98 f0       	brcs	.+38     	; 0x538a <__ftoa_engine+0x19a>
    5364:	23 95       	inc	r18
    5366:	7e 91       	ld	r23, -X
    5368:	73 95       	inc	r23
    536a:	7a 33       	cpi	r23, 0x3A	; 58
    536c:	08 f0       	brcs	.+2      	; 0x5370 <__ftoa_engine+0x180>
    536e:	70 e3       	ldi	r23, 0x30	; 48
    5370:	7c 93       	st	X, r23
    5372:	20 13       	cpse	r18, r16
    5374:	b8 f7       	brcc	.-18     	; 0x5364 <__ftoa_engine+0x174>
    5376:	7e 91       	ld	r23, -X
    5378:	70 61       	ori	r23, 0x10	; 16
    537a:	7d 93       	st	X+, r23
    537c:	30 f0       	brcs	.+12     	; 0x538a <__ftoa_engine+0x19a>
    537e:	83 95       	inc	r24
    5380:	71 e3       	ldi	r23, 0x31	; 49
    5382:	7d 93       	st	X+, r23
    5384:	70 e3       	ldi	r23, 0x30	; 48
    5386:	2a 95       	dec	r18
    5388:	e1 f7       	brne	.-8      	; 0x5382 <__ftoa_engine+0x192>
    538a:	11 24       	eor	r1, r1
    538c:	ef 90       	pop	r14
    538e:	ff 90       	pop	r15
    5390:	0f 91       	pop	r16
    5392:	1f 91       	pop	r17
    5394:	cf 91       	pop	r28
    5396:	df 91       	pop	r29
    5398:	99 27       	eor	r25, r25
    539a:	87 fd       	sbrc	r24, 7
    539c:	90 95       	com	r25
    539e:	08 95       	ret

000053a0 <strnlen_P>:
    53a0:	fc 01       	movw	r30, r24
    53a2:	05 90       	lpm	r0, Z+
    53a4:	61 50       	subi	r22, 0x01	; 1
    53a6:	70 40       	sbci	r23, 0x00	; 0
    53a8:	01 10       	cpse	r0, r1
    53aa:	d8 f7       	brcc	.-10     	; 0x53a2 <strnlen_P+0x2>
    53ac:	80 95       	com	r24
    53ae:	90 95       	com	r25
    53b0:	8e 0f       	add	r24, r30
    53b2:	9f 1f       	adc	r25, r31
    53b4:	08 95       	ret

000053b6 <strnlen>:
    53b6:	fc 01       	movw	r30, r24
    53b8:	61 50       	subi	r22, 0x01	; 1
    53ba:	70 40       	sbci	r23, 0x00	; 0
    53bc:	01 90       	ld	r0, Z+
    53be:	01 10       	cpse	r0, r1
    53c0:	d8 f7       	brcc	.-10     	; 0x53b8 <strnlen+0x2>
    53c2:	80 95       	com	r24
    53c4:	90 95       	com	r25
    53c6:	8e 0f       	add	r24, r30
    53c8:	9f 1f       	adc	r25, r31
    53ca:	08 95       	ret

000053cc <fputc>:
    53cc:	0f 93       	push	r16
    53ce:	1f 93       	push	r17
    53d0:	cf 93       	push	r28
    53d2:	df 93       	push	r29
    53d4:	18 2f       	mov	r17, r24
    53d6:	09 2f       	mov	r16, r25
    53d8:	eb 01       	movw	r28, r22
    53da:	8b 81       	ldd	r24, Y+3	; 0x03
    53dc:	81 fd       	sbrc	r24, 1
    53de:	03 c0       	rjmp	.+6      	; 0x53e6 <fputc+0x1a>
    53e0:	8f ef       	ldi	r24, 0xFF	; 255
    53e2:	9f ef       	ldi	r25, 0xFF	; 255
    53e4:	20 c0       	rjmp	.+64     	; 0x5426 <fputc+0x5a>
    53e6:	82 ff       	sbrs	r24, 2
    53e8:	10 c0       	rjmp	.+32     	; 0x540a <fputc+0x3e>
    53ea:	4e 81       	ldd	r20, Y+6	; 0x06
    53ec:	5f 81       	ldd	r21, Y+7	; 0x07
    53ee:	2c 81       	ldd	r18, Y+4	; 0x04
    53f0:	3d 81       	ldd	r19, Y+5	; 0x05
    53f2:	42 17       	cp	r20, r18
    53f4:	53 07       	cpc	r21, r19
    53f6:	7c f4       	brge	.+30     	; 0x5416 <fputc+0x4a>
    53f8:	e8 81       	ld	r30, Y
    53fa:	f9 81       	ldd	r31, Y+1	; 0x01
    53fc:	9f 01       	movw	r18, r30
    53fe:	2f 5f       	subi	r18, 0xFF	; 255
    5400:	3f 4f       	sbci	r19, 0xFF	; 255
    5402:	39 83       	std	Y+1, r19	; 0x01
    5404:	28 83       	st	Y, r18
    5406:	10 83       	st	Z, r17
    5408:	06 c0       	rjmp	.+12     	; 0x5416 <fputc+0x4a>
    540a:	e8 85       	ldd	r30, Y+8	; 0x08
    540c:	f9 85       	ldd	r31, Y+9	; 0x09
    540e:	81 2f       	mov	r24, r17
    5410:	09 95       	icall
    5412:	89 2b       	or	r24, r25
    5414:	29 f7       	brne	.-54     	; 0x53e0 <fputc+0x14>
    5416:	2e 81       	ldd	r18, Y+6	; 0x06
    5418:	3f 81       	ldd	r19, Y+7	; 0x07
    541a:	2f 5f       	subi	r18, 0xFF	; 255
    541c:	3f 4f       	sbci	r19, 0xFF	; 255
    541e:	3f 83       	std	Y+7, r19	; 0x07
    5420:	2e 83       	std	Y+6, r18	; 0x06
    5422:	81 2f       	mov	r24, r17
    5424:	90 2f       	mov	r25, r16
    5426:	df 91       	pop	r29
    5428:	cf 91       	pop	r28
    542a:	1f 91       	pop	r17
    542c:	0f 91       	pop	r16
    542e:	08 95       	ret

00005430 <printf>:
    5430:	a0 e0       	ldi	r26, 0x00	; 0
    5432:	b0 e0       	ldi	r27, 0x00	; 0
    5434:	ee e1       	ldi	r30, 0x1E	; 30
    5436:	fa e2       	ldi	r31, 0x2A	; 42
    5438:	0c 94 29 27 	jmp	0x4e52	; 0x4e52 <__prologue_saves__+0x20>
    543c:	fe 01       	movw	r30, r28
    543e:	35 96       	adiw	r30, 0x05	; 5
    5440:	61 91       	ld	r22, Z+
    5442:	71 91       	ld	r23, Z+
    5444:	af 01       	movw	r20, r30
    5446:	80 91 ce 03 	lds	r24, 0x03CE
    544a:	90 91 cf 03 	lds	r25, 0x03CF
    544e:	0e 94 e8 21 	call	0x43d0	; 0x43d0 <vfprintf>
    5452:	e2 e0       	ldi	r30, 0x02	; 2
    5454:	0c 94 45 27 	jmp	0x4e8a	; 0x4e8a <__epilogue_restores__+0x20>

00005458 <__ultoa_invert>:
    5458:	fa 01       	movw	r30, r20
    545a:	aa 27       	eor	r26, r26
    545c:	28 30       	cpi	r18, 0x08	; 8
    545e:	51 f1       	breq	.+84     	; 0x54b4 <__ultoa_invert+0x5c>
    5460:	20 31       	cpi	r18, 0x10	; 16
    5462:	81 f1       	breq	.+96     	; 0x54c4 <__ultoa_invert+0x6c>
    5464:	e8 94       	clt
    5466:	6f 93       	push	r22
    5468:	6e 7f       	andi	r22, 0xFE	; 254
    546a:	6e 5f       	subi	r22, 0xFE	; 254
    546c:	7f 4f       	sbci	r23, 0xFF	; 255
    546e:	8f 4f       	sbci	r24, 0xFF	; 255
    5470:	9f 4f       	sbci	r25, 0xFF	; 255
    5472:	af 4f       	sbci	r26, 0xFF	; 255
    5474:	b1 e0       	ldi	r27, 0x01	; 1
    5476:	3e d0       	rcall	.+124    	; 0x54f4 <__ultoa_invert+0x9c>
    5478:	b4 e0       	ldi	r27, 0x04	; 4
    547a:	3c d0       	rcall	.+120    	; 0x54f4 <__ultoa_invert+0x9c>
    547c:	67 0f       	add	r22, r23
    547e:	78 1f       	adc	r23, r24
    5480:	89 1f       	adc	r24, r25
    5482:	9a 1f       	adc	r25, r26
    5484:	a1 1d       	adc	r26, r1
    5486:	68 0f       	add	r22, r24
    5488:	79 1f       	adc	r23, r25
    548a:	8a 1f       	adc	r24, r26
    548c:	91 1d       	adc	r25, r1
    548e:	a1 1d       	adc	r26, r1
    5490:	6a 0f       	add	r22, r26
    5492:	71 1d       	adc	r23, r1
    5494:	81 1d       	adc	r24, r1
    5496:	91 1d       	adc	r25, r1
    5498:	a1 1d       	adc	r26, r1
    549a:	20 d0       	rcall	.+64     	; 0x54dc <__ultoa_invert+0x84>
    549c:	09 f4       	brne	.+2      	; 0x54a0 <__ultoa_invert+0x48>
    549e:	68 94       	set
    54a0:	3f 91       	pop	r19
    54a2:	2a e0       	ldi	r18, 0x0A	; 10
    54a4:	26 9f       	mul	r18, r22
    54a6:	11 24       	eor	r1, r1
    54a8:	30 19       	sub	r19, r0
    54aa:	30 5d       	subi	r19, 0xD0	; 208
    54ac:	31 93       	st	Z+, r19
    54ae:	de f6       	brtc	.-74     	; 0x5466 <__ultoa_invert+0xe>
    54b0:	cf 01       	movw	r24, r30
    54b2:	08 95       	ret
    54b4:	46 2f       	mov	r20, r22
    54b6:	47 70       	andi	r20, 0x07	; 7
    54b8:	40 5d       	subi	r20, 0xD0	; 208
    54ba:	41 93       	st	Z+, r20
    54bc:	b3 e0       	ldi	r27, 0x03	; 3
    54be:	0f d0       	rcall	.+30     	; 0x54de <__ultoa_invert+0x86>
    54c0:	c9 f7       	brne	.-14     	; 0x54b4 <__ultoa_invert+0x5c>
    54c2:	f6 cf       	rjmp	.-20     	; 0x54b0 <__ultoa_invert+0x58>
    54c4:	46 2f       	mov	r20, r22
    54c6:	4f 70       	andi	r20, 0x0F	; 15
    54c8:	40 5d       	subi	r20, 0xD0	; 208
    54ca:	4a 33       	cpi	r20, 0x3A	; 58
    54cc:	18 f0       	brcs	.+6      	; 0x54d4 <__ultoa_invert+0x7c>
    54ce:	49 5d       	subi	r20, 0xD9	; 217
    54d0:	31 fd       	sbrc	r19, 1
    54d2:	40 52       	subi	r20, 0x20	; 32
    54d4:	41 93       	st	Z+, r20
    54d6:	02 d0       	rcall	.+4      	; 0x54dc <__ultoa_invert+0x84>
    54d8:	a9 f7       	brne	.-22     	; 0x54c4 <__ultoa_invert+0x6c>
    54da:	ea cf       	rjmp	.-44     	; 0x54b0 <__ultoa_invert+0x58>
    54dc:	b4 e0       	ldi	r27, 0x04	; 4
    54de:	a6 95       	lsr	r26
    54e0:	97 95       	ror	r25
    54e2:	87 95       	ror	r24
    54e4:	77 95       	ror	r23
    54e6:	67 95       	ror	r22
    54e8:	ba 95       	dec	r27
    54ea:	c9 f7       	brne	.-14     	; 0x54de <__ultoa_invert+0x86>
    54ec:	00 97       	sbiw	r24, 0x00	; 0
    54ee:	61 05       	cpc	r22, r1
    54f0:	71 05       	cpc	r23, r1
    54f2:	08 95       	ret
    54f4:	9b 01       	movw	r18, r22
    54f6:	ac 01       	movw	r20, r24
    54f8:	0a 2e       	mov	r0, r26
    54fa:	06 94       	lsr	r0
    54fc:	57 95       	ror	r21
    54fe:	47 95       	ror	r20
    5500:	37 95       	ror	r19
    5502:	27 95       	ror	r18
    5504:	ba 95       	dec	r27
    5506:	c9 f7       	brne	.-14     	; 0x54fa <__ultoa_invert+0xa2>
    5508:	62 0f       	add	r22, r18
    550a:	73 1f       	adc	r23, r19
    550c:	84 1f       	adc	r24, r20
    550e:	95 1f       	adc	r25, r21
    5510:	a0 1d       	adc	r26, r0
    5512:	08 95       	ret

00005514 <__divmodsi4>:
    5514:	05 2e       	mov	r0, r21
    5516:	97 fb       	bst	r25, 7
    5518:	1e f4       	brtc	.+6      	; 0x5520 <__divmodsi4+0xc>
    551a:	00 94       	com	r0
    551c:	0e 94 a1 2a 	call	0x5542	; 0x5542 <__negsi2>
    5520:	57 fd       	sbrc	r21, 7
    5522:	07 d0       	rcall	.+14     	; 0x5532 <__divmodsi4_neg2>
    5524:	0e 94 ec 26 	call	0x4dd8	; 0x4dd8 <__udivmodsi4>
    5528:	07 fc       	sbrc	r0, 7
    552a:	03 d0       	rcall	.+6      	; 0x5532 <__divmodsi4_neg2>
    552c:	4e f4       	brtc	.+18     	; 0x5540 <__divmodsi4_exit>
    552e:	0c 94 a1 2a 	jmp	0x5542	; 0x5542 <__negsi2>

00005532 <__divmodsi4_neg2>:
    5532:	50 95       	com	r21
    5534:	40 95       	com	r20
    5536:	30 95       	com	r19
    5538:	21 95       	neg	r18
    553a:	3f 4f       	sbci	r19, 0xFF	; 255
    553c:	4f 4f       	sbci	r20, 0xFF	; 255
    553e:	5f 4f       	sbci	r21, 0xFF	; 255

00005540 <__divmodsi4_exit>:
    5540:	08 95       	ret

00005542 <__negsi2>:
    5542:	90 95       	com	r25
    5544:	80 95       	com	r24
    5546:	70 95       	com	r23
    5548:	61 95       	neg	r22
    554a:	7f 4f       	sbci	r23, 0xFF	; 255
    554c:	8f 4f       	sbci	r24, 0xFF	; 255
    554e:	9f 4f       	sbci	r25, 0xFF	; 255
    5550:	08 95       	ret

00005552 <__mulshisi3>:
    5552:	b7 ff       	sbrs	r27, 7
    5554:	0c 94 0e 27 	jmp	0x4e1c	; 0x4e1c <__muluhisi3>

00005558 <__mulohisi3>:
    5558:	0e 94 0e 27 	call	0x4e1c	; 0x4e1c <__muluhisi3>
    555c:	82 1b       	sub	r24, r18
    555e:	93 0b       	sbc	r25, r19
    5560:	08 95       	ret

00005562 <_exit>:
    5562:	f8 94       	cli

00005564 <__stop_program>:
    5564:	ff cf       	rjmp	.-2      	; 0x5564 <__stop_program>
